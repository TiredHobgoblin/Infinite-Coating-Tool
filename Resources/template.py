import bpy
import os
import random

external_items_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'nodetree_source_library', 'sam_mil_desert_suede_001')

#Player armor region scales
helmet_gemstone = 2.5
helmet = 2.5
mp_visor = 2.5
neck = 1
torso = 4
torso_belt = 4
l_shoulderpad = 1.5
r_shoulderpad = 1.5
l_shoulderpad_legendary = 1.5
r_shoulderpad_legendary = 1.5
l_armup = 2
r_armup = 2
l_armfor = 2
r_armfor = 2
l_glove = 1.5
r_glove = 1.5
l_glove_legendary = 1.5
r_glove_legendary = 1.5
l_thigh = 4
r_thigh = 4
l_knee = 1.5
r_knee = 1.5
l_kneepad = 1.5
r_kneepad = 1.5
l_shin = 2.5
r_shin = 2.5
l_boot = 2.5
r_boot = 2.5

#Variables that will be swapped out with the coating JSON file
##########################################################################################################################
GrimeAmount = GRIMEAMOUNT
DustAmount = False #Set to False if only using 7 swatches. Multiplayer armor only uses 7

ArmorRegionName = ('(REGIONNAME)') #name of the piece of gear the material will be put on (Example: "r_thigh", "helmet", "l_boot")
ArmorRegion = REGIONNAME #name of the piece of gear the material will be put on (Example: "r_thigh", "helmet", "l_boot")

DetailTextureMainDirectory = ("DETAILMAPS") #Just copy and paste the filepath from the Windows Explorer toolbar. Do not put a slash at the end of the filepath
FileExtension = "{pc}.bitmap.dds" #file extension of the detail textures

CoatingName = "COATINGNAME" #Name of the Coating file (Example: Cadet Grey)

Zone1_SwatchNodegroupColor = (MIDCOLOR0_1, MIDCOLOR1_1, MIDCOLOR2_1) #Color of the nodegroup for material swatch. Uses the swatches' MidColor
Zone1_XScale = (SCALEX_1)
Zone1_YScale = (SCALEY_1)
Zone1_Roughness = (ROUGHNESS_1)
Zone1_RoughnessBlack = (ROUGHNESSB_1)
Zone1_RoughnessWhite = (ROUGHNESSW_1)
Zone1_ScratchAmount = (SCRATCHAMOUNT_1)
Zone1_ScratchMetallic = (SCRATCHMETAL_1)
Zone1_ScratchRoughness = (SCRATCHROUGH_1)
Zone1_Metallic = (METAL_1)
Zone1_EmissiveAmount = (EMITAMOUNT_1 * EMITINTENSE_1 * 2)
Zone1_TopColor = (TOPCOLOR0_1, TOPCOLOR1_1, TOPCOLOR2_1, 1.0) #RGBA
Zone1_MidColor = (MIDCOLOR0_1, MIDCOLOR1_1, MIDCOLOR2_1, 1.0) #RGBA
Zone1_BotColor = (BOTCOLOR0_1, BOTCOLOR1_1, BOTCOLOR2_1, 1.0) #RGBA
Zone1_ScratchColor = (SCRCOLOR0_1, SCRCOLOR1_1, SCRCOLOR2_1, 1.0) #RGBA
Zone1_GradientMask = "GRADMASK_1"
Zone1_Normal = "NORMAL_1"

Zone2_SwatchNodegroupColor = (MIDCOLOR0_2, MIDCOLOR1_2, MIDCOLOR2_2) #RGB
Zone2_XScale = (SCALEX_2)
Zone2_YScale = (SCALEY_2)
Zone2_Roughness = (ROUGHNESS_2)
Zone2_RoughnessBlack = (ROUGHNESSB_2)
Zone2_RoughnessWhite = (ROUGHNESSW_2)
Zone2_ScratchAmount = (SCRATCHAMOUNT_2)
Zone2_ScratchMetallic = (SCRATCHMETAL_2)
Zone2_ScratchRoughness = (SCRATCHROUGH_2)
Zone2_Metallic = (METAL_2)
Zone2_EmissiveAmount = (EMITAMOUNT_2 * EMITINTENSE_2 * 2)
Zone2_TopColor = (TOPCOLOR0_2, TOPCOLOR1_2, TOPCOLOR2_2, 1.0) #RGBA
Zone2_MidColor = (MIDCOLOR0_2, MIDCOLOR1_2, MIDCOLOR2_2, 1.0) #RGBA
Zone2_BotColor = (BOTCOLOR0_2, BOTCOLOR1_2, BOTCOLOR2_2, 1.0) #RGBA
Zone2_ScratchColor = (SCRCOLOR0_2, SCRCOLOR1_2, SCRCOLOR2_2, 1.0) #RGBA
Zone2_GradientMask = "GRADMASK_2"
Zone2_Normal = "NORMAL_2"

Zone3_SwatchNodegroupColor = (MIDCOLOR0_3, MIDCOLOR1_3, MIDCOLOR2_3) #RGB
Zone3_XScale = (SCALEX_3)
Zone3_YScale = (SCALEY_3)
Zone3_Roughness = (ROUGHNESS_3)
Zone3_RoughnessBlack = (ROUGHNESSB_3)
Zone3_RoughnessWhite = (ROUGHNESSW_3)
Zone3_ScratchAmount = (SCRATCHAMOUNT_3)
Zone3_ScratchMetallic = (SCRATCHMETAL_3)
Zone3_ScratchRoughness = (SCRATCHROUGH_3)
Zone3_Metallic = (METAL_3)
Zone3_EmissiveAmount = (EMITAMOUNT_3 * EMITINTENSE_3 * 2)
Zone3_TopColor = (TOPCOLOR0_3, TOPCOLOR1_3, TOPCOLOR2_3, 1.0) #RGBA
Zone3_MidColor = (MIDCOLOR0_3, MIDCOLOR1_3, MIDCOLOR2_3, 1.0) #RGBA
Zone3_BotColor = (BOTCOLOR0_3, BOTCOLOR1_3, BOTCOLOR2_3, 1.0) #RGBA
Zone3_ScratchColor = (SCRCOLOR0_3, SCRCOLOR1_3, SCRCOLOR2_3, 1.0) #RGBA
Zone3_GradientMask = "GRADMASK_3"
Zone3_Normal = "NORMAL_3"

Zone4_SwatchNodegroupColor = (MIDCOLOR0_4, MIDCOLOR1_4, MIDCOLOR2_4) #RGB
Zone4_XScale = (SCALEX_4)
Zone4_YScale = (SCALEY_4)
Zone4_Roughness = (ROUGHNESS_4)
Zone4_RoughnessBlack = (ROUGHNESSB_4)
Zone4_RoughnessWhite = (ROUGHNESSW_4)
Zone4_ScratchAmount = (SCRATCHAMOUNT_4)
Zone4_ScratchMetallic = (SCRATCHMETAL_4)
Zone4_ScratchRoughness = (SCRATCHROUGH_4)
Zone4_Metallic = (METAL_4)
Zone4_EmissiveAmount = (EMITAMOUNT_4 * EMITINTENSE_4 * 2)
Zone4_TopColor = (TOPCOLOR0_4, TOPCOLOR1_4, TOPCOLOR2_4, 1.0) #RGBA
Zone4_MidColor = (MIDCOLOR0_4, MIDCOLOR1_4, MIDCOLOR2_4, 1.0) #RGBA
Zone4_BotColor = (BOTCOLOR0_4, BOTCOLOR1_4, BOTCOLOR2_4, 1.0) #RGBA
Zone4_ScratchColor = (SCRCOLOR0_4, SCRCOLOR1_4, SCRCOLOR2_4, 1.0) #RGBA
Zone4_GradientMask = "GRADMASK_4"
Zone4_Normal = "NORMAL_4"

Zone5_SwatchNodegroupColor = (MIDCOLOR0_5, MIDCOLOR1_5, MIDCOLOR2_5) #RGB
Zone5_XScale = (SCALEX_5)
Zone5_YScale = (SCALEY_5)
Zone5_Roughness = (ROUGHNESS_5)
Zone5_RoughnessBlack = (ROUGHNESSB_5)
Zone5_RoughnessWhite = (ROUGHNESSW_5)
Zone5_ScratchAmount = (SCRATCHAMOUNT_5)
Zone5_ScratchMetallic = (SCRATCHMETAL_5)
Zone5_ScratchRoughness = (SCRATCHROUGH_5)
Zone5_Metallic = (METAL_5)
Zone5_EmissiveAmount = (EMITAMOUNT_5 * EMITINTENSE_5 * 2)
Zone5_TopColor = (TOPCOLOR0_5, TOPCOLOR1_5, TOPCOLOR2_5, 1.0) #RGBA
Zone5_MidColor = (MIDCOLOR0_5, MIDCOLOR1_5, MIDCOLOR2_5, 1.0) #RGBA
Zone5_BotColor = (BOTCOLOR0_5, BOTCOLOR1_5, BOTCOLOR2_5, 1.0) #RGBA
Zone5_ScratchColor = (SCRCOLOR0_5, SCRCOLOR1_5, SCRCOLOR2_5, 1.0) #RGBA
Zone5_GradientMask = "GRADMASK_5"
Zone5_Normal = "NORMAL_5"

Zone6_SwatchNodegroupColor = (MIDCOLOR0_6, MIDCOLOR1_6, MIDCOLOR2_6) #RGB
Zone6_XScale = (SCALEX_6)
Zone6_YScale = (SCALEY_6)
Zone6_Roughness = (ROUGHNESS_6)
Zone6_RoughnessBlack = (ROUGHNESSB_6)
Zone6_RoughnessWhite = (ROUGHNESSW_6)
Zone6_ScratchAmount = (SCRATCHAMOUNT_6)
Zone6_ScratchMetallic = (SCRATCHMETAL_6)
Zone6_ScratchRoughness = (SCRATCHROUGH_6)
Zone6_Metallic = (METAL_6)
Zone6_EmissiveAmount = (EMITAMOUNT_6 * EMITINTENSE_6 * 2)
Zone6_TopColor = (TOPCOLOR0_6, TOPCOLOR1_6, TOPCOLOR2_6, 1.0) #RGBA
Zone6_MidColor = (MIDCOLOR0_6, MIDCOLOR1_6, MIDCOLOR2_6, 1.0) #RGBA
Zone6_BotColor = (BOTCOLOR0_6, BOTCOLOR1_6, BOTCOLOR2_6, 1.0) #RGBA
Zone6_ScratchColor = (SCRCOLOR0_6, SCRCOLOR1_6, SCRCOLOR2_6, 1.0) #RGBA
Zone6_GradientMask = "GRADMASK_6"
Zone6_Normal = "NORMAL_6"

Grime_SwatchNodegroupColor = (MIDCOLOR0_7, MIDCOLOR1_7, MIDCOLOR2_7) #RGB
Grime_XScale = (SCALEX_7)
Grime_YScale = (SCALEY_7)
Grime_Roughness = (ROUGHNESS_7)
Grime_RoughnessBlack = (ROUGHNESSB_7)
Grime_RoughnessWhite = (ROUGHNESSW_7)
Grime_ScratchAmount = (SCRATCHAMOUNT_7)
Grime_ScratchMetallic = (SCRATCHMETAL_7)
Grime_ScratchRoughness = (SCRATCHROUGH_7)
Grime_Metallic = (METAL_7)
Grime_EmissiveAmount = (EMITAMOUNT_7 * EMITINTENSE_7 * 2)
Grime_TopColor = (TOPCOLOR0_7, TOPCOLOR1_7, TOPCOLOR2_7, 1.0) #RGBA
Grime_MidColor = (MIDCOLOR0_7, MIDCOLOR1_7, MIDCOLOR2_7, 1.0) #RGBA
Grime_BotColor = (BOTCOLOR0_7, BOTCOLOR1_7, BOTCOLOR2_7, 1.0) #RGBA
Grime_ScratchColor = (SCRCOLOR0_7, SCRCOLOR1_7, SCRCOLOR2_7, 1.0) #RGBA
Grime_GradientMask = "GRADMASK_7"
Grime_Normal = "NORMAL_7"

Dust_SwatchNodegroupColor = (MIDCOLOR0_8, MIDCOLOR1_8, MIDCOLOR2_8) #RGB
Dust_XScale = (SCALEX_8)
Dust_YScale = (SCALEY_8)
Dust_Roughness = (ROUGHNESS_8)
Dust_RoughnessBlack = (ROUGHNESSB_8)
Dust_RoughnessWhite = (ROUGHNESSW_8)
Dust_ScratchAmount = (SCRATCHAMOUNT_8)
Dust_ScratchMetallic = (SCRATCHMETAL_8)
Dust_ScratchRoughness = (SCRATCHROUGH_8)
Dust_Metallic = (METAL_8)
Dust_EmissiveAmount = (EMITAMOUNT_8 * EMITINTENSE_8 * 2)
Dust_TopColor = (TOPCOLOR0_8, TOPCOLOR1_8, TOPCOLOR2_8, 1.0) #RGBA
Dust_MidColor = (MIDCOLOR0_8, MIDCOLOR1_8, MIDCOLOR2_8, 1.0) #RGBA
Dust_BotColor = (BOTCOLOR0_8, BOTCOLOR1_8, BOTCOLOR2_8, 1.0) #RGBA
Dust_ScratchColor = (SCRCOLOR0_8, SCRCOLOR1_8, SCRCOLOR2_8, 1.0) #RGBA
Dust_GradientMask = "GRADMASK_8"
Dust_Normal = "NORMAL_8"

# MATERIAL
DetailTexturePath = DetailTextureMainDirectory.replace(os.sep, '/') + ('/') #replace backslashes with forward slashes and add another at the end

sam_mil_desert_suede_001 = bpy.data.materials.new(name=str(ArmorRegionName) + ' ' + str(CoatingName))
sam_mil_desert_suede_001.use_nodes = True
node_tree0 = sam_mil_desert_suede_001.node_tree

randomnumber = round(random.uniform(0, 1000), 0)

for node in node_tree0.nodes:
    node_tree0.nodes.remove(node)
# NODES
reroute_002_0 = node_tree0.nodes.new('NodeReroute')
if hasattr(reroute_002_0, 'color'):
    reroute_002_0.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
if hasattr(reroute_002_0, 'hide'):
    reroute_002_0.hide = False
if hasattr(reroute_002_0, 'location'):
    reroute_002_0.location = (-592.0751342773438, -691.30517578125)
if hasattr(reroute_002_0, 'mute'):
    reroute_002_0.mute = False
if hasattr(reroute_002_0, 'name'):
    reroute_002_0.name = 'Reroute.002'
if hasattr(reroute_002_0, 'use_custom_color'):
    reroute_002_0.use_custom_color = False
if hasattr(reroute_002_0, 'width'):
    reroute_002_0.width = 16.0

reroute_003_0 = node_tree0.nodes.new('NodeReroute')
if hasattr(reroute_003_0, 'color'):
    reroute_003_0.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
if hasattr(reroute_003_0, 'hide'):
    reroute_003_0.hide = False
if hasattr(reroute_003_0, 'location'):
    reroute_003_0.location = (-573.4646606445312, -950.422119140625)
if hasattr(reroute_003_0, 'mute'):
    reroute_003_0.mute = False
if hasattr(reroute_003_0, 'name'):
    reroute_003_0.name = 'Reroute.003'
if hasattr(reroute_003_0, 'use_custom_color'):
    reroute_003_0.use_custom_color = False
if hasattr(reroute_003_0, 'width'):
    reroute_003_0.width = 16.0

reroute_011_0 = node_tree0.nodes.new('NodeReroute')
if hasattr(reroute_011_0, 'color'):
    reroute_011_0.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
if hasattr(reroute_011_0, 'hide'):
    reroute_011_0.hide = False
if hasattr(reroute_011_0, 'location'):
    reroute_011_0.location = (-576.2740478515625, -109.59109497070312)
if hasattr(reroute_011_0, 'mute'):
    reroute_011_0.mute = False
if hasattr(reroute_011_0, 'name'):
    reroute_011_0.name = 'Reroute.011'
if hasattr(reroute_011_0, 'use_custom_color'):
    reroute_011_0.use_custom_color = False
if hasattr(reroute_011_0, 'width'):
    reroute_011_0.width = 16.0

reroute_009_0 = node_tree0.nodes.new('NodeReroute')
if hasattr(reroute_009_0, 'color'):
    reroute_009_0.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
if hasattr(reroute_009_0, 'hide'):
    reroute_009_0.hide = False
if hasattr(reroute_009_0, 'location'):
    reroute_009_0.location = (-628.4530639648438, -43.33477783203125)
if hasattr(reroute_009_0, 'mute'):
    reroute_009_0.mute = False
if hasattr(reroute_009_0, 'name'):
    reroute_009_0.name = 'Reroute.009'
if hasattr(reroute_009_0, 'use_custom_color'):
    reroute_009_0.use_custom_color = False
if hasattr(reroute_009_0, 'width'):
    reroute_009_0.width = 16.0

reroute_0 = node_tree0.nodes.new('NodeReroute')
if hasattr(reroute_0, 'color'):
    reroute_0.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
if hasattr(reroute_0, 'hide'):
    reroute_0.hide = False
if hasattr(reroute_0, 'location'):
    reroute_0.location = (-628.4530639648438, -172.1048583984375)
if hasattr(reroute_0, 'mute'):
    reroute_0.mute = False
if hasattr(reroute_0, 'name'):
    reroute_0.name = 'Reroute'
if hasattr(reroute_0, 'use_custom_color'):
    reroute_0.use_custom_color = False
if hasattr(reroute_0, 'width'):
    reroute_0.width = 16.0

reroute_010_0 = node_tree0.nodes.new('NodeReroute')
if hasattr(reroute_010_0, 'color'):
    reroute_010_0.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
if hasattr(reroute_010_0, 'hide'):
    reroute_010_0.hide = False
if hasattr(reroute_010_0, 'location'):
    reroute_010_0.location = (-595.4127807617188, -86.90069580078125)
if hasattr(reroute_010_0, 'mute'):
    reroute_010_0.mute = False
if hasattr(reroute_010_0, 'name'):
    reroute_010_0.name = 'Reroute.010'
if hasattr(reroute_010_0, 'use_custom_color'):
    reroute_010_0.use_custom_color = False
if hasattr(reroute_010_0, 'width'):
    reroute_010_0.width = 16.0

material_output_001_0 = node_tree0.nodes.new('ShaderNodeOutputMaterial')
if hasattr(material_output_001_0, 'color'):
    material_output_001_0.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
if hasattr(material_output_001_0, 'hide'):
    material_output_001_0.hide = False
if hasattr(material_output_001_0, 'is_active_output'):
    material_output_001_0.is_active_output = True
if hasattr(material_output_001_0, 'location'):
    material_output_001_0.location = (344.6363525390625, 161.2392120361328)
if hasattr(material_output_001_0, 'mute'):
    material_output_001_0.mute = False
if hasattr(material_output_001_0, 'name'):
    material_output_001_0.name = 'Material Output.001'
if hasattr(material_output_001_0, 'target'):
    material_output_001_0.target = 'ALL'
if hasattr(material_output_001_0, 'use_custom_color'):
    material_output_001_0.use_custom_color = False
if hasattr(material_output_001_0, 'width'):
    material_output_001_0.width = 140.0
input_ = next((input_ for input_ in material_output_001_0.inputs if input_.identifier=='Displacement'), None)
if input_:
    if hasattr(input_, 'default_value'):
        input_.default_value = (0.0, 0.0, 0.0)
    if hasattr(input_, 'display_shape'):
        input_.display_shape = 'CIRCLE'
    if hasattr(input_, 'enabled'):
        input_.enabled = True
    if hasattr(input_, 'hide'):
        input_.hide = False
    if hasattr(input_, 'hide_value'):
        input_.hide_value = True
    if hasattr(input_, 'name'):
        input_.name = 'Displacement'
    if hasattr(input_, 'show_expanded'):
        input_.show_expanded = False

reroute_001_0 = node_tree0.nodes.new('NodeReroute')
if hasattr(reroute_001_0, 'color'):
    reroute_001_0.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
if hasattr(reroute_001_0, 'hide'):
    reroute_001_0.hide = False
if hasattr(reroute_001_0, 'location'):
    reroute_001_0.location = (-611.1783447265625, -431.88037109375)
if hasattr(reroute_001_0, 'mute'):
    reroute_001_0.mute = False
if hasattr(reroute_001_0, 'name'):
    reroute_001_0.name = 'Reroute.001'
if hasattr(reroute_001_0, 'use_custom_color'):
    reroute_001_0.use_custom_color = False
if hasattr(reroute_001_0, 'width'):
    reroute_001_0.width = 16.0

reroute_008_0 = node_tree0.nodes.new('NodeReroute')
if hasattr(reroute_008_0, 'color'):
    reroute_008_0.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
if hasattr(reroute_008_0, 'hide'):
    reroute_008_0.hide = False
if hasattr(reroute_008_0, 'location'):
    reroute_008_0.location = (-611.1784057617188, -65.38360595703125)
if hasattr(reroute_008_0, 'mute'):
    reroute_008_0.mute = False
if hasattr(reroute_008_0, 'name'):
    reroute_008_0.name = 'Reroute.008'
if hasattr(reroute_008_0, 'use_custom_color'):
    reroute_008_0.use_custom_color = False
if hasattr(reroute_008_0, 'width'):
    reroute_008_0.width = 16.0

node_tree1 = bpy.data.node_groups.get('Zone2 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if not node_tree1:
    node_tree1 = bpy.data.node_groups.new('Zone2 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber), 'ShaderNodeTree')
    for node in node_tree1.nodes:
        node_tree1.nodes.remove(node)
    # INPUTS
    input = node_tree1.inputs.new('NodeSocketFloat', 'X-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'X-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Y-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Y-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.5
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness Black')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.2199999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness Black'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness White')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.4699999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness White'
    # OUTPUTS
    output = node_tree1.outputs.new('NodeSocketFloat', 'Gradient Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Gradient Out'
    output = node_tree1.outputs.new('NodeSocketFloat', 'Rough Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Rough Out'
    output = node_tree1.outputs.new('NodeSocketColor', 'Norm Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Norm Out'
    # NODES
    reroute_014_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_014_1, 'color'):
        reroute_014_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_014_1, 'hide'):
        reroute_014_1.hide = False
    if hasattr(reroute_014_1, 'location'):
        reroute_014_1.location = (-49.86090087890625, 392.07806396484375)
    if hasattr(reroute_014_1, 'mute'):
        reroute_014_1.mute = False
    if hasattr(reroute_014_1, 'name'):
        reroute_014_1.name = 'Reroute.014'
    if hasattr(reroute_014_1, 'use_custom_color'):
        reroute_014_1.use_custom_color = False
    if hasattr(reroute_014_1, 'width'):
        reroute_014_1.width = 16.0

    reroute_016_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_016_1, 'color'):
        reroute_016_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_016_1, 'hide'):
        reroute_016_1.hide = False
    if hasattr(reroute_016_1, 'location'):
        reroute_016_1.location = (144.52618408203125, 215.85797119140625)
    if hasattr(reroute_016_1, 'mute'):
        reroute_016_1.mute = False
    if hasattr(reroute_016_1, 'name'):
        reroute_016_1.name = 'Reroute.016'
    if hasattr(reroute_016_1, 'use_custom_color'):
        reroute_016_1.use_custom_color = False
    if hasattr(reroute_016_1, 'width'):
        reroute_016_1.width = 16.0

    reroute_018_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_018_1, 'color'):
        reroute_018_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_018_1, 'hide'):
        reroute_018_1.hide = False
    if hasattr(reroute_018_1, 'location'):
        reroute_018_1.location = (178.88592529296875, 259.3858642578125)
    if hasattr(reroute_018_1, 'mute'):
        reroute_018_1.mute = False
    if hasattr(reroute_018_1, 'name'):
        reroute_018_1.name = 'Reroute.018'
    if hasattr(reroute_018_1, 'use_custom_color'):
        reroute_018_1.use_custom_color = False
    if hasattr(reroute_018_1, 'width'):
        reroute_018_1.width = 16.0

    reroute_019_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_019_1, 'color'):
        reroute_019_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_019_1, 'hide'):
        reroute_019_1.hide = False
    if hasattr(reroute_019_1, 'location'):
        reroute_019_1.location = (178.88592529296875, 182.964599609375)
    if hasattr(reroute_019_1, 'mute'):
        reroute_019_1.mute = False
    if hasattr(reroute_019_1, 'name'):
        reroute_019_1.name = 'Reroute.019'
    if hasattr(reroute_019_1, 'use_custom_color'):
        reroute_019_1.use_custom_color = False
    if hasattr(reroute_019_1, 'width'):
        reroute_019_1.width = 16.0

    reroute_017_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_017_1, 'color'):
        reroute_017_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_017_1, 'hide'):
        reroute_017_1.hide = False
    if hasattr(reroute_017_1, 'location'):
        reroute_017_1.location = (144.52618408203125, -275.09521484375)
    if hasattr(reroute_017_1, 'mute'):
        reroute_017_1.mute = False
    if hasattr(reroute_017_1, 'name'):
        reroute_017_1.name = 'Reroute.017'
    if hasattr(reroute_017_1, 'use_custom_color'):
        reroute_017_1.use_custom_color = False
    if hasattr(reroute_017_1, 'width'):
        reroute_017_1.width = 16.0

    math_009_1 = node_tree1.nodes.new('ShaderNodeMath')
    if hasattr(math_009_1, 'color'):
        math_009_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(math_009_1, 'hide'):
        math_009_1.hide = False
    if hasattr(math_009_1, 'location'):
        math_009_1.location = (180.58067321777344, -160.00445556640625)
    if hasattr(math_009_1, 'mute'):
        math_009_1.mute = False
    if hasattr(math_009_1, 'name'):
        math_009_1.name = 'Math.009'
    if hasattr(math_009_1, 'operation'):
        math_009_1.operation = 'MULTIPLY'
    if hasattr(math_009_1, 'use_clamp'):
        math_009_1.use_clamp = False
    if hasattr(math_009_1, 'use_custom_color'):
        math_009_1.use_custom_color = False
    if hasattr(math_009_1, 'width'):
        math_009_1.width = 140.0
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_001'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_002'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in math_009_1.outputs if output.identifier=='Value'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Value'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_021_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_021_1, 'color'):
        reroute_021_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_021_1, 'hide'):
        reroute_021_1.hide = False
    if hasattr(reroute_021_1, 'location'):
        reroute_021_1.location = (363.6356506347656, -320.47210693359375)
    if hasattr(reroute_021_1, 'mute'):
        reroute_021_1.mute = False
    if hasattr(reroute_021_1, 'name'):
        reroute_021_1.name = 'Reroute.021'
    if hasattr(reroute_021_1, 'use_custom_color'):
        reroute_021_1.use_custom_color = False
    if hasattr(reroute_021_1, 'width'):
        reroute_021_1.width = 16.0

    reroute_020_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_020_1, 'color'):
        reroute_020_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_020_1, 'hide'):
        reroute_020_1.hide = False
    if hasattr(reroute_020_1, 'location'):
        reroute_020_1.location = (363.6356506347656, -195.1111297607422)
    if hasattr(reroute_020_1, 'mute'):
        reroute_020_1.mute = False
    if hasattr(reroute_020_1, 'name'):
        reroute_020_1.name = 'Reroute.020'
    if hasattr(reroute_020_1, 'use_custom_color'):
        reroute_020_1.use_custom_color = False
    if hasattr(reroute_020_1, 'width'):
        reroute_020_1.width = 16.0

    reroute_012_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_012_1, 'color'):
        reroute_012_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_012_1, 'hide'):
        reroute_012_1.hide = False
    if hasattr(reroute_012_1, 'location'):
        reroute_012_1.location = (588.7369384765625, -242.4521942138672)
    if hasattr(reroute_012_1, 'mute'):
        reroute_012_1.mute = False
    if hasattr(reroute_012_1, 'name'):
        reroute_012_1.name = 'Reroute.012'
    if hasattr(reroute_012_1, 'use_custom_color'):
        reroute_012_1.use_custom_color = False
    if hasattr(reroute_012_1, 'width'):
        reroute_012_1.width = 16.0

    uv_map_1 = node_tree1.nodes.new('ShaderNodeUVMap')
    if hasattr(uv_map_1, 'color'):
        uv_map_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(uv_map_1, 'from_instancer'):
        uv_map_1.from_instancer = False
    if hasattr(uv_map_1, 'hide'):
        uv_map_1.hide = False
    if hasattr(uv_map_1, 'location'):
        uv_map_1.location = (-722.135009765625, 171.312255859375)
    if hasattr(uv_map_1, 'mute'):
        uv_map_1.mute = False
    if hasattr(uv_map_1, 'name'):
        uv_map_1.name = 'UV Map'
    if hasattr(uv_map_1, 'use_custom_color'):
        uv_map_1.use_custom_color = False
    if hasattr(uv_map_1, 'uv_map'):
        uv_map_1.uv_map = 'UV1'
    if hasattr(uv_map_1, 'width'):
        uv_map_1.width = 150.0
    output = next((output for output in uv_map_1.outputs if output.identifier=='UV'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'UV'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    mapping_1 = node_tree1.nodes.new('ShaderNodeMapping')
    if hasattr(mapping_1, 'color'):
        mapping_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mapping_1, 'hide'):
        mapping_1.hide = False
    if hasattr(mapping_1, 'location'):
        mapping_1.location = (-534.63330078125, 225.75634765625)
    if hasattr(mapping_1, 'mute'):
        mapping_1.mute = False
    if hasattr(mapping_1, 'name'):
        mapping_1.name = 'Mapping'
    if hasattr(mapping_1, 'use_custom_color'):
        mapping_1.use_custom_color = False
    if hasattr(mapping_1, 'vector_type'):
        mapping_1.vector_type = 'POINT'
    if hasattr(mapping_1, 'width'):
        mapping_1.width = 140.0
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Location'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Location'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Rotation'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Rotation'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Scale'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (4.0, 4.0, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Scale'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mapping_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_010_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_010_1, 'color'):
        reroute_010_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_010_1, 'hide'):
        reroute_010_1.hide = False
    if hasattr(reroute_010_1, 'location'):
        reroute_010_1.location = (-360.4864501953125, 190.916259765625)
    if hasattr(reroute_010_1, 'mute'):
        reroute_010_1.mute = False
    if hasattr(reroute_010_1, 'name'):
        reroute_010_1.name = 'Reroute.010'
    if hasattr(reroute_010_1, 'use_custom_color'):
        reroute_010_1.use_custom_color = False
    if hasattr(reroute_010_1, 'width'):
        reroute_010_1.width = 16.0

    reroute_011_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_011_1, 'color'):
        reroute_011_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_011_1, 'hide'):
        reroute_011_1.hide = False
    if hasattr(reroute_011_1, 'location'):
        reroute_011_1.location = (-360.4864501953125, -63.42291259765625)
    if hasattr(reroute_011_1, 'mute'):
        reroute_011_1.mute = False
    if hasattr(reroute_011_1, 'name'):
        reroute_011_1.name = 'Reroute.011'
    if hasattr(reroute_011_1, 'use_custom_color'):
        reroute_011_1.use_custom_color = False
    if hasattr(reroute_011_1, 'width'):
        reroute_011_1.width = 16.0

    reroute_015_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_015_1, 'color'):
        reroute_015_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_015_1, 'hide'):
        reroute_015_1.hide = False
    if hasattr(reroute_015_1, 'location'):
        reroute_015_1.location = (-49.86090087890625, 190.421142578125)
    if hasattr(reroute_015_1, 'mute'):
        reroute_015_1.mute = False
    if hasattr(reroute_015_1, 'name'):
        reroute_015_1.name = 'Reroute.015'
    if hasattr(reroute_015_1, 'use_custom_color'):
        reroute_015_1.use_custom_color = False
    if hasattr(reroute_015_1, 'width'):
        reroute_015_1.width = 16.0

    separate_rgb_1 = node_tree1.nodes.new('ShaderNodeSeparateRGB')
    if hasattr(separate_rgb_1, 'color'):
        separate_rgb_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(separate_rgb_1, 'hide'):
        separate_rgb_1.hide = False
    if hasattr(separate_rgb_1, 'location'):
        separate_rgb_1.location = (-23.7783203125, 294.257080078125)
    if hasattr(separate_rgb_1, 'mute'):
        separate_rgb_1.mute = False
    if hasattr(separate_rgb_1, 'name'):
        separate_rgb_1.name = 'Separate RGB'
    if hasattr(separate_rgb_1, 'use_custom_color'):
        separate_rgb_1.use_custom_color = False
    if hasattr(separate_rgb_1, 'width'):
        separate_rgb_1.width = 140.0
    input_ = next((input_ for input_ in separate_rgb_1.inputs if input_.identifier=='Image'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Image'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='R'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'R'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='G'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'G'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='B'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'B'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    combine_xyz_1 = node_tree1.nodes.new('ShaderNodeCombineXYZ')
    if hasattr(combine_xyz_1, 'color'):
        combine_xyz_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(combine_xyz_1, 'hide'):
        combine_xyz_1.hide = False
    if hasattr(combine_xyz_1, 'location'):
        combine_xyz_1.location = (-799.850341796875, -14.884613037109375)
    if hasattr(combine_xyz_1, 'mute'):
        combine_xyz_1.mute = False
    if hasattr(combine_xyz_1, 'name'):
        combine_xyz_1.name = 'Combine XYZ'
    if hasattr(combine_xyz_1, 'use_custom_color'):
        combine_xyz_1.use_custom_color = False
    if hasattr(combine_xyz_1, 'width'):
        combine_xyz_1.width = 140.0
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='X'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'X'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Y'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Y'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Z'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Z'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in combine_xyz_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_004_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_004_1, 'color'):
        reroute_004_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_004_1, 'hide'):
        reroute_004_1.hide = False
    if hasattr(reroute_004_1, 'location'):
        reroute_004_1.location = (-858.0992431640625, -341.5549621582031)
    if hasattr(reroute_004_1, 'mute'):
        reroute_004_1.mute = False
    if hasattr(reroute_004_1, 'name'):
        reroute_004_1.name = 'Reroute.004'
    if hasattr(reroute_004_1, 'use_custom_color'):
        reroute_004_1.use_custom_color = False
    if hasattr(reroute_004_1, 'width'):
        reroute_004_1.width = 16.0

    reroute_005_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_005_1, 'color'):
        reroute_005_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_005_1, 'hide'):
        reroute_005_1.hide = False
    if hasattr(reroute_005_1, 'location'):
        reroute_005_1.location = (-877.3994140625, -364.527099609375)
    if hasattr(reroute_005_1, 'mute'):
        reroute_005_1.mute = False
    if hasattr(reroute_005_1, 'name'):
        reroute_005_1.name = 'Reroute.005'
    if hasattr(reroute_005_1, 'use_custom_color'):
        reroute_005_1.use_custom_color = False
    if hasattr(reroute_005_1, 'width'):
        reroute_005_1.width = 16.0

    reroute_001_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_001_1, 'color'):
        reroute_001_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_001_1, 'hide'):
        reroute_001_1.hide = False
    if hasattr(reroute_001_1, 'location'):
        reroute_001_1.location = (-858.38818359375, -141.572021484375)
    if hasattr(reroute_001_1, 'mute'):
        reroute_001_1.mute = False
    if hasattr(reroute_001_1, 'name'):
        reroute_001_1.name = 'Reroute.001'
    if hasattr(reroute_001_1, 'use_custom_color'):
        reroute_001_1.use_custom_color = False
    if hasattr(reroute_001_1, 'width'):
        reroute_001_1.width = 16.0

    reroute_002_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_002_1, 'color'):
        reroute_002_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_002_1, 'hide'):
        reroute_002_1.hide = False
    if hasattr(reroute_002_1, 'location'):
        reroute_002_1.location = (-877.4599609375, -163.257080078125)
    if hasattr(reroute_002_1, 'mute'):
        reroute_002_1.mute = False
    if hasattr(reroute_002_1, 'name'):
        reroute_002_1.name = 'Reroute.002'
    if hasattr(reroute_002_1, 'use_custom_color'):
        reroute_002_1.use_custom_color = False
    if hasattr(reroute_002_1, 'width'):
        reroute_002_1.width = 16.0

    reroute_006_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_006_1, 'color'):
        reroute_006_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_006_1, 'hide'):
        reroute_006_1.hide = False
    if hasattr(reroute_006_1, 'location'):
        reroute_006_1.location = (-836.59033203125, -119.03997802734375)
    if hasattr(reroute_006_1, 'mute'):
        reroute_006_1.mute = False
    if hasattr(reroute_006_1, 'name'):
        reroute_006_1.name = 'Reroute.006'
    if hasattr(reroute_006_1, 'use_custom_color'):
        reroute_006_1.use_custom_color = False
    if hasattr(reroute_006_1, 'width'):
        reroute_006_1.width = 16.0

    reroute_007_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_007_1, 'color'):
        reroute_007_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_007_1, 'hide'):
        reroute_007_1.hide = False
    if hasattr(reroute_007_1, 'location'):
        reroute_007_1.location = (-836.59033203125, -296.6325988769531)
    if hasattr(reroute_007_1, 'mute'):
        reroute_007_1.mute = False
    if hasattr(reroute_007_1, 'name'):
        reroute_007_1.name = 'Reroute.007'
    if hasattr(reroute_007_1, 'use_custom_color'):
        reroute_007_1.use_custom_color = False
    if hasattr(reroute_007_1, 'width'):
        reroute_007_1.width = 16.0

    reroute_013_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_013_1, 'color'):
        reroute_013_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_013_1, 'hide'):
        reroute_013_1.hide = False
    if hasattr(reroute_013_1, 'location'):
        reroute_013_1.location = (588.7369384765625, 159.65426635742188)
    if hasattr(reroute_013_1, 'mute'):
        reroute_013_1.mute = False
    if hasattr(reroute_013_1, 'name'):
        reroute_013_1.name = 'Reroute.013'
    if hasattr(reroute_013_1, 'use_custom_color'):
        reroute_013_1.use_custom_color = False
    if hasattr(reroute_013_1, 'width'):
        reroute_013_1.width = 16.0

    group_output_1 = node_tree1.nodes.new('NodeGroupOutput')
    if hasattr(group_output_1, 'color'):
        group_output_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_output_1, 'hide'):
        group_output_1.hide = False
    if hasattr(group_output_1, 'is_active_output'):
        group_output_1.is_active_output = True
    if hasattr(group_output_1, 'location'):
        group_output_1.location = (629.4588623046875, 216.9207763671875)
    if hasattr(group_output_1, 'mute'):
        group_output_1.mute = False
    if hasattr(group_output_1, 'name'):
        group_output_1.name = 'Group Output'
    if hasattr(group_output_1, 'use_custom_color'):
        group_output_1.use_custom_color = False
    if hasattr(group_output_1, 'width'):
        group_output_1.width = 140.0
    if hasattr(group_output_1.inputs[0], 'default_value'):
        group_output_1.inputs[0].default_value = 0.0
    if hasattr(group_output_1.inputs[0], 'display_shape'):
        group_output_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[0], 'enabled'):
        group_output_1.inputs[0].enabled = True
    if hasattr(group_output_1.inputs[0], 'hide'):
        group_output_1.inputs[0].hide = False
    if hasattr(group_output_1.inputs[0], 'hide_value'):
        group_output_1.inputs[0].hide_value = False
    if hasattr(group_output_1.inputs[0], 'name'):
        group_output_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_output_1.inputs[0], 'show_expanded'):
        group_output_1.inputs[0].show_expanded = False
    if hasattr(group_output_1.inputs[1], 'default_value'):
        group_output_1.inputs[1].default_value = 0.0
    if hasattr(group_output_1.inputs[1], 'display_shape'):
        group_output_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[1], 'enabled'):
        group_output_1.inputs[1].enabled = True
    if hasattr(group_output_1.inputs[1], 'hide'):
        group_output_1.inputs[1].hide = False
    if hasattr(group_output_1.inputs[1], 'hide_value'):
        group_output_1.inputs[1].hide_value = False
    if hasattr(group_output_1.inputs[1], 'name'):
        group_output_1.inputs[1].name = 'Rough Out'
    if hasattr(group_output_1.inputs[1], 'show_expanded'):
        group_output_1.inputs[1].show_expanded = False
    if hasattr(group_output_1.inputs[2], 'default_value'):
        group_output_1.inputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[2], 'display_shape'):
        group_output_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[2], 'enabled'):
        group_output_1.inputs[2].enabled = True
    if hasattr(group_output_1.inputs[2], 'hide'):
        group_output_1.inputs[2].hide = False
    if hasattr(group_output_1.inputs[2], 'hide_value'):
        group_output_1.inputs[2].hide_value = False
    if hasattr(group_output_1.inputs[2], 'name'):
        group_output_1.inputs[2].name = 'Norm Out'
    if hasattr(group_output_1.inputs[2], 'show_expanded'):
        group_output_1.inputs[2].show_expanded = False

    mix_1 = node_tree1.nodes.new('ShaderNodeMixRGB')
    if hasattr(mix_1, 'blend_type'):
        mix_1.blend_type = 'MIX'
    if hasattr(mix_1, 'color'):
        mix_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_1, 'hide'):
        mix_1.hide = False
    if hasattr(mix_1, 'location'):
        mix_1.location = (401.4825134277344, -207.88519287109375)
    if hasattr(mix_1, 'mute'):
        mix_1.mute = False
    if hasattr(mix_1, 'name'):
        mix_1.name = 'Mix'
    if hasattr(mix_1, 'use_alpha'):
        mix_1.use_alpha = False
    if hasattr(mix_1, 'use_clamp'):
        mix_1.use_clamp = True
    if hasattr(mix_1, 'use_custom_color'):
        mix_1.use_custom_color = False
    if hasattr(mix_1, 'width'):
        mix_1.width = 140.0
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color1'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color1'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color2'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color2'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mix_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_input_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_1, 'color'):
        group_input_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_1, 'hide'):
        group_input_1.hide = False
    if hasattr(group_input_1, 'location'):
        group_input_1.location = (-1048.383056640625, -40.007965087890625)
    if hasattr(group_input_1, 'mute'):
        group_input_1.mute = False
    if hasattr(group_input_1, 'name'):
        group_input_1.name = 'Group Input'
    if hasattr(group_input_1, 'use_custom_color'):
        group_input_1.use_custom_color = False
    if hasattr(group_input_1, 'width'):
        group_input_1.width = 140.0
    if hasattr(group_input_1.outputs[0], 'default_value'):
        group_input_1.outputs[0].default_value = 0.0
    if hasattr(group_input_1.outputs[0], 'display_shape'):
        group_input_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[0], 'enabled'):
        group_input_1.outputs[0].enabled = True
    if hasattr(group_input_1.outputs[0], 'hide'):
        group_input_1.outputs[0].hide = False
    if hasattr(group_input_1.outputs[0], 'hide_value'):
        group_input_1.outputs[0].hide_value = False
    if hasattr(group_input_1.outputs[0], 'name'):
        group_input_1.outputs[0].name = 'X-Scale'
    if hasattr(group_input_1.outputs[0], 'show_expanded'):
        group_input_1.outputs[0].show_expanded = False
    if hasattr(group_input_1.outputs[1], 'default_value'):
        group_input_1.outputs[1].default_value = 0.0
    if hasattr(group_input_1.outputs[1], 'display_shape'):
        group_input_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[1], 'enabled'):
        group_input_1.outputs[1].enabled = True
    if hasattr(group_input_1.outputs[1], 'hide'):
        group_input_1.outputs[1].hide = False
    if hasattr(group_input_1.outputs[1], 'hide_value'):
        group_input_1.outputs[1].hide_value = False
    if hasattr(group_input_1.outputs[1], 'name'):
        group_input_1.outputs[1].name = 'Y-Scale'
    if hasattr(group_input_1.outputs[1], 'show_expanded'):
        group_input_1.outputs[1].show_expanded = False
    if hasattr(group_input_1.outputs[2], 'default_value'):
        group_input_1.outputs[2].default_value = 0.5
    if hasattr(group_input_1.outputs[2], 'display_shape'):
        group_input_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[2], 'enabled'):
        group_input_1.outputs[2].enabled = True
    if hasattr(group_input_1.outputs[2], 'hide'):
        group_input_1.outputs[2].hide = False
    if hasattr(group_input_1.outputs[2], 'hide_value'):
        group_input_1.outputs[2].hide_value = False
    if hasattr(group_input_1.outputs[2], 'name'):
        group_input_1.outputs[2].name = 'Roughness'
    if hasattr(group_input_1.outputs[2], 'show_expanded'):
        group_input_1.outputs[2].show_expanded = False
    if hasattr(group_input_1.outputs[3], 'default_value'):
        group_input_1.outputs[3].default_value = 0.2199999988079071
    if hasattr(group_input_1.outputs[3], 'display_shape'):
        group_input_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[3], 'enabled'):
        group_input_1.outputs[3].enabled = True
    if hasattr(group_input_1.outputs[3], 'hide'):
        group_input_1.outputs[3].hide = False
    if hasattr(group_input_1.outputs[3], 'hide_value'):
        group_input_1.outputs[3].hide_value = False
    if hasattr(group_input_1.outputs[3], 'name'):
        group_input_1.outputs[3].name = 'Roughness Black'
    if hasattr(group_input_1.outputs[3], 'show_expanded'):
        group_input_1.outputs[3].show_expanded = False
    if hasattr(group_input_1.outputs[4], 'default_value'):
        group_input_1.outputs[4].default_value = 0.4699999988079071
    if hasattr(group_input_1.outputs[4], 'display_shape'):
        group_input_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[4], 'enabled'):
        group_input_1.outputs[4].enabled = True
    if hasattr(group_input_1.outputs[4], 'hide'):
        group_input_1.outputs[4].hide = False
    if hasattr(group_input_1.outputs[4], 'hide_value'):
        group_input_1.outputs[4].hide_value = False
    if hasattr(group_input_1.outputs[4], 'name'):
        group_input_1.outputs[4].name = 'Roughness White'
    if hasattr(group_input_1.outputs[4], 'show_expanded'):
        group_input_1.outputs[4].show_expanded = False

    #Zone2_Gradient Mask
    zone2_gradient_mask_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone2_gradient_mask_1.location = (-328.15277099609375, 427.28961181640625)
    PNGtoBITMAP03 = Zone3_GradientMask.replace('.png', FileExtension)
    zone2_gradient_mask_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP03))
    zone2_gradient_mask_1.image.colorspace_settings.name = 'Non-Color'
    zone2_gradient_mask_1.label = 'Zone2_Gradient Mask'

    #Zone2_Normal
    zone2_normal_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone2_normal_1.location = (-328.4542236328125, 172.760498046875)
    PNGtoBITMAP04 = Zone4_Normal.replace('.png', FileExtension)
    zone2_normal_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP04))
    zone2_normal_1.image.colorspace_settings.name = 'Non-Color'
    zone2_normal_1.label = 'Zone2_Normal'

    # LINKS
    node_tree1.links.new(uv_map_1.outputs[0], mapping_1.inputs[0])
    node_tree1.links.new(combine_xyz_1.outputs[0], mapping_1.inputs[3])
    node_tree1.links.new(zone2_normal_1.outputs[0], group_output_1.inputs[2])
    node_tree1.links.new(group_input_1.outputs[3], reroute_001_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[4], reroute_002_1.inputs[0])
    node_tree1.links.new(reroute_001_1.outputs[0], reroute_004_1.inputs[0])
    node_tree1.links.new(reroute_002_1.outputs[0], reroute_005_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[2], reroute_006_1.inputs[0])
    node_tree1.links.new(reroute_006_1.outputs[0], reroute_007_1.inputs[0])
    node_tree1.links.new(mapping_1.outputs[0], reroute_010_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], zone2_gradient_mask_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], reroute_011_1.inputs[0])
    node_tree1.links.new(reroute_011_1.outputs[0], zone2_normal_1.inputs[0])
    node_tree1.links.new(reroute_012_1.outputs[0], reroute_013_1.inputs[0])
    node_tree1.links.new(reroute_013_1.outputs[0], group_output_1.inputs[1])
    node_tree1.links.new(zone2_gradient_mask_1.outputs[0], reroute_014_1.inputs[0])
    node_tree1.links.new(reroute_014_1.outputs[0], reroute_015_1.inputs[0])
    node_tree1.links.new(reroute_015_1.outputs[0], separate_rgb_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[2], reroute_016_1.inputs[0])
    node_tree1.links.new(reroute_016_1.outputs[0], reroute_017_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[0], reroute_018_1.inputs[0])
    node_tree1.links.new(reroute_018_1.outputs[0], reroute_019_1.inputs[0])
    node_tree1.links.new(reroute_019_1.outputs[0], group_output_1.inputs[0])
    node_tree1.links.new(reroute_017_1.outputs[0], math_009_1.inputs[0])
    node_tree1.links.new(reroute_007_1.outputs[0], math_009_1.inputs[1])
    node_tree1.links.new(reroute_004_1.outputs[0], mix_1.inputs[1])
    node_tree1.links.new(reroute_005_1.outputs[0], mix_1.inputs[2])
    node_tree1.links.new(mix_1.outputs[0], reroute_012_1.inputs[0])
    node_tree1.links.new(math_009_1.outputs[0], reroute_020_1.inputs[0])
    node_tree1.links.new(reroute_020_1.outputs[0], reroute_021_1.inputs[0])
    node_tree1.links.new(reroute_021_1.outputs[0], mix_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[1], combine_xyz_1.inputs[1])
    node_tree1.links.new(group_input_1.outputs[0], combine_xyz_1.inputs[0])

group_002_0 = node_tree0.nodes.new('ShaderNodeGroup')
if hasattr(group_002_0, 'node_tree'):
    group_002_0.node_tree = bpy.data.node_groups.get('Zone2 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if hasattr(group_002_0, 'color'):
    group_002_0.color = (0.25, 0.25, 0.0)
if hasattr(group_002_0, 'hide'):
    group_002_0.hide = False
if hasattr(group_002_0, 'location'):
    group_002_0.location = (-421.73388671875, -402.47930908203125)
if hasattr(group_002_0, 'mute'):
    group_002_0.mute = False
if hasattr(group_002_0, 'name'):
    group_002_0.name = 'group.002'
if hasattr(group_002_0, 'use_custom_color'):
    group_002_0.use_custom_color = True
if hasattr(group_002_0, 'width'):
    group_002_0.width = 250.72528076171875
if hasattr(group_002_0.inputs[0], 'default_value'):
    group_002_0.inputs[0].default_value = Zone2_XScale*ArmorRegion
if hasattr(group_002_0.inputs[0], 'display_shape'):
    group_002_0.inputs[0].display_shape = 'CIRCLE'
if hasattr(group_002_0.inputs[0], 'enabled'):
    group_002_0.inputs[0].enabled = True
if hasattr(group_002_0.inputs[0], 'hide'):
    group_002_0.inputs[0].hide = False
if hasattr(group_002_0.inputs[0], 'hide_value'):
    group_002_0.inputs[0].hide_value = False
if hasattr(group_002_0.inputs[0], 'name'):
    group_002_0.inputs[0].name = 'X-Scale'
if hasattr(group_002_0.inputs[0], 'show_expanded'):
    group_002_0.inputs[0].show_expanded = False
if hasattr(group_002_0.inputs[1], 'default_value'):
    group_002_0.inputs[1].default_value = Zone2_YScale*ArmorRegion
if hasattr(group_002_0.inputs[1], 'display_shape'):
    group_002_0.inputs[1].display_shape = 'CIRCLE'
if hasattr(group_002_0.inputs[1], 'enabled'):
    group_002_0.inputs[1].enabled = True
if hasattr(group_002_0.inputs[1], 'hide'):
    group_002_0.inputs[1].hide = False
if hasattr(group_002_0.inputs[1], 'hide_value'):
    group_002_0.inputs[1].hide_value = False
if hasattr(group_002_0.inputs[1], 'name'):
    group_002_0.inputs[1].name = 'Y-Scale'
if hasattr(group_002_0.inputs[1], 'show_expanded'):
    group_002_0.inputs[1].show_expanded = False
if hasattr(group_002_0.inputs[2], 'default_value'):
    group_002_0.inputs[2].default_value = Zone2_Roughness
if hasattr(group_002_0.inputs[2], 'display_shape'):
    group_002_0.inputs[2].display_shape = 'CIRCLE'
if hasattr(group_002_0.inputs[2], 'enabled'):
    group_002_0.inputs[2].enabled = True
if hasattr(group_002_0.inputs[2], 'hide'):
    group_002_0.inputs[2].hide = False
if hasattr(group_002_0.inputs[2], 'hide_value'):
    group_002_0.inputs[2].hide_value = False
if hasattr(group_002_0.inputs[2], 'name'):
    group_002_0.inputs[2].name = 'Roughness'
if hasattr(group_002_0.inputs[2], 'show_expanded'):
    group_002_0.inputs[2].show_expanded = False
if hasattr(group_002_0.inputs[3], 'default_value'):
    group_002_0.inputs[3].default_value = Zone2_RoughnessBlack
if hasattr(group_002_0.inputs[3], 'display_shape'):
    group_002_0.inputs[3].display_shape = 'CIRCLE'
if hasattr(group_002_0.inputs[3], 'enabled'):
    group_002_0.inputs[3].enabled = True
if hasattr(group_002_0.inputs[3], 'hide'):
    group_002_0.inputs[3].hide = False
if hasattr(group_002_0.inputs[3], 'hide_value'):
    group_002_0.inputs[3].hide_value = False
if hasattr(group_002_0.inputs[3], 'name'):
    group_002_0.inputs[3].name = 'Roughness Black'
if hasattr(group_002_0.inputs[3], 'show_expanded'):
    group_002_0.inputs[3].show_expanded = False
if hasattr(group_002_0.inputs[4], 'default_value'):
    group_002_0.inputs[4].default_value = Zone2_RoughnessWhite
if hasattr(group_002_0.inputs[4], 'display_shape'):
    group_002_0.inputs[4].display_shape = 'CIRCLE'
if hasattr(group_002_0.inputs[4], 'enabled'):
    group_002_0.inputs[4].enabled = True
if hasattr(group_002_0.inputs[4], 'hide'):
    group_002_0.inputs[4].hide = False
if hasattr(group_002_0.inputs[4], 'hide_value'):
    group_002_0.inputs[4].hide_value = False
if hasattr(group_002_0.inputs[4], 'name'):
    group_002_0.inputs[4].name = 'Roughness White'
if hasattr(group_002_0.inputs[4], 'show_expanded'):
    group_002_0.inputs[4].show_expanded = False
if hasattr(group_002_0.outputs[0], 'default_value'):
    group_002_0.outputs[0].default_value = 0.0
if hasattr(group_002_0.outputs[0], 'display_shape'):
    group_002_0.outputs[0].display_shape = 'CIRCLE'
if hasattr(group_002_0.outputs[0], 'enabled'):
    group_002_0.outputs[0].enabled = True
if hasattr(group_002_0.outputs[0], 'hide'):
    group_002_0.outputs[0].hide = False
if hasattr(group_002_0.outputs[0], 'hide_value'):
    group_002_0.outputs[0].hide_value = False
if hasattr(group_002_0.outputs[0], 'name'):
    group_002_0.outputs[0].name = 'Gradient Out'
if hasattr(group_002_0.outputs[0], 'show_expanded'):
    group_002_0.outputs[0].show_expanded = False
if hasattr(group_002_0.outputs[1], 'default_value'):
    group_002_0.outputs[1].default_value = 0.0
if hasattr(group_002_0.outputs[1], 'display_shape'):
    group_002_0.outputs[1].display_shape = 'CIRCLE'
if hasattr(group_002_0.outputs[1], 'enabled'):
    group_002_0.outputs[1].enabled = True
if hasattr(group_002_0.outputs[1], 'hide'):
    group_002_0.outputs[1].hide = False
if hasattr(group_002_0.outputs[1], 'hide_value'):
    group_002_0.outputs[1].hide_value = False
if hasattr(group_002_0.outputs[1], 'name'):
    group_002_0.outputs[1].name = 'Rough Out'
if hasattr(group_002_0.outputs[1], 'show_expanded'):
    group_002_0.outputs[1].show_expanded = False
if hasattr(group_002_0.outputs[2], 'default_value'):
    group_002_0.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_002_0.outputs[2], 'display_shape'):
    group_002_0.outputs[2].display_shape = 'CIRCLE'
if hasattr(group_002_0.outputs[2], 'enabled'):
    group_002_0.outputs[2].enabled = True
if hasattr(group_002_0.outputs[2], 'hide'):
    group_002_0.outputs[2].hide = False
if hasattr(group_002_0.outputs[2], 'hide_value'):
    group_002_0.outputs[2].hide_value = False
if hasattr(group_002_0.outputs[2], 'name'):
    group_002_0.outputs[2].name = 'Norm Out'
if hasattr(group_002_0.outputs[2], 'show_expanded'):
    group_002_0.outputs[2].show_expanded = False

node_tree1 = bpy.data.node_groups.get('Zone3 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if not node_tree1:
    node_tree1 = bpy.data.node_groups.new('Zone3 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber), 'ShaderNodeTree')
    for node in node_tree1.nodes:
        node_tree1.nodes.remove(node)
    # INPUTS
    input = node_tree1.inputs.new('NodeSocketFloat', 'X-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'X-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Y-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Y-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.5
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness Black')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.2199999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness Black'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness White')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.4699999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness White'
    # OUTPUTS
    output = node_tree1.outputs.new('NodeSocketFloat', 'Gradient Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Gradient Out'
    output = node_tree1.outputs.new('NodeSocketFloat', 'Rough Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Rough Out'
    output = node_tree1.outputs.new('NodeSocketColor', 'Norm Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Norm Out'
    # NODES
    image_texture_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    if hasattr(image_texture_1, 'color'):
        image_texture_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(image_texture_1, 'extension'):
        image_texture_1.extension = 'REPEAT'
    if hasattr(image_texture_1, 'hide'):
        image_texture_1.hide = False
    if hasattr(image_texture_1, 'interpolation'):
        image_texture_1.interpolation = 'Linear'
    if hasattr(image_texture_1, 'location'):
        image_texture_1.location = (-2307.30029296875, -1949.81494140625)
    if hasattr(image_texture_1, 'mute'):
        image_texture_1.mute = False
    if hasattr(image_texture_1, 'name'):
        image_texture_1.name = 'Image Texture'
    if hasattr(image_texture_1, 'projection'):
        image_texture_1.projection = 'FLAT'
    if hasattr(image_texture_1, 'projection_blend'):
        image_texture_1.projection_blend = 0.0
    if hasattr(image_texture_1, 'use_custom_color'):
        image_texture_1.use_custom_color = False
    if hasattr(image_texture_1, 'width'):
        image_texture_1.width = 240.0
    input_ = next((input_ for input_ in image_texture_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = True
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in image_texture_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in image_texture_1.outputs if output.identifier=='Alpha'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Alpha'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_014_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_014_1, 'color'):
        reroute_014_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_014_1, 'hide'):
        reroute_014_1.hide = False
    if hasattr(reroute_014_1, 'location'):
        reroute_014_1.location = (-49.86090087890625, 392.07806396484375)
    if hasattr(reroute_014_1, 'mute'):
        reroute_014_1.mute = False
    if hasattr(reroute_014_1, 'name'):
        reroute_014_1.name = 'Reroute.014'
    if hasattr(reroute_014_1, 'use_custom_color'):
        reroute_014_1.use_custom_color = False
    if hasattr(reroute_014_1, 'width'):
        reroute_014_1.width = 16.0

    reroute_016_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_016_1, 'color'):
        reroute_016_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_016_1, 'hide'):
        reroute_016_1.hide = False
    if hasattr(reroute_016_1, 'location'):
        reroute_016_1.location = (144.52618408203125, 215.85797119140625)
    if hasattr(reroute_016_1, 'mute'):
        reroute_016_1.mute = False
    if hasattr(reroute_016_1, 'name'):
        reroute_016_1.name = 'Reroute.016'
    if hasattr(reroute_016_1, 'use_custom_color'):
        reroute_016_1.use_custom_color = False
    if hasattr(reroute_016_1, 'width'):
        reroute_016_1.width = 16.0

    reroute_018_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_018_1, 'color'):
        reroute_018_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_018_1, 'hide'):
        reroute_018_1.hide = False
    if hasattr(reroute_018_1, 'location'):
        reroute_018_1.location = (178.88592529296875, 259.3858642578125)
    if hasattr(reroute_018_1, 'mute'):
        reroute_018_1.mute = False
    if hasattr(reroute_018_1, 'name'):
        reroute_018_1.name = 'Reroute.018'
    if hasattr(reroute_018_1, 'use_custom_color'):
        reroute_018_1.use_custom_color = False
    if hasattr(reroute_018_1, 'width'):
        reroute_018_1.width = 16.0

    reroute_019_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_019_1, 'color'):
        reroute_019_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_019_1, 'hide'):
        reroute_019_1.hide = False
    if hasattr(reroute_019_1, 'location'):
        reroute_019_1.location = (178.88592529296875, 182.964599609375)
    if hasattr(reroute_019_1, 'mute'):
        reroute_019_1.mute = False
    if hasattr(reroute_019_1, 'name'):
        reroute_019_1.name = 'Reroute.019'
    if hasattr(reroute_019_1, 'use_custom_color'):
        reroute_019_1.use_custom_color = False
    if hasattr(reroute_019_1, 'width'):
        reroute_019_1.width = 16.0

    reroute_017_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_017_1, 'color'):
        reroute_017_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_017_1, 'hide'):
        reroute_017_1.hide = False
    if hasattr(reroute_017_1, 'location'):
        reroute_017_1.location = (144.52618408203125, -275.09521484375)
    if hasattr(reroute_017_1, 'mute'):
        reroute_017_1.mute = False
    if hasattr(reroute_017_1, 'name'):
        reroute_017_1.name = 'Reroute.017'
    if hasattr(reroute_017_1, 'use_custom_color'):
        reroute_017_1.use_custom_color = False
    if hasattr(reroute_017_1, 'width'):
        reroute_017_1.width = 16.0

    math_009_1 = node_tree1.nodes.new('ShaderNodeMath')
    if hasattr(math_009_1, 'color'):
        math_009_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(math_009_1, 'hide'):
        math_009_1.hide = False
    if hasattr(math_009_1, 'location'):
        math_009_1.location = (180.58067321777344, -160.00445556640625)
    if hasattr(math_009_1, 'mute'):
        math_009_1.mute = False
    if hasattr(math_009_1, 'name'):
        math_009_1.name = 'Math.009'
    if hasattr(math_009_1, 'operation'):
        math_009_1.operation = 'MULTIPLY'
    if hasattr(math_009_1, 'use_clamp'):
        math_009_1.use_clamp = False
    if hasattr(math_009_1, 'use_custom_color'):
        math_009_1.use_custom_color = False
    if hasattr(math_009_1, 'width'):
        math_009_1.width = 140.0
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_001'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_002'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in math_009_1.outputs if output.identifier=='Value'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Value'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_021_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_021_1, 'color'):
        reroute_021_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_021_1, 'hide'):
        reroute_021_1.hide = False
    if hasattr(reroute_021_1, 'location'):
        reroute_021_1.location = (363.6356506347656, -320.47210693359375)
    if hasattr(reroute_021_1, 'mute'):
        reroute_021_1.mute = False
    if hasattr(reroute_021_1, 'name'):
        reroute_021_1.name = 'Reroute.021'
    if hasattr(reroute_021_1, 'use_custom_color'):
        reroute_021_1.use_custom_color = False
    if hasattr(reroute_021_1, 'width'):
        reroute_021_1.width = 16.0

    reroute_020_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_020_1, 'color'):
        reroute_020_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_020_1, 'hide'):
        reroute_020_1.hide = False
    if hasattr(reroute_020_1, 'location'):
        reroute_020_1.location = (363.6356506347656, -195.1111297607422)
    if hasattr(reroute_020_1, 'mute'):
        reroute_020_1.mute = False
    if hasattr(reroute_020_1, 'name'):
        reroute_020_1.name = 'Reroute.020'
    if hasattr(reroute_020_1, 'use_custom_color'):
        reroute_020_1.use_custom_color = False
    if hasattr(reroute_020_1, 'width'):
        reroute_020_1.width = 16.0

    reroute_012_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_012_1, 'color'):
        reroute_012_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_012_1, 'hide'):
        reroute_012_1.hide = False
    if hasattr(reroute_012_1, 'location'):
        reroute_012_1.location = (588.7369384765625, -242.4521942138672)
    if hasattr(reroute_012_1, 'mute'):
        reroute_012_1.mute = False
    if hasattr(reroute_012_1, 'name'):
        reroute_012_1.name = 'Reroute.012'
    if hasattr(reroute_012_1, 'use_custom_color'):
        reroute_012_1.use_custom_color = False
    if hasattr(reroute_012_1, 'width'):
        reroute_012_1.width = 16.0

    uv_map_1 = node_tree1.nodes.new('ShaderNodeUVMap')
    if hasattr(uv_map_1, 'color'):
        uv_map_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(uv_map_1, 'from_instancer'):
        uv_map_1.from_instancer = False
    if hasattr(uv_map_1, 'hide'):
        uv_map_1.hide = False
    if hasattr(uv_map_1, 'location'):
        uv_map_1.location = (-722.135009765625, 171.312255859375)
    if hasattr(uv_map_1, 'mute'):
        uv_map_1.mute = False
    if hasattr(uv_map_1, 'name'):
        uv_map_1.name = 'UV Map'
    if hasattr(uv_map_1, 'use_custom_color'):
        uv_map_1.use_custom_color = False
    if hasattr(uv_map_1, 'uv_map'):
        uv_map_1.uv_map = 'UV1'
    if hasattr(uv_map_1, 'width'):
        uv_map_1.width = 150.0
    output = next((output for output in uv_map_1.outputs if output.identifier=='UV'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'UV'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    mapping_1 = node_tree1.nodes.new('ShaderNodeMapping')
    if hasattr(mapping_1, 'color'):
        mapping_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mapping_1, 'hide'):
        mapping_1.hide = False
    if hasattr(mapping_1, 'location'):
        mapping_1.location = (-534.63330078125, 225.75634765625)
    if hasattr(mapping_1, 'mute'):
        mapping_1.mute = False
    if hasattr(mapping_1, 'name'):
        mapping_1.name = 'Mapping'
    if hasattr(mapping_1, 'use_custom_color'):
        mapping_1.use_custom_color = False
    if hasattr(mapping_1, 'vector_type'):
        mapping_1.vector_type = 'POINT'
    if hasattr(mapping_1, 'width'):
        mapping_1.width = 140.0
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Location'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Location'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Rotation'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Rotation'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Scale'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (4.0, 4.0, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Scale'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mapping_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_010_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_010_1, 'color'):
        reroute_010_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_010_1, 'hide'):
        reroute_010_1.hide = False
    if hasattr(reroute_010_1, 'location'):
        reroute_010_1.location = (-360.4864501953125, 190.916259765625)
    if hasattr(reroute_010_1, 'mute'):
        reroute_010_1.mute = False
    if hasattr(reroute_010_1, 'name'):
        reroute_010_1.name = 'Reroute.010'
    if hasattr(reroute_010_1, 'use_custom_color'):
        reroute_010_1.use_custom_color = False
    if hasattr(reroute_010_1, 'width'):
        reroute_010_1.width = 16.0

    reroute_011_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_011_1, 'color'):
        reroute_011_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_011_1, 'hide'):
        reroute_011_1.hide = False
    if hasattr(reroute_011_1, 'location'):
        reroute_011_1.location = (-360.4864501953125, -63.42291259765625)
    if hasattr(reroute_011_1, 'mute'):
        reroute_011_1.mute = False
    if hasattr(reroute_011_1, 'name'):
        reroute_011_1.name = 'Reroute.011'
    if hasattr(reroute_011_1, 'use_custom_color'):
        reroute_011_1.use_custom_color = False
    if hasattr(reroute_011_1, 'width'):
        reroute_011_1.width = 16.0

    reroute_015_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_015_1, 'color'):
        reroute_015_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_015_1, 'hide'):
        reroute_015_1.hide = False
    if hasattr(reroute_015_1, 'location'):
        reroute_015_1.location = (-49.86090087890625, 190.421142578125)
    if hasattr(reroute_015_1, 'mute'):
        reroute_015_1.mute = False
    if hasattr(reroute_015_1, 'name'):
        reroute_015_1.name = 'Reroute.015'
    if hasattr(reroute_015_1, 'use_custom_color'):
        reroute_015_1.use_custom_color = False
    if hasattr(reroute_015_1, 'width'):
        reroute_015_1.width = 16.0

    separate_rgb_1 = node_tree1.nodes.new('ShaderNodeSeparateRGB')
    if hasattr(separate_rgb_1, 'color'):
        separate_rgb_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(separate_rgb_1, 'hide'):
        separate_rgb_1.hide = False
    if hasattr(separate_rgb_1, 'location'):
        separate_rgb_1.location = (-23.7783203125, 294.257080078125)
    if hasattr(separate_rgb_1, 'mute'):
        separate_rgb_1.mute = False
    if hasattr(separate_rgb_1, 'name'):
        separate_rgb_1.name = 'Separate RGB'
    if hasattr(separate_rgb_1, 'use_custom_color'):
        separate_rgb_1.use_custom_color = False
    if hasattr(separate_rgb_1, 'width'):
        separate_rgb_1.width = 140.0
    input_ = next((input_ for input_ in separate_rgb_1.inputs if input_.identifier=='Image'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Image'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='R'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'R'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='G'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'G'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='B'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'B'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    combine_xyz_1 = node_tree1.nodes.new('ShaderNodeCombineXYZ')
    if hasattr(combine_xyz_1, 'color'):
        combine_xyz_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(combine_xyz_1, 'hide'):
        combine_xyz_1.hide = False
    if hasattr(combine_xyz_1, 'location'):
        combine_xyz_1.location = (-799.850341796875, -14.884613037109375)
    if hasattr(combine_xyz_1, 'mute'):
        combine_xyz_1.mute = False
    if hasattr(combine_xyz_1, 'name'):
        combine_xyz_1.name = 'Combine XYZ'
    if hasattr(combine_xyz_1, 'use_custom_color'):
        combine_xyz_1.use_custom_color = False
    if hasattr(combine_xyz_1, 'width'):
        combine_xyz_1.width = 140.0
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='X'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'X'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Y'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Y'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Z'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Z'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in combine_xyz_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_004_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_004_1, 'color'):
        reroute_004_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_004_1, 'hide'):
        reroute_004_1.hide = False
    if hasattr(reroute_004_1, 'location'):
        reroute_004_1.location = (-858.0992431640625, -341.5549621582031)
    if hasattr(reroute_004_1, 'mute'):
        reroute_004_1.mute = False
    if hasattr(reroute_004_1, 'name'):
        reroute_004_1.name = 'Reroute.004'
    if hasattr(reroute_004_1, 'use_custom_color'):
        reroute_004_1.use_custom_color = False
    if hasattr(reroute_004_1, 'width'):
        reroute_004_1.width = 16.0

    reroute_005_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_005_1, 'color'):
        reroute_005_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_005_1, 'hide'):
        reroute_005_1.hide = False
    if hasattr(reroute_005_1, 'location'):
        reroute_005_1.location = (-877.3994140625, -364.527099609375)
    if hasattr(reroute_005_1, 'mute'):
        reroute_005_1.mute = False
    if hasattr(reroute_005_1, 'name'):
        reroute_005_1.name = 'Reroute.005'
    if hasattr(reroute_005_1, 'use_custom_color'):
        reroute_005_1.use_custom_color = False
    if hasattr(reroute_005_1, 'width'):
        reroute_005_1.width = 16.0

    reroute_001_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_001_1, 'color'):
        reroute_001_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_001_1, 'hide'):
        reroute_001_1.hide = False
    if hasattr(reroute_001_1, 'location'):
        reroute_001_1.location = (-858.38818359375, -141.572021484375)
    if hasattr(reroute_001_1, 'mute'):
        reroute_001_1.mute = False
    if hasattr(reroute_001_1, 'name'):
        reroute_001_1.name = 'Reroute.001'
    if hasattr(reroute_001_1, 'use_custom_color'):
        reroute_001_1.use_custom_color = False
    if hasattr(reroute_001_1, 'width'):
        reroute_001_1.width = 16.0

    reroute_002_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_002_1, 'color'):
        reroute_002_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_002_1, 'hide'):
        reroute_002_1.hide = False
    if hasattr(reroute_002_1, 'location'):
        reroute_002_1.location = (-877.4599609375, -163.257080078125)
    if hasattr(reroute_002_1, 'mute'):
        reroute_002_1.mute = False
    if hasattr(reroute_002_1, 'name'):
        reroute_002_1.name = 'Reroute.002'
    if hasattr(reroute_002_1, 'use_custom_color'):
        reroute_002_1.use_custom_color = False
    if hasattr(reroute_002_1, 'width'):
        reroute_002_1.width = 16.0

    reroute_006_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_006_1, 'color'):
        reroute_006_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_006_1, 'hide'):
        reroute_006_1.hide = False
    if hasattr(reroute_006_1, 'location'):
        reroute_006_1.location = (-836.59033203125, -119.03997802734375)
    if hasattr(reroute_006_1, 'mute'):
        reroute_006_1.mute = False
    if hasattr(reroute_006_1, 'name'):
        reroute_006_1.name = 'Reroute.006'
    if hasattr(reroute_006_1, 'use_custom_color'):
        reroute_006_1.use_custom_color = False
    if hasattr(reroute_006_1, 'width'):
        reroute_006_1.width = 16.0

    reroute_007_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_007_1, 'color'):
        reroute_007_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_007_1, 'hide'):
        reroute_007_1.hide = False
    if hasattr(reroute_007_1, 'location'):
        reroute_007_1.location = (-836.59033203125, -296.6325988769531)
    if hasattr(reroute_007_1, 'mute'):
        reroute_007_1.mute = False
    if hasattr(reroute_007_1, 'name'):
        reroute_007_1.name = 'Reroute.007'
    if hasattr(reroute_007_1, 'use_custom_color'):
        reroute_007_1.use_custom_color = False
    if hasattr(reroute_007_1, 'width'):
        reroute_007_1.width = 16.0

    reroute_013_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_013_1, 'color'):
        reroute_013_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_013_1, 'hide'):
        reroute_013_1.hide = False
    if hasattr(reroute_013_1, 'location'):
        reroute_013_1.location = (588.7369384765625, 159.65426635742188)
    if hasattr(reroute_013_1, 'mute'):
        reroute_013_1.mute = False
    if hasattr(reroute_013_1, 'name'):
        reroute_013_1.name = 'Reroute.013'
    if hasattr(reroute_013_1, 'use_custom_color'):
        reroute_013_1.use_custom_color = False
    if hasattr(reroute_013_1, 'width'):
        reroute_013_1.width = 16.0

    group_output_1 = node_tree1.nodes.new('NodeGroupOutput')
    if hasattr(group_output_1, 'color'):
        group_output_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_output_1, 'hide'):
        group_output_1.hide = False
    if hasattr(group_output_1, 'is_active_output'):
        group_output_1.is_active_output = True
    if hasattr(group_output_1, 'location'):
        group_output_1.location = (629.4588623046875, 216.9207763671875)
    if hasattr(group_output_1, 'mute'):
        group_output_1.mute = False
    if hasattr(group_output_1, 'name'):
        group_output_1.name = 'Group Output'
    if hasattr(group_output_1, 'use_custom_color'):
        group_output_1.use_custom_color = False
    if hasattr(group_output_1, 'width'):
        group_output_1.width = 140.0
    if hasattr(group_output_1.inputs[0], 'default_value'):
        group_output_1.inputs[0].default_value = 0.0
    if hasattr(group_output_1.inputs[0], 'display_shape'):
        group_output_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[0], 'enabled'):
        group_output_1.inputs[0].enabled = True
    if hasattr(group_output_1.inputs[0], 'hide'):
        group_output_1.inputs[0].hide = False
    if hasattr(group_output_1.inputs[0], 'hide_value'):
        group_output_1.inputs[0].hide_value = False
    if hasattr(group_output_1.inputs[0], 'name'):
        group_output_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_output_1.inputs[0], 'show_expanded'):
        group_output_1.inputs[0].show_expanded = False
    if hasattr(group_output_1.inputs[1], 'default_value'):
        group_output_1.inputs[1].default_value = 0.0
    if hasattr(group_output_1.inputs[1], 'display_shape'):
        group_output_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[1], 'enabled'):
        group_output_1.inputs[1].enabled = True
    if hasattr(group_output_1.inputs[1], 'hide'):
        group_output_1.inputs[1].hide = False
    if hasattr(group_output_1.inputs[1], 'hide_value'):
        group_output_1.inputs[1].hide_value = False
    if hasattr(group_output_1.inputs[1], 'name'):
        group_output_1.inputs[1].name = 'Rough Out'
    if hasattr(group_output_1.inputs[1], 'show_expanded'):
        group_output_1.inputs[1].show_expanded = False
    if hasattr(group_output_1.inputs[2], 'default_value'):
        group_output_1.inputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[2], 'display_shape'):
        group_output_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[2], 'enabled'):
        group_output_1.inputs[2].enabled = True
    if hasattr(group_output_1.inputs[2], 'hide'):
        group_output_1.inputs[2].hide = False
    if hasattr(group_output_1.inputs[2], 'hide_value'):
        group_output_1.inputs[2].hide_value = False
    if hasattr(group_output_1.inputs[2], 'name'):
        group_output_1.inputs[2].name = 'Norm Out'
    if hasattr(group_output_1.inputs[2], 'show_expanded'):
        group_output_1.inputs[2].show_expanded = False

    mix_1 = node_tree1.nodes.new('ShaderNodeMixRGB')
    if hasattr(mix_1, 'blend_type'):
        mix_1.blend_type = 'MIX'
    if hasattr(mix_1, 'color'):
        mix_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_1, 'hide'):
        mix_1.hide = False
    if hasattr(mix_1, 'location'):
        mix_1.location = (401.4825134277344, -207.88519287109375)
    if hasattr(mix_1, 'mute'):
        mix_1.mute = False
    if hasattr(mix_1, 'name'):
        mix_1.name = 'Mix'
    if hasattr(mix_1, 'use_alpha'):
        mix_1.use_alpha = False
    if hasattr(mix_1, 'use_clamp'):
        mix_1.use_clamp = True
    if hasattr(mix_1, 'use_custom_color'):
        mix_1.use_custom_color = False
    if hasattr(mix_1, 'width'):
        mix_1.width = 140.0
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color1'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color1'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color2'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color2'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mix_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_input_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_1, 'color'):
        group_input_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_1, 'hide'):
        group_input_1.hide = False
    if hasattr(group_input_1, 'location'):
        group_input_1.location = (-1048.383056640625, -40.007965087890625)
    if hasattr(group_input_1, 'mute'):
        group_input_1.mute = False
    if hasattr(group_input_1, 'name'):
        group_input_1.name = 'Group Input'
    if hasattr(group_input_1, 'use_custom_color'):
        group_input_1.use_custom_color = False
    if hasattr(group_input_1, 'width'):
        group_input_1.width = 140.0
    if hasattr(group_input_1.outputs[0], 'default_value'):
        group_input_1.outputs[0].default_value = 0.0
    if hasattr(group_input_1.outputs[0], 'display_shape'):
        group_input_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[0], 'enabled'):
        group_input_1.outputs[0].enabled = True
    if hasattr(group_input_1.outputs[0], 'hide'):
        group_input_1.outputs[0].hide = False
    if hasattr(group_input_1.outputs[0], 'hide_value'):
        group_input_1.outputs[0].hide_value = False
    if hasattr(group_input_1.outputs[0], 'name'):
        group_input_1.outputs[0].name = 'X-Scale'
    if hasattr(group_input_1.outputs[0], 'show_expanded'):
        group_input_1.outputs[0].show_expanded = False
    if hasattr(group_input_1.outputs[1], 'default_value'):
        group_input_1.outputs[1].default_value = 0.0
    if hasattr(group_input_1.outputs[1], 'display_shape'):
        group_input_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[1], 'enabled'):
        group_input_1.outputs[1].enabled = True
    if hasattr(group_input_1.outputs[1], 'hide'):
        group_input_1.outputs[1].hide = False
    if hasattr(group_input_1.outputs[1], 'hide_value'):
        group_input_1.outputs[1].hide_value = False
    if hasattr(group_input_1.outputs[1], 'name'):
        group_input_1.outputs[1].name = 'Y-Scale'
    if hasattr(group_input_1.outputs[1], 'show_expanded'):
        group_input_1.outputs[1].show_expanded = False
    if hasattr(group_input_1.outputs[2], 'default_value'):
        group_input_1.outputs[2].default_value = 0.5
    if hasattr(group_input_1.outputs[2], 'display_shape'):
        group_input_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[2], 'enabled'):
        group_input_1.outputs[2].enabled = True
    if hasattr(group_input_1.outputs[2], 'hide'):
        group_input_1.outputs[2].hide = False
    if hasattr(group_input_1.outputs[2], 'hide_value'):
        group_input_1.outputs[2].hide_value = False
    if hasattr(group_input_1.outputs[2], 'name'):
        group_input_1.outputs[2].name = 'Roughness'
    if hasattr(group_input_1.outputs[2], 'show_expanded'):
        group_input_1.outputs[2].show_expanded = False
    if hasattr(group_input_1.outputs[3], 'default_value'):
        group_input_1.outputs[3].default_value = 0.2199999988079071
    if hasattr(group_input_1.outputs[3], 'display_shape'):
        group_input_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[3], 'enabled'):
        group_input_1.outputs[3].enabled = True
    if hasattr(group_input_1.outputs[3], 'hide'):
        group_input_1.outputs[3].hide = False
    if hasattr(group_input_1.outputs[3], 'hide_value'):
        group_input_1.outputs[3].hide_value = False
    if hasattr(group_input_1.outputs[3], 'name'):
        group_input_1.outputs[3].name = 'Roughness Black'
    if hasattr(group_input_1.outputs[3], 'show_expanded'):
        group_input_1.outputs[3].show_expanded = False
    if hasattr(group_input_1.outputs[4], 'default_value'):
        group_input_1.outputs[4].default_value = 0.4699999988079071
    if hasattr(group_input_1.outputs[4], 'display_shape'):
        group_input_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[4], 'enabled'):
        group_input_1.outputs[4].enabled = True
    if hasattr(group_input_1.outputs[4], 'hide'):
        group_input_1.outputs[4].hide = False
    if hasattr(group_input_1.outputs[4], 'hide_value'):
        group_input_1.outputs[4].hide_value = False
    if hasattr(group_input_1.outputs[4], 'name'):
        group_input_1.outputs[4].name = 'Roughness White'
    if hasattr(group_input_1.outputs[4], 'show_expanded'):
        group_input_1.outputs[4].show_expanded = False

    #Zone3_Gradient Mask
    zone3_gradient_mask_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone3_gradient_mask_1.location = (-328.15277099609375, 427.28961181640625)
    PNGtoBITMAP05 = Zone3_GradientMask.replace('.png', FileExtension)
    zone3_gradient_mask_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP05))
    zone3_gradient_mask_1.image.colorspace_settings.name = 'Non-Color'
    zone3_gradient_mask_1.label = 'Zone3_Gradient Mask'

    #Zone3_Normal
    zone3_normal_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone3_normal_1.location = (-328.4542236328125, 172.760498046875)
    PNGtoBITMAP06 = Zone3_Normal.replace('.png', FileExtension)
    zone3_normal_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP06))
    zone3_normal_1.image.colorspace_settings.name = 'Non-Color'
    zone3_normal_1.label = 'Zone3_Normal'


    # LINKS
    node_tree1.links.new(uv_map_1.outputs[0], mapping_1.inputs[0])
    node_tree1.links.new(combine_xyz_1.outputs[0], mapping_1.inputs[3])
    node_tree1.links.new(zone3_normal_1.outputs[0], group_output_1.inputs[2])
    node_tree1.links.new(group_input_1.outputs[3], reroute_001_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[4], reroute_002_1.inputs[0])
    node_tree1.links.new(reroute_001_1.outputs[0], reroute_004_1.inputs[0])
    node_tree1.links.new(reroute_002_1.outputs[0], reroute_005_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[2], reroute_006_1.inputs[0])
    node_tree1.links.new(reroute_006_1.outputs[0], reroute_007_1.inputs[0])
    node_tree1.links.new(mapping_1.outputs[0], reroute_010_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], zone3_gradient_mask_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], reroute_011_1.inputs[0])
    node_tree1.links.new(reroute_011_1.outputs[0], zone3_normal_1.inputs[0])
    node_tree1.links.new(reroute_012_1.outputs[0], reroute_013_1.inputs[0])
    node_tree1.links.new(reroute_013_1.outputs[0], group_output_1.inputs[1])
    node_tree1.links.new(zone3_gradient_mask_1.outputs[0], reroute_014_1.inputs[0])
    node_tree1.links.new(reroute_014_1.outputs[0], reroute_015_1.inputs[0])
    node_tree1.links.new(reroute_015_1.outputs[0], separate_rgb_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[2], reroute_016_1.inputs[0])
    node_tree1.links.new(reroute_016_1.outputs[0], reroute_017_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[0], reroute_018_1.inputs[0])
    node_tree1.links.new(reroute_018_1.outputs[0], reroute_019_1.inputs[0])
    node_tree1.links.new(reroute_019_1.outputs[0], group_output_1.inputs[0])
    node_tree1.links.new(reroute_017_1.outputs[0], math_009_1.inputs[0])
    node_tree1.links.new(reroute_007_1.outputs[0], math_009_1.inputs[1])
    node_tree1.links.new(reroute_004_1.outputs[0], mix_1.inputs[1])
    node_tree1.links.new(reroute_005_1.outputs[0], mix_1.inputs[2])
    node_tree1.links.new(mix_1.outputs[0], reroute_012_1.inputs[0])
    node_tree1.links.new(math_009_1.outputs[0], reroute_020_1.inputs[0])
    node_tree1.links.new(reroute_020_1.outputs[0], reroute_021_1.inputs[0])
    node_tree1.links.new(reroute_021_1.outputs[0], mix_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[1], combine_xyz_1.inputs[1])
    node_tree1.links.new(group_input_1.outputs[0], combine_xyz_1.inputs[0])

group_003_0 = node_tree0.nodes.new('ShaderNodeGroup')
if hasattr(group_003_0, 'node_tree'):
    group_003_0.node_tree = bpy.data.node_groups.get('Zone3 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if hasattr(group_003_0, 'color'):
    group_003_0.color = Zone3_SwatchNodegroupColor
if hasattr(group_003_0, 'hide'):
    group_003_0.hide = False
if hasattr(group_003_0, 'location'):
    group_003_0.location = (-421.73388671875, -665.5985717773438)
if hasattr(group_003_0, 'mute'):
    group_003_0.mute = False
if hasattr(group_003_0, 'name'):
    group_003_0.name = 'Group.003'
if hasattr(group_003_0, 'use_custom_color'):
    group_003_0.use_custom_color = True
if hasattr(group_003_0, 'width'):
    group_003_0.width = 250.72528076171875
if hasattr(group_003_0.inputs[0], 'default_value'):
    group_003_0.inputs[0].default_value = Zone3_XScale*ArmorRegion
if hasattr(group_003_0.inputs[0], 'display_shape'):
    group_003_0.inputs[0].display_shape = 'CIRCLE'
if hasattr(group_003_0.inputs[0], 'enabled'):
    group_003_0.inputs[0].enabled = True
if hasattr(group_003_0.inputs[0], 'hide'):
    group_003_0.inputs[0].hide = False
if hasattr(group_003_0.inputs[0], 'hide_value'):
    group_003_0.inputs[0].hide_value = False
if hasattr(group_003_0.inputs[0], 'name'):
    group_003_0.inputs[0].name = 'X-Scale'
if hasattr(group_003_0.inputs[0], 'show_expanded'):
    group_003_0.inputs[0].show_expanded = False
if hasattr(group_003_0.inputs[1], 'default_value'):
    group_003_0.inputs[1].default_value = Zone3_YScale*ArmorRegion
if hasattr(group_003_0.inputs[1], 'display_shape'):
    group_003_0.inputs[1].display_shape = 'CIRCLE'
if hasattr(group_003_0.inputs[1], 'enabled'):
    group_003_0.inputs[1].enabled = True
if hasattr(group_003_0.inputs[1], 'hide'):
    group_003_0.inputs[1].hide = False
if hasattr(group_003_0.inputs[1], 'hide_value'):
    group_003_0.inputs[1].hide_value = False
if hasattr(group_003_0.inputs[1], 'name'):
    group_003_0.inputs[1].name = 'Y-Scale'
if hasattr(group_003_0.inputs[1], 'show_expanded'):
    group_003_0.inputs[1].show_expanded = False
if hasattr(group_003_0.inputs[2], 'default_value'):
    group_003_0.inputs[2].default_value = Zone3_Roughness
if hasattr(group_003_0.inputs[2], 'display_shape'):
    group_003_0.inputs[2].display_shape = 'CIRCLE'
if hasattr(group_003_0.inputs[2], 'enabled'):
    group_003_0.inputs[2].enabled = True
if hasattr(group_003_0.inputs[2], 'hide'):
    group_003_0.inputs[2].hide = False
if hasattr(group_003_0.inputs[2], 'hide_value'):
    group_003_0.inputs[2].hide_value = False
if hasattr(group_003_0.inputs[2], 'name'):
    group_003_0.inputs[2].name = 'Roughness'
if hasattr(group_003_0.inputs[2], 'show_expanded'):
    group_003_0.inputs[2].show_expanded = False
if hasattr(group_003_0.inputs[3], 'default_value'):
    group_003_0.inputs[3].default_value = Zone3_RoughnessBlack
if hasattr(group_003_0.inputs[3], 'display_shape'):
    group_003_0.inputs[3].display_shape = 'CIRCLE'
if hasattr(group_003_0.inputs[3], 'enabled'):
    group_003_0.inputs[3].enabled = True
if hasattr(group_003_0.inputs[3], 'hide'):
    group_003_0.inputs[3].hide = False
if hasattr(group_003_0.inputs[3], 'hide_value'):
    group_003_0.inputs[3].hide_value = False
if hasattr(group_003_0.inputs[3], 'name'):
    group_003_0.inputs[3].name = 'Roughness Black'
if hasattr(group_003_0.inputs[3], 'show_expanded'):
    group_003_0.inputs[3].show_expanded = False
if hasattr(group_003_0.inputs[4], 'default_value'):
    group_003_0.inputs[4].default_value = Zone3_RoughnessWhite
if hasattr(group_003_0.inputs[4], 'display_shape'):
    group_003_0.inputs[4].display_shape = 'CIRCLE'
if hasattr(group_003_0.inputs[4], 'enabled'):
    group_003_0.inputs[4].enabled = True
if hasattr(group_003_0.inputs[4], 'hide'):
    group_003_0.inputs[4].hide = False
if hasattr(group_003_0.inputs[4], 'hide_value'):
    group_003_0.inputs[4].hide_value = False
if hasattr(group_003_0.inputs[4], 'name'):
    group_003_0.inputs[4].name = 'Roughness White'
if hasattr(group_003_0.inputs[4], 'show_expanded'):
    group_003_0.inputs[4].show_expanded = False
if hasattr(group_003_0.outputs[0], 'default_value'):
    group_003_0.outputs[0].default_value = 0.0
if hasattr(group_003_0.outputs[0], 'display_shape'):
    group_003_0.outputs[0].display_shape = 'CIRCLE'
if hasattr(group_003_0.outputs[0], 'enabled'):
    group_003_0.outputs[0].enabled = True
if hasattr(group_003_0.outputs[0], 'hide'):
    group_003_0.outputs[0].hide = False
if hasattr(group_003_0.outputs[0], 'hide_value'):
    group_003_0.outputs[0].hide_value = False
if hasattr(group_003_0.outputs[0], 'name'):
    group_003_0.outputs[0].name = 'Gradient Out'
if hasattr(group_003_0.outputs[0], 'show_expanded'):
    group_003_0.outputs[0].show_expanded = False
if hasattr(group_003_0.outputs[1], 'default_value'):
    group_003_0.outputs[1].default_value = 0.0
if hasattr(group_003_0.outputs[1], 'display_shape'):
    group_003_0.outputs[1].display_shape = 'CIRCLE'
if hasattr(group_003_0.outputs[1], 'enabled'):
    group_003_0.outputs[1].enabled = True
if hasattr(group_003_0.outputs[1], 'hide'):
    group_003_0.outputs[1].hide = False
if hasattr(group_003_0.outputs[1], 'hide_value'):
    group_003_0.outputs[1].hide_value = False
if hasattr(group_003_0.outputs[1], 'name'):
    group_003_0.outputs[1].name = 'Rough Out'
if hasattr(group_003_0.outputs[1], 'show_expanded'):
    group_003_0.outputs[1].show_expanded = False
if hasattr(group_003_0.outputs[2], 'default_value'):
    group_003_0.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_003_0.outputs[2], 'display_shape'):
    group_003_0.outputs[2].display_shape = 'CIRCLE'
if hasattr(group_003_0.outputs[2], 'enabled'):
    group_003_0.outputs[2].enabled = True
if hasattr(group_003_0.outputs[2], 'hide'):
    group_003_0.outputs[2].hide = False
if hasattr(group_003_0.outputs[2], 'hide_value'):
    group_003_0.outputs[2].hide_value = False
if hasattr(group_003_0.outputs[2], 'name'):
    group_003_0.outputs[2].name = 'Norm Out'
if hasattr(group_003_0.outputs[2], 'show_expanded'):
    group_003_0.outputs[2].show_expanded = False

node_tree1 = bpy.data.node_groups.get('Zone4 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if not node_tree1:
    node_tree1 = bpy.data.node_groups.new('Zone4 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber), 'ShaderNodeTree')
    for node in node_tree1.nodes:
        node_tree1.nodes.remove(node)
    # INPUTS
    input = node_tree1.inputs.new('NodeSocketFloat', 'X-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'X-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Y-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Y-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.5
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness Black')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.2199999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness Black'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness White')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.4699999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness White'
    # OUTPUTS
    output = node_tree1.outputs.new('NodeSocketFloat', 'Gradient Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Gradient Out'
    output = node_tree1.outputs.new('NodeSocketFloat', 'Rough Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Rough Out'
    output = node_tree1.outputs.new('NodeSocketColor', 'Norm Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Norm Out'
    # NODES
    huns_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    if hasattr(huns_1, 'color'):
        huns_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(huns_1, 'extension'):
        huns_1.extension = 'REPEAT'
    if hasattr(huns_1, 'hide'):
        huns_1.hide = False
    if hasattr(huns_1, 'interpolation'):
        huns_1.interpolation = 'Linear'
    if hasattr(huns_1, 'location'):
        huns_1.location = (-2307.30029296875, -1949.81494140625)
    if hasattr(huns_1, 'mute'):
        huns_1.mute = False
    if hasattr(huns_1, 'name'):
        huns_1.name = 'huns'
    if hasattr(huns_1, 'projection'):
        huns_1.projection = 'FLAT'
    if hasattr(huns_1, 'projection_blend'):
        huns_1.projection_blend = 0.0
    if hasattr(huns_1, 'use_custom_color'):
        huns_1.use_custom_color = False
    if hasattr(huns_1, 'width'):
        huns_1.width = 240.0
    input_ = next((input_ for input_ in huns_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = True
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in huns_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in huns_1.outputs if output.identifier=='Alpha'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Alpha'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_014_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_014_1, 'color'):
        reroute_014_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_014_1, 'hide'):
        reroute_014_1.hide = False
    if hasattr(reroute_014_1, 'location'):
        reroute_014_1.location = (-49.86090087890625, 392.07806396484375)
    if hasattr(reroute_014_1, 'mute'):
        reroute_014_1.mute = False
    if hasattr(reroute_014_1, 'name'):
        reroute_014_1.name = 'Reroute.014'
    if hasattr(reroute_014_1, 'use_custom_color'):
        reroute_014_1.use_custom_color = False
    if hasattr(reroute_014_1, 'width'):
        reroute_014_1.width = 16.0

    reroute_016_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_016_1, 'color'):
        reroute_016_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_016_1, 'hide'):
        reroute_016_1.hide = False
    if hasattr(reroute_016_1, 'location'):
        reroute_016_1.location = (144.52618408203125, 215.85797119140625)
    if hasattr(reroute_016_1, 'mute'):
        reroute_016_1.mute = False
    if hasattr(reroute_016_1, 'name'):
        reroute_016_1.name = 'Reroute.016'
    if hasattr(reroute_016_1, 'use_custom_color'):
        reroute_016_1.use_custom_color = False
    if hasattr(reroute_016_1, 'width'):
        reroute_016_1.width = 16.0

    reroute_018_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_018_1, 'color'):
        reroute_018_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_018_1, 'hide'):
        reroute_018_1.hide = False
    if hasattr(reroute_018_1, 'location'):
        reroute_018_1.location = (178.88592529296875, 259.3858642578125)
    if hasattr(reroute_018_1, 'mute'):
        reroute_018_1.mute = False
    if hasattr(reroute_018_1, 'name'):
        reroute_018_1.name = 'Reroute.018'
    if hasattr(reroute_018_1, 'use_custom_color'):
        reroute_018_1.use_custom_color = False
    if hasattr(reroute_018_1, 'width'):
        reroute_018_1.width = 16.0

    reroute_019_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_019_1, 'color'):
        reroute_019_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_019_1, 'hide'):
        reroute_019_1.hide = False
    if hasattr(reroute_019_1, 'location'):
        reroute_019_1.location = (178.88592529296875, 182.964599609375)
    if hasattr(reroute_019_1, 'mute'):
        reroute_019_1.mute = False
    if hasattr(reroute_019_1, 'name'):
        reroute_019_1.name = 'Reroute.019'
    if hasattr(reroute_019_1, 'use_custom_color'):
        reroute_019_1.use_custom_color = False
    if hasattr(reroute_019_1, 'width'):
        reroute_019_1.width = 16.0

    reroute_017_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_017_1, 'color'):
        reroute_017_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_017_1, 'hide'):
        reroute_017_1.hide = False
    if hasattr(reroute_017_1, 'location'):
        reroute_017_1.location = (144.52618408203125, -275.09521484375)
    if hasattr(reroute_017_1, 'mute'):
        reroute_017_1.mute = False
    if hasattr(reroute_017_1, 'name'):
        reroute_017_1.name = 'Reroute.017'
    if hasattr(reroute_017_1, 'use_custom_color'):
        reroute_017_1.use_custom_color = False
    if hasattr(reroute_017_1, 'width'):
        reroute_017_1.width = 16.0

    math_009_1 = node_tree1.nodes.new('ShaderNodeMath')
    if hasattr(math_009_1, 'color'):
        math_009_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(math_009_1, 'hide'):
        math_009_1.hide = False
    if hasattr(math_009_1, 'location'):
        math_009_1.location = (180.58067321777344, -160.00445556640625)
    if hasattr(math_009_1, 'mute'):
        math_009_1.mute = False
    if hasattr(math_009_1, 'name'):
        math_009_1.name = 'Math.009'
    if hasattr(math_009_1, 'operation'):
        math_009_1.operation = 'MULTIPLY'
    if hasattr(math_009_1, 'use_clamp'):
        math_009_1.use_clamp = False
    if hasattr(math_009_1, 'use_custom_color'):
        math_009_1.use_custom_color = False
    if hasattr(math_009_1, 'width'):
        math_009_1.width = 140.0
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_001'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_002'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in math_009_1.outputs if output.identifier=='Value'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Value'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_021_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_021_1, 'color'):
        reroute_021_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_021_1, 'hide'):
        reroute_021_1.hide = False
    if hasattr(reroute_021_1, 'location'):
        reroute_021_1.location = (363.6356506347656, -320.47210693359375)
    if hasattr(reroute_021_1, 'mute'):
        reroute_021_1.mute = False
    if hasattr(reroute_021_1, 'name'):
        reroute_021_1.name = 'Reroute.021'
    if hasattr(reroute_021_1, 'use_custom_color'):
        reroute_021_1.use_custom_color = False
    if hasattr(reroute_021_1, 'width'):
        reroute_021_1.width = 16.0

    reroute_020_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_020_1, 'color'):
        reroute_020_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_020_1, 'hide'):
        reroute_020_1.hide = False
    if hasattr(reroute_020_1, 'location'):
        reroute_020_1.location = (363.6356506347656, -195.1111297607422)
    if hasattr(reroute_020_1, 'mute'):
        reroute_020_1.mute = False
    if hasattr(reroute_020_1, 'name'):
        reroute_020_1.name = 'Reroute.020'
    if hasattr(reroute_020_1, 'use_custom_color'):
        reroute_020_1.use_custom_color = False
    if hasattr(reroute_020_1, 'width'):
        reroute_020_1.width = 16.0

    reroute_012_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_012_1, 'color'):
        reroute_012_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_012_1, 'hide'):
        reroute_012_1.hide = False
    if hasattr(reroute_012_1, 'location'):
        reroute_012_1.location = (588.7369384765625, -242.4521942138672)
    if hasattr(reroute_012_1, 'mute'):
        reroute_012_1.mute = False
    if hasattr(reroute_012_1, 'name'):
        reroute_012_1.name = 'Reroute.012'
    if hasattr(reroute_012_1, 'use_custom_color'):
        reroute_012_1.use_custom_color = False
    if hasattr(reroute_012_1, 'width'):
        reroute_012_1.width = 16.0

    uv_map_1 = node_tree1.nodes.new('ShaderNodeUVMap')
    if hasattr(uv_map_1, 'color'):
        uv_map_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(uv_map_1, 'from_instancer'):
        uv_map_1.from_instancer = False
    if hasattr(uv_map_1, 'hide'):
        uv_map_1.hide = False
    if hasattr(uv_map_1, 'location'):
        uv_map_1.location = (-722.135009765625, 171.312255859375)
    if hasattr(uv_map_1, 'mute'):
        uv_map_1.mute = False
    if hasattr(uv_map_1, 'name'):
        uv_map_1.name = 'UV Map'
    if hasattr(uv_map_1, 'use_custom_color'):
        uv_map_1.use_custom_color = False
    if hasattr(uv_map_1, 'uv_map'):
        uv_map_1.uv_map = 'UV1'
    if hasattr(uv_map_1, 'width'):
        uv_map_1.width = 150.0
    output = next((output for output in uv_map_1.outputs if output.identifier=='UV'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'UV'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    mapping_1 = node_tree1.nodes.new('ShaderNodeMapping')
    if hasattr(mapping_1, 'color'):
        mapping_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mapping_1, 'hide'):
        mapping_1.hide = False
    if hasattr(mapping_1, 'location'):
        mapping_1.location = (-534.63330078125, 225.75634765625)
    if hasattr(mapping_1, 'mute'):
        mapping_1.mute = False
    if hasattr(mapping_1, 'name'):
        mapping_1.name = 'Mapping'
    if hasattr(mapping_1, 'use_custom_color'):
        mapping_1.use_custom_color = False
    if hasattr(mapping_1, 'vector_type'):
        mapping_1.vector_type = 'POINT'
    if hasattr(mapping_1, 'width'):
        mapping_1.width = 140.0
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Location'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Location'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Rotation'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Rotation'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Scale'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (4.0, 4.0, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Scale'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mapping_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_010_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_010_1, 'color'):
        reroute_010_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_010_1, 'hide'):
        reroute_010_1.hide = False
    if hasattr(reroute_010_1, 'location'):
        reroute_010_1.location = (-360.4864501953125, 190.916259765625)
    if hasattr(reroute_010_1, 'mute'):
        reroute_010_1.mute = False
    if hasattr(reroute_010_1, 'name'):
        reroute_010_1.name = 'Reroute.010'
    if hasattr(reroute_010_1, 'use_custom_color'):
        reroute_010_1.use_custom_color = False
    if hasattr(reroute_010_1, 'width'):
        reroute_010_1.width = 16.0

    reroute_011_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_011_1, 'color'):
        reroute_011_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_011_1, 'hide'):
        reroute_011_1.hide = False
    if hasattr(reroute_011_1, 'location'):
        reroute_011_1.location = (-360.4864501953125, -63.42291259765625)
    if hasattr(reroute_011_1, 'mute'):
        reroute_011_1.mute = False
    if hasattr(reroute_011_1, 'name'):
        reroute_011_1.name = 'Reroute.011'
    if hasattr(reroute_011_1, 'use_custom_color'):
        reroute_011_1.use_custom_color = False
    if hasattr(reroute_011_1, 'width'):
        reroute_011_1.width = 16.0

    reroute_015_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_015_1, 'color'):
        reroute_015_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_015_1, 'hide'):
        reroute_015_1.hide = False
    if hasattr(reroute_015_1, 'location'):
        reroute_015_1.location = (-49.86090087890625, 190.421142578125)
    if hasattr(reroute_015_1, 'mute'):
        reroute_015_1.mute = False
    if hasattr(reroute_015_1, 'name'):
        reroute_015_1.name = 'Reroute.015'
    if hasattr(reroute_015_1, 'use_custom_color'):
        reroute_015_1.use_custom_color = False
    if hasattr(reroute_015_1, 'width'):
        reroute_015_1.width = 16.0

    separate_rgb_1 = node_tree1.nodes.new('ShaderNodeSeparateRGB')
    if hasattr(separate_rgb_1, 'color'):
        separate_rgb_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(separate_rgb_1, 'hide'):
        separate_rgb_1.hide = False
    if hasattr(separate_rgb_1, 'location'):
        separate_rgb_1.location = (-23.7783203125, 294.257080078125)
    if hasattr(separate_rgb_1, 'mute'):
        separate_rgb_1.mute = False
    if hasattr(separate_rgb_1, 'name'):
        separate_rgb_1.name = 'Separate RGB'
    if hasattr(separate_rgb_1, 'use_custom_color'):
        separate_rgb_1.use_custom_color = False
    if hasattr(separate_rgb_1, 'width'):
        separate_rgb_1.width = 140.0
    input_ = next((input_ for input_ in separate_rgb_1.inputs if input_.identifier=='Image'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Image'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='R'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'R'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='G'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'G'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='B'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'B'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    combine_xyz_1 = node_tree1.nodes.new('ShaderNodeCombineXYZ')
    if hasattr(combine_xyz_1, 'color'):
        combine_xyz_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(combine_xyz_1, 'hide'):
        combine_xyz_1.hide = False
    if hasattr(combine_xyz_1, 'location'):
        combine_xyz_1.location = (-799.850341796875, -14.884613037109375)
    if hasattr(combine_xyz_1, 'mute'):
        combine_xyz_1.mute = False
    if hasattr(combine_xyz_1, 'name'):
        combine_xyz_1.name = 'Combine XYZ'
    if hasattr(combine_xyz_1, 'use_custom_color'):
        combine_xyz_1.use_custom_color = False
    if hasattr(combine_xyz_1, 'width'):
        combine_xyz_1.width = 140.0
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='X'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'X'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Y'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Y'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Z'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Z'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in combine_xyz_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_004_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_004_1, 'color'):
        reroute_004_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_004_1, 'hide'):
        reroute_004_1.hide = False
    if hasattr(reroute_004_1, 'location'):
        reroute_004_1.location = (-858.0992431640625, -341.5549621582031)
    if hasattr(reroute_004_1, 'mute'):
        reroute_004_1.mute = False
    if hasattr(reroute_004_1, 'name'):
        reroute_004_1.name = 'Reroute.004'
    if hasattr(reroute_004_1, 'use_custom_color'):
        reroute_004_1.use_custom_color = False
    if hasattr(reroute_004_1, 'width'):
        reroute_004_1.width = 16.0

    reroute_005_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_005_1, 'color'):
        reroute_005_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_005_1, 'hide'):
        reroute_005_1.hide = False
    if hasattr(reroute_005_1, 'location'):
        reroute_005_1.location = (-877.3994140625, -364.527099609375)
    if hasattr(reroute_005_1, 'mute'):
        reroute_005_1.mute = False
    if hasattr(reroute_005_1, 'name'):
        reroute_005_1.name = 'Reroute.005'
    if hasattr(reroute_005_1, 'use_custom_color'):
        reroute_005_1.use_custom_color = False
    if hasattr(reroute_005_1, 'width'):
        reroute_005_1.width = 16.0

    reroute_001_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_001_1, 'color'):
        reroute_001_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_001_1, 'hide'):
        reroute_001_1.hide = False
    if hasattr(reroute_001_1, 'location'):
        reroute_001_1.location = (-858.38818359375, -141.572021484375)
    if hasattr(reroute_001_1, 'mute'):
        reroute_001_1.mute = False
    if hasattr(reroute_001_1, 'name'):
        reroute_001_1.name = 'Reroute.001'
    if hasattr(reroute_001_1, 'use_custom_color'):
        reroute_001_1.use_custom_color = False
    if hasattr(reroute_001_1, 'width'):
        reroute_001_1.width = 16.0

    reroute_002_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_002_1, 'color'):
        reroute_002_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_002_1, 'hide'):
        reroute_002_1.hide = False
    if hasattr(reroute_002_1, 'location'):
        reroute_002_1.location = (-877.4599609375, -163.257080078125)
    if hasattr(reroute_002_1, 'mute'):
        reroute_002_1.mute = False
    if hasattr(reroute_002_1, 'name'):
        reroute_002_1.name = 'Reroute.002'
    if hasattr(reroute_002_1, 'use_custom_color'):
        reroute_002_1.use_custom_color = False
    if hasattr(reroute_002_1, 'width'):
        reroute_002_1.width = 16.0

    reroute_006_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_006_1, 'color'):
        reroute_006_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_006_1, 'hide'):
        reroute_006_1.hide = False
    if hasattr(reroute_006_1, 'location'):
        reroute_006_1.location = (-836.59033203125, -119.03997802734375)
    if hasattr(reroute_006_1, 'mute'):
        reroute_006_1.mute = False
    if hasattr(reroute_006_1, 'name'):
        reroute_006_1.name = 'Reroute.006'
    if hasattr(reroute_006_1, 'use_custom_color'):
        reroute_006_1.use_custom_color = False
    if hasattr(reroute_006_1, 'width'):
        reroute_006_1.width = 16.0

    reroute_007_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_007_1, 'color'):
        reroute_007_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_007_1, 'hide'):
        reroute_007_1.hide = False
    if hasattr(reroute_007_1, 'location'):
        reroute_007_1.location = (-836.59033203125, -296.6325988769531)
    if hasattr(reroute_007_1, 'mute'):
        reroute_007_1.mute = False
    if hasattr(reroute_007_1, 'name'):
        reroute_007_1.name = 'Reroute.007'
    if hasattr(reroute_007_1, 'use_custom_color'):
        reroute_007_1.use_custom_color = False
    if hasattr(reroute_007_1, 'width'):
        reroute_007_1.width = 16.0

    reroute_013_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_013_1, 'color'):
        reroute_013_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_013_1, 'hide'):
        reroute_013_1.hide = False
    if hasattr(reroute_013_1, 'location'):
        reroute_013_1.location = (588.7369384765625, 159.65426635742188)
    if hasattr(reroute_013_1, 'mute'):
        reroute_013_1.mute = False
    if hasattr(reroute_013_1, 'name'):
        reroute_013_1.name = 'Reroute.013'
    if hasattr(reroute_013_1, 'use_custom_color'):
        reroute_013_1.use_custom_color = False
    if hasattr(reroute_013_1, 'width'):
        reroute_013_1.width = 16.0

    group_output_1 = node_tree1.nodes.new('NodeGroupOutput')
    if hasattr(group_output_1, 'color'):
        group_output_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_output_1, 'hide'):
        group_output_1.hide = False
    if hasattr(group_output_1, 'is_active_output'):
        group_output_1.is_active_output = True
    if hasattr(group_output_1, 'location'):
        group_output_1.location = (629.4588623046875, 216.9207763671875)
    if hasattr(group_output_1, 'mute'):
        group_output_1.mute = False
    if hasattr(group_output_1, 'name'):
        group_output_1.name = 'Group Output'
    if hasattr(group_output_1, 'use_custom_color'):
        group_output_1.use_custom_color = False
    if hasattr(group_output_1, 'width'):
        group_output_1.width = 140.0
    if hasattr(group_output_1.inputs[0], 'default_value'):
        group_output_1.inputs[0].default_value = 0.0
    if hasattr(group_output_1.inputs[0], 'display_shape'):
        group_output_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[0], 'enabled'):
        group_output_1.inputs[0].enabled = True
    if hasattr(group_output_1.inputs[0], 'hide'):
        group_output_1.inputs[0].hide = False
    if hasattr(group_output_1.inputs[0], 'hide_value'):
        group_output_1.inputs[0].hide_value = False
    if hasattr(group_output_1.inputs[0], 'name'):
        group_output_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_output_1.inputs[0], 'show_expanded'):
        group_output_1.inputs[0].show_expanded = False
    if hasattr(group_output_1.inputs[1], 'default_value'):
        group_output_1.inputs[1].default_value = 0.0
    if hasattr(group_output_1.inputs[1], 'display_shape'):
        group_output_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[1], 'enabled'):
        group_output_1.inputs[1].enabled = True
    if hasattr(group_output_1.inputs[1], 'hide'):
        group_output_1.inputs[1].hide = False
    if hasattr(group_output_1.inputs[1], 'hide_value'):
        group_output_1.inputs[1].hide_value = False
    if hasattr(group_output_1.inputs[1], 'name'):
        group_output_1.inputs[1].name = 'Rough Out'
    if hasattr(group_output_1.inputs[1], 'show_expanded'):
        group_output_1.inputs[1].show_expanded = False
    if hasattr(group_output_1.inputs[2], 'default_value'):
        group_output_1.inputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[2], 'display_shape'):
        group_output_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[2], 'enabled'):
        group_output_1.inputs[2].enabled = True
    if hasattr(group_output_1.inputs[2], 'hide'):
        group_output_1.inputs[2].hide = False
    if hasattr(group_output_1.inputs[2], 'hide_value'):
        group_output_1.inputs[2].hide_value = False
    if hasattr(group_output_1.inputs[2], 'name'):
        group_output_1.inputs[2].name = 'Norm Out'
    if hasattr(group_output_1.inputs[2], 'show_expanded'):
        group_output_1.inputs[2].show_expanded = False

    mix_1 = node_tree1.nodes.new('ShaderNodeMixRGB')
    if hasattr(mix_1, 'blend_type'):
        mix_1.blend_type = 'MIX'
    if hasattr(mix_1, 'color'):
        mix_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_1, 'hide'):
        mix_1.hide = False
    if hasattr(mix_1, 'location'):
        mix_1.location = (401.4825134277344, -207.88519287109375)
    if hasattr(mix_1, 'mute'):
        mix_1.mute = False
    if hasattr(mix_1, 'name'):
        mix_1.name = 'Mix'
    if hasattr(mix_1, 'use_alpha'):
        mix_1.use_alpha = False
    if hasattr(mix_1, 'use_clamp'):
        mix_1.use_clamp = True
    if hasattr(mix_1, 'use_custom_color'):
        mix_1.use_custom_color = False
    if hasattr(mix_1, 'width'):
        mix_1.width = 140.0
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color1'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color1'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color2'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color2'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mix_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_input_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_1, 'color'):
        group_input_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_1, 'hide'):
        group_input_1.hide = False
    if hasattr(group_input_1, 'location'):
        group_input_1.location = (-1048.383056640625, -40.007965087890625)
    if hasattr(group_input_1, 'mute'):
        group_input_1.mute = False
    if hasattr(group_input_1, 'name'):
        group_input_1.name = 'Group Input'
    if hasattr(group_input_1, 'use_custom_color'):
        group_input_1.use_custom_color = False
    if hasattr(group_input_1, 'width'):
        group_input_1.width = 140.0
    if hasattr(group_input_1.outputs[0], 'default_value'):
        group_input_1.outputs[0].default_value = 0.0
    if hasattr(group_input_1.outputs[0], 'display_shape'):
        group_input_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[0], 'enabled'):
        group_input_1.outputs[0].enabled = True
    if hasattr(group_input_1.outputs[0], 'hide'):
        group_input_1.outputs[0].hide = False
    if hasattr(group_input_1.outputs[0], 'hide_value'):
        group_input_1.outputs[0].hide_value = False
    if hasattr(group_input_1.outputs[0], 'name'):
        group_input_1.outputs[0].name = 'X-Scale'
    if hasattr(group_input_1.outputs[0], 'show_expanded'):
        group_input_1.outputs[0].show_expanded = False
    if hasattr(group_input_1.outputs[1], 'default_value'):
        group_input_1.outputs[1].default_value = 0.0
    if hasattr(group_input_1.outputs[1], 'display_shape'):
        group_input_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[1], 'enabled'):
        group_input_1.outputs[1].enabled = True
    if hasattr(group_input_1.outputs[1], 'hide'):
        group_input_1.outputs[1].hide = False
    if hasattr(group_input_1.outputs[1], 'hide_value'):
        group_input_1.outputs[1].hide_value = False
    if hasattr(group_input_1.outputs[1], 'name'):
        group_input_1.outputs[1].name = 'Y-Scale'
    if hasattr(group_input_1.outputs[1], 'show_expanded'):
        group_input_1.outputs[1].show_expanded = False
    if hasattr(group_input_1.outputs[2], 'default_value'):
        group_input_1.outputs[2].default_value = 0.5
    if hasattr(group_input_1.outputs[2], 'display_shape'):
        group_input_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[2], 'enabled'):
        group_input_1.outputs[2].enabled = True
    if hasattr(group_input_1.outputs[2], 'hide'):
        group_input_1.outputs[2].hide = False
    if hasattr(group_input_1.outputs[2], 'hide_value'):
        group_input_1.outputs[2].hide_value = False
    if hasattr(group_input_1.outputs[2], 'name'):
        group_input_1.outputs[2].name = 'Roughness'
    if hasattr(group_input_1.outputs[2], 'show_expanded'):
        group_input_1.outputs[2].show_expanded = False
    if hasattr(group_input_1.outputs[3], 'default_value'):
        group_input_1.outputs[3].default_value = 0.2199999988079071
    if hasattr(group_input_1.outputs[3], 'display_shape'):
        group_input_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[3], 'enabled'):
        group_input_1.outputs[3].enabled = True
    if hasattr(group_input_1.outputs[3], 'hide'):
        group_input_1.outputs[3].hide = False
    if hasattr(group_input_1.outputs[3], 'hide_value'):
        group_input_1.outputs[3].hide_value = False
    if hasattr(group_input_1.outputs[3], 'name'):
        group_input_1.outputs[3].name = 'Roughness Black'
    if hasattr(group_input_1.outputs[3], 'show_expanded'):
        group_input_1.outputs[3].show_expanded = False
    if hasattr(group_input_1.outputs[4], 'default_value'):
        group_input_1.outputs[4].default_value = 0.4699999988079071
    if hasattr(group_input_1.outputs[4], 'display_shape'):
        group_input_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[4], 'enabled'):
        group_input_1.outputs[4].enabled = True
    if hasattr(group_input_1.outputs[4], 'hide'):
        group_input_1.outputs[4].hide = False
    if hasattr(group_input_1.outputs[4], 'hide_value'):
        group_input_1.outputs[4].hide_value = False
    if hasattr(group_input_1.outputs[4], 'name'):
        group_input_1.outputs[4].name = 'Roughness White'
    if hasattr(group_input_1.outputs[4], 'show_expanded'):
        group_input_1.outputs[4].show_expanded = False

    #Zone4_Gradient Mask
    zone4_gradient_mask_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone4_gradient_mask_1.location = (-328.15277099609375, 427.28961181640625)
    PNGtoBITMAP07 = Zone4_GradientMask.replace('.png', FileExtension)
    zone4_gradient_mask_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP07))
    zone4_gradient_mask_1.image.colorspace_settings.name = 'Non-Color'
    zone4_gradient_mask_1.label = 'Zone4_Gradient Mask'

    #Zone4_Normal
    zone4_normal_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone4_normal_1.location = (-328.4542236328125, 172.760498046875)
    PNGtoBITMAP08 = Zone4_Normal.replace('.png', FileExtension)
    zone4_normal_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP08))
    zone4_normal_1.image.colorspace_settings.name = 'Non-Color'
    zone4_normal_1.label = 'Zone4_Normal'

    # LINKS
    node_tree1.links.new(uv_map_1.outputs[0], mapping_1.inputs[0])
    node_tree1.links.new(combine_xyz_1.outputs[0], mapping_1.inputs[3])
    node_tree1.links.new(zone4_normal_1.outputs[0], group_output_1.inputs[2])
    node_tree1.links.new(group_input_1.outputs[3], reroute_001_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[4], reroute_002_1.inputs[0])
    node_tree1.links.new(reroute_001_1.outputs[0], reroute_004_1.inputs[0])
    node_tree1.links.new(reroute_002_1.outputs[0], reroute_005_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[2], reroute_006_1.inputs[0])
    node_tree1.links.new(reroute_006_1.outputs[0], reroute_007_1.inputs[0])
    node_tree1.links.new(mapping_1.outputs[0], reroute_010_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], zone4_gradient_mask_1.inputs[0])
    node_tree1.links.new(zone4_gradient_mask_1.outputs[0], reroute_014_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], reroute_011_1.inputs[0])
    node_tree1.links.new(reroute_011_1.outputs[0], zone4_normal_1.inputs[0])
    node_tree1.links.new(reroute_012_1.outputs[0], reroute_013_1.inputs[0])
    node_tree1.links.new(reroute_013_1.outputs[0], group_output_1.inputs[1])
    node_tree1.links.new(reroute_014_1.outputs[0], reroute_015_1.inputs[0])
    node_tree1.links.new(reroute_015_1.outputs[0], separate_rgb_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[2], reroute_016_1.inputs[0])
    node_tree1.links.new(reroute_016_1.outputs[0], reroute_017_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[0], reroute_018_1.inputs[0])
    node_tree1.links.new(reroute_018_1.outputs[0], reroute_019_1.inputs[0])
    node_tree1.links.new(reroute_019_1.outputs[0], group_output_1.inputs[0])
    node_tree1.links.new(reroute_017_1.outputs[0], math_009_1.inputs[0])
    node_tree1.links.new(reroute_007_1.outputs[0], math_009_1.inputs[1])
    node_tree1.links.new(reroute_004_1.outputs[0], mix_1.inputs[1])
    node_tree1.links.new(reroute_005_1.outputs[0], mix_1.inputs[2])
    node_tree1.links.new(mix_1.outputs[0], reroute_012_1.inputs[0])
    node_tree1.links.new(math_009_1.outputs[0], reroute_020_1.inputs[0])
    node_tree1.links.new(reroute_020_1.outputs[0], reroute_021_1.inputs[0])
    node_tree1.links.new(reroute_021_1.outputs[0], mix_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[1], combine_xyz_1.inputs[1])
    node_tree1.links.new(group_input_1.outputs[0], combine_xyz_1.inputs[0])

group_004_0 = node_tree0.nodes.new('ShaderNodeGroup')
if hasattr(group_004_0, 'node_tree'):
    group_004_0.node_tree = bpy.data.node_groups.get('Zone4 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if hasattr(group_004_0, 'color'):
    group_004_0.color = Zone4_SwatchNodegroupColor
if hasattr(group_004_0, 'hide'):
    group_004_0.hide = False
if hasattr(group_004_0, 'location'):
    group_004_0.location = (-421.73388671875, -930.53515625)
if hasattr(group_004_0, 'mute'):
    group_004_0.mute = False
if hasattr(group_004_0, 'name'):
    group_004_0.name = 'Group.004'
if hasattr(group_004_0, 'use_custom_color'):
    group_004_0.use_custom_color = True
if hasattr(group_004_0, 'width'):
    group_004_0.width = 250.72528076171875
if hasattr(group_004_0.inputs[0], 'default_value'):
    group_004_0.inputs[0].default_value = Zone4_XScale*ArmorRegion
if hasattr(group_004_0.inputs[0], 'display_shape'):
    group_004_0.inputs[0].display_shape = 'CIRCLE'
if hasattr(group_004_0.inputs[0], 'enabled'):
    group_004_0.inputs[0].enabled = True
if hasattr(group_004_0.inputs[0], 'hide'):
    group_004_0.inputs[0].hide = False
if hasattr(group_004_0.inputs[0], 'hide_value'):
    group_004_0.inputs[0].hide_value = False
if hasattr(group_004_0.inputs[0], 'name'):
    group_004_0.inputs[0].name = 'X-Scale'
if hasattr(group_004_0.inputs[0], 'show_expanded'):
    group_004_0.inputs[0].show_expanded = False
if hasattr(group_004_0.inputs[1], 'default_value'):
    group_004_0.inputs[1].default_value = Zone4_YScale*ArmorRegion
if hasattr(group_004_0.inputs[1], 'display_shape'):
    group_004_0.inputs[1].display_shape = 'CIRCLE'
if hasattr(group_004_0.inputs[1], 'enabled'):
    group_004_0.inputs[1].enabled = True
if hasattr(group_004_0.inputs[1], 'hide'):
    group_004_0.inputs[1].hide = False
if hasattr(group_004_0.inputs[1], 'hide_value'):
    group_004_0.inputs[1].hide_value = False
if hasattr(group_004_0.inputs[1], 'name'):
    group_004_0.inputs[1].name = 'Y-Scale'
if hasattr(group_004_0.inputs[1], 'show_expanded'):
    group_004_0.inputs[1].show_expanded = False
if hasattr(group_004_0.inputs[2], 'default_value'):
    group_004_0.inputs[2].default_value = Zone4_Roughness
if hasattr(group_004_0.inputs[2], 'display_shape'):
    group_004_0.inputs[2].display_shape = 'CIRCLE'
if hasattr(group_004_0.inputs[2], 'enabled'):
    group_004_0.inputs[2].enabled = True
if hasattr(group_004_0.inputs[2], 'hide'):
    group_004_0.inputs[2].hide = False
if hasattr(group_004_0.inputs[2], 'hide_value'):
    group_004_0.inputs[2].hide_value = False
if hasattr(group_004_0.inputs[2], 'name'):
    group_004_0.inputs[2].name = 'Roughness'
if hasattr(group_004_0.inputs[2], 'show_expanded'):
    group_004_0.inputs[2].show_expanded = False
if hasattr(group_004_0.inputs[3], 'default_value'):
    group_004_0.inputs[3].default_value = Zone4_RoughnessBlack
if hasattr(group_004_0.inputs[3], 'display_shape'):
    group_004_0.inputs[3].display_shape = 'CIRCLE'
if hasattr(group_004_0.inputs[3], 'enabled'):
    group_004_0.inputs[3].enabled = True
if hasattr(group_004_0.inputs[3], 'hide'):
    group_004_0.inputs[3].hide = False
if hasattr(group_004_0.inputs[3], 'hide_value'):
    group_004_0.inputs[3].hide_value = False
if hasattr(group_004_0.inputs[3], 'name'):
    group_004_0.inputs[3].name = 'Roughness Black'
if hasattr(group_004_0.inputs[3], 'show_expanded'):
    group_004_0.inputs[3].show_expanded = False
if hasattr(group_004_0.inputs[4], 'default_value'):
    group_004_0.inputs[4].default_value = Zone4_RoughnessWhite
if hasattr(group_004_0.inputs[4], 'display_shape'):
    group_004_0.inputs[4].display_shape = 'CIRCLE'
if hasattr(group_004_0.inputs[4], 'enabled'):
    group_004_0.inputs[4].enabled = True
if hasattr(group_004_0.inputs[4], 'hide'):
    group_004_0.inputs[4].hide = False
if hasattr(group_004_0.inputs[4], 'hide_value'):
    group_004_0.inputs[4].hide_value = False
if hasattr(group_004_0.inputs[4], 'name'):
    group_004_0.inputs[4].name = 'Roughness White'
if hasattr(group_004_0.inputs[4], 'show_expanded'):
    group_004_0.inputs[4].show_expanded = False
if hasattr(group_004_0.outputs[0], 'default_value'):
    group_004_0.outputs[0].default_value = 0.0
if hasattr(group_004_0.outputs[0], 'display_shape'):
    group_004_0.outputs[0].display_shape = 'CIRCLE'
if hasattr(group_004_0.outputs[0], 'enabled'):
    group_004_0.outputs[0].enabled = True
if hasattr(group_004_0.outputs[0], 'hide'):
    group_004_0.outputs[0].hide = False
if hasattr(group_004_0.outputs[0], 'hide_value'):
    group_004_0.outputs[0].hide_value = False
if hasattr(group_004_0.outputs[0], 'name'):
    group_004_0.outputs[0].name = 'Gradient Out'
if hasattr(group_004_0.outputs[0], 'show_expanded'):
    group_004_0.outputs[0].show_expanded = False
if hasattr(group_004_0.outputs[1], 'default_value'):
    group_004_0.outputs[1].default_value = 0.0
if hasattr(group_004_0.outputs[1], 'display_shape'):
    group_004_0.outputs[1].display_shape = 'CIRCLE'
if hasattr(group_004_0.outputs[1], 'enabled'):
    group_004_0.outputs[1].enabled = True
if hasattr(group_004_0.outputs[1], 'hide'):
    group_004_0.outputs[1].hide = False
if hasattr(group_004_0.outputs[1], 'hide_value'):
    group_004_0.outputs[1].hide_value = False
if hasattr(group_004_0.outputs[1], 'name'):
    group_004_0.outputs[1].name = 'Rough Out'
if hasattr(group_004_0.outputs[1], 'show_expanded'):
    group_004_0.outputs[1].show_expanded = False
if hasattr(group_004_0.outputs[2], 'default_value'):
    group_004_0.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_004_0.outputs[2], 'display_shape'):
    group_004_0.outputs[2].display_shape = 'CIRCLE'
if hasattr(group_004_0.outputs[2], 'enabled'):
    group_004_0.outputs[2].enabled = True
if hasattr(group_004_0.outputs[2], 'hide'):
    group_004_0.outputs[2].hide = False
if hasattr(group_004_0.outputs[2], 'hide_value'):
    group_004_0.outputs[2].hide_value = False
if hasattr(group_004_0.outputs[2], 'name'):
    group_004_0.outputs[2].name = 'Norm Out'
if hasattr(group_004_0.outputs[2], 'show_expanded'):
    group_004_0.outputs[2].show_expanded = False

node_tree1 = bpy.data.node_groups.get('Zone5 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if not node_tree1:
    node_tree1 = bpy.data.node_groups.new('Zone5 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber), 'ShaderNodeTree')
    for node in node_tree1.nodes:
        node_tree1.nodes.remove(node)
    # INPUTS
    input = node_tree1.inputs.new('NodeSocketFloat', 'X-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'X-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Y-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Y-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.5
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness Black')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.2199999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness Black'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness White')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.4699999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness White'
    # OUTPUTS
    output = node_tree1.outputs.new('NodeSocketFloat', 'Gradient Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Gradient Out'
    output = node_tree1.outputs.new('NodeSocketFloat', 'Rough Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Rough Out'
    output = node_tree1.outputs.new('NodeSocketColor', 'Norm Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Norm Out'
    # NODES
    reroute_014_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_014_1, 'color'):
        reroute_014_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_014_1, 'hide'):
        reroute_014_1.hide = False
    if hasattr(reroute_014_1, 'location'):
        reroute_014_1.location = (-49.86090087890625, 392.07806396484375)
    if hasattr(reroute_014_1, 'mute'):
        reroute_014_1.mute = False
    if hasattr(reroute_014_1, 'name'):
        reroute_014_1.name = 'Reroute.014'
    if hasattr(reroute_014_1, 'use_custom_color'):
        reroute_014_1.use_custom_color = False
    if hasattr(reroute_014_1, 'width'):
        reroute_014_1.width = 16.0

    reroute_016_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_016_1, 'color'):
        reroute_016_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_016_1, 'hide'):
        reroute_016_1.hide = False
    if hasattr(reroute_016_1, 'location'):
        reroute_016_1.location = (144.52618408203125, 215.85797119140625)
    if hasattr(reroute_016_1, 'mute'):
        reroute_016_1.mute = False
    if hasattr(reroute_016_1, 'name'):
        reroute_016_1.name = 'Reroute.016'
    if hasattr(reroute_016_1, 'use_custom_color'):
        reroute_016_1.use_custom_color = False
    if hasattr(reroute_016_1, 'width'):
        reroute_016_1.width = 16.0

    reroute_018_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_018_1, 'color'):
        reroute_018_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_018_1, 'hide'):
        reroute_018_1.hide = False
    if hasattr(reroute_018_1, 'location'):
        reroute_018_1.location = (178.88592529296875, 259.3858642578125)
    if hasattr(reroute_018_1, 'mute'):
        reroute_018_1.mute = False
    if hasattr(reroute_018_1, 'name'):
        reroute_018_1.name = 'Reroute.018'
    if hasattr(reroute_018_1, 'use_custom_color'):
        reroute_018_1.use_custom_color = False
    if hasattr(reroute_018_1, 'width'):
        reroute_018_1.width = 16.0

    reroute_019_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_019_1, 'color'):
        reroute_019_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_019_1, 'hide'):
        reroute_019_1.hide = False
    if hasattr(reroute_019_1, 'location'):
        reroute_019_1.location = (178.88592529296875, 182.964599609375)
    if hasattr(reroute_019_1, 'mute'):
        reroute_019_1.mute = False
    if hasattr(reroute_019_1, 'name'):
        reroute_019_1.name = 'Reroute.019'
    if hasattr(reroute_019_1, 'use_custom_color'):
        reroute_019_1.use_custom_color = False
    if hasattr(reroute_019_1, 'width'):
        reroute_019_1.width = 16.0

    reroute_017_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_017_1, 'color'):
        reroute_017_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_017_1, 'hide'):
        reroute_017_1.hide = False
    if hasattr(reroute_017_1, 'location'):
        reroute_017_1.location = (144.52618408203125, -275.09521484375)
    if hasattr(reroute_017_1, 'mute'):
        reroute_017_1.mute = False
    if hasattr(reroute_017_1, 'name'):
        reroute_017_1.name = 'Reroute.017'
    if hasattr(reroute_017_1, 'use_custom_color'):
        reroute_017_1.use_custom_color = False
    if hasattr(reroute_017_1, 'width'):
        reroute_017_1.width = 16.0

    math_009_1 = node_tree1.nodes.new('ShaderNodeMath')
    if hasattr(math_009_1, 'color'):
        math_009_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(math_009_1, 'hide'):
        math_009_1.hide = False
    if hasattr(math_009_1, 'location'):
        math_009_1.location = (180.58067321777344, -160.00445556640625)
    if hasattr(math_009_1, 'mute'):
        math_009_1.mute = False
    if hasattr(math_009_1, 'name'):
        math_009_1.name = 'Math.009'
    if hasattr(math_009_1, 'operation'):
        math_009_1.operation = 'MULTIPLY'
    if hasattr(math_009_1, 'use_clamp'):
        math_009_1.use_clamp = False
    if hasattr(math_009_1, 'use_custom_color'):
        math_009_1.use_custom_color = False
    if hasattr(math_009_1, 'width'):
        math_009_1.width = 140.0
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_001'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_002'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in math_009_1.outputs if output.identifier=='Value'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Value'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_021_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_021_1, 'color'):
        reroute_021_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_021_1, 'hide'):
        reroute_021_1.hide = False
    if hasattr(reroute_021_1, 'location'):
        reroute_021_1.location = (363.6356506347656, -320.47210693359375)
    if hasattr(reroute_021_1, 'mute'):
        reroute_021_1.mute = False
    if hasattr(reroute_021_1, 'name'):
        reroute_021_1.name = 'Reroute.021'
    if hasattr(reroute_021_1, 'use_custom_color'):
        reroute_021_1.use_custom_color = False
    if hasattr(reroute_021_1, 'width'):
        reroute_021_1.width = 16.0

    reroute_020_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_020_1, 'color'):
        reroute_020_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_020_1, 'hide'):
        reroute_020_1.hide = False
    if hasattr(reroute_020_1, 'location'):
        reroute_020_1.location = (363.6356506347656, -195.1111297607422)
    if hasattr(reroute_020_1, 'mute'):
        reroute_020_1.mute = False
    if hasattr(reroute_020_1, 'name'):
        reroute_020_1.name = 'Reroute.020'
    if hasattr(reroute_020_1, 'use_custom_color'):
        reroute_020_1.use_custom_color = False
    if hasattr(reroute_020_1, 'width'):
        reroute_020_1.width = 16.0

    reroute_012_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_012_1, 'color'):
        reroute_012_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_012_1, 'hide'):
        reroute_012_1.hide = False
    if hasattr(reroute_012_1, 'location'):
        reroute_012_1.location = (588.7369384765625, -242.4521942138672)
    if hasattr(reroute_012_1, 'mute'):
        reroute_012_1.mute = False
    if hasattr(reroute_012_1, 'name'):
        reroute_012_1.name = 'Reroute.012'
    if hasattr(reroute_012_1, 'use_custom_color'):
        reroute_012_1.use_custom_color = False
    if hasattr(reroute_012_1, 'width'):
        reroute_012_1.width = 16.0

    uv_map_1 = node_tree1.nodes.new('ShaderNodeUVMap')
    if hasattr(uv_map_1, 'color'):
        uv_map_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(uv_map_1, 'from_instancer'):
        uv_map_1.from_instancer = False
    if hasattr(uv_map_1, 'hide'):
        uv_map_1.hide = False
    if hasattr(uv_map_1, 'location'):
        uv_map_1.location = (-722.135009765625, 171.312255859375)
    if hasattr(uv_map_1, 'mute'):
        uv_map_1.mute = False
    if hasattr(uv_map_1, 'name'):
        uv_map_1.name = 'UV Map'
    if hasattr(uv_map_1, 'use_custom_color'):
        uv_map_1.use_custom_color = False
    if hasattr(uv_map_1, 'uv_map'):
        uv_map_1.uv_map = 'UV1'
    if hasattr(uv_map_1, 'width'):
        uv_map_1.width = 150.0
    output = next((output for output in uv_map_1.outputs if output.identifier=='UV'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'UV'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    mapping_1 = node_tree1.nodes.new('ShaderNodeMapping')
    if hasattr(mapping_1, 'color'):
        mapping_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mapping_1, 'hide'):
        mapping_1.hide = False
    if hasattr(mapping_1, 'location'):
        mapping_1.location = (-534.63330078125, 225.75634765625)
    if hasattr(mapping_1, 'mute'):
        mapping_1.mute = False
    if hasattr(mapping_1, 'name'):
        mapping_1.name = 'Mapping'
    if hasattr(mapping_1, 'use_custom_color'):
        mapping_1.use_custom_color = False
    if hasattr(mapping_1, 'vector_type'):
        mapping_1.vector_type = 'POINT'
    if hasattr(mapping_1, 'width'):
        mapping_1.width = 140.0
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Location'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Location'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Rotation'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Rotation'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Scale'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (4.0, 4.0, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Scale'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mapping_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_010_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_010_1, 'color'):
        reroute_010_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_010_1, 'hide'):
        reroute_010_1.hide = False
    if hasattr(reroute_010_1, 'location'):
        reroute_010_1.location = (-360.4864501953125, 190.916259765625)
    if hasattr(reroute_010_1, 'mute'):
        reroute_010_1.mute = False
    if hasattr(reroute_010_1, 'name'):
        reroute_010_1.name = 'Reroute.010'
    if hasattr(reroute_010_1, 'use_custom_color'):
        reroute_010_1.use_custom_color = False
    if hasattr(reroute_010_1, 'width'):
        reroute_010_1.width = 16.0

    reroute_011_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_011_1, 'color'):
        reroute_011_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_011_1, 'hide'):
        reroute_011_1.hide = False
    if hasattr(reroute_011_1, 'location'):
        reroute_011_1.location = (-360.4864501953125, -63.42291259765625)
    if hasattr(reroute_011_1, 'mute'):
        reroute_011_1.mute = False
    if hasattr(reroute_011_1, 'name'):
        reroute_011_1.name = 'Reroute.011'
    if hasattr(reroute_011_1, 'use_custom_color'):
        reroute_011_1.use_custom_color = False
    if hasattr(reroute_011_1, 'width'):
        reroute_011_1.width = 16.0

    reroute_015_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_015_1, 'color'):
        reroute_015_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_015_1, 'hide'):
        reroute_015_1.hide = False
    if hasattr(reroute_015_1, 'location'):
        reroute_015_1.location = (-49.86090087890625, 190.421142578125)
    if hasattr(reroute_015_1, 'mute'):
        reroute_015_1.mute = False
    if hasattr(reroute_015_1, 'name'):
        reroute_015_1.name = 'Reroute.015'
    if hasattr(reroute_015_1, 'use_custom_color'):
        reroute_015_1.use_custom_color = False
    if hasattr(reroute_015_1, 'width'):
        reroute_015_1.width = 16.0

    separate_rgb_1 = node_tree1.nodes.new('ShaderNodeSeparateRGB')
    if hasattr(separate_rgb_1, 'color'):
        separate_rgb_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(separate_rgb_1, 'hide'):
        separate_rgb_1.hide = False
    if hasattr(separate_rgb_1, 'location'):
        separate_rgb_1.location = (-23.7783203125, 294.257080078125)
    if hasattr(separate_rgb_1, 'mute'):
        separate_rgb_1.mute = False
    if hasattr(separate_rgb_1, 'name'):
        separate_rgb_1.name = 'Separate RGB'
    if hasattr(separate_rgb_1, 'use_custom_color'):
        separate_rgb_1.use_custom_color = False
    if hasattr(separate_rgb_1, 'width'):
        separate_rgb_1.width = 140.0
    input_ = next((input_ for input_ in separate_rgb_1.inputs if input_.identifier=='Image'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Image'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='R'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'R'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='G'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'G'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='B'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'B'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    combine_xyz_1 = node_tree1.nodes.new('ShaderNodeCombineXYZ')
    if hasattr(combine_xyz_1, 'color'):
        combine_xyz_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(combine_xyz_1, 'hide'):
        combine_xyz_1.hide = False
    if hasattr(combine_xyz_1, 'location'):
        combine_xyz_1.location = (-799.850341796875, -14.884613037109375)
    if hasattr(combine_xyz_1, 'mute'):
        combine_xyz_1.mute = False
    if hasattr(combine_xyz_1, 'name'):
        combine_xyz_1.name = 'Combine XYZ'
    if hasattr(combine_xyz_1, 'use_custom_color'):
        combine_xyz_1.use_custom_color = False
    if hasattr(combine_xyz_1, 'width'):
        combine_xyz_1.width = 140.0
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='X'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'X'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Y'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Y'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Z'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Z'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in combine_xyz_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_004_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_004_1, 'color'):
        reroute_004_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_004_1, 'hide'):
        reroute_004_1.hide = False
    if hasattr(reroute_004_1, 'location'):
        reroute_004_1.location = (-858.0992431640625, -341.5549621582031)
    if hasattr(reroute_004_1, 'mute'):
        reroute_004_1.mute = False
    if hasattr(reroute_004_1, 'name'):
        reroute_004_1.name = 'Reroute.004'
    if hasattr(reroute_004_1, 'use_custom_color'):
        reroute_004_1.use_custom_color = False
    if hasattr(reroute_004_1, 'width'):
        reroute_004_1.width = 16.0

    reroute_005_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_005_1, 'color'):
        reroute_005_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_005_1, 'hide'):
        reroute_005_1.hide = False
    if hasattr(reroute_005_1, 'location'):
        reroute_005_1.location = (-877.3994140625, -364.527099609375)
    if hasattr(reroute_005_1, 'mute'):
        reroute_005_1.mute = False
    if hasattr(reroute_005_1, 'name'):
        reroute_005_1.name = 'Reroute.005'
    if hasattr(reroute_005_1, 'use_custom_color'):
        reroute_005_1.use_custom_color = False
    if hasattr(reroute_005_1, 'width'):
        reroute_005_1.width = 16.0

    reroute_001_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_001_1, 'color'):
        reroute_001_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_001_1, 'hide'):
        reroute_001_1.hide = False
    if hasattr(reroute_001_1, 'location'):
        reroute_001_1.location = (-858.38818359375, -141.572021484375)
    if hasattr(reroute_001_1, 'mute'):
        reroute_001_1.mute = False
    if hasattr(reroute_001_1, 'name'):
        reroute_001_1.name = 'Reroute.001'
    if hasattr(reroute_001_1, 'use_custom_color'):
        reroute_001_1.use_custom_color = False
    if hasattr(reroute_001_1, 'width'):
        reroute_001_1.width = 16.0

    reroute_002_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_002_1, 'color'):
        reroute_002_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_002_1, 'hide'):
        reroute_002_1.hide = False
    if hasattr(reroute_002_1, 'location'):
        reroute_002_1.location = (-877.4599609375, -163.257080078125)
    if hasattr(reroute_002_1, 'mute'):
        reroute_002_1.mute = False
    if hasattr(reroute_002_1, 'name'):
        reroute_002_1.name = 'Reroute.002'
    if hasattr(reroute_002_1, 'use_custom_color'):
        reroute_002_1.use_custom_color = False
    if hasattr(reroute_002_1, 'width'):
        reroute_002_1.width = 16.0

    reroute_006_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_006_1, 'color'):
        reroute_006_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_006_1, 'hide'):
        reroute_006_1.hide = False
    if hasattr(reroute_006_1, 'location'):
        reroute_006_1.location = (-836.59033203125, -119.03997802734375)
    if hasattr(reroute_006_1, 'mute'):
        reroute_006_1.mute = False
    if hasattr(reroute_006_1, 'name'):
        reroute_006_1.name = 'Reroute.006'
    if hasattr(reroute_006_1, 'use_custom_color'):
        reroute_006_1.use_custom_color = False
    if hasattr(reroute_006_1, 'width'):
        reroute_006_1.width = 16.0

    reroute_007_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_007_1, 'color'):
        reroute_007_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_007_1, 'hide'):
        reroute_007_1.hide = False
    if hasattr(reroute_007_1, 'location'):
        reroute_007_1.location = (-836.59033203125, -296.6325988769531)
    if hasattr(reroute_007_1, 'mute'):
        reroute_007_1.mute = False
    if hasattr(reroute_007_1, 'name'):
        reroute_007_1.name = 'Reroute.007'
    if hasattr(reroute_007_1, 'use_custom_color'):
        reroute_007_1.use_custom_color = False
    if hasattr(reroute_007_1, 'width'):
        reroute_007_1.width = 16.0

    reroute_013_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_013_1, 'color'):
        reroute_013_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_013_1, 'hide'):
        reroute_013_1.hide = False
    if hasattr(reroute_013_1, 'location'):
        reroute_013_1.location = (588.7369384765625, 159.65426635742188)
    if hasattr(reroute_013_1, 'mute'):
        reroute_013_1.mute = False
    if hasattr(reroute_013_1, 'name'):
        reroute_013_1.name = 'Reroute.013'
    if hasattr(reroute_013_1, 'use_custom_color'):
        reroute_013_1.use_custom_color = False
    if hasattr(reroute_013_1, 'width'):
        reroute_013_1.width = 16.0

    group_output_1 = node_tree1.nodes.new('NodeGroupOutput')
    if hasattr(group_output_1, 'color'):
        group_output_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_output_1, 'hide'):
        group_output_1.hide = False
    if hasattr(group_output_1, 'is_active_output'):
        group_output_1.is_active_output = True
    if hasattr(group_output_1, 'location'):
        group_output_1.location = (629.4588623046875, 216.9207763671875)
    if hasattr(group_output_1, 'mute'):
        group_output_1.mute = False
    if hasattr(group_output_1, 'name'):
        group_output_1.name = 'Group Output'
    if hasattr(group_output_1, 'use_custom_color'):
        group_output_1.use_custom_color = False
    if hasattr(group_output_1, 'width'):
        group_output_1.width = 140.0
    if hasattr(group_output_1.inputs[0], 'default_value'):
        group_output_1.inputs[0].default_value = 0.0
    if hasattr(group_output_1.inputs[0], 'display_shape'):
        group_output_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[0], 'enabled'):
        group_output_1.inputs[0].enabled = True
    if hasattr(group_output_1.inputs[0], 'hide'):
        group_output_1.inputs[0].hide = False
    if hasattr(group_output_1.inputs[0], 'hide_value'):
        group_output_1.inputs[0].hide_value = False
    if hasattr(group_output_1.inputs[0], 'name'):
        group_output_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_output_1.inputs[0], 'show_expanded'):
        group_output_1.inputs[0].show_expanded = False
    if hasattr(group_output_1.inputs[1], 'default_value'):
        group_output_1.inputs[1].default_value = 0.0
    if hasattr(group_output_1.inputs[1], 'display_shape'):
        group_output_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[1], 'enabled'):
        group_output_1.inputs[1].enabled = True
    if hasattr(group_output_1.inputs[1], 'hide'):
        group_output_1.inputs[1].hide = False
    if hasattr(group_output_1.inputs[1], 'hide_value'):
        group_output_1.inputs[1].hide_value = False
    if hasattr(group_output_1.inputs[1], 'name'):
        group_output_1.inputs[1].name = 'Rough Out'
    if hasattr(group_output_1.inputs[1], 'show_expanded'):
        group_output_1.inputs[1].show_expanded = False
    if hasattr(group_output_1.inputs[2], 'default_value'):
        group_output_1.inputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[2], 'display_shape'):
        group_output_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[2], 'enabled'):
        group_output_1.inputs[2].enabled = True
    if hasattr(group_output_1.inputs[2], 'hide'):
        group_output_1.inputs[2].hide = False
    if hasattr(group_output_1.inputs[2], 'hide_value'):
        group_output_1.inputs[2].hide_value = False
    if hasattr(group_output_1.inputs[2], 'name'):
        group_output_1.inputs[2].name = 'Norm Out'
    if hasattr(group_output_1.inputs[2], 'show_expanded'):
        group_output_1.inputs[2].show_expanded = False

    mix_1 = node_tree1.nodes.new('ShaderNodeMixRGB')
    if hasattr(mix_1, 'blend_type'):
        mix_1.blend_type = 'MIX'
    if hasattr(mix_1, 'color'):
        mix_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_1, 'hide'):
        mix_1.hide = False
    if hasattr(mix_1, 'location'):
        mix_1.location = (401.4825134277344, -207.88519287109375)
    if hasattr(mix_1, 'mute'):
        mix_1.mute = False
    if hasattr(mix_1, 'name'):
        mix_1.name = 'Mix'
    if hasattr(mix_1, 'use_alpha'):
        mix_1.use_alpha = False
    if hasattr(mix_1, 'use_clamp'):
        mix_1.use_clamp = True
    if hasattr(mix_1, 'use_custom_color'):
        mix_1.use_custom_color = False
    if hasattr(mix_1, 'width'):
        mix_1.width = 140.0
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color1'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color1'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color2'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color2'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mix_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_input_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_1, 'color'):
        group_input_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_1, 'hide'):
        group_input_1.hide = False
    if hasattr(group_input_1, 'location'):
        group_input_1.location = (-1048.383056640625, -40.007965087890625)
    if hasattr(group_input_1, 'mute'):
        group_input_1.mute = False
    if hasattr(group_input_1, 'name'):
        group_input_1.name = 'Group Input'
    if hasattr(group_input_1, 'use_custom_color'):
        group_input_1.use_custom_color = False
    if hasattr(group_input_1, 'width'):
        group_input_1.width = 140.0
    if hasattr(group_input_1.outputs[0], 'default_value'):
        group_input_1.outputs[0].default_value = 0.0
    if hasattr(group_input_1.outputs[0], 'display_shape'):
        group_input_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[0], 'enabled'):
        group_input_1.outputs[0].enabled = True
    if hasattr(group_input_1.outputs[0], 'hide'):
        group_input_1.outputs[0].hide = False
    if hasattr(group_input_1.outputs[0], 'hide_value'):
        group_input_1.outputs[0].hide_value = False
    if hasattr(group_input_1.outputs[0], 'name'):
        group_input_1.outputs[0].name = 'X-Scale'
    if hasattr(group_input_1.outputs[0], 'show_expanded'):
        group_input_1.outputs[0].show_expanded = False
    if hasattr(group_input_1.outputs[1], 'default_value'):
        group_input_1.outputs[1].default_value = 0.0
    if hasattr(group_input_1.outputs[1], 'display_shape'):
        group_input_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[1], 'enabled'):
        group_input_1.outputs[1].enabled = True
    if hasattr(group_input_1.outputs[1], 'hide'):
        group_input_1.outputs[1].hide = False
    if hasattr(group_input_1.outputs[1], 'hide_value'):
        group_input_1.outputs[1].hide_value = False
    if hasattr(group_input_1.outputs[1], 'name'):
        group_input_1.outputs[1].name = 'Y-Scale'
    if hasattr(group_input_1.outputs[1], 'show_expanded'):
        group_input_1.outputs[1].show_expanded = False
    if hasattr(group_input_1.outputs[2], 'default_value'):
        group_input_1.outputs[2].default_value = 0.5
    if hasattr(group_input_1.outputs[2], 'display_shape'):
        group_input_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[2], 'enabled'):
        group_input_1.outputs[2].enabled = True
    if hasattr(group_input_1.outputs[2], 'hide'):
        group_input_1.outputs[2].hide = False
    if hasattr(group_input_1.outputs[2], 'hide_value'):
        group_input_1.outputs[2].hide_value = False
    if hasattr(group_input_1.outputs[2], 'name'):
        group_input_1.outputs[2].name = 'Roughness'
    if hasattr(group_input_1.outputs[2], 'show_expanded'):
        group_input_1.outputs[2].show_expanded = False
    if hasattr(group_input_1.outputs[3], 'default_value'):
        group_input_1.outputs[3].default_value = 0.2199999988079071
    if hasattr(group_input_1.outputs[3], 'display_shape'):
        group_input_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[3], 'enabled'):
        group_input_1.outputs[3].enabled = True
    if hasattr(group_input_1.outputs[3], 'hide'):
        group_input_1.outputs[3].hide = False
    if hasattr(group_input_1.outputs[3], 'hide_value'):
        group_input_1.outputs[3].hide_value = False
    if hasattr(group_input_1.outputs[3], 'name'):
        group_input_1.outputs[3].name = 'Roughness Black'
    if hasattr(group_input_1.outputs[3], 'show_expanded'):
        group_input_1.outputs[3].show_expanded = False
    if hasattr(group_input_1.outputs[4], 'default_value'):
        group_input_1.outputs[4].default_value = 0.4699999988079071
    if hasattr(group_input_1.outputs[4], 'display_shape'):
        group_input_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[4], 'enabled'):
        group_input_1.outputs[4].enabled = True
    if hasattr(group_input_1.outputs[4], 'hide'):
        group_input_1.outputs[4].hide = False
    if hasattr(group_input_1.outputs[4], 'hide_value'):
        group_input_1.outputs[4].hide_value = False
    if hasattr(group_input_1.outputs[4], 'name'):
        group_input_1.outputs[4].name = 'Roughness White'
    if hasattr(group_input_1.outputs[4], 'show_expanded'):
        group_input_1.outputs[4].show_expanded = False

    #Zone5_Gradient Mask
    zone5_gradient_mask_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone5_gradient_mask_1.location = (-328.15277099609375, 427.28961181640625)
    PNGtoBITMAP09 = Zone5_GradientMask.replace('.png', FileExtension)
    zone5_gradient_mask_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP09))
    zone5_gradient_mask_1.image.colorspace_settings.name = 'Non-Color'
    zone5_gradient_mask_1.label = 'Zone5_Gradient Mask'

    #Zone5_Normal
    zone5_normal_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone5_normal_1.location = (-328.4542236328125, 172.760498046875)
    PNGtoBITMAP10 = Zone5_Normal.replace('.png', FileExtension)
    zone5_normal_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP10))
    zone5_normal_1.image.colorspace_settings.name = 'Non-Color'
    zone5_normal_1.label = 'Zone5_Normal'

    # LINKS
    node_tree1.links.new(uv_map_1.outputs[0], mapping_1.inputs[0])
    node_tree1.links.new(combine_xyz_1.outputs[0], mapping_1.inputs[3])
    node_tree1.links.new(zone5_normal_1.outputs[0], group_output_1.inputs[2])
    node_tree1.links.new(group_input_1.outputs[3], reroute_001_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[4], reroute_002_1.inputs[0])
    node_tree1.links.new(reroute_001_1.outputs[0], reroute_004_1.inputs[0])
    node_tree1.links.new(reroute_002_1.outputs[0], reroute_005_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[2], reroute_006_1.inputs[0])
    node_tree1.links.new(reroute_006_1.outputs[0], reroute_007_1.inputs[0])
    node_tree1.links.new(mapping_1.outputs[0], reroute_010_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], zone5_gradient_mask_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], reroute_011_1.inputs[0])
    node_tree1.links.new(reroute_011_1.outputs[0], zone5_normal_1.inputs[0])
    node_tree1.links.new(reroute_012_1.outputs[0], reroute_013_1.inputs[0])
    node_tree1.links.new(reroute_013_1.outputs[0], group_output_1.inputs[1])
    node_tree1.links.new(zone5_gradient_mask_1.outputs[0], reroute_014_1.inputs[0])
    node_tree1.links.new(reroute_014_1.outputs[0], reroute_015_1.inputs[0])
    node_tree1.links.new(reroute_015_1.outputs[0], separate_rgb_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[2], reroute_016_1.inputs[0])
    node_tree1.links.new(reroute_016_1.outputs[0], reroute_017_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[0], reroute_018_1.inputs[0])
    node_tree1.links.new(reroute_018_1.outputs[0], reroute_019_1.inputs[0])
    node_tree1.links.new(reroute_019_1.outputs[0], group_output_1.inputs[0])
    node_tree1.links.new(reroute_017_1.outputs[0], math_009_1.inputs[0])
    node_tree1.links.new(reroute_007_1.outputs[0], math_009_1.inputs[1])
    node_tree1.links.new(reroute_004_1.outputs[0], mix_1.inputs[1])
    node_tree1.links.new(reroute_005_1.outputs[0], mix_1.inputs[2])
    node_tree1.links.new(mix_1.outputs[0], reroute_012_1.inputs[0])
    node_tree1.links.new(math_009_1.outputs[0], reroute_020_1.inputs[0])
    node_tree1.links.new(reroute_020_1.outputs[0], reroute_021_1.inputs[0])
    node_tree1.links.new(reroute_021_1.outputs[0], mix_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[1], combine_xyz_1.inputs[1])
    node_tree1.links.new(group_input_1.outputs[0], combine_xyz_1.inputs[0])

group_005_0 = node_tree0.nodes.new('ShaderNodeGroup')
if hasattr(group_005_0, 'node_tree'):
    group_005_0.node_tree = bpy.data.node_groups.get('Zone5 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if hasattr(group_005_0, 'color'):
    group_005_0.color = Zone5_SwatchNodegroupColor
if hasattr(group_005_0, 'hide'):
    group_005_0.hide = False
if hasattr(group_005_0, 'location'):
    group_005_0.location = (-421.73388671875, -1193.5242919921875)
if hasattr(group_005_0, 'mute'):
    group_005_0.mute = False
if hasattr(group_005_0, 'name'):
    group_005_0.name = 'Group.005'
if hasattr(group_005_0, 'use_custom_color'):
    group_005_0.use_custom_color = True
if hasattr(group_005_0, 'width'):
    group_005_0.width = 250.72528076171875
if hasattr(group_005_0.inputs[0], 'default_value'):
    group_005_0.inputs[0].default_value = Zone5_XScale*ArmorRegion
if hasattr(group_005_0.inputs[0], 'display_shape'):
    group_005_0.inputs[0].display_shape = 'CIRCLE'
if hasattr(group_005_0.inputs[0], 'enabled'):
    group_005_0.inputs[0].enabled = True
if hasattr(group_005_0.inputs[0], 'hide'):
    group_005_0.inputs[0].hide = False
if hasattr(group_005_0.inputs[0], 'hide_value'):
    group_005_0.inputs[0].hide_value = False
if hasattr(group_005_0.inputs[0], 'name'):
    group_005_0.inputs[0].name = 'X-Scale'
if hasattr(group_005_0.inputs[0], 'show_expanded'):
    group_005_0.inputs[0].show_expanded = False
if hasattr(group_005_0.inputs[1], 'default_value'):
    group_005_0.inputs[1].default_value = Zone5_YScale*ArmorRegion
if hasattr(group_005_0.inputs[1], 'display_shape'):
    group_005_0.inputs[1].display_shape = 'CIRCLE'
if hasattr(group_005_0.inputs[1], 'enabled'):
    group_005_0.inputs[1].enabled = True
if hasattr(group_005_0.inputs[1], 'hide'):
    group_005_0.inputs[1].hide = False
if hasattr(group_005_0.inputs[1], 'hide_value'):
    group_005_0.inputs[1].hide_value = False
if hasattr(group_005_0.inputs[1], 'name'):
    group_005_0.inputs[1].name = 'Y-Scale'
if hasattr(group_005_0.inputs[1], 'show_expanded'):
    group_005_0.inputs[1].show_expanded = False
if hasattr(group_005_0.inputs[2], 'default_value'):
    group_005_0.inputs[2].default_value = Zone5_Roughness
if hasattr(group_005_0.inputs[2], 'display_shape'):
    group_005_0.inputs[2].display_shape = 'CIRCLE'
if hasattr(group_005_0.inputs[2], 'enabled'):
    group_005_0.inputs[2].enabled = True
if hasattr(group_005_0.inputs[2], 'hide'):
    group_005_0.inputs[2].hide = False
if hasattr(group_005_0.inputs[2], 'hide_value'):
    group_005_0.inputs[2].hide_value = False
if hasattr(group_005_0.inputs[2], 'name'):
    group_005_0.inputs[2].name = 'Roughness'
if hasattr(group_005_0.inputs[2], 'show_expanded'):
    group_005_0.inputs[2].show_expanded = False
if hasattr(group_005_0.inputs[3], 'default_value'):
    group_005_0.inputs[3].default_value = Zone5_RoughnessBlack
if hasattr(group_005_0.inputs[3], 'display_shape'):
    group_005_0.inputs[3].display_shape = 'CIRCLE'
if hasattr(group_005_0.inputs[3], 'enabled'):
    group_005_0.inputs[3].enabled = True
if hasattr(group_005_0.inputs[3], 'hide'):
    group_005_0.inputs[3].hide = False
if hasattr(group_005_0.inputs[3], 'hide_value'):
    group_005_0.inputs[3].hide_value = False
if hasattr(group_005_0.inputs[3], 'name'):
    group_005_0.inputs[3].name = 'Roughness Black'
if hasattr(group_005_0.inputs[3], 'show_expanded'):
    group_005_0.inputs[3].show_expanded = False
if hasattr(group_005_0.inputs[4], 'default_value'):
    group_005_0.inputs[4].default_value = Zone5_RoughnessWhite
if hasattr(group_005_0.inputs[4], 'display_shape'):
    group_005_0.inputs[4].display_shape = 'CIRCLE'
if hasattr(group_005_0.inputs[4], 'enabled'):
    group_005_0.inputs[4].enabled = True
if hasattr(group_005_0.inputs[4], 'hide'):
    group_005_0.inputs[4].hide = False
if hasattr(group_005_0.inputs[4], 'hide_value'):
    group_005_0.inputs[4].hide_value = False
if hasattr(group_005_0.inputs[4], 'name'):
    group_005_0.inputs[4].name = 'Roughness White'
if hasattr(group_005_0.inputs[4], 'show_expanded'):
    group_005_0.inputs[4].show_expanded = False
if hasattr(group_005_0.outputs[0], 'default_value'):
    group_005_0.outputs[0].default_value = 0.0
if hasattr(group_005_0.outputs[0], 'display_shape'):
    group_005_0.outputs[0].display_shape = 'CIRCLE'
if hasattr(group_005_0.outputs[0], 'enabled'):
    group_005_0.outputs[0].enabled = True
if hasattr(group_005_0.outputs[0], 'hide'):
    group_005_0.outputs[0].hide = False
if hasattr(group_005_0.outputs[0], 'hide_value'):
    group_005_0.outputs[0].hide_value = False
if hasattr(group_005_0.outputs[0], 'name'):
    group_005_0.outputs[0].name = 'Gradient Out'
if hasattr(group_005_0.outputs[0], 'show_expanded'):
    group_005_0.outputs[0].show_expanded = False
if hasattr(group_005_0.outputs[1], 'default_value'):
    group_005_0.outputs[1].default_value = 0.0
if hasattr(group_005_0.outputs[1], 'display_shape'):
    group_005_0.outputs[1].display_shape = 'CIRCLE'
if hasattr(group_005_0.outputs[1], 'enabled'):
    group_005_0.outputs[1].enabled = True
if hasattr(group_005_0.outputs[1], 'hide'):
    group_005_0.outputs[1].hide = False
if hasattr(group_005_0.outputs[1], 'hide_value'):
    group_005_0.outputs[1].hide_value = False
if hasattr(group_005_0.outputs[1], 'name'):
    group_005_0.outputs[1].name = 'Rough Out'
if hasattr(group_005_0.outputs[1], 'show_expanded'):
    group_005_0.outputs[1].show_expanded = False
if hasattr(group_005_0.outputs[2], 'default_value'):
    group_005_0.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_005_0.outputs[2], 'display_shape'):
    group_005_0.outputs[2].display_shape = 'CIRCLE'
if hasattr(group_005_0.outputs[2], 'enabled'):
    group_005_0.outputs[2].enabled = True
if hasattr(group_005_0.outputs[2], 'hide'):
    group_005_0.outputs[2].hide = False
if hasattr(group_005_0.outputs[2], 'hide_value'):
    group_005_0.outputs[2].hide_value = False
if hasattr(group_005_0.outputs[2], 'name'):
    group_005_0.outputs[2].name = 'Norm Out'
if hasattr(group_005_0.outputs[2], 'show_expanded'):
    group_005_0.outputs[2].show_expanded = False

node_tree1 = bpy.data.node_groups.get('Zone6 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if not node_tree1:
    node_tree1 = bpy.data.node_groups.new('Zone6 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber), 'ShaderNodeTree')
    for node in node_tree1.nodes:
        node_tree1.nodes.remove(node)
    # INPUTS
    input = node_tree1.inputs.new('NodeSocketFloat', 'X-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'X-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Y-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Y-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.5
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness Black')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.2199999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness Black'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness White')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.4699999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness White'
    # OUTPUTS
    output = node_tree1.outputs.new('NodeSocketFloat', 'Gradient Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Gradient Out'
    output = node_tree1.outputs.new('NodeSocketFloat', 'Rough Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Rough Out'
    output = node_tree1.outputs.new('NodeSocketColor', 'Norm Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Norm Out'
    # NODES
    fruns_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    if hasattr(fruns_1, 'color'):
        fruns_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(fruns_1, 'extension'):
        fruns_1.extension = 'REPEAT'
    if hasattr(fruns_1, 'hide'):
        fruns_1.hide = False
    if hasattr(fruns_1, 'interpolation'):
        fruns_1.interpolation = 'Linear'
    if hasattr(fruns_1, 'location'):
        fruns_1.location = (-2307.30029296875, -1949.81494140625)
    if hasattr(fruns_1, 'mute'):
        fruns_1.mute = False
    if hasattr(fruns_1, 'name'):
        fruns_1.name = 'fruns'
    if hasattr(fruns_1, 'projection'):
        fruns_1.projection = 'FLAT'
    if hasattr(fruns_1, 'projection_blend'):
        fruns_1.projection_blend = 0.0
    if hasattr(fruns_1, 'use_custom_color'):
        fruns_1.use_custom_color = False
    if hasattr(fruns_1, 'width'):
        fruns_1.width = 240.0
    input_ = next((input_ for input_ in fruns_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = True
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in fruns_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in fruns_1.outputs if output.identifier=='Alpha'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Alpha'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_014_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_014_1, 'color'):
        reroute_014_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_014_1, 'hide'):
        reroute_014_1.hide = False
    if hasattr(reroute_014_1, 'location'):
        reroute_014_1.location = (-49.86090087890625, 392.07806396484375)
    if hasattr(reroute_014_1, 'mute'):
        reroute_014_1.mute = False
    if hasattr(reroute_014_1, 'name'):
        reroute_014_1.name = 'Reroute.014'
    if hasattr(reroute_014_1, 'use_custom_color'):
        reroute_014_1.use_custom_color = False
    if hasattr(reroute_014_1, 'width'):
        reroute_014_1.width = 16.0

    reroute_016_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_016_1, 'color'):
        reroute_016_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_016_1, 'hide'):
        reroute_016_1.hide = False
    if hasattr(reroute_016_1, 'location'):
        reroute_016_1.location = (144.52618408203125, 215.85797119140625)
    if hasattr(reroute_016_1, 'mute'):
        reroute_016_1.mute = False
    if hasattr(reroute_016_1, 'name'):
        reroute_016_1.name = 'Reroute.016'
    if hasattr(reroute_016_1, 'use_custom_color'):
        reroute_016_1.use_custom_color = False
    if hasattr(reroute_016_1, 'width'):
        reroute_016_1.width = 16.0

    reroute_018_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_018_1, 'color'):
        reroute_018_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_018_1, 'hide'):
        reroute_018_1.hide = False
    if hasattr(reroute_018_1, 'location'):
        reroute_018_1.location = (178.88592529296875, 259.3858642578125)
    if hasattr(reroute_018_1, 'mute'):
        reroute_018_1.mute = False
    if hasattr(reroute_018_1, 'name'):
        reroute_018_1.name = 'Reroute.018'
    if hasattr(reroute_018_1, 'use_custom_color'):
        reroute_018_1.use_custom_color = False
    if hasattr(reroute_018_1, 'width'):
        reroute_018_1.width = 16.0

    reroute_019_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_019_1, 'color'):
        reroute_019_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_019_1, 'hide'):
        reroute_019_1.hide = False
    if hasattr(reroute_019_1, 'location'):
        reroute_019_1.location = (178.88592529296875, 182.964599609375)
    if hasattr(reroute_019_1, 'mute'):
        reroute_019_1.mute = False
    if hasattr(reroute_019_1, 'name'):
        reroute_019_1.name = 'Reroute.019'
    if hasattr(reroute_019_1, 'use_custom_color'):
        reroute_019_1.use_custom_color = False
    if hasattr(reroute_019_1, 'width'):
        reroute_019_1.width = 16.0

    reroute_017_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_017_1, 'color'):
        reroute_017_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_017_1, 'hide'):
        reroute_017_1.hide = False
    if hasattr(reroute_017_1, 'location'):
        reroute_017_1.location = (144.52618408203125, -275.09521484375)
    if hasattr(reroute_017_1, 'mute'):
        reroute_017_1.mute = False
    if hasattr(reroute_017_1, 'name'):
        reroute_017_1.name = 'Reroute.017'
    if hasattr(reroute_017_1, 'use_custom_color'):
        reroute_017_1.use_custom_color = False
    if hasattr(reroute_017_1, 'width'):
        reroute_017_1.width = 16.0

    math_009_1 = node_tree1.nodes.new('ShaderNodeMath')
    if hasattr(math_009_1, 'color'):
        math_009_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(math_009_1, 'hide'):
        math_009_1.hide = False
    if hasattr(math_009_1, 'location'):
        math_009_1.location = (180.58067321777344, -160.00445556640625)
    if hasattr(math_009_1, 'mute'):
        math_009_1.mute = False
    if hasattr(math_009_1, 'name'):
        math_009_1.name = 'Math.009'
    if hasattr(math_009_1, 'operation'):
        math_009_1.operation = 'MULTIPLY'
    if hasattr(math_009_1, 'use_clamp'):
        math_009_1.use_clamp = False
    if hasattr(math_009_1, 'use_custom_color'):
        math_009_1.use_custom_color = False
    if hasattr(math_009_1, 'width'):
        math_009_1.width = 140.0
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_001'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_002'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in math_009_1.outputs if output.identifier=='Value'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Value'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_021_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_021_1, 'color'):
        reroute_021_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_021_1, 'hide'):
        reroute_021_1.hide = False
    if hasattr(reroute_021_1, 'location'):
        reroute_021_1.location = (363.6356506347656, -320.47210693359375)
    if hasattr(reroute_021_1, 'mute'):
        reroute_021_1.mute = False
    if hasattr(reroute_021_1, 'name'):
        reroute_021_1.name = 'Reroute.021'
    if hasattr(reroute_021_1, 'use_custom_color'):
        reroute_021_1.use_custom_color = False
    if hasattr(reroute_021_1, 'width'):
        reroute_021_1.width = 16.0

    reroute_020_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_020_1, 'color'):
        reroute_020_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_020_1, 'hide'):
        reroute_020_1.hide = False
    if hasattr(reroute_020_1, 'location'):
        reroute_020_1.location = (363.6356506347656, -195.1111297607422)
    if hasattr(reroute_020_1, 'mute'):
        reroute_020_1.mute = False
    if hasattr(reroute_020_1, 'name'):
        reroute_020_1.name = 'Reroute.020'
    if hasattr(reroute_020_1, 'use_custom_color'):
        reroute_020_1.use_custom_color = False
    if hasattr(reroute_020_1, 'width'):
        reroute_020_1.width = 16.0

    reroute_012_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_012_1, 'color'):
        reroute_012_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_012_1, 'hide'):
        reroute_012_1.hide = False
    if hasattr(reroute_012_1, 'location'):
        reroute_012_1.location = (588.7369384765625, -242.4521942138672)
    if hasattr(reroute_012_1, 'mute'):
        reroute_012_1.mute = False
    if hasattr(reroute_012_1, 'name'):
        reroute_012_1.name = 'Reroute.012'
    if hasattr(reroute_012_1, 'use_custom_color'):
        reroute_012_1.use_custom_color = False
    if hasattr(reroute_012_1, 'width'):
        reroute_012_1.width = 16.0

    uv_map_1 = node_tree1.nodes.new('ShaderNodeUVMap')
    if hasattr(uv_map_1, 'color'):
        uv_map_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(uv_map_1, 'from_instancer'):
        uv_map_1.from_instancer = False
    if hasattr(uv_map_1, 'hide'):
        uv_map_1.hide = False
    if hasattr(uv_map_1, 'location'):
        uv_map_1.location = (-722.135009765625, 171.312255859375)
    if hasattr(uv_map_1, 'mute'):
        uv_map_1.mute = False
    if hasattr(uv_map_1, 'name'):
        uv_map_1.name = 'UV Map'
    if hasattr(uv_map_1, 'use_custom_color'):
        uv_map_1.use_custom_color = False
    if hasattr(uv_map_1, 'uv_map'):
        uv_map_1.uv_map = 'UV1'
    if hasattr(uv_map_1, 'width'):
        uv_map_1.width = 150.0
    output = next((output for output in uv_map_1.outputs if output.identifier=='UV'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'UV'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    mapping_1 = node_tree1.nodes.new('ShaderNodeMapping')
    if hasattr(mapping_1, 'color'):
        mapping_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mapping_1, 'hide'):
        mapping_1.hide = False
    if hasattr(mapping_1, 'location'):
        mapping_1.location = (-534.63330078125, 225.75634765625)
    if hasattr(mapping_1, 'mute'):
        mapping_1.mute = False
    if hasattr(mapping_1, 'name'):
        mapping_1.name = 'Mapping'
    if hasattr(mapping_1, 'use_custom_color'):
        mapping_1.use_custom_color = False
    if hasattr(mapping_1, 'vector_type'):
        mapping_1.vector_type = 'POINT'
    if hasattr(mapping_1, 'width'):
        mapping_1.width = 140.0
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Location'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Location'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Rotation'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Rotation'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Scale'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (4.0, 4.0, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Scale'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mapping_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_010_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_010_1, 'color'):
        reroute_010_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_010_1, 'hide'):
        reroute_010_1.hide = False
    if hasattr(reroute_010_1, 'location'):
        reroute_010_1.location = (-360.4864501953125, 190.916259765625)
    if hasattr(reroute_010_1, 'mute'):
        reroute_010_1.mute = False
    if hasattr(reroute_010_1, 'name'):
        reroute_010_1.name = 'Reroute.010'
    if hasattr(reroute_010_1, 'use_custom_color'):
        reroute_010_1.use_custom_color = False
    if hasattr(reroute_010_1, 'width'):
        reroute_010_1.width = 16.0

    reroute_011_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_011_1, 'color'):
        reroute_011_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_011_1, 'hide'):
        reroute_011_1.hide = False
    if hasattr(reroute_011_1, 'location'):
        reroute_011_1.location = (-360.4864501953125, -63.42291259765625)
    if hasattr(reroute_011_1, 'mute'):
        reroute_011_1.mute = False
    if hasattr(reroute_011_1, 'name'):
        reroute_011_1.name = 'Reroute.011'
    if hasattr(reroute_011_1, 'use_custom_color'):
        reroute_011_1.use_custom_color = False
    if hasattr(reroute_011_1, 'width'):
        reroute_011_1.width = 16.0

    reroute_015_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_015_1, 'color'):
        reroute_015_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_015_1, 'hide'):
        reroute_015_1.hide = False
    if hasattr(reroute_015_1, 'location'):
        reroute_015_1.location = (-49.86090087890625, 190.421142578125)
    if hasattr(reroute_015_1, 'mute'):
        reroute_015_1.mute = False
    if hasattr(reroute_015_1, 'name'):
        reroute_015_1.name = 'Reroute.015'
    if hasattr(reroute_015_1, 'use_custom_color'):
        reroute_015_1.use_custom_color = False
    if hasattr(reroute_015_1, 'width'):
        reroute_015_1.width = 16.0

    separate_rgb_1 = node_tree1.nodes.new('ShaderNodeSeparateRGB')
    if hasattr(separate_rgb_1, 'color'):
        separate_rgb_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(separate_rgb_1, 'hide'):
        separate_rgb_1.hide = False
    if hasattr(separate_rgb_1, 'location'):
        separate_rgb_1.location = (-23.7783203125, 294.257080078125)
    if hasattr(separate_rgb_1, 'mute'):
        separate_rgb_1.mute = False
    if hasattr(separate_rgb_1, 'name'):
        separate_rgb_1.name = 'Separate RGB'
    if hasattr(separate_rgb_1, 'use_custom_color'):
        separate_rgb_1.use_custom_color = False
    if hasattr(separate_rgb_1, 'width'):
        separate_rgb_1.width = 140.0
    input_ = next((input_ for input_ in separate_rgb_1.inputs if input_.identifier=='Image'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Image'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='R'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'R'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='G'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'G'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='B'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'B'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    combine_xyz_1 = node_tree1.nodes.new('ShaderNodeCombineXYZ')
    if hasattr(combine_xyz_1, 'color'):
        combine_xyz_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(combine_xyz_1, 'hide'):
        combine_xyz_1.hide = False
    if hasattr(combine_xyz_1, 'location'):
        combine_xyz_1.location = (-799.850341796875, -14.884613037109375)
    if hasattr(combine_xyz_1, 'mute'):
        combine_xyz_1.mute = False
    if hasattr(combine_xyz_1, 'name'):
        combine_xyz_1.name = 'Combine XYZ'
    if hasattr(combine_xyz_1, 'use_custom_color'):
        combine_xyz_1.use_custom_color = False
    if hasattr(combine_xyz_1, 'width'):
        combine_xyz_1.width = 140.0
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='X'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'X'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Y'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Y'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Z'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Z'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in combine_xyz_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_004_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_004_1, 'color'):
        reroute_004_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_004_1, 'hide'):
        reroute_004_1.hide = False
    if hasattr(reroute_004_1, 'location'):
        reroute_004_1.location = (-858.0992431640625, -341.5549621582031)
    if hasattr(reroute_004_1, 'mute'):
        reroute_004_1.mute = False
    if hasattr(reroute_004_1, 'name'):
        reroute_004_1.name = 'Reroute.004'
    if hasattr(reroute_004_1, 'use_custom_color'):
        reroute_004_1.use_custom_color = False
    if hasattr(reroute_004_1, 'width'):
        reroute_004_1.width = 16.0

    reroute_005_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_005_1, 'color'):
        reroute_005_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_005_1, 'hide'):
        reroute_005_1.hide = False
    if hasattr(reroute_005_1, 'location'):
        reroute_005_1.location = (-877.3994140625, -364.527099609375)
    if hasattr(reroute_005_1, 'mute'):
        reroute_005_1.mute = False
    if hasattr(reroute_005_1, 'name'):
        reroute_005_1.name = 'Reroute.005'
    if hasattr(reroute_005_1, 'use_custom_color'):
        reroute_005_1.use_custom_color = False
    if hasattr(reroute_005_1, 'width'):
        reroute_005_1.width = 16.0

    reroute_001_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_001_1, 'color'):
        reroute_001_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_001_1, 'hide'):
        reroute_001_1.hide = False
    if hasattr(reroute_001_1, 'location'):
        reroute_001_1.location = (-858.38818359375, -141.572021484375)
    if hasattr(reroute_001_1, 'mute'):
        reroute_001_1.mute = False
    if hasattr(reroute_001_1, 'name'):
        reroute_001_1.name = 'Reroute.001'
    if hasattr(reroute_001_1, 'use_custom_color'):
        reroute_001_1.use_custom_color = False
    if hasattr(reroute_001_1, 'width'):
        reroute_001_1.width = 16.0

    reroute_002_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_002_1, 'color'):
        reroute_002_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_002_1, 'hide'):
        reroute_002_1.hide = False
    if hasattr(reroute_002_1, 'location'):
        reroute_002_1.location = (-877.4599609375, -163.257080078125)
    if hasattr(reroute_002_1, 'mute'):
        reroute_002_1.mute = False
    if hasattr(reroute_002_1, 'name'):
        reroute_002_1.name = 'Reroute.002'
    if hasattr(reroute_002_1, 'use_custom_color'):
        reroute_002_1.use_custom_color = False
    if hasattr(reroute_002_1, 'width'):
        reroute_002_1.width = 16.0

    reroute_006_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_006_1, 'color'):
        reroute_006_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_006_1, 'hide'):
        reroute_006_1.hide = False
    if hasattr(reroute_006_1, 'location'):
        reroute_006_1.location = (-836.59033203125, -119.03997802734375)
    if hasattr(reroute_006_1, 'mute'):
        reroute_006_1.mute = False
    if hasattr(reroute_006_1, 'name'):
        reroute_006_1.name = 'Reroute.006'
    if hasattr(reroute_006_1, 'use_custom_color'):
        reroute_006_1.use_custom_color = False
    if hasattr(reroute_006_1, 'width'):
        reroute_006_1.width = 16.0

    reroute_007_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_007_1, 'color'):
        reroute_007_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_007_1, 'hide'):
        reroute_007_1.hide = False
    if hasattr(reroute_007_1, 'location'):
        reroute_007_1.location = (-836.59033203125, -296.6325988769531)
    if hasattr(reroute_007_1, 'mute'):
        reroute_007_1.mute = False
    if hasattr(reroute_007_1, 'name'):
        reroute_007_1.name = 'Reroute.007'
    if hasattr(reroute_007_1, 'use_custom_color'):
        reroute_007_1.use_custom_color = False
    if hasattr(reroute_007_1, 'width'):
        reroute_007_1.width = 16.0

    reroute_013_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_013_1, 'color'):
        reroute_013_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_013_1, 'hide'):
        reroute_013_1.hide = False
    if hasattr(reroute_013_1, 'location'):
        reroute_013_1.location = (588.7369384765625, 159.65426635742188)
    if hasattr(reroute_013_1, 'mute'):
        reroute_013_1.mute = False
    if hasattr(reroute_013_1, 'name'):
        reroute_013_1.name = 'Reroute.013'
    if hasattr(reroute_013_1, 'use_custom_color'):
        reroute_013_1.use_custom_color = False
    if hasattr(reroute_013_1, 'width'):
        reroute_013_1.width = 16.0

    group_output_1 = node_tree1.nodes.new('NodeGroupOutput')
    if hasattr(group_output_1, 'color'):
        group_output_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_output_1, 'hide'):
        group_output_1.hide = False
    if hasattr(group_output_1, 'is_active_output'):
        group_output_1.is_active_output = True
    if hasattr(group_output_1, 'location'):
        group_output_1.location = (629.4588623046875, 216.9207763671875)
    if hasattr(group_output_1, 'mute'):
        group_output_1.mute = False
    if hasattr(group_output_1, 'name'):
        group_output_1.name = 'Group Output'
    if hasattr(group_output_1, 'use_custom_color'):
        group_output_1.use_custom_color = False
    if hasattr(group_output_1, 'width'):
        group_output_1.width = 140.0
    if hasattr(group_output_1.inputs[0], 'default_value'):
        group_output_1.inputs[0].default_value = 0.0
    if hasattr(group_output_1.inputs[0], 'display_shape'):
        group_output_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[0], 'enabled'):
        group_output_1.inputs[0].enabled = True
    if hasattr(group_output_1.inputs[0], 'hide'):
        group_output_1.inputs[0].hide = False
    if hasattr(group_output_1.inputs[0], 'hide_value'):
        group_output_1.inputs[0].hide_value = False
    if hasattr(group_output_1.inputs[0], 'name'):
        group_output_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_output_1.inputs[0], 'show_expanded'):
        group_output_1.inputs[0].show_expanded = False
    if hasattr(group_output_1.inputs[1], 'default_value'):
        group_output_1.inputs[1].default_value = 0.0
    if hasattr(group_output_1.inputs[1], 'display_shape'):
        group_output_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[1], 'enabled'):
        group_output_1.inputs[1].enabled = True
    if hasattr(group_output_1.inputs[1], 'hide'):
        group_output_1.inputs[1].hide = False
    if hasattr(group_output_1.inputs[1], 'hide_value'):
        group_output_1.inputs[1].hide_value = False
    if hasattr(group_output_1.inputs[1], 'name'):
        group_output_1.inputs[1].name = 'Rough Out'
    if hasattr(group_output_1.inputs[1], 'show_expanded'):
        group_output_1.inputs[1].show_expanded = False
    if hasattr(group_output_1.inputs[2], 'default_value'):
        group_output_1.inputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[2], 'display_shape'):
        group_output_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[2], 'enabled'):
        group_output_1.inputs[2].enabled = True
    if hasattr(group_output_1.inputs[2], 'hide'):
        group_output_1.inputs[2].hide = False
    if hasattr(group_output_1.inputs[2], 'hide_value'):
        group_output_1.inputs[2].hide_value = False
    if hasattr(group_output_1.inputs[2], 'name'):
        group_output_1.inputs[2].name = 'Norm Out'
    if hasattr(group_output_1.inputs[2], 'show_expanded'):
        group_output_1.inputs[2].show_expanded = False

    mix_1 = node_tree1.nodes.new('ShaderNodeMixRGB')
    if hasattr(mix_1, 'blend_type'):
        mix_1.blend_type = 'MIX'
    if hasattr(mix_1, 'color'):
        mix_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_1, 'hide'):
        mix_1.hide = False
    if hasattr(mix_1, 'location'):
        mix_1.location = (401.4825134277344, -207.88519287109375)
    if hasattr(mix_1, 'mute'):
        mix_1.mute = False
    if hasattr(mix_1, 'name'):
        mix_1.name = 'Mix'
    if hasattr(mix_1, 'use_alpha'):
        mix_1.use_alpha = False
    if hasattr(mix_1, 'use_clamp'):
        mix_1.use_clamp = True
    if hasattr(mix_1, 'use_custom_color'):
        mix_1.use_custom_color = False
    if hasattr(mix_1, 'width'):
        mix_1.width = 140.0
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color1'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color1'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color2'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color2'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mix_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_input_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_1, 'color'):
        group_input_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_1, 'hide'):
        group_input_1.hide = False
    if hasattr(group_input_1, 'location'):
        group_input_1.location = (-1048.383056640625, -40.007965087890625)
    if hasattr(group_input_1, 'mute'):
        group_input_1.mute = False
    if hasattr(group_input_1, 'name'):
        group_input_1.name = 'Group Input'
    if hasattr(group_input_1, 'use_custom_color'):
        group_input_1.use_custom_color = False
    if hasattr(group_input_1, 'width'):
        group_input_1.width = 140.0
    if hasattr(group_input_1.outputs[0], 'default_value'):
        group_input_1.outputs[0].default_value = 0.0
    if hasattr(group_input_1.outputs[0], 'display_shape'):
        group_input_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[0], 'enabled'):
        group_input_1.outputs[0].enabled = True
    if hasattr(group_input_1.outputs[0], 'hide'):
        group_input_1.outputs[0].hide = False
    if hasattr(group_input_1.outputs[0], 'hide_value'):
        group_input_1.outputs[0].hide_value = False
    if hasattr(group_input_1.outputs[0], 'name'):
        group_input_1.outputs[0].name = 'X-Scale'
    if hasattr(group_input_1.outputs[0], 'show_expanded'):
        group_input_1.outputs[0].show_expanded = False
    if hasattr(group_input_1.outputs[1], 'default_value'):
        group_input_1.outputs[1].default_value = 0.0
    if hasattr(group_input_1.outputs[1], 'display_shape'):
        group_input_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[1], 'enabled'):
        group_input_1.outputs[1].enabled = True
    if hasattr(group_input_1.outputs[1], 'hide'):
        group_input_1.outputs[1].hide = False
    if hasattr(group_input_1.outputs[1], 'hide_value'):
        group_input_1.outputs[1].hide_value = False
    if hasattr(group_input_1.outputs[1], 'name'):
        group_input_1.outputs[1].name = 'Y-Scale'
    if hasattr(group_input_1.outputs[1], 'show_expanded'):
        group_input_1.outputs[1].show_expanded = False
    if hasattr(group_input_1.outputs[2], 'default_value'):
        group_input_1.outputs[2].default_value = 0.5
    if hasattr(group_input_1.outputs[2], 'display_shape'):
        group_input_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[2], 'enabled'):
        group_input_1.outputs[2].enabled = True
    if hasattr(group_input_1.outputs[2], 'hide'):
        group_input_1.outputs[2].hide = False
    if hasattr(group_input_1.outputs[2], 'hide_value'):
        group_input_1.outputs[2].hide_value = False
    if hasattr(group_input_1.outputs[2], 'name'):
        group_input_1.outputs[2].name = 'Roughness'
    if hasattr(group_input_1.outputs[2], 'show_expanded'):
        group_input_1.outputs[2].show_expanded = False
    if hasattr(group_input_1.outputs[3], 'default_value'):
        group_input_1.outputs[3].default_value = 0.2199999988079071
    if hasattr(group_input_1.outputs[3], 'display_shape'):
        group_input_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[3], 'enabled'):
        group_input_1.outputs[3].enabled = True
    if hasattr(group_input_1.outputs[3], 'hide'):
        group_input_1.outputs[3].hide = False
    if hasattr(group_input_1.outputs[3], 'hide_value'):
        group_input_1.outputs[3].hide_value = False
    if hasattr(group_input_1.outputs[3], 'name'):
        group_input_1.outputs[3].name = 'Roughness Black'
    if hasattr(group_input_1.outputs[3], 'show_expanded'):
        group_input_1.outputs[3].show_expanded = False
    if hasattr(group_input_1.outputs[4], 'default_value'):
        group_input_1.outputs[4].default_value = 0.4699999988079071
    if hasattr(group_input_1.outputs[4], 'display_shape'):
        group_input_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[4], 'enabled'):
        group_input_1.outputs[4].enabled = True
    if hasattr(group_input_1.outputs[4], 'hide'):
        group_input_1.outputs[4].hide = False
    if hasattr(group_input_1.outputs[4], 'hide_value'):
        group_input_1.outputs[4].hide_value = False
    if hasattr(group_input_1.outputs[4], 'name'):
        group_input_1.outputs[4].name = 'Roughness White'
    if hasattr(group_input_1.outputs[4], 'show_expanded'):
        group_input_1.outputs[4].show_expanded = False

    #Zone6_Gradient Mask
    zone6_gradient_mask_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone6_gradient_mask_1.location = (-328.15277099609375, 427.28961181640625)
    PNGtoBITMAP11 = Zone6_GradientMask.replace('.png', FileExtension)
    zone6_gradient_mask_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP11))
    zone6_gradient_mask_1.image.colorspace_settings.name = 'Non-Color'
    zone6_gradient_mask_1.label = 'Zone6_Gradient Mask'

    #Zone6_Normal
    zone6_normal_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone6_normal_1.location = (-328.4542236328125, 172.760498046875)
    PNGtoBITMAP12 = Zone6_Normal.replace('.png', FileExtension)
    zone6_normal_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP12))
    zone6_normal_1.image.colorspace_settings.name = 'Non-Color'
    zone6_normal_1.label = 'Zone6_Normal'
    
    # LINKS
    node_tree1.links.new(uv_map_1.outputs[0], mapping_1.inputs[0])
    node_tree1.links.new(combine_xyz_1.outputs[0], mapping_1.inputs[3])
    node_tree1.links.new(zone6_normal_1.outputs[0], group_output_1.inputs[2])
    node_tree1.links.new(group_input_1.outputs[3], reroute_001_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[4], reroute_002_1.inputs[0])
    node_tree1.links.new(reroute_001_1.outputs[0], reroute_004_1.inputs[0])
    node_tree1.links.new(reroute_002_1.outputs[0], reroute_005_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[2], reroute_006_1.inputs[0])
    node_tree1.links.new(reroute_006_1.outputs[0], reroute_007_1.inputs[0])
    node_tree1.links.new(mapping_1.outputs[0], reroute_010_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], zone6_gradient_mask_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], reroute_011_1.inputs[0])
    node_tree1.links.new(reroute_011_1.outputs[0], zone6_normal_1.inputs[0])
    node_tree1.links.new(reroute_012_1.outputs[0], reroute_013_1.inputs[0])
    node_tree1.links.new(reroute_013_1.outputs[0], group_output_1.inputs[1])
    node_tree1.links.new(zone6_gradient_mask_1.outputs[0], reroute_014_1.inputs[0])
    node_tree1.links.new(reroute_014_1.outputs[0], reroute_015_1.inputs[0])
    node_tree1.links.new(reroute_015_1.outputs[0], separate_rgb_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[2], reroute_016_1.inputs[0])
    node_tree1.links.new(reroute_016_1.outputs[0], reroute_017_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[0], reroute_018_1.inputs[0])
    node_tree1.links.new(reroute_018_1.outputs[0], reroute_019_1.inputs[0])
    node_tree1.links.new(reroute_019_1.outputs[0], group_output_1.inputs[0])
    node_tree1.links.new(reroute_017_1.outputs[0], math_009_1.inputs[0])
    node_tree1.links.new(reroute_007_1.outputs[0], math_009_1.inputs[1])
    node_tree1.links.new(reroute_004_1.outputs[0], mix_1.inputs[1])
    node_tree1.links.new(reroute_005_1.outputs[0], mix_1.inputs[2])
    node_tree1.links.new(mix_1.outputs[0], reroute_012_1.inputs[0])
    node_tree1.links.new(math_009_1.outputs[0], reroute_020_1.inputs[0])
    node_tree1.links.new(reroute_020_1.outputs[0], reroute_021_1.inputs[0])
    node_tree1.links.new(reroute_021_1.outputs[0], mix_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[1], combine_xyz_1.inputs[1])
    node_tree1.links.new(group_input_1.outputs[0], combine_xyz_1.inputs[0])

group_006_0 = node_tree0.nodes.new('ShaderNodeGroup')
if hasattr(group_006_0, 'node_tree'):
    group_006_0.node_tree = bpy.data.node_groups.get('Zone6 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if hasattr(group_006_0, 'color'):
    group_006_0.color = Zone6_SwatchNodegroupColor
if hasattr(group_006_0, 'hide'):
    group_006_0.hide = False
if hasattr(group_006_0, 'location'):
    group_006_0.location = (-421.73388671875, -1457.8939208984375)
if hasattr(group_006_0, 'mute'):
    group_006_0.mute = False
if hasattr(group_006_0, 'name'):
    group_006_0.name = 'Group.006'
if hasattr(group_006_0, 'use_custom_color'):
    group_006_0.use_custom_color = True
if hasattr(group_006_0, 'width'):
    group_006_0.width = 250.72528076171875
if hasattr(group_006_0.inputs[0], 'default_value'):
    group_006_0.inputs[0].default_value = Zone6_XScale*ArmorRegion
if hasattr(group_006_0.inputs[0], 'display_shape'):
    group_006_0.inputs[0].display_shape = 'CIRCLE'
if hasattr(group_006_0.inputs[0], 'enabled'):
    group_006_0.inputs[0].enabled = True
if hasattr(group_006_0.inputs[0], 'hide'):
    group_006_0.inputs[0].hide = False
if hasattr(group_006_0.inputs[0], 'hide_value'):
    group_006_0.inputs[0].hide_value = False
if hasattr(group_006_0.inputs[0], 'name'):
    group_006_0.inputs[0].name = 'X-Scale'
if hasattr(group_006_0.inputs[0], 'show_expanded'):
    group_006_0.inputs[0].show_expanded = False
if hasattr(group_006_0.inputs[1], 'default_value'):
    group_006_0.inputs[1].default_value = Zone6_YScale*ArmorRegion
if hasattr(group_006_0.inputs[1], 'display_shape'):
    group_006_0.inputs[1].display_shape = 'CIRCLE'
if hasattr(group_006_0.inputs[1], 'enabled'):
    group_006_0.inputs[1].enabled = True
if hasattr(group_006_0.inputs[1], 'hide'):
    group_006_0.inputs[1].hide = False
if hasattr(group_006_0.inputs[1], 'hide_value'):
    group_006_0.inputs[1].hide_value = False
if hasattr(group_006_0.inputs[1], 'name'):
    group_006_0.inputs[1].name = 'Y-Scale'
if hasattr(group_006_0.inputs[1], 'show_expanded'):
    group_006_0.inputs[1].show_expanded = False
if hasattr(group_006_0.inputs[2], 'default_value'):
    group_006_0.inputs[2].default_value = Zone6_Roughness
if hasattr(group_006_0.inputs[2], 'display_shape'):
    group_006_0.inputs[2].display_shape = 'CIRCLE'
if hasattr(group_006_0.inputs[2], 'enabled'):
    group_006_0.inputs[2].enabled = True
if hasattr(group_006_0.inputs[2], 'hide'):
    group_006_0.inputs[2].hide = False
if hasattr(group_006_0.inputs[2], 'hide_value'):
    group_006_0.inputs[2].hide_value = False
if hasattr(group_006_0.inputs[2], 'name'):
    group_006_0.inputs[2].name = 'Roughness'
if hasattr(group_006_0.inputs[2], 'show_expanded'):
    group_006_0.inputs[2].show_expanded = False
if hasattr(group_006_0.inputs[3], 'default_value'):
    group_006_0.inputs[3].default_value = Zone6_RoughnessBlack
if hasattr(group_006_0.inputs[3], 'display_shape'):
    group_006_0.inputs[3].display_shape = 'CIRCLE'
if hasattr(group_006_0.inputs[3], 'enabled'):
    group_006_0.inputs[3].enabled = True
if hasattr(group_006_0.inputs[3], 'hide'):
    group_006_0.inputs[3].hide = False
if hasattr(group_006_0.inputs[3], 'hide_value'):
    group_006_0.inputs[3].hide_value = False
if hasattr(group_006_0.inputs[3], 'name'):
    group_006_0.inputs[3].name = 'Roughness Black'
if hasattr(group_006_0.inputs[3], 'show_expanded'):
    group_006_0.inputs[3].show_expanded = False
if hasattr(group_006_0.inputs[4], 'default_value'):
    group_006_0.inputs[4].default_value = Zone6_RoughnessWhite
if hasattr(group_006_0.inputs[4], 'display_shape'):
    group_006_0.inputs[4].display_shape = 'CIRCLE'
if hasattr(group_006_0.inputs[4], 'enabled'):
    group_006_0.inputs[4].enabled = True
if hasattr(group_006_0.inputs[4], 'hide'):
    group_006_0.inputs[4].hide = False
if hasattr(group_006_0.inputs[4], 'hide_value'):
    group_006_0.inputs[4].hide_value = False
if hasattr(group_006_0.inputs[4], 'name'):
    group_006_0.inputs[4].name = 'Roughness White'
if hasattr(group_006_0.inputs[4], 'show_expanded'):
    group_006_0.inputs[4].show_expanded = False
if hasattr(group_006_0.outputs[0], 'default_value'):
    group_006_0.outputs[0].default_value = 0.0
if hasattr(group_006_0.outputs[0], 'display_shape'):
    group_006_0.outputs[0].display_shape = 'CIRCLE'
if hasattr(group_006_0.outputs[0], 'enabled'):
    group_006_0.outputs[0].enabled = True
if hasattr(group_006_0.outputs[0], 'hide'):
    group_006_0.outputs[0].hide = False
if hasattr(group_006_0.outputs[0], 'hide_value'):
    group_006_0.outputs[0].hide_value = False
if hasattr(group_006_0.outputs[0], 'name'):
    group_006_0.outputs[0].name = 'Gradient Out'
if hasattr(group_006_0.outputs[0], 'show_expanded'):
    group_006_0.outputs[0].show_expanded = False
if hasattr(group_006_0.outputs[1], 'default_value'):
    group_006_0.outputs[1].default_value = 0.0
if hasattr(group_006_0.outputs[1], 'display_shape'):
    group_006_0.outputs[1].display_shape = 'CIRCLE'
if hasattr(group_006_0.outputs[1], 'enabled'):
    group_006_0.outputs[1].enabled = True
if hasattr(group_006_0.outputs[1], 'hide'):
    group_006_0.outputs[1].hide = False
if hasattr(group_006_0.outputs[1], 'hide_value'):
    group_006_0.outputs[1].hide_value = False
if hasattr(group_006_0.outputs[1], 'name'):
    group_006_0.outputs[1].name = 'Rough Out'
if hasattr(group_006_0.outputs[1], 'show_expanded'):
    group_006_0.outputs[1].show_expanded = False
if hasattr(group_006_0.outputs[2], 'default_value'):
    group_006_0.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_006_0.outputs[2], 'display_shape'):
    group_006_0.outputs[2].display_shape = 'CIRCLE'
if hasattr(group_006_0.outputs[2], 'enabled'):
    group_006_0.outputs[2].enabled = True
if hasattr(group_006_0.outputs[2], 'hide'):
    group_006_0.outputs[2].hide = False
if hasattr(group_006_0.outputs[2], 'hide_value'):
    group_006_0.outputs[2].hide_value = False
if hasattr(group_006_0.outputs[2], 'name'):
    group_006_0.outputs[2].name = 'Norm Out'
if hasattr(group_006_0.outputs[2], 'show_expanded'):
    group_006_0.outputs[2].show_expanded = False

node_tree1 = bpy.data.node_groups.get('Dust ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if not node_tree1:
    node_tree1 = bpy.data.node_groups.new('Dust ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber), 'ShaderNodeTree')
    for node in node_tree1.nodes:
        node_tree1.nodes.remove(node)
    # INPUTS
    input = node_tree1.inputs.new('NodeSocketFloat', 'X-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'X-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Y-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Y-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.5
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness Black')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.2199999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness Black'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness White')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.4699999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness White'
    # OUTPUTS
    output = node_tree1.outputs.new('NodeSocketFloat', 'Gradient Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Gradient Out'
    output = node_tree1.outputs.new('NodeSocketFloat', 'Rough Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Rough Out'
    output = node_tree1.outputs.new('NodeSocketColor', 'Norm Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Norm Out'
    # NODES
    vuns_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    if hasattr(vuns_1, 'color'):
        vuns_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(vuns_1, 'extension'):
        vuns_1.extension = 'REPEAT'
    if hasattr(vuns_1, 'hide'):
        vuns_1.hide = False
    if hasattr(vuns_1, 'interpolation'):
        vuns_1.interpolation = 'Linear'
    if hasattr(vuns_1, 'location'):
        vuns_1.location = (-2307.30029296875, -1949.81494140625)
    if hasattr(vuns_1, 'mute'):
        vuns_1.mute = False
    if hasattr(vuns_1, 'name'):
        vuns_1.name = 'vuns'
    if hasattr(vuns_1, 'projection'):
        vuns_1.projection = 'FLAT'
    if hasattr(vuns_1, 'projection_blend'):
        vuns_1.projection_blend = 0.0
    if hasattr(vuns_1, 'use_custom_color'):
        vuns_1.use_custom_color = False
    if hasattr(vuns_1, 'width'):
        vuns_1.width = 240.0
    input_ = next((input_ for input_ in vuns_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = True
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in vuns_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in vuns_1.outputs if output.identifier=='Alpha'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Alpha'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_014_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_014_1, 'color'):
        reroute_014_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_014_1, 'hide'):
        reroute_014_1.hide = False
    if hasattr(reroute_014_1, 'location'):
        reroute_014_1.location = (-49.86090087890625, 392.07806396484375)
    if hasattr(reroute_014_1, 'mute'):
        reroute_014_1.mute = False
    if hasattr(reroute_014_1, 'name'):
        reroute_014_1.name = 'Reroute.014'
    if hasattr(reroute_014_1, 'use_custom_color'):
        reroute_014_1.use_custom_color = False
    if hasattr(reroute_014_1, 'width'):
        reroute_014_1.width = 16.0

    reroute_016_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_016_1, 'color'):
        reroute_016_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_016_1, 'hide'):
        reroute_016_1.hide = False
    if hasattr(reroute_016_1, 'location'):
        reroute_016_1.location = (144.52618408203125, 215.85797119140625)
    if hasattr(reroute_016_1, 'mute'):
        reroute_016_1.mute = False
    if hasattr(reroute_016_1, 'name'):
        reroute_016_1.name = 'Reroute.016'
    if hasattr(reroute_016_1, 'use_custom_color'):
        reroute_016_1.use_custom_color = False
    if hasattr(reroute_016_1, 'width'):
        reroute_016_1.width = 16.0

    reroute_018_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_018_1, 'color'):
        reroute_018_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_018_1, 'hide'):
        reroute_018_1.hide = False
    if hasattr(reroute_018_1, 'location'):
        reroute_018_1.location = (178.88592529296875, 259.3858642578125)
    if hasattr(reroute_018_1, 'mute'):
        reroute_018_1.mute = False
    if hasattr(reroute_018_1, 'name'):
        reroute_018_1.name = 'Reroute.018'
    if hasattr(reroute_018_1, 'use_custom_color'):
        reroute_018_1.use_custom_color = False
    if hasattr(reroute_018_1, 'width'):
        reroute_018_1.width = 16.0

    reroute_019_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_019_1, 'color'):
        reroute_019_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_019_1, 'hide'):
        reroute_019_1.hide = False
    if hasattr(reroute_019_1, 'location'):
        reroute_019_1.location = (178.88592529296875, 182.964599609375)
    if hasattr(reroute_019_1, 'mute'):
        reroute_019_1.mute = False
    if hasattr(reroute_019_1, 'name'):
        reroute_019_1.name = 'Reroute.019'
    if hasattr(reroute_019_1, 'use_custom_color'):
        reroute_019_1.use_custom_color = False
    if hasattr(reroute_019_1, 'width'):
        reroute_019_1.width = 16.0

    reroute_017_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_017_1, 'color'):
        reroute_017_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_017_1, 'hide'):
        reroute_017_1.hide = False
    if hasattr(reroute_017_1, 'location'):
        reroute_017_1.location = (144.52618408203125, -275.09521484375)
    if hasattr(reroute_017_1, 'mute'):
        reroute_017_1.mute = False
    if hasattr(reroute_017_1, 'name'):
        reroute_017_1.name = 'Reroute.017'
    if hasattr(reroute_017_1, 'use_custom_color'):
        reroute_017_1.use_custom_color = False
    if hasattr(reroute_017_1, 'width'):
        reroute_017_1.width = 16.0

    math_009_1 = node_tree1.nodes.new('ShaderNodeMath')
    if hasattr(math_009_1, 'color'):
        math_009_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(math_009_1, 'hide'):
        math_009_1.hide = False
    if hasattr(math_009_1, 'location'):
        math_009_1.location = (180.58067321777344, -160.00445556640625)
    if hasattr(math_009_1, 'mute'):
        math_009_1.mute = False
    if hasattr(math_009_1, 'name'):
        math_009_1.name = 'Math.009'
    if hasattr(math_009_1, 'operation'):
        math_009_1.operation = 'MULTIPLY'
    if hasattr(math_009_1, 'use_clamp'):
        math_009_1.use_clamp = False
    if hasattr(math_009_1, 'use_custom_color'):
        math_009_1.use_custom_color = False
    if hasattr(math_009_1, 'width'):
        math_009_1.width = 140.0
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_001'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_002'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in math_009_1.outputs if output.identifier=='Value'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Value'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_021_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_021_1, 'color'):
        reroute_021_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_021_1, 'hide'):
        reroute_021_1.hide = False
    if hasattr(reroute_021_1, 'location'):
        reroute_021_1.location = (363.6356506347656, -320.47210693359375)
    if hasattr(reroute_021_1, 'mute'):
        reroute_021_1.mute = False
    if hasattr(reroute_021_1, 'name'):
        reroute_021_1.name = 'Reroute.021'
    if hasattr(reroute_021_1, 'use_custom_color'):
        reroute_021_1.use_custom_color = False
    if hasattr(reroute_021_1, 'width'):
        reroute_021_1.width = 16.0

    reroute_020_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_020_1, 'color'):
        reroute_020_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_020_1, 'hide'):
        reroute_020_1.hide = False
    if hasattr(reroute_020_1, 'location'):
        reroute_020_1.location = (363.6356506347656, -195.1111297607422)
    if hasattr(reroute_020_1, 'mute'):
        reroute_020_1.mute = False
    if hasattr(reroute_020_1, 'name'):
        reroute_020_1.name = 'Reroute.020'
    if hasattr(reroute_020_1, 'use_custom_color'):
        reroute_020_1.use_custom_color = False
    if hasattr(reroute_020_1, 'width'):
        reroute_020_1.width = 16.0

    reroute_012_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_012_1, 'color'):
        reroute_012_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_012_1, 'hide'):
        reroute_012_1.hide = False
    if hasattr(reroute_012_1, 'location'):
        reroute_012_1.location = (588.7369384765625, -242.4521942138672)
    if hasattr(reroute_012_1, 'mute'):
        reroute_012_1.mute = False
    if hasattr(reroute_012_1, 'name'):
        reroute_012_1.name = 'Reroute.012'
    if hasattr(reroute_012_1, 'use_custom_color'):
        reroute_012_1.use_custom_color = False
    if hasattr(reroute_012_1, 'width'):
        reroute_012_1.width = 16.0

    uv_map_1 = node_tree1.nodes.new('ShaderNodeUVMap')
    if hasattr(uv_map_1, 'color'):
        uv_map_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(uv_map_1, 'from_instancer'):
        uv_map_1.from_instancer = False
    if hasattr(uv_map_1, 'hide'):
        uv_map_1.hide = False
    if hasattr(uv_map_1, 'location'):
        uv_map_1.location = (-722.135009765625, 171.312255859375)
    if hasattr(uv_map_1, 'mute'):
        uv_map_1.mute = False
    if hasattr(uv_map_1, 'name'):
        uv_map_1.name = 'UV Map'
    if hasattr(uv_map_1, 'use_custom_color'):
        uv_map_1.use_custom_color = False
    if hasattr(uv_map_1, 'uv_map'):
        uv_map_1.uv_map = 'UV1'
    if hasattr(uv_map_1, 'width'):
        uv_map_1.width = 150.0
    output = next((output for output in uv_map_1.outputs if output.identifier=='UV'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'UV'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    mapping_1 = node_tree1.nodes.new('ShaderNodeMapping')
    if hasattr(mapping_1, 'color'):
        mapping_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mapping_1, 'hide'):
        mapping_1.hide = False
    if hasattr(mapping_1, 'location'):
        mapping_1.location = (-534.63330078125, 225.75634765625)
    if hasattr(mapping_1, 'mute'):
        mapping_1.mute = False
    if hasattr(mapping_1, 'name'):
        mapping_1.name = 'Mapping'
    if hasattr(mapping_1, 'use_custom_color'):
        mapping_1.use_custom_color = False
    if hasattr(mapping_1, 'vector_type'):
        mapping_1.vector_type = 'POINT'
    if hasattr(mapping_1, 'width'):
        mapping_1.width = 140.0
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Location'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Location'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Rotation'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Rotation'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Scale'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (4.0, 4.0, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Scale'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mapping_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_010_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_010_1, 'color'):
        reroute_010_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_010_1, 'hide'):
        reroute_010_1.hide = False
    if hasattr(reroute_010_1, 'location'):
        reroute_010_1.location = (-360.4864501953125, 190.916259765625)
    if hasattr(reroute_010_1, 'mute'):
        reroute_010_1.mute = False
    if hasattr(reroute_010_1, 'name'):
        reroute_010_1.name = 'Reroute.010'
    if hasattr(reroute_010_1, 'use_custom_color'):
        reroute_010_1.use_custom_color = False
    if hasattr(reroute_010_1, 'width'):
        reroute_010_1.width = 16.0

    reroute_011_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_011_1, 'color'):
        reroute_011_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_011_1, 'hide'):
        reroute_011_1.hide = False
    if hasattr(reroute_011_1, 'location'):
        reroute_011_1.location = (-360.4864501953125, -63.42291259765625)
    if hasattr(reroute_011_1, 'mute'):
        reroute_011_1.mute = False
    if hasattr(reroute_011_1, 'name'):
        reroute_011_1.name = 'Reroute.011'
    if hasattr(reroute_011_1, 'use_custom_color'):
        reroute_011_1.use_custom_color = False
    if hasattr(reroute_011_1, 'width'):
        reroute_011_1.width = 16.0

    reroute_015_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_015_1, 'color'):
        reroute_015_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_015_1, 'hide'):
        reroute_015_1.hide = False
    if hasattr(reroute_015_1, 'location'):
        reroute_015_1.location = (-49.86090087890625, 190.421142578125)
    if hasattr(reroute_015_1, 'mute'):
        reroute_015_1.mute = False
    if hasattr(reroute_015_1, 'name'):
        reroute_015_1.name = 'Reroute.015'
    if hasattr(reroute_015_1, 'use_custom_color'):
        reroute_015_1.use_custom_color = False
    if hasattr(reroute_015_1, 'width'):
        reroute_015_1.width = 16.0

    separate_rgb_1 = node_tree1.nodes.new('ShaderNodeSeparateRGB')
    if hasattr(separate_rgb_1, 'color'):
        separate_rgb_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(separate_rgb_1, 'hide'):
        separate_rgb_1.hide = False
    if hasattr(separate_rgb_1, 'location'):
        separate_rgb_1.location = (-23.7783203125, 294.257080078125)
    if hasattr(separate_rgb_1, 'mute'):
        separate_rgb_1.mute = False
    if hasattr(separate_rgb_1, 'name'):
        separate_rgb_1.name = 'Separate RGB'
    if hasattr(separate_rgb_1, 'use_custom_color'):
        separate_rgb_1.use_custom_color = False
    if hasattr(separate_rgb_1, 'width'):
        separate_rgb_1.width = 140.0
    input_ = next((input_ for input_ in separate_rgb_1.inputs if input_.identifier=='Image'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Image'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='R'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'R'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='G'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'G'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='B'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'B'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    combine_xyz_1 = node_tree1.nodes.new('ShaderNodeCombineXYZ')
    if hasattr(combine_xyz_1, 'color'):
        combine_xyz_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(combine_xyz_1, 'hide'):
        combine_xyz_1.hide = False
    if hasattr(combine_xyz_1, 'location'):
        combine_xyz_1.location = (-799.850341796875, -14.884613037109375)
    if hasattr(combine_xyz_1, 'mute'):
        combine_xyz_1.mute = False
    if hasattr(combine_xyz_1, 'name'):
        combine_xyz_1.name = 'Combine XYZ'
    if hasattr(combine_xyz_1, 'use_custom_color'):
        combine_xyz_1.use_custom_color = False
    if hasattr(combine_xyz_1, 'width'):
        combine_xyz_1.width = 140.0
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='X'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'X'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Y'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Y'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Z'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Z'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in combine_xyz_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_004_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_004_1, 'color'):
        reroute_004_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_004_1, 'hide'):
        reroute_004_1.hide = False
    if hasattr(reroute_004_1, 'location'):
        reroute_004_1.location = (-858.0992431640625, -341.5549621582031)
    if hasattr(reroute_004_1, 'mute'):
        reroute_004_1.mute = False
    if hasattr(reroute_004_1, 'name'):
        reroute_004_1.name = 'Reroute.004'
    if hasattr(reroute_004_1, 'use_custom_color'):
        reroute_004_1.use_custom_color = False
    if hasattr(reroute_004_1, 'width'):
        reroute_004_1.width = 16.0

    reroute_005_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_005_1, 'color'):
        reroute_005_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_005_1, 'hide'):
        reroute_005_1.hide = False
    if hasattr(reroute_005_1, 'location'):
        reroute_005_1.location = (-877.3994140625, -364.527099609375)
    if hasattr(reroute_005_1, 'mute'):
        reroute_005_1.mute = False
    if hasattr(reroute_005_1, 'name'):
        reroute_005_1.name = 'Reroute.005'
    if hasattr(reroute_005_1, 'use_custom_color'):
        reroute_005_1.use_custom_color = False
    if hasattr(reroute_005_1, 'width'):
        reroute_005_1.width = 16.0

    reroute_001_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_001_1, 'color'):
        reroute_001_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_001_1, 'hide'):
        reroute_001_1.hide = False
    if hasattr(reroute_001_1, 'location'):
        reroute_001_1.location = (-858.38818359375, -141.572021484375)
    if hasattr(reroute_001_1, 'mute'):
        reroute_001_1.mute = False
    if hasattr(reroute_001_1, 'name'):
        reroute_001_1.name = 'Reroute.001'
    if hasattr(reroute_001_1, 'use_custom_color'):
        reroute_001_1.use_custom_color = False
    if hasattr(reroute_001_1, 'width'):
        reroute_001_1.width = 16.0

    reroute_002_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_002_1, 'color'):
        reroute_002_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_002_1, 'hide'):
        reroute_002_1.hide = False
    if hasattr(reroute_002_1, 'location'):
        reroute_002_1.location = (-877.4599609375, -163.257080078125)
    if hasattr(reroute_002_1, 'mute'):
        reroute_002_1.mute = False
    if hasattr(reroute_002_1, 'name'):
        reroute_002_1.name = 'Reroute.002'
    if hasattr(reroute_002_1, 'use_custom_color'):
        reroute_002_1.use_custom_color = False
    if hasattr(reroute_002_1, 'width'):
        reroute_002_1.width = 16.0

    reroute_006_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_006_1, 'color'):
        reroute_006_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_006_1, 'hide'):
        reroute_006_1.hide = False
    if hasattr(reroute_006_1, 'location'):
        reroute_006_1.location = (-836.59033203125, -119.03997802734375)
    if hasattr(reroute_006_1, 'mute'):
        reroute_006_1.mute = False
    if hasattr(reroute_006_1, 'name'):
        reroute_006_1.name = 'Reroute.006'
    if hasattr(reroute_006_1, 'use_custom_color'):
        reroute_006_1.use_custom_color = False
    if hasattr(reroute_006_1, 'width'):
        reroute_006_1.width = 16.0

    reroute_007_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_007_1, 'color'):
        reroute_007_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_007_1, 'hide'):
        reroute_007_1.hide = False
    if hasattr(reroute_007_1, 'location'):
        reroute_007_1.location = (-836.59033203125, -296.6325988769531)
    if hasattr(reroute_007_1, 'mute'):
        reroute_007_1.mute = False
    if hasattr(reroute_007_1, 'name'):
        reroute_007_1.name = 'Reroute.007'
    if hasattr(reroute_007_1, 'use_custom_color'):
        reroute_007_1.use_custom_color = False
    if hasattr(reroute_007_1, 'width'):
        reroute_007_1.width = 16.0

    reroute_013_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_013_1, 'color'):
        reroute_013_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_013_1, 'hide'):
        reroute_013_1.hide = False
    if hasattr(reroute_013_1, 'location'):
        reroute_013_1.location = (588.7369384765625, 159.65426635742188)
    if hasattr(reroute_013_1, 'mute'):
        reroute_013_1.mute = False
    if hasattr(reroute_013_1, 'name'):
        reroute_013_1.name = 'Reroute.013'
    if hasattr(reroute_013_1, 'use_custom_color'):
        reroute_013_1.use_custom_color = False
    if hasattr(reroute_013_1, 'width'):
        reroute_013_1.width = 16.0

    group_output_1 = node_tree1.nodes.new('NodeGroupOutput')
    if hasattr(group_output_1, 'color'):
        group_output_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_output_1, 'hide'):
        group_output_1.hide = False
    if hasattr(group_output_1, 'is_active_output'):
        group_output_1.is_active_output = True
    if hasattr(group_output_1, 'location'):
        group_output_1.location = (629.4588623046875, 216.9207763671875)
    if hasattr(group_output_1, 'mute'):
        group_output_1.mute = False
    if hasattr(group_output_1, 'name'):
        group_output_1.name = 'Group Output'
    if hasattr(group_output_1, 'use_custom_color'):
        group_output_1.use_custom_color = False
    if hasattr(group_output_1, 'width'):
        group_output_1.width = 140.0
    if hasattr(group_output_1.inputs[0], 'default_value'):
        group_output_1.inputs[0].default_value = 0.0
    if hasattr(group_output_1.inputs[0], 'display_shape'):
        group_output_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[0], 'enabled'):
        group_output_1.inputs[0].enabled = True
    if hasattr(group_output_1.inputs[0], 'hide'):
        group_output_1.inputs[0].hide = False
    if hasattr(group_output_1.inputs[0], 'hide_value'):
        group_output_1.inputs[0].hide_value = False
    if hasattr(group_output_1.inputs[0], 'name'):
        group_output_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_output_1.inputs[0], 'show_expanded'):
        group_output_1.inputs[0].show_expanded = False
    if hasattr(group_output_1.inputs[1], 'default_value'):
        group_output_1.inputs[1].default_value = 0.0
    if hasattr(group_output_1.inputs[1], 'display_shape'):
        group_output_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[1], 'enabled'):
        group_output_1.inputs[1].enabled = True
    if hasattr(group_output_1.inputs[1], 'hide'):
        group_output_1.inputs[1].hide = False
    if hasattr(group_output_1.inputs[1], 'hide_value'):
        group_output_1.inputs[1].hide_value = False
    if hasattr(group_output_1.inputs[1], 'name'):
        group_output_1.inputs[1].name = 'Rough Out'
    if hasattr(group_output_1.inputs[1], 'show_expanded'):
        group_output_1.inputs[1].show_expanded = False
    if hasattr(group_output_1.inputs[2], 'default_value'):
        group_output_1.inputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[2], 'display_shape'):
        group_output_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[2], 'enabled'):
        group_output_1.inputs[2].enabled = True
    if hasattr(group_output_1.inputs[2], 'hide'):
        group_output_1.inputs[2].hide = False
    if hasattr(group_output_1.inputs[2], 'hide_value'):
        group_output_1.inputs[2].hide_value = False
    if hasattr(group_output_1.inputs[2], 'name'):
        group_output_1.inputs[2].name = 'Norm Out'
    if hasattr(group_output_1.inputs[2], 'show_expanded'):
        group_output_1.inputs[2].show_expanded = False

    mix_1 = node_tree1.nodes.new('ShaderNodeMixRGB')
    if hasattr(mix_1, 'blend_type'):
        mix_1.blend_type = 'MIX'
    if hasattr(mix_1, 'color'):
        mix_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_1, 'hide'):
        mix_1.hide = False
    if hasattr(mix_1, 'location'):
        mix_1.location = (401.4825134277344, -207.88519287109375)
    if hasattr(mix_1, 'mute'):
        mix_1.mute = False
    if hasattr(mix_1, 'name'):
        mix_1.name = 'Mix'
    if hasattr(mix_1, 'use_alpha'):
        mix_1.use_alpha = False
    if hasattr(mix_1, 'use_clamp'):
        mix_1.use_clamp = True
    if hasattr(mix_1, 'use_custom_color'):
        mix_1.use_custom_color = False
    if hasattr(mix_1, 'width'):
        mix_1.width = 140.0
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color1'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color1'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color2'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color2'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mix_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_input_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_1, 'color'):
        group_input_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_1, 'hide'):
        group_input_1.hide = False
    if hasattr(group_input_1, 'location'):
        group_input_1.location = (-1048.383056640625, -40.007965087890625)
    if hasattr(group_input_1, 'mute'):
        group_input_1.mute = False
    if hasattr(group_input_1, 'name'):
        group_input_1.name = 'Group Input'
    if hasattr(group_input_1, 'use_custom_color'):
        group_input_1.use_custom_color = False
    if hasattr(group_input_1, 'width'):
        group_input_1.width = 140.0
    if hasattr(group_input_1.outputs[0], 'default_value'):
        group_input_1.outputs[0].default_value = 0.0
    if hasattr(group_input_1.outputs[0], 'display_shape'):
        group_input_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[0], 'enabled'):
        group_input_1.outputs[0].enabled = True
    if hasattr(group_input_1.outputs[0], 'hide'):
        group_input_1.outputs[0].hide = False
    if hasattr(group_input_1.outputs[0], 'hide_value'):
        group_input_1.outputs[0].hide_value = False
    if hasattr(group_input_1.outputs[0], 'name'):
        group_input_1.outputs[0].name = 'X-Scale'
    if hasattr(group_input_1.outputs[0], 'show_expanded'):
        group_input_1.outputs[0].show_expanded = False
    if hasattr(group_input_1.outputs[1], 'default_value'):
        group_input_1.outputs[1].default_value = 0.0
    if hasattr(group_input_1.outputs[1], 'display_shape'):
        group_input_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[1], 'enabled'):
        group_input_1.outputs[1].enabled = True
    if hasattr(group_input_1.outputs[1], 'hide'):
        group_input_1.outputs[1].hide = False
    if hasattr(group_input_1.outputs[1], 'hide_value'):
        group_input_1.outputs[1].hide_value = False
    if hasattr(group_input_1.outputs[1], 'name'):
        group_input_1.outputs[1].name = 'Y-Scale'
    if hasattr(group_input_1.outputs[1], 'show_expanded'):
        group_input_1.outputs[1].show_expanded = False
    if hasattr(group_input_1.outputs[2], 'default_value'):
        group_input_1.outputs[2].default_value = 0.5
    if hasattr(group_input_1.outputs[2], 'display_shape'):
        group_input_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[2], 'enabled'):
        group_input_1.outputs[2].enabled = True
    if hasattr(group_input_1.outputs[2], 'hide'):
        group_input_1.outputs[2].hide = False
    if hasattr(group_input_1.outputs[2], 'hide_value'):
        group_input_1.outputs[2].hide_value = False
    if hasattr(group_input_1.outputs[2], 'name'):
        group_input_1.outputs[2].name = 'Roughness'
    if hasattr(group_input_1.outputs[2], 'show_expanded'):
        group_input_1.outputs[2].show_expanded = False
    if hasattr(group_input_1.outputs[3], 'default_value'):
        group_input_1.outputs[3].default_value = 0.2199999988079071
    if hasattr(group_input_1.outputs[3], 'display_shape'):
        group_input_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[3], 'enabled'):
        group_input_1.outputs[3].enabled = True
    if hasattr(group_input_1.outputs[3], 'hide'):
        group_input_1.outputs[3].hide = False
    if hasattr(group_input_1.outputs[3], 'hide_value'):
        group_input_1.outputs[3].hide_value = False
    if hasattr(group_input_1.outputs[3], 'name'):
        group_input_1.outputs[3].name = 'Roughness Black'
    if hasattr(group_input_1.outputs[3], 'show_expanded'):
        group_input_1.outputs[3].show_expanded = False
    if hasattr(group_input_1.outputs[4], 'default_value'):
        group_input_1.outputs[4].default_value = 0.4699999988079071
    if hasattr(group_input_1.outputs[4], 'display_shape'):
        group_input_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[4], 'enabled'):
        group_input_1.outputs[4].enabled = True
    if hasattr(group_input_1.outputs[4], 'hide'):
        group_input_1.outputs[4].hide = False
    if hasattr(group_input_1.outputs[4], 'hide_value'):
        group_input_1.outputs[4].hide_value = False
    if hasattr(group_input_1.outputs[4], 'name'):
        group_input_1.outputs[4].name = 'Roughness White'
    if hasattr(group_input_1.outputs[4], 'show_expanded'):
        group_input_1.outputs[4].show_expanded = False

    #Dust_Gradient Mask
    Dust_gradient_mask_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    Dust_gradient_mask_1.location = (-328.15277099609375, 427.28961181640625)
    PNGtoBITMAP15 = Dust_GradientMask.replace('.png', FileExtension)
    Dust_gradient_mask_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP15))
    Dust_gradient_mask_1.image.colorspace_settings.name = 'Non-Color'
    Dust_gradient_mask_1.label = 'Dust_Gradient Mask'

    #Dust_Normal
    Dust_normal_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    Dust_normal_1.location = (-328.4542236328125, 172.760498046875)
    PNGtoBITMAP16 = Dust_Normal.replace('.png', FileExtension)
    Dust_normal_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP16))
    Dust_normal_1.image.colorspace_settings.name = 'Non-Color'
    Dust_normal_1.label = 'Dust_Normal'

    # LINKS
    node_tree1.links.new(uv_map_1.outputs[0], mapping_1.inputs[0])
    node_tree1.links.new(combine_xyz_1.outputs[0], mapping_1.inputs[3])
    node_tree1.links.new(Dust_normal_1.outputs[0], group_output_1.inputs[2])
    node_tree1.links.new(group_input_1.outputs[3], reroute_001_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[4], reroute_002_1.inputs[0])
    node_tree1.links.new(reroute_001_1.outputs[0], reroute_004_1.inputs[0])
    node_tree1.links.new(reroute_002_1.outputs[0], reroute_005_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[2], reroute_006_1.inputs[0])
    node_tree1.links.new(reroute_006_1.outputs[0], reroute_007_1.inputs[0])
    node_tree1.links.new(mapping_1.outputs[0], reroute_010_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], Dust_gradient_mask_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], reroute_011_1.inputs[0])
    node_tree1.links.new(reroute_011_1.outputs[0], Dust_normal_1.inputs[0])
    node_tree1.links.new(reroute_012_1.outputs[0], reroute_013_1.inputs[0])
    node_tree1.links.new(reroute_013_1.outputs[0], group_output_1.inputs[1])
    node_tree1.links.new(Dust_gradient_mask_1.outputs[0], reroute_014_1.inputs[0])
    node_tree1.links.new(reroute_014_1.outputs[0], reroute_015_1.inputs[0])
    node_tree1.links.new(reroute_015_1.outputs[0], separate_rgb_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[2], reroute_016_1.inputs[0])
    node_tree1.links.new(reroute_016_1.outputs[0], reroute_017_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[0], reroute_018_1.inputs[0])
    node_tree1.links.new(reroute_018_1.outputs[0], reroute_019_1.inputs[0])
    node_tree1.links.new(reroute_019_1.outputs[0], group_output_1.inputs[0])
    node_tree1.links.new(reroute_017_1.outputs[0], math_009_1.inputs[0])
    node_tree1.links.new(reroute_007_1.outputs[0], math_009_1.inputs[1])
    node_tree1.links.new(reroute_004_1.outputs[0], mix_1.inputs[1])
    node_tree1.links.new(reroute_005_1.outputs[0], mix_1.inputs[2])
    node_tree1.links.new(mix_1.outputs[0], reroute_012_1.inputs[0])
    node_tree1.links.new(math_009_1.outputs[0], reroute_020_1.inputs[0])
    node_tree1.links.new(reroute_020_1.outputs[0], reroute_021_1.inputs[0])
    node_tree1.links.new(reroute_021_1.outputs[0], mix_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[1], combine_xyz_1.inputs[1])
    node_tree1.links.new(group_input_1.outputs[0], combine_xyz_1.inputs[0])

group_008_0 = node_tree0.nodes.new('ShaderNodeGroup')
if hasattr(group_008_0, 'node_tree'):
    group_008_0.node_tree = bpy.data.node_groups.get('Dust ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if hasattr(group_008_0, 'color'):
    group_008_0.color = Dust_SwatchNodegroupColor
if hasattr(group_008_0, 'hide'):
    group_008_0.hide = False
if hasattr(group_008_0, 'location'):
    group_008_0.location = (-421.73388671875, -1986.3841552734375)
if hasattr(group_008_0, 'mute'):
    group_008_0.mute = False
if hasattr(group_008_0, 'name'):
    group_008_0.name = 'Group.008'
if hasattr(group_008_0, 'use_custom_color'):
    group_008_0.use_custom_color = True
if hasattr(group_008_0, 'width'):
    group_008_0.width = 250.72528076171875
if hasattr(group_008_0.inputs[0], 'default_value'):
    group_008_0.inputs[0].default_value = Dust_XScale*ArmorRegion
if hasattr(group_008_0.inputs[0], 'display_shape'):
    group_008_0.inputs[0].display_shape = 'CIRCLE'
if hasattr(group_008_0.inputs[0], 'enabled'):
    group_008_0.inputs[0].enabled = True
if hasattr(group_008_0.inputs[0], 'hide'):
    group_008_0.inputs[0].hide = False
if hasattr(group_008_0.inputs[0], 'hide_value'):
    group_008_0.inputs[0].hide_value = False
if hasattr(group_008_0.inputs[0], 'name'):
    group_008_0.inputs[0].name = 'X-Scale'
if hasattr(group_008_0.inputs[0], 'show_expanded'):
    group_008_0.inputs[0].show_expanded = False
if hasattr(group_008_0.inputs[1], 'default_value'):
    group_008_0.inputs[1].default_value = Dust_YScale*ArmorRegion
if hasattr(group_008_0.inputs[1], 'display_shape'):
    group_008_0.inputs[1].display_shape = 'CIRCLE'
if hasattr(group_008_0.inputs[1], 'enabled'):
    group_008_0.inputs[1].enabled = True
if hasattr(group_008_0.inputs[1], 'hide'):
    group_008_0.inputs[1].hide = False
if hasattr(group_008_0.inputs[1], 'hide_value'):
    group_008_0.inputs[1].hide_value = False
if hasattr(group_008_0.inputs[1], 'name'):
    group_008_0.inputs[1].name = 'Y-Scale'
if hasattr(group_008_0.inputs[1], 'show_expanded'):
    group_008_0.inputs[1].show_expanded = False
if hasattr(group_008_0.inputs[2], 'default_value'):
    group_008_0.inputs[2].default_value = Dust_Roughness
if hasattr(group_008_0.inputs[2], 'display_shape'):
    group_008_0.inputs[2].display_shape = 'CIRCLE'
if hasattr(group_008_0.inputs[2], 'enabled'):
    group_008_0.inputs[2].enabled = True
if hasattr(group_008_0.inputs[2], 'hide'):
    group_008_0.inputs[2].hide = False
if hasattr(group_008_0.inputs[2], 'hide_value'):
    group_008_0.inputs[2].hide_value = False
if hasattr(group_008_0.inputs[2], 'name'):
    group_008_0.inputs[2].name = 'Roughness'
if hasattr(group_008_0.inputs[2], 'show_expanded'):
    group_008_0.inputs[2].show_expanded = False
if hasattr(group_008_0.inputs[3], 'default_value'):
    group_008_0.inputs[3].default_value = Dust_RoughnessBlack
if hasattr(group_008_0.inputs[3], 'display_shape'):
    group_008_0.inputs[3].display_shape = 'CIRCLE'
if hasattr(group_008_0.inputs[3], 'enabled'):
    group_008_0.inputs[3].enabled = True
if hasattr(group_008_0.inputs[3], 'hide'):
    group_008_0.inputs[3].hide = False
if hasattr(group_008_0.inputs[3], 'hide_value'):
    group_008_0.inputs[3].hide_value = False
if hasattr(group_008_0.inputs[3], 'name'):
    group_008_0.inputs[3].name = 'Roughness Black'
if hasattr(group_008_0.inputs[3], 'show_expanded'):
    group_008_0.inputs[3].show_expanded = False
if hasattr(group_008_0.inputs[4], 'default_value'):
    group_008_0.inputs[4].default_value = Dust_RoughnessWhite
if hasattr(group_008_0.inputs[4], 'display_shape'):
    group_008_0.inputs[4].display_shape = 'CIRCLE'
if hasattr(group_008_0.inputs[4], 'enabled'):
    group_008_0.inputs[4].enabled = True
if hasattr(group_008_0.inputs[4], 'hide'):
    group_008_0.inputs[4].hide = False
if hasattr(group_008_0.inputs[4], 'hide_value'):
    group_008_0.inputs[4].hide_value = False
if hasattr(group_008_0.inputs[4], 'name'):
    group_008_0.inputs[4].name = 'Roughness White'
if hasattr(group_008_0.inputs[4], 'show_expanded'):
    group_008_0.inputs[4].show_expanded = False
if hasattr(group_008_0.outputs[0], 'default_value'):
    group_008_0.outputs[0].default_value = 0.0
if hasattr(group_008_0.outputs[0], 'display_shape'):
    group_008_0.outputs[0].display_shape = 'CIRCLE'
if hasattr(group_008_0.outputs[0], 'enabled'):
    group_008_0.outputs[0].enabled = True
if hasattr(group_008_0.outputs[0], 'hide'):
    group_008_0.outputs[0].hide = False
if hasattr(group_008_0.outputs[0], 'hide_value'):
    group_008_0.outputs[0].hide_value = False
if hasattr(group_008_0.outputs[0], 'name'):
    group_008_0.outputs[0].name = 'Gradient Out'
if hasattr(group_008_0.outputs[0], 'show_expanded'):
    group_008_0.outputs[0].show_expanded = False
if hasattr(group_008_0.outputs[1], 'default_value'):
    group_008_0.outputs[1].default_value = 0.0
if hasattr(group_008_0.outputs[1], 'display_shape'):
    group_008_0.outputs[1].display_shape = 'CIRCLE'
if hasattr(group_008_0.outputs[1], 'enabled'):
    group_008_0.outputs[1].enabled = True
if hasattr(group_008_0.outputs[1], 'hide'):
    group_008_0.outputs[1].hide = False
if hasattr(group_008_0.outputs[1], 'hide_value'):
    group_008_0.outputs[1].hide_value = False
if hasattr(group_008_0.outputs[1], 'name'):
    group_008_0.outputs[1].name = 'Rough Out'
if hasattr(group_008_0.outputs[1], 'show_expanded'):
    group_008_0.outputs[1].show_expanded = False
if hasattr(group_008_0.outputs[2], 'default_value'):
    group_008_0.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_008_0.outputs[2], 'display_shape'):
    group_008_0.outputs[2].display_shape = 'CIRCLE'
if hasattr(group_008_0.outputs[2], 'enabled'):
    group_008_0.outputs[2].enabled = True
if hasattr(group_008_0.outputs[2], 'hide'):
    group_008_0.outputs[2].hide = False
if hasattr(group_008_0.outputs[2], 'hide_value'):
    group_008_0.outputs[2].hide_value = False
if hasattr(group_008_0.outputs[2], 'name'):
    group_008_0.outputs[2].name = 'Norm Out'
if hasattr(group_008_0.outputs[2], 'show_expanded'):
    group_008_0.outputs[2].show_expanded = False

node_tree1 = bpy.data.node_groups.get('Grime ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if not node_tree1:
    node_tree1 = bpy.data.node_groups.new('Grime ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber), 'ShaderNodeTree')
    for node in node_tree1.nodes:
        node_tree1.nodes.remove(node)
    # INPUTS
    input = node_tree1.inputs.new('NodeSocketFloat', 'X-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'X-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Y-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Y-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.5
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness Black')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.2199999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness Black'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness White')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.4699999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness White'
    # OUTPUTS
    output = node_tree1.outputs.new('NodeSocketFloat', 'Gradient Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Gradient Out'
    output = node_tree1.outputs.new('NodeSocketFloat', 'Rough Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Rough Out'
    output = node_tree1.outputs.new('NodeSocketColor', 'Norm Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Norm Out'
    # NODES
    yuns_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    if hasattr(yuns_1, 'color'):
        yuns_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(yuns_1, 'extension'):
        yuns_1.extension = 'REPEAT'
    if hasattr(yuns_1, 'hide'):
        yuns_1.hide = False
    if hasattr(yuns_1, 'interpolation'):
        yuns_1.interpolation = 'Linear'
    if hasattr(yuns_1, 'location'):
        yuns_1.location = (-2307.30029296875, -1949.81494140625)
    if hasattr(yuns_1, 'mute'):
        yuns_1.mute = False
    if hasattr(yuns_1, 'name'):
        yuns_1.name = 'yuns'
    if hasattr(yuns_1, 'projection'):
        yuns_1.projection = 'FLAT'
    if hasattr(yuns_1, 'projection_blend'):
        yuns_1.projection_blend = 0.0
    if hasattr(yuns_1, 'use_custom_color'):
        yuns_1.use_custom_color = False
    if hasattr(yuns_1, 'width'):
        yuns_1.width = 240.0
    input_ = next((input_ for input_ in yuns_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = True
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in yuns_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in yuns_1.outputs if output.identifier=='Alpha'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Alpha'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_014_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_014_1, 'color'):
        reroute_014_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_014_1, 'hide'):
        reroute_014_1.hide = False
    if hasattr(reroute_014_1, 'location'):
        reroute_014_1.location = (-49.86090087890625, 392.07806396484375)
    if hasattr(reroute_014_1, 'mute'):
        reroute_014_1.mute = False
    if hasattr(reroute_014_1, 'name'):
        reroute_014_1.name = 'Reroute.014'
    if hasattr(reroute_014_1, 'use_custom_color'):
        reroute_014_1.use_custom_color = False
    if hasattr(reroute_014_1, 'width'):
        reroute_014_1.width = 16.0

    reroute_016_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_016_1, 'color'):
        reroute_016_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_016_1, 'hide'):
        reroute_016_1.hide = False
    if hasattr(reroute_016_1, 'location'):
        reroute_016_1.location = (144.52618408203125, 215.85797119140625)
    if hasattr(reroute_016_1, 'mute'):
        reroute_016_1.mute = False
    if hasattr(reroute_016_1, 'name'):
        reroute_016_1.name = 'Reroute.016'
    if hasattr(reroute_016_1, 'use_custom_color'):
        reroute_016_1.use_custom_color = False
    if hasattr(reroute_016_1, 'width'):
        reroute_016_1.width = 16.0

    reroute_018_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_018_1, 'color'):
        reroute_018_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_018_1, 'hide'):
        reroute_018_1.hide = False
    if hasattr(reroute_018_1, 'location'):
        reroute_018_1.location = (178.88592529296875, 259.3858642578125)
    if hasattr(reroute_018_1, 'mute'):
        reroute_018_1.mute = False
    if hasattr(reroute_018_1, 'name'):
        reroute_018_1.name = 'Reroute.018'
    if hasattr(reroute_018_1, 'use_custom_color'):
        reroute_018_1.use_custom_color = False
    if hasattr(reroute_018_1, 'width'):
        reroute_018_1.width = 16.0

    reroute_019_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_019_1, 'color'):
        reroute_019_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_019_1, 'hide'):
        reroute_019_1.hide = False
    if hasattr(reroute_019_1, 'location'):
        reroute_019_1.location = (178.88592529296875, 182.964599609375)
    if hasattr(reroute_019_1, 'mute'):
        reroute_019_1.mute = False
    if hasattr(reroute_019_1, 'name'):
        reroute_019_1.name = 'Reroute.019'
    if hasattr(reroute_019_1, 'use_custom_color'):
        reroute_019_1.use_custom_color = False
    if hasattr(reroute_019_1, 'width'):
        reroute_019_1.width = 16.0

    reroute_017_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_017_1, 'color'):
        reroute_017_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_017_1, 'hide'):
        reroute_017_1.hide = False
    if hasattr(reroute_017_1, 'location'):
        reroute_017_1.location = (144.52618408203125, -275.09521484375)
    if hasattr(reroute_017_1, 'mute'):
        reroute_017_1.mute = False
    if hasattr(reroute_017_1, 'name'):
        reroute_017_1.name = 'Reroute.017'
    if hasattr(reroute_017_1, 'use_custom_color'):
        reroute_017_1.use_custom_color = False
    if hasattr(reroute_017_1, 'width'):
        reroute_017_1.width = 16.0

    math_009_1 = node_tree1.nodes.new('ShaderNodeMath')
    if hasattr(math_009_1, 'color'):
        math_009_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(math_009_1, 'hide'):
        math_009_1.hide = False
    if hasattr(math_009_1, 'location'):
        math_009_1.location = (180.58067321777344, -160.00445556640625)
    if hasattr(math_009_1, 'mute'):
        math_009_1.mute = False
    if hasattr(math_009_1, 'name'):
        math_009_1.name = 'Math.009'
    if hasattr(math_009_1, 'operation'):
        math_009_1.operation = 'MULTIPLY'
    if hasattr(math_009_1, 'use_clamp'):
        math_009_1.use_clamp = False
    if hasattr(math_009_1, 'use_custom_color'):
        math_009_1.use_custom_color = False
    if hasattr(math_009_1, 'width'):
        math_009_1.width = 140.0
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_001'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_002'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in math_009_1.outputs if output.identifier=='Value'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Value'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_021_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_021_1, 'color'):
        reroute_021_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_021_1, 'hide'):
        reroute_021_1.hide = False
    if hasattr(reroute_021_1, 'location'):
        reroute_021_1.location = (363.6356506347656, -320.47210693359375)
    if hasattr(reroute_021_1, 'mute'):
        reroute_021_1.mute = False
    if hasattr(reroute_021_1, 'name'):
        reroute_021_1.name = 'Reroute.021'
    if hasattr(reroute_021_1, 'use_custom_color'):
        reroute_021_1.use_custom_color = False
    if hasattr(reroute_021_1, 'width'):
        reroute_021_1.width = 16.0

    reroute_020_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_020_1, 'color'):
        reroute_020_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_020_1, 'hide'):
        reroute_020_1.hide = False
    if hasattr(reroute_020_1, 'location'):
        reroute_020_1.location = (363.6356506347656, -195.1111297607422)
    if hasattr(reroute_020_1, 'mute'):
        reroute_020_1.mute = False
    if hasattr(reroute_020_1, 'name'):
        reroute_020_1.name = 'Reroute.020'
    if hasattr(reroute_020_1, 'use_custom_color'):
        reroute_020_1.use_custom_color = False
    if hasattr(reroute_020_1, 'width'):
        reroute_020_1.width = 16.0

    reroute_012_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_012_1, 'color'):
        reroute_012_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_012_1, 'hide'):
        reroute_012_1.hide = False
    if hasattr(reroute_012_1, 'location'):
        reroute_012_1.location = (588.7369384765625, -242.4521942138672)
    if hasattr(reroute_012_1, 'mute'):
        reroute_012_1.mute = False
    if hasattr(reroute_012_1, 'name'):
        reroute_012_1.name = 'Reroute.012'
    if hasattr(reroute_012_1, 'use_custom_color'):
        reroute_012_1.use_custom_color = False
    if hasattr(reroute_012_1, 'width'):
        reroute_012_1.width = 16.0

    uv_map_1 = node_tree1.nodes.new('ShaderNodeUVMap')
    if hasattr(uv_map_1, 'color'):
        uv_map_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(uv_map_1, 'from_instancer'):
        uv_map_1.from_instancer = False
    if hasattr(uv_map_1, 'hide'):
        uv_map_1.hide = False
    if hasattr(uv_map_1, 'location'):
        uv_map_1.location = (-722.135009765625, 171.312255859375)
    if hasattr(uv_map_1, 'mute'):
        uv_map_1.mute = False
    if hasattr(uv_map_1, 'name'):
        uv_map_1.name = 'UV Map'
    if hasattr(uv_map_1, 'use_custom_color'):
        uv_map_1.use_custom_color = False
    if hasattr(uv_map_1, 'uv_map'):
        uv_map_1.uv_map = 'UV1'
    if hasattr(uv_map_1, 'width'):
        uv_map_1.width = 150.0
    output = next((output for output in uv_map_1.outputs if output.identifier=='UV'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'UV'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    mapping_1 = node_tree1.nodes.new('ShaderNodeMapping')
    if hasattr(mapping_1, 'color'):
        mapping_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mapping_1, 'hide'):
        mapping_1.hide = False
    if hasattr(mapping_1, 'location'):
        mapping_1.location = (-534.63330078125, 225.75634765625)
    if hasattr(mapping_1, 'mute'):
        mapping_1.mute = False
    if hasattr(mapping_1, 'name'):
        mapping_1.name = 'Mapping'
    if hasattr(mapping_1, 'use_custom_color'):
        mapping_1.use_custom_color = False
    if hasattr(mapping_1, 'vector_type'):
        mapping_1.vector_type = 'POINT'
    if hasattr(mapping_1, 'width'):
        mapping_1.width = 140.0
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Location'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Location'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Rotation'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Rotation'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Scale'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (4.0, 4.0, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Scale'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mapping_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_010_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_010_1, 'color'):
        reroute_010_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_010_1, 'hide'):
        reroute_010_1.hide = False
    if hasattr(reroute_010_1, 'location'):
        reroute_010_1.location = (-360.4864501953125, 190.916259765625)
    if hasattr(reroute_010_1, 'mute'):
        reroute_010_1.mute = False
    if hasattr(reroute_010_1, 'name'):
        reroute_010_1.name = 'Reroute.010'
    if hasattr(reroute_010_1, 'use_custom_color'):
        reroute_010_1.use_custom_color = False
    if hasattr(reroute_010_1, 'width'):
        reroute_010_1.width = 16.0

    reroute_011_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_011_1, 'color'):
        reroute_011_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_011_1, 'hide'):
        reroute_011_1.hide = False
    if hasattr(reroute_011_1, 'location'):
        reroute_011_1.location = (-360.4864501953125, -63.42291259765625)
    if hasattr(reroute_011_1, 'mute'):
        reroute_011_1.mute = False
    if hasattr(reroute_011_1, 'name'):
        reroute_011_1.name = 'Reroute.011'
    if hasattr(reroute_011_1, 'use_custom_color'):
        reroute_011_1.use_custom_color = False
    if hasattr(reroute_011_1, 'width'):
        reroute_011_1.width = 16.0

    reroute_015_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_015_1, 'color'):
        reroute_015_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_015_1, 'hide'):
        reroute_015_1.hide = False
    if hasattr(reroute_015_1, 'location'):
        reroute_015_1.location = (-49.86090087890625, 190.421142578125)
    if hasattr(reroute_015_1, 'mute'):
        reroute_015_1.mute = False
    if hasattr(reroute_015_1, 'name'):
        reroute_015_1.name = 'Reroute.015'
    if hasattr(reroute_015_1, 'use_custom_color'):
        reroute_015_1.use_custom_color = False
    if hasattr(reroute_015_1, 'width'):
        reroute_015_1.width = 16.0

    separate_rgb_1 = node_tree1.nodes.new('ShaderNodeSeparateRGB')
    if hasattr(separate_rgb_1, 'color'):
        separate_rgb_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(separate_rgb_1, 'hide'):
        separate_rgb_1.hide = False
    if hasattr(separate_rgb_1, 'location'):
        separate_rgb_1.location = (-23.7783203125, 294.257080078125)
    if hasattr(separate_rgb_1, 'mute'):
        separate_rgb_1.mute = False
    if hasattr(separate_rgb_1, 'name'):
        separate_rgb_1.name = 'Separate RGB'
    if hasattr(separate_rgb_1, 'use_custom_color'):
        separate_rgb_1.use_custom_color = False
    if hasattr(separate_rgb_1, 'width'):
        separate_rgb_1.width = 140.0
    input_ = next((input_ for input_ in separate_rgb_1.inputs if input_.identifier=='Image'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Image'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='R'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'R'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='G'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'G'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='B'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'B'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    combine_xyz_1 = node_tree1.nodes.new('ShaderNodeCombineXYZ')
    if hasattr(combine_xyz_1, 'color'):
        combine_xyz_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(combine_xyz_1, 'hide'):
        combine_xyz_1.hide = False
    if hasattr(combine_xyz_1, 'location'):
        combine_xyz_1.location = (-799.850341796875, -14.884613037109375)
    if hasattr(combine_xyz_1, 'mute'):
        combine_xyz_1.mute = False
    if hasattr(combine_xyz_1, 'name'):
        combine_xyz_1.name = 'Combine XYZ'
    if hasattr(combine_xyz_1, 'use_custom_color'):
        combine_xyz_1.use_custom_color = False
    if hasattr(combine_xyz_1, 'width'):
        combine_xyz_1.width = 140.0
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='X'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'X'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Y'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Y'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Z'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Z'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in combine_xyz_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_004_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_004_1, 'color'):
        reroute_004_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_004_1, 'hide'):
        reroute_004_1.hide = False
    if hasattr(reroute_004_1, 'location'):
        reroute_004_1.location = (-858.0992431640625, -341.5549621582031)
    if hasattr(reroute_004_1, 'mute'):
        reroute_004_1.mute = False
    if hasattr(reroute_004_1, 'name'):
        reroute_004_1.name = 'Reroute.004'
    if hasattr(reroute_004_1, 'use_custom_color'):
        reroute_004_1.use_custom_color = False
    if hasattr(reroute_004_1, 'width'):
        reroute_004_1.width = 16.0

    reroute_005_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_005_1, 'color'):
        reroute_005_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_005_1, 'hide'):
        reroute_005_1.hide = False
    if hasattr(reroute_005_1, 'location'):
        reroute_005_1.location = (-877.3994140625, -364.527099609375)
    if hasattr(reroute_005_1, 'mute'):
        reroute_005_1.mute = False
    if hasattr(reroute_005_1, 'name'):
        reroute_005_1.name = 'Reroute.005'
    if hasattr(reroute_005_1, 'use_custom_color'):
        reroute_005_1.use_custom_color = False
    if hasattr(reroute_005_1, 'width'):
        reroute_005_1.width = 16.0

    reroute_001_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_001_1, 'color'):
        reroute_001_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_001_1, 'hide'):
        reroute_001_1.hide = False
    if hasattr(reroute_001_1, 'location'):
        reroute_001_1.location = (-858.38818359375, -141.572021484375)
    if hasattr(reroute_001_1, 'mute'):
        reroute_001_1.mute = False
    if hasattr(reroute_001_1, 'name'):
        reroute_001_1.name = 'Reroute.001'
    if hasattr(reroute_001_1, 'use_custom_color'):
        reroute_001_1.use_custom_color = False
    if hasattr(reroute_001_1, 'width'):
        reroute_001_1.width = 16.0

    reroute_002_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_002_1, 'color'):
        reroute_002_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_002_1, 'hide'):
        reroute_002_1.hide = False
    if hasattr(reroute_002_1, 'location'):
        reroute_002_1.location = (-877.4599609375, -163.257080078125)
    if hasattr(reroute_002_1, 'mute'):
        reroute_002_1.mute = False
    if hasattr(reroute_002_1, 'name'):
        reroute_002_1.name = 'Reroute.002'
    if hasattr(reroute_002_1, 'use_custom_color'):
        reroute_002_1.use_custom_color = False
    if hasattr(reroute_002_1, 'width'):
        reroute_002_1.width = 16.0

    reroute_006_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_006_1, 'color'):
        reroute_006_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_006_1, 'hide'):
        reroute_006_1.hide = False
    if hasattr(reroute_006_1, 'location'):
        reroute_006_1.location = (-836.59033203125, -119.03997802734375)
    if hasattr(reroute_006_1, 'mute'):
        reroute_006_1.mute = False
    if hasattr(reroute_006_1, 'name'):
        reroute_006_1.name = 'Reroute.006'
    if hasattr(reroute_006_1, 'use_custom_color'):
        reroute_006_1.use_custom_color = False
    if hasattr(reroute_006_1, 'width'):
        reroute_006_1.width = 16.0

    reroute_007_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_007_1, 'color'):
        reroute_007_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_007_1, 'hide'):
        reroute_007_1.hide = False
    if hasattr(reroute_007_1, 'location'):
        reroute_007_1.location = (-836.59033203125, -296.6325988769531)
    if hasattr(reroute_007_1, 'mute'):
        reroute_007_1.mute = False
    if hasattr(reroute_007_1, 'name'):
        reroute_007_1.name = 'Reroute.007'
    if hasattr(reroute_007_1, 'use_custom_color'):
        reroute_007_1.use_custom_color = False
    if hasattr(reroute_007_1, 'width'):
        reroute_007_1.width = 16.0

    reroute_013_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_013_1, 'color'):
        reroute_013_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_013_1, 'hide'):
        reroute_013_1.hide = False
    if hasattr(reroute_013_1, 'location'):
        reroute_013_1.location = (588.7369384765625, 159.65426635742188)
    if hasattr(reroute_013_1, 'mute'):
        reroute_013_1.mute = False
    if hasattr(reroute_013_1, 'name'):
        reroute_013_1.name = 'Reroute.013'
    if hasattr(reroute_013_1, 'use_custom_color'):
        reroute_013_1.use_custom_color = False
    if hasattr(reroute_013_1, 'width'):
        reroute_013_1.width = 16.0

    group_output_1 = node_tree1.nodes.new('NodeGroupOutput')
    if hasattr(group_output_1, 'color'):
        group_output_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_output_1, 'hide'):
        group_output_1.hide = False
    if hasattr(group_output_1, 'is_active_output'):
        group_output_1.is_active_output = True
    if hasattr(group_output_1, 'location'):
        group_output_1.location = (629.4588623046875, 216.9207763671875)
    if hasattr(group_output_1, 'mute'):
        group_output_1.mute = False
    if hasattr(group_output_1, 'name'):
        group_output_1.name = 'Group Output'
    if hasattr(group_output_1, 'use_custom_color'):
        group_output_1.use_custom_color = False
    if hasattr(group_output_1, 'width'):
        group_output_1.width = 140.0
    if hasattr(group_output_1.inputs[0], 'default_value'):
        group_output_1.inputs[0].default_value = 0.0
    if hasattr(group_output_1.inputs[0], 'display_shape'):
        group_output_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[0], 'enabled'):
        group_output_1.inputs[0].enabled = True
    if hasattr(group_output_1.inputs[0], 'hide'):
        group_output_1.inputs[0].hide = False
    if hasattr(group_output_1.inputs[0], 'hide_value'):
        group_output_1.inputs[0].hide_value = False
    if hasattr(group_output_1.inputs[0], 'name'):
        group_output_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_output_1.inputs[0], 'show_expanded'):
        group_output_1.inputs[0].show_expanded = False
    if hasattr(group_output_1.inputs[1], 'default_value'):
        group_output_1.inputs[1].default_value = 0.0
    if hasattr(group_output_1.inputs[1], 'display_shape'):
        group_output_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[1], 'enabled'):
        group_output_1.inputs[1].enabled = True
    if hasattr(group_output_1.inputs[1], 'hide'):
        group_output_1.inputs[1].hide = False
    if hasattr(group_output_1.inputs[1], 'hide_value'):
        group_output_1.inputs[1].hide_value = False
    if hasattr(group_output_1.inputs[1], 'name'):
        group_output_1.inputs[1].name = 'Rough Out'
    if hasattr(group_output_1.inputs[1], 'show_expanded'):
        group_output_1.inputs[1].show_expanded = False
    if hasattr(group_output_1.inputs[2], 'default_value'):
        group_output_1.inputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[2], 'display_shape'):
        group_output_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[2], 'enabled'):
        group_output_1.inputs[2].enabled = True
    if hasattr(group_output_1.inputs[2], 'hide'):
        group_output_1.inputs[2].hide = False
    if hasattr(group_output_1.inputs[2], 'hide_value'):
        group_output_1.inputs[2].hide_value = False
    if hasattr(group_output_1.inputs[2], 'name'):
        group_output_1.inputs[2].name = 'Norm Out'
    if hasattr(group_output_1.inputs[2], 'show_expanded'):
        group_output_1.inputs[2].show_expanded = False

    mix_1 = node_tree1.nodes.new('ShaderNodeMixRGB')
    if hasattr(mix_1, 'blend_type'):
        mix_1.blend_type = 'MIX'
    if hasattr(mix_1, 'color'):
        mix_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_1, 'hide'):
        mix_1.hide = False
    if hasattr(mix_1, 'location'):
        mix_1.location = (401.4825134277344, -207.88519287109375)
    if hasattr(mix_1, 'mute'):
        mix_1.mute = False
    if hasattr(mix_1, 'name'):
        mix_1.name = 'Mix'
    if hasattr(mix_1, 'use_alpha'):
        mix_1.use_alpha = False
    if hasattr(mix_1, 'use_clamp'):
        mix_1.use_clamp = True
    if hasattr(mix_1, 'use_custom_color'):
        mix_1.use_custom_color = False
    if hasattr(mix_1, 'width'):
        mix_1.width = 140.0
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color1'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color1'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color2'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color2'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mix_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_input_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_1, 'color'):
        group_input_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_1, 'hide'):
        group_input_1.hide = False
    if hasattr(group_input_1, 'location'):
        group_input_1.location = (-1048.383056640625, -40.007965087890625)
    if hasattr(group_input_1, 'mute'):
        group_input_1.mute = False
    if hasattr(group_input_1, 'name'):
        group_input_1.name = 'Group Input'
    if hasattr(group_input_1, 'use_custom_color'):
        group_input_1.use_custom_color = False
    if hasattr(group_input_1, 'width'):
        group_input_1.width = 140.0
    if hasattr(group_input_1.outputs[0], 'default_value'):
        group_input_1.outputs[0].default_value = 0.0
    if hasattr(group_input_1.outputs[0], 'display_shape'):
        group_input_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[0], 'enabled'):
        group_input_1.outputs[0].enabled = True
    if hasattr(group_input_1.outputs[0], 'hide'):
        group_input_1.outputs[0].hide = False
    if hasattr(group_input_1.outputs[0], 'hide_value'):
        group_input_1.outputs[0].hide_value = False
    if hasattr(group_input_1.outputs[0], 'name'):
        group_input_1.outputs[0].name = 'X-Scale'
    if hasattr(group_input_1.outputs[0], 'show_expanded'):
        group_input_1.outputs[0].show_expanded = False
    if hasattr(group_input_1.outputs[1], 'default_value'):
        group_input_1.outputs[1].default_value = 0.0
    if hasattr(group_input_1.outputs[1], 'display_shape'):
        group_input_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[1], 'enabled'):
        group_input_1.outputs[1].enabled = True
    if hasattr(group_input_1.outputs[1], 'hide'):
        group_input_1.outputs[1].hide = False
    if hasattr(group_input_1.outputs[1], 'hide_value'):
        group_input_1.outputs[1].hide_value = False
    if hasattr(group_input_1.outputs[1], 'name'):
        group_input_1.outputs[1].name = 'Y-Scale'
    if hasattr(group_input_1.outputs[1], 'show_expanded'):
        group_input_1.outputs[1].show_expanded = False
    if hasattr(group_input_1.outputs[2], 'default_value'):
        group_input_1.outputs[2].default_value = 0.5
    if hasattr(group_input_1.outputs[2], 'display_shape'):
        group_input_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[2], 'enabled'):
        group_input_1.outputs[2].enabled = True
    if hasattr(group_input_1.outputs[2], 'hide'):
        group_input_1.outputs[2].hide = False
    if hasattr(group_input_1.outputs[2], 'hide_value'):
        group_input_1.outputs[2].hide_value = False
    if hasattr(group_input_1.outputs[2], 'name'):
        group_input_1.outputs[2].name = 'Roughness'
    if hasattr(group_input_1.outputs[2], 'show_expanded'):
        group_input_1.outputs[2].show_expanded = False
    if hasattr(group_input_1.outputs[3], 'default_value'):
        group_input_1.outputs[3].default_value = 0.2199999988079071
    if hasattr(group_input_1.outputs[3], 'display_shape'):
        group_input_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[3], 'enabled'):
        group_input_1.outputs[3].enabled = True
    if hasattr(group_input_1.outputs[3], 'hide'):
        group_input_1.outputs[3].hide = False
    if hasattr(group_input_1.outputs[3], 'hide_value'):
        group_input_1.outputs[3].hide_value = False
    if hasattr(group_input_1.outputs[3], 'name'):
        group_input_1.outputs[3].name = 'Roughness Black'
    if hasattr(group_input_1.outputs[3], 'show_expanded'):
        group_input_1.outputs[3].show_expanded = False
    if hasattr(group_input_1.outputs[4], 'default_value'):
        group_input_1.outputs[4].default_value = 0.4699999988079071
    if hasattr(group_input_1.outputs[4], 'display_shape'):
        group_input_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[4], 'enabled'):
        group_input_1.outputs[4].enabled = True
    if hasattr(group_input_1.outputs[4], 'hide'):
        group_input_1.outputs[4].hide = False
    if hasattr(group_input_1.outputs[4], 'hide_value'):
        group_input_1.outputs[4].hide_value = False
    if hasattr(group_input_1.outputs[4], 'name'):
        group_input_1.outputs[4].name = 'Roughness White'
    if hasattr(group_input_1.outputs[4], 'show_expanded'):
        group_input_1.outputs[4].show_expanded = False

    #Grime_Gradient Mask
    grime_gradient_mask_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    grime_gradient_mask_1.location = (-328.15277099609375, 427.28961181640625)
    PNGtoBITMAP13 = Grime_GradientMask.replace('.png', FileExtension)
    grime_gradient_mask_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP13))
    grime_gradient_mask_1.image.colorspace_settings.name = 'Non-Color'
    grime_gradient_mask_1.label = 'Grime_Gradient Mask'

    #Grime_Normal
    grime_normal_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    grime_normal_1.location = (-328.4542236328125, 172.760498046875)
    PNGtoBITMAP14 = Grime_Normal.replace('.png', FileExtension)
    grime_normal_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP14))
    grime_normal_1.image.colorspace_settings.name = 'Non-Color'
    grime_normal_1.label = 'Grime_Normal'

    # LINKS
    node_tree1.links.new(uv_map_1.outputs[0], mapping_1.inputs[0])
    node_tree1.links.new(combine_xyz_1.outputs[0], mapping_1.inputs[3])
    node_tree1.links.new(grime_normal_1.outputs[0], group_output_1.inputs[2])
    node_tree1.links.new(group_input_1.outputs[3], reroute_001_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[4], reroute_002_1.inputs[0])
    node_tree1.links.new(reroute_001_1.outputs[0], reroute_004_1.inputs[0])
    node_tree1.links.new(reroute_002_1.outputs[0], reroute_005_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[2], reroute_006_1.inputs[0])
    node_tree1.links.new(reroute_006_1.outputs[0], reroute_007_1.inputs[0])
    node_tree1.links.new(mapping_1.outputs[0], reroute_010_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], grime_gradient_mask_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], reroute_011_1.inputs[0])
    node_tree1.links.new(reroute_011_1.outputs[0], grime_normal_1.inputs[0])
    node_tree1.links.new(reroute_012_1.outputs[0], reroute_013_1.inputs[0])
    node_tree1.links.new(reroute_013_1.outputs[0], group_output_1.inputs[1])
    node_tree1.links.new(grime_gradient_mask_1.outputs[0], reroute_014_1.inputs[0])
    node_tree1.links.new(reroute_014_1.outputs[0], reroute_015_1.inputs[0])
    node_tree1.links.new(reroute_015_1.outputs[0], separate_rgb_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[2], reroute_016_1.inputs[0])
    node_tree1.links.new(reroute_016_1.outputs[0], reroute_017_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[0], reroute_018_1.inputs[0])
    node_tree1.links.new(reroute_018_1.outputs[0], reroute_019_1.inputs[0])
    node_tree1.links.new(reroute_019_1.outputs[0], group_output_1.inputs[0])
    node_tree1.links.new(reroute_017_1.outputs[0], math_009_1.inputs[0])
    node_tree1.links.new(reroute_007_1.outputs[0], math_009_1.inputs[1])
    node_tree1.links.new(reroute_004_1.outputs[0], mix_1.inputs[1])
    node_tree1.links.new(reroute_005_1.outputs[0], mix_1.inputs[2])
    node_tree1.links.new(mix_1.outputs[0], reroute_012_1.inputs[0])
    node_tree1.links.new(math_009_1.outputs[0], reroute_020_1.inputs[0])
    node_tree1.links.new(reroute_020_1.outputs[0], reroute_021_1.inputs[0])
    node_tree1.links.new(reroute_021_1.outputs[0], mix_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[1], combine_xyz_1.inputs[1])
    node_tree1.links.new(group_input_1.outputs[0], combine_xyz_1.inputs[0])

group_009_0 = node_tree0.nodes.new('ShaderNodeGroup')
if hasattr(group_009_0, 'node_tree'):
    group_009_0.node_tree = bpy.data.node_groups.get('Grime ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if hasattr(group_009_0, 'color'):
    group_009_0.color = Grime_SwatchNodegroupColor
if hasattr(group_009_0, 'hide'):
    group_009_0.hide = False
if hasattr(group_009_0, 'location'):
    group_009_0.location = (-421.73388671875, -1721.898681640625)
if hasattr(group_009_0, 'mute'):
    group_009_0.mute = False
if hasattr(group_009_0, 'name'):
    group_009_0.name = 'Group.009'
if hasattr(group_009_0, 'use_custom_color'):
    group_009_0.use_custom_color = True
if hasattr(group_009_0, 'width'):
    group_009_0.width = 250.72528076171875
if hasattr(group_009_0.inputs[0], 'default_value'):
    group_009_0.inputs[0].default_value = Grime_XScale*ArmorRegion
if hasattr(group_009_0.inputs[0], 'display_shape'):
    group_009_0.inputs[0].display_shape = 'CIRCLE'
if hasattr(group_009_0.inputs[0], 'enabled'):
    group_009_0.inputs[0].enabled = True
if hasattr(group_009_0.inputs[0], 'hide'):
    group_009_0.inputs[0].hide = False
if hasattr(group_009_0.inputs[0], 'hide_value'):
    group_009_0.inputs[0].hide_value = False
if hasattr(group_009_0.inputs[0], 'name'):
    group_009_0.inputs[0].name = 'X-Scale'
if hasattr(group_009_0.inputs[0], 'show_expanded'):
    group_009_0.inputs[0].show_expanded = False
if hasattr(group_009_0.inputs[1], 'default_value'):
    group_009_0.inputs[1].default_value = Grime_YScale*ArmorRegion
if hasattr(group_009_0.inputs[1], 'display_shape'):
    group_009_0.inputs[1].display_shape = 'CIRCLE'
if hasattr(group_009_0.inputs[1], 'enabled'):
    group_009_0.inputs[1].enabled = True
if hasattr(group_009_0.inputs[1], 'hide'):
    group_009_0.inputs[1].hide = False
if hasattr(group_009_0.inputs[1], 'hide_value'):
    group_009_0.inputs[1].hide_value = False
if hasattr(group_009_0.inputs[1], 'name'):
    group_009_0.inputs[1].name = 'Y-Scale'
if hasattr(group_009_0.inputs[1], 'show_expanded'):
    group_009_0.inputs[1].show_expanded = False
if hasattr(group_009_0.inputs[2], 'default_value'):
    group_009_0.inputs[2].default_value = Grime_Roughness
if hasattr(group_009_0.inputs[2], 'display_shape'):
    group_009_0.inputs[2].display_shape = 'CIRCLE'
if hasattr(group_009_0.inputs[2], 'enabled'):
    group_009_0.inputs[2].enabled = True
if hasattr(group_009_0.inputs[2], 'hide'):
    group_009_0.inputs[2].hide = False
if hasattr(group_009_0.inputs[2], 'hide_value'):
    group_009_0.inputs[2].hide_value = False
if hasattr(group_009_0.inputs[2], 'name'):
    group_009_0.inputs[2].name = 'Roughness'
if hasattr(group_009_0.inputs[2], 'show_expanded'):
    group_009_0.inputs[2].show_expanded = False
if hasattr(group_009_0.inputs[3], 'default_value'):
    group_009_0.inputs[3].default_value = Grime_RoughnessBlack
if hasattr(group_009_0.inputs[3], 'display_shape'):
    group_009_0.inputs[3].display_shape = 'CIRCLE'
if hasattr(group_009_0.inputs[3], 'enabled'):
    group_009_0.inputs[3].enabled = True
if hasattr(group_009_0.inputs[3], 'hide'):
    group_009_0.inputs[3].hide = False
if hasattr(group_009_0.inputs[3], 'hide_value'):
    group_009_0.inputs[3].hide_value = False
if hasattr(group_009_0.inputs[3], 'name'):
    group_009_0.inputs[3].name = 'Roughness Black'
if hasattr(group_009_0.inputs[3], 'show_expanded'):
    group_009_0.inputs[3].show_expanded = False
if hasattr(group_009_0.inputs[4], 'default_value'):
    group_009_0.inputs[4].default_value = Grime_RoughnessWhite
if hasattr(group_009_0.inputs[4], 'display_shape'):
    group_009_0.inputs[4].display_shape = 'CIRCLE'
if hasattr(group_009_0.inputs[4], 'enabled'):
    group_009_0.inputs[4].enabled = True
if hasattr(group_009_0.inputs[4], 'hide'):
    group_009_0.inputs[4].hide = False
if hasattr(group_009_0.inputs[4], 'hide_value'):
    group_009_0.inputs[4].hide_value = False
if hasattr(group_009_0.inputs[4], 'name'):
    group_009_0.inputs[4].name = 'Roughness White'
if hasattr(group_009_0.inputs[4], 'show_expanded'):
    group_009_0.inputs[4].show_expanded = False
if hasattr(group_009_0.outputs[0], 'default_value'):
    group_009_0.outputs[0].default_value = 0.0
if hasattr(group_009_0.outputs[0], 'display_shape'):
    group_009_0.outputs[0].display_shape = 'CIRCLE'
if hasattr(group_009_0.outputs[0], 'enabled'):
    group_009_0.outputs[0].enabled = True
if hasattr(group_009_0.outputs[0], 'hide'):
    group_009_0.outputs[0].hide = False
if hasattr(group_009_0.outputs[0], 'hide_value'):
    group_009_0.outputs[0].hide_value = False
if hasattr(group_009_0.outputs[0], 'name'):
    group_009_0.outputs[0].name = 'Gradient Out'
if hasattr(group_009_0.outputs[0], 'show_expanded'):
    group_009_0.outputs[0].show_expanded = False
if hasattr(group_009_0.outputs[1], 'default_value'):
    group_009_0.outputs[1].default_value = 0.0
if hasattr(group_009_0.outputs[1], 'display_shape'):
    group_009_0.outputs[1].display_shape = 'CIRCLE'
if hasattr(group_009_0.outputs[1], 'enabled'):
    group_009_0.outputs[1].enabled = True
if hasattr(group_009_0.outputs[1], 'hide'):
    group_009_0.outputs[1].hide = False
if hasattr(group_009_0.outputs[1], 'hide_value'):
    group_009_0.outputs[1].hide_value = False
if hasattr(group_009_0.outputs[1], 'name'):
    group_009_0.outputs[1].name = 'Rough Out'
if hasattr(group_009_0.outputs[1], 'show_expanded'):
    group_009_0.outputs[1].show_expanded = False
if hasattr(group_009_0.outputs[2], 'default_value'):
    group_009_0.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_009_0.outputs[2], 'display_shape'):
    group_009_0.outputs[2].display_shape = 'CIRCLE'
if hasattr(group_009_0.outputs[2], 'enabled'):
    group_009_0.outputs[2].enabled = True
if hasattr(group_009_0.outputs[2], 'hide'):
    group_009_0.outputs[2].hide = False
if hasattr(group_009_0.outputs[2], 'hide_value'):
    group_009_0.outputs[2].hide_value = False
if hasattr(group_009_0.outputs[2], 'name'):
    group_009_0.outputs[2].name = 'Norm Out'
if hasattr(group_009_0.outputs[2], 'show_expanded'):
    group_009_0.outputs[2].show_expanded = False

node_tree1 = bpy.data.node_groups.get('Zone1 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if not node_tree1:
    node_tree1 = bpy.data.node_groups.new('Zone1 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber), 'ShaderNodeTree')
    for node in node_tree1.nodes:
        node_tree1.nodes.remove(node)
    # INPUTS
    input = node_tree1.inputs.new('NodeSocketFloat', 'X-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'X-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Y-Scale')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Y-Scale'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.5
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness Black')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.2199999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness Black'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Roughness White')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.4699999988079071
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 10000.0
    if hasattr(input, 'min_value'):
        input.min_value = -10000.0
    if hasattr(input, 'name'):
        input.name = 'Roughness White'
    # OUTPUTS
    output = node_tree1.outputs.new('NodeSocketFloat', 'Gradient Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Gradient Out'
    output = node_tree1.outputs.new('NodeSocketFloat', 'Rough Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = 0.0
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'max_value'):
        output.max_value = 3.4028234663852886e+38
    if hasattr(output, 'min_value'):
        output.min_value = -3.4028234663852886e+38
    if hasattr(output, 'name'):
        output.name = 'Rough Out'
    output = node_tree1.outputs.new('NodeSocketColor', 'Norm Out')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Norm Out'
    # NODES
    reroute_014_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_014_1, 'color'):
        reroute_014_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_014_1, 'hide'):
        reroute_014_1.hide = False
    if hasattr(reroute_014_1, 'location'):
        reroute_014_1.location = (-49.86090087890625, 392.07806396484375)
    if hasattr(reroute_014_1, 'mute'):
        reroute_014_1.mute = False
    if hasattr(reroute_014_1, 'name'):
        reroute_014_1.name = 'Reroute.014'
    if hasattr(reroute_014_1, 'use_custom_color'):
        reroute_014_1.use_custom_color = False
    if hasattr(reroute_014_1, 'width'):
        reroute_014_1.width = 16.0

    reroute_016_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_016_1, 'color'):
        reroute_016_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_016_1, 'hide'):
        reroute_016_1.hide = False
    if hasattr(reroute_016_1, 'location'):
        reroute_016_1.location = (144.52618408203125, 215.85797119140625)
    if hasattr(reroute_016_1, 'mute'):
        reroute_016_1.mute = False
    if hasattr(reroute_016_1, 'name'):
        reroute_016_1.name = 'Reroute.016'
    if hasattr(reroute_016_1, 'use_custom_color'):
        reroute_016_1.use_custom_color = False
    if hasattr(reroute_016_1, 'width'):
        reroute_016_1.width = 16.0

    reroute_018_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_018_1, 'color'):
        reroute_018_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_018_1, 'hide'):
        reroute_018_1.hide = False
    if hasattr(reroute_018_1, 'location'):
        reroute_018_1.location = (178.88592529296875, 259.3858642578125)
    if hasattr(reroute_018_1, 'mute'):
        reroute_018_1.mute = False
    if hasattr(reroute_018_1, 'name'):
        reroute_018_1.name = 'Reroute.018'
    if hasattr(reroute_018_1, 'use_custom_color'):
        reroute_018_1.use_custom_color = False
    if hasattr(reroute_018_1, 'width'):
        reroute_018_1.width = 16.0

    reroute_019_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_019_1, 'color'):
        reroute_019_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_019_1, 'hide'):
        reroute_019_1.hide = False
    if hasattr(reroute_019_1, 'location'):
        reroute_019_1.location = (178.88592529296875, 182.964599609375)
    if hasattr(reroute_019_1, 'mute'):
        reroute_019_1.mute = False
    if hasattr(reroute_019_1, 'name'):
        reroute_019_1.name = 'Reroute.019'
    if hasattr(reroute_019_1, 'use_custom_color'):
        reroute_019_1.use_custom_color = False
    if hasattr(reroute_019_1, 'width'):
        reroute_019_1.width = 16.0

    reroute_017_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_017_1, 'color'):
        reroute_017_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_017_1, 'hide'):
        reroute_017_1.hide = False
    if hasattr(reroute_017_1, 'location'):
        reroute_017_1.location = (144.52618408203125, -275.09521484375)
    if hasattr(reroute_017_1, 'mute'):
        reroute_017_1.mute = False
    if hasattr(reroute_017_1, 'name'):
        reroute_017_1.name = 'Reroute.017'
    if hasattr(reroute_017_1, 'use_custom_color'):
        reroute_017_1.use_custom_color = False
    if hasattr(reroute_017_1, 'width'):
        reroute_017_1.width = 16.0

    math_009_1 = node_tree1.nodes.new('ShaderNodeMath')
    if hasattr(math_009_1, 'color'):
        math_009_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(math_009_1, 'hide'):
        math_009_1.hide = False
    if hasattr(math_009_1, 'location'):
        math_009_1.location = (180.58067321777344, -160.00445556640625)
    if hasattr(math_009_1, 'mute'):
        math_009_1.mute = False
    if hasattr(math_009_1, 'name'):
        math_009_1.name = 'Math.009'
    if hasattr(math_009_1, 'operation'):
        math_009_1.operation = 'MULTIPLY'
    if hasattr(math_009_1, 'use_clamp'):
        math_009_1.use_clamp = False
    if hasattr(math_009_1, 'use_custom_color'):
        math_009_1.use_custom_color = False
    if hasattr(math_009_1, 'width'):
        math_009_1.width = 140.0
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_001'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_009_1.inputs if input_.identifier=='Value_002'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in math_009_1.outputs if output.identifier=='Value'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Value'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_021_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_021_1, 'color'):
        reroute_021_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_021_1, 'hide'):
        reroute_021_1.hide = False
    if hasattr(reroute_021_1, 'location'):
        reroute_021_1.location = (363.6356506347656, -320.47210693359375)
    if hasattr(reroute_021_1, 'mute'):
        reroute_021_1.mute = False
    if hasattr(reroute_021_1, 'name'):
        reroute_021_1.name = 'Reroute.021'
    if hasattr(reroute_021_1, 'use_custom_color'):
        reroute_021_1.use_custom_color = False
    if hasattr(reroute_021_1, 'width'):
        reroute_021_1.width = 16.0

    reroute_020_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_020_1, 'color'):
        reroute_020_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_020_1, 'hide'):
        reroute_020_1.hide = False
    if hasattr(reroute_020_1, 'location'):
        reroute_020_1.location = (363.6356506347656, -195.1111297607422)
    if hasattr(reroute_020_1, 'mute'):
        reroute_020_1.mute = False
    if hasattr(reroute_020_1, 'name'):
        reroute_020_1.name = 'Reroute.020'
    if hasattr(reroute_020_1, 'use_custom_color'):
        reroute_020_1.use_custom_color = False
    if hasattr(reroute_020_1, 'width'):
        reroute_020_1.width = 16.0

    reroute_012_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_012_1, 'color'):
        reroute_012_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_012_1, 'hide'):
        reroute_012_1.hide = False
    if hasattr(reroute_012_1, 'location'):
        reroute_012_1.location = (588.7369384765625, -242.4521942138672)
    if hasattr(reroute_012_1, 'mute'):
        reroute_012_1.mute = False
    if hasattr(reroute_012_1, 'name'):
        reroute_012_1.name = 'Reroute.012'
    if hasattr(reroute_012_1, 'use_custom_color'):
        reroute_012_1.use_custom_color = False
    if hasattr(reroute_012_1, 'width'):
        reroute_012_1.width = 16.0

    uv_map_1 = node_tree1.nodes.new('ShaderNodeUVMap')
    if hasattr(uv_map_1, 'color'):
        uv_map_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(uv_map_1, 'from_instancer'):
        uv_map_1.from_instancer = False
    if hasattr(uv_map_1, 'hide'):
        uv_map_1.hide = False
    if hasattr(uv_map_1, 'location'):
        uv_map_1.location = (-722.135009765625, 171.312255859375)
    if hasattr(uv_map_1, 'mute'):
        uv_map_1.mute = False
    if hasattr(uv_map_1, 'name'):
        uv_map_1.name = 'UV Map'
    if hasattr(uv_map_1, 'use_custom_color'):
        uv_map_1.use_custom_color = False
    if hasattr(uv_map_1, 'uv_map'):
        uv_map_1.uv_map = 'UV1'
    if hasattr(uv_map_1, 'width'):
        uv_map_1.width = 150.0
    output = next((output for output in uv_map_1.outputs if output.identifier=='UV'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'UV'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    mapping_1 = node_tree1.nodes.new('ShaderNodeMapping')
    if hasattr(mapping_1, 'color'):
        mapping_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mapping_1, 'hide'):
        mapping_1.hide = False
    if hasattr(mapping_1, 'location'):
        mapping_1.location = (-534.63330078125, 225.75634765625)
    if hasattr(mapping_1, 'mute'):
        mapping_1.mute = False
    if hasattr(mapping_1, 'name'):
        mapping_1.name = 'Mapping'
    if hasattr(mapping_1, 'use_custom_color'):
        mapping_1.use_custom_color = False
    if hasattr(mapping_1, 'vector_type'):
        mapping_1.vector_type = 'POINT'
    if hasattr(mapping_1, 'width'):
        mapping_1.width = 140.0
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Vector'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Vector'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Location'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Location'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Rotation'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Rotation'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mapping_1.inputs if input_.identifier=='Scale'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (4.0, 4.0, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Scale'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mapping_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_010_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_010_1, 'color'):
        reroute_010_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_010_1, 'hide'):
        reroute_010_1.hide = False
    if hasattr(reroute_010_1, 'location'):
        reroute_010_1.location = (-360.4864501953125, 190.916259765625)
    if hasattr(reroute_010_1, 'mute'):
        reroute_010_1.mute = False
    if hasattr(reroute_010_1, 'name'):
        reroute_010_1.name = 'Reroute.010'
    if hasattr(reroute_010_1, 'use_custom_color'):
        reroute_010_1.use_custom_color = False
    if hasattr(reroute_010_1, 'width'):
        reroute_010_1.width = 16.0

    reroute_011_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_011_1, 'color'):
        reroute_011_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_011_1, 'hide'):
        reroute_011_1.hide = False
    if hasattr(reroute_011_1, 'location'):
        reroute_011_1.location = (-360.4864501953125, -63.42291259765625)
    if hasattr(reroute_011_1, 'mute'):
        reroute_011_1.mute = False
    if hasattr(reroute_011_1, 'name'):
        reroute_011_1.name = 'Reroute.011'
    if hasattr(reroute_011_1, 'use_custom_color'):
        reroute_011_1.use_custom_color = False
    if hasattr(reroute_011_1, 'width'):
        reroute_011_1.width = 16.0

    reroute_015_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_015_1, 'color'):
        reroute_015_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_015_1, 'hide'):
        reroute_015_1.hide = False
    if hasattr(reroute_015_1, 'location'):
        reroute_015_1.location = (-49.86090087890625, 190.421142578125)
    if hasattr(reroute_015_1, 'mute'):
        reroute_015_1.mute = False
    if hasattr(reroute_015_1, 'name'):
        reroute_015_1.name = 'Reroute.015'
    if hasattr(reroute_015_1, 'use_custom_color'):
        reroute_015_1.use_custom_color = False
    if hasattr(reroute_015_1, 'width'):
        reroute_015_1.width = 16.0

    combine_xyz_1 = node_tree1.nodes.new('ShaderNodeCombineXYZ')
    if hasattr(combine_xyz_1, 'color'):
        combine_xyz_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(combine_xyz_1, 'hide'):
        combine_xyz_1.hide = False
    if hasattr(combine_xyz_1, 'location'):
        combine_xyz_1.location = (-799.850341796875, -14.884613037109375)
    if hasattr(combine_xyz_1, 'mute'):
        combine_xyz_1.mute = False
    if hasattr(combine_xyz_1, 'name'):
        combine_xyz_1.name = 'Combine XYZ'
    if hasattr(combine_xyz_1, 'use_custom_color'):
        combine_xyz_1.use_custom_color = False
    if hasattr(combine_xyz_1, 'width'):
        combine_xyz_1.width = 140.0
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='X'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'X'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Y'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Y'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in combine_xyz_1.inputs if input_.identifier=='Z'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Z'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in combine_xyz_1.outputs if output.identifier=='Vector'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Vector'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    reroute_004_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_004_1, 'color'):
        reroute_004_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_004_1, 'hide'):
        reroute_004_1.hide = False
    if hasattr(reroute_004_1, 'location'):
        reroute_004_1.location = (-858.0992431640625, -341.5549621582031)
    if hasattr(reroute_004_1, 'mute'):
        reroute_004_1.mute = False
    if hasattr(reroute_004_1, 'name'):
        reroute_004_1.name = 'Reroute.004'
    if hasattr(reroute_004_1, 'use_custom_color'):
        reroute_004_1.use_custom_color = False
    if hasattr(reroute_004_1, 'width'):
        reroute_004_1.width = 16.0

    reroute_005_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_005_1, 'color'):
        reroute_005_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_005_1, 'hide'):
        reroute_005_1.hide = False
    if hasattr(reroute_005_1, 'location'):
        reroute_005_1.location = (-877.3994140625, -364.527099609375)
    if hasattr(reroute_005_1, 'mute'):
        reroute_005_1.mute = False
    if hasattr(reroute_005_1, 'name'):
        reroute_005_1.name = 'Reroute.005'
    if hasattr(reroute_005_1, 'use_custom_color'):
        reroute_005_1.use_custom_color = False
    if hasattr(reroute_005_1, 'width'):
        reroute_005_1.width = 16.0

    reroute_001_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_001_1, 'color'):
        reroute_001_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_001_1, 'hide'):
        reroute_001_1.hide = False
    if hasattr(reroute_001_1, 'location'):
        reroute_001_1.location = (-858.38818359375, -141.572021484375)
    if hasattr(reroute_001_1, 'mute'):
        reroute_001_1.mute = False
    if hasattr(reroute_001_1, 'name'):
        reroute_001_1.name = 'Reroute.001'
    if hasattr(reroute_001_1, 'use_custom_color'):
        reroute_001_1.use_custom_color = False
    if hasattr(reroute_001_1, 'width'):
        reroute_001_1.width = 16.0

    reroute_002_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_002_1, 'color'):
        reroute_002_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_002_1, 'hide'):
        reroute_002_1.hide = False
    if hasattr(reroute_002_1, 'location'):
        reroute_002_1.location = (-877.4599609375, -163.257080078125)
    if hasattr(reroute_002_1, 'mute'):
        reroute_002_1.mute = False
    if hasattr(reroute_002_1, 'name'):
        reroute_002_1.name = 'Reroute.002'
    if hasattr(reroute_002_1, 'use_custom_color'):
        reroute_002_1.use_custom_color = False
    if hasattr(reroute_002_1, 'width'):
        reroute_002_1.width = 16.0

    reroute_006_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_006_1, 'color'):
        reroute_006_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_006_1, 'hide'):
        reroute_006_1.hide = False
    if hasattr(reroute_006_1, 'location'):
        reroute_006_1.location = (-836.59033203125, -119.03997802734375)
    if hasattr(reroute_006_1, 'mute'):
        reroute_006_1.mute = False
    if hasattr(reroute_006_1, 'name'):
        reroute_006_1.name = 'Reroute.006'
    if hasattr(reroute_006_1, 'use_custom_color'):
        reroute_006_1.use_custom_color = False
    if hasattr(reroute_006_1, 'width'):
        reroute_006_1.width = 16.0

    reroute_007_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_007_1, 'color'):
        reroute_007_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_007_1, 'hide'):
        reroute_007_1.hide = False
    if hasattr(reroute_007_1, 'location'):
        reroute_007_1.location = (-836.59033203125, -296.6325988769531)
    if hasattr(reroute_007_1, 'mute'):
        reroute_007_1.mute = False
    if hasattr(reroute_007_1, 'name'):
        reroute_007_1.name = 'Reroute.007'
    if hasattr(reroute_007_1, 'use_custom_color'):
        reroute_007_1.use_custom_color = False
    if hasattr(reroute_007_1, 'width'):
        reroute_007_1.width = 16.0

    reroute_013_1 = node_tree1.nodes.new('NodeReroute')
    if hasattr(reroute_013_1, 'color'):
        reroute_013_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(reroute_013_1, 'hide'):
        reroute_013_1.hide = False
    if hasattr(reroute_013_1, 'location'):
        reroute_013_1.location = (588.7369384765625, 159.65426635742188)
    if hasattr(reroute_013_1, 'mute'):
        reroute_013_1.mute = False
    if hasattr(reroute_013_1, 'name'):
        reroute_013_1.name = 'Reroute.013'
    if hasattr(reroute_013_1, 'use_custom_color'):
        reroute_013_1.use_custom_color = False
    if hasattr(reroute_013_1, 'width'):
        reroute_013_1.width = 16.0

    group_output_1 = node_tree1.nodes.new('NodeGroupOutput')
    if hasattr(group_output_1, 'color'):
        group_output_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_output_1, 'hide'):
        group_output_1.hide = False
    if hasattr(group_output_1, 'is_active_output'):
        group_output_1.is_active_output = True
    if hasattr(group_output_1, 'location'):
        group_output_1.location = (629.4588623046875, 216.9207763671875)
    if hasattr(group_output_1, 'mute'):
        group_output_1.mute = False
    if hasattr(group_output_1, 'name'):
        group_output_1.name = 'Group Output'
    if hasattr(group_output_1, 'use_custom_color'):
        group_output_1.use_custom_color = False
    if hasattr(group_output_1, 'width'):
        group_output_1.width = 140.0
    if hasattr(group_output_1.inputs[0], 'default_value'):
        group_output_1.inputs[0].default_value = 0.0
    if hasattr(group_output_1.inputs[0], 'display_shape'):
        group_output_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[0], 'enabled'):
        group_output_1.inputs[0].enabled = True
    if hasattr(group_output_1.inputs[0], 'hide'):
        group_output_1.inputs[0].hide = False
    if hasattr(group_output_1.inputs[0], 'hide_value'):
        group_output_1.inputs[0].hide_value = False
    if hasattr(group_output_1.inputs[0], 'name'):
        group_output_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_output_1.inputs[0], 'show_expanded'):
        group_output_1.inputs[0].show_expanded = False
    if hasattr(group_output_1.inputs[1], 'default_value'):
        group_output_1.inputs[1].default_value = 0.0
    if hasattr(group_output_1.inputs[1], 'display_shape'):
        group_output_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[1], 'enabled'):
        group_output_1.inputs[1].enabled = True
    if hasattr(group_output_1.inputs[1], 'hide'):
        group_output_1.inputs[1].hide = False
    if hasattr(group_output_1.inputs[1], 'hide_value'):
        group_output_1.inputs[1].hide_value = False
    if hasattr(group_output_1.inputs[1], 'name'):
        group_output_1.inputs[1].name = 'Rough Out'
    if hasattr(group_output_1.inputs[1], 'show_expanded'):
        group_output_1.inputs[1].show_expanded = False
    if hasattr(group_output_1.inputs[2], 'default_value'):
        group_output_1.inputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[2], 'display_shape'):
        group_output_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[2], 'enabled'):
        group_output_1.inputs[2].enabled = True
    if hasattr(group_output_1.inputs[2], 'hide'):
        group_output_1.inputs[2].hide = False
    if hasattr(group_output_1.inputs[2], 'hide_value'):
        group_output_1.inputs[2].hide_value = False
    if hasattr(group_output_1.inputs[2], 'name'):
        group_output_1.inputs[2].name = 'Norm Out'
    if hasattr(group_output_1.inputs[2], 'show_expanded'):
        group_output_1.inputs[2].show_expanded = False

    mix_1 = node_tree1.nodes.new('ShaderNodeMixRGB')
    if hasattr(mix_1, 'blend_type'):
        mix_1.blend_type = 'MIX'
    if hasattr(mix_1, 'color'):
        mix_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_1, 'hide'):
        mix_1.hide = False
    if hasattr(mix_1, 'location'):
        mix_1.location = (401.4825134277344, -207.88519287109375)
    if hasattr(mix_1, 'mute'):
        mix_1.mute = False
    if hasattr(mix_1, 'name'):
        mix_1.name = 'Mix'
    if hasattr(mix_1, 'use_alpha'):
        mix_1.use_alpha = False
    if hasattr(mix_1, 'use_clamp'):
        mix_1.use_clamp = True
    if hasattr(mix_1, 'use_custom_color'):
        mix_1.use_custom_color = False
    if hasattr(mix_1, 'width'):
        mix_1.width = 140.0
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color1'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color1'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_1.inputs if input_.identifier=='Color2'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color2'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mix_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_input_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_1, 'color'):
        group_input_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_1, 'hide'):
        group_input_1.hide = False
    if hasattr(group_input_1, 'location'):
        group_input_1.location = (-1048.383056640625, -40.007965087890625)
    if hasattr(group_input_1, 'mute'):
        group_input_1.mute = False
    if hasattr(group_input_1, 'name'):
        group_input_1.name = 'Group Input'
    if hasattr(group_input_1, 'use_custom_color'):
        group_input_1.use_custom_color = False
    if hasattr(group_input_1, 'width'):
        group_input_1.width = 140.0
    if hasattr(group_input_1.outputs[0], 'default_value'):
        group_input_1.outputs[0].default_value = 0.0
    if hasattr(group_input_1.outputs[0], 'display_shape'):
        group_input_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[0], 'enabled'):
        group_input_1.outputs[0].enabled = True
    if hasattr(group_input_1.outputs[0], 'hide'):
        group_input_1.outputs[0].hide = False
    if hasattr(group_input_1.outputs[0], 'hide_value'):
        group_input_1.outputs[0].hide_value = False
    if hasattr(group_input_1.outputs[0], 'name'):
        group_input_1.outputs[0].name = 'X-Scale'
    if hasattr(group_input_1.outputs[0], 'show_expanded'):
        group_input_1.outputs[0].show_expanded = False
    if hasattr(group_input_1.outputs[1], 'default_value'):
        group_input_1.outputs[1].default_value = 0.0
    if hasattr(group_input_1.outputs[1], 'display_shape'):
        group_input_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[1], 'enabled'):
        group_input_1.outputs[1].enabled = True
    if hasattr(group_input_1.outputs[1], 'hide'):
        group_input_1.outputs[1].hide = False
    if hasattr(group_input_1.outputs[1], 'hide_value'):
        group_input_1.outputs[1].hide_value = False
    if hasattr(group_input_1.outputs[1], 'name'):
        group_input_1.outputs[1].name = 'Y-Scale'
    if hasattr(group_input_1.outputs[1], 'show_expanded'):
        group_input_1.outputs[1].show_expanded = False
    if hasattr(group_input_1.outputs[2], 'default_value'):
        group_input_1.outputs[2].default_value = 0.5
    if hasattr(group_input_1.outputs[2], 'display_shape'):
        group_input_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[2], 'enabled'):
        group_input_1.outputs[2].enabled = True
    if hasattr(group_input_1.outputs[2], 'hide'):
        group_input_1.outputs[2].hide = False
    if hasattr(group_input_1.outputs[2], 'hide_value'):
        group_input_1.outputs[2].hide_value = False
    if hasattr(group_input_1.outputs[2], 'name'):
        group_input_1.outputs[2].name = 'Roughness'
    if hasattr(group_input_1.outputs[2], 'show_expanded'):
        group_input_1.outputs[2].show_expanded = False
    if hasattr(group_input_1.outputs[3], 'default_value'):
        group_input_1.outputs[3].default_value = 0.2199999988079071
    if hasattr(group_input_1.outputs[3], 'display_shape'):
        group_input_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[3], 'enabled'):
        group_input_1.outputs[3].enabled = True
    if hasattr(group_input_1.outputs[3], 'hide'):
        group_input_1.outputs[3].hide = False
    if hasattr(group_input_1.outputs[3], 'hide_value'):
        group_input_1.outputs[3].hide_value = False
    if hasattr(group_input_1.outputs[3], 'name'):
        group_input_1.outputs[3].name = 'Roughness Black'
    if hasattr(group_input_1.outputs[3], 'show_expanded'):
        group_input_1.outputs[3].show_expanded = False
    if hasattr(group_input_1.outputs[4], 'default_value'):
        group_input_1.outputs[4].default_value = 0.4699999988079071
    if hasattr(group_input_1.outputs[4], 'display_shape'):
        group_input_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[4], 'enabled'):
        group_input_1.outputs[4].enabled = True
    if hasattr(group_input_1.outputs[4], 'hide'):
        group_input_1.outputs[4].hide = False
    if hasattr(group_input_1.outputs[4], 'hide_value'):
        group_input_1.outputs[4].hide_value = False
    if hasattr(group_input_1.outputs[4], 'name'):
        group_input_1.outputs[4].name = 'Roughness White'
    if hasattr(group_input_1.outputs[4], 'show_expanded'):
        group_input_1.outputs[4].show_expanded = False

    separate_rgb_1 = node_tree1.nodes.new('ShaderNodeSeparateRGB')
    if hasattr(separate_rgb_1, 'color'):
        separate_rgb_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(separate_rgb_1, 'hide'):
        separate_rgb_1.hide = False
    if hasattr(separate_rgb_1, 'location'):
        separate_rgb_1.location = (-23.7783203125, 294.257080078125)
    if hasattr(separate_rgb_1, 'mute'):
        separate_rgb_1.mute = False
    if hasattr(separate_rgb_1, 'name'):
        separate_rgb_1.name = 'Separate RGB'
    if hasattr(separate_rgb_1, 'use_custom_color'):
        separate_rgb_1.use_custom_color = False
    if hasattr(separate_rgb_1, 'width'):
        separate_rgb_1.width = 140.0
    input_ = next((input_ for input_ in separate_rgb_1.inputs if input_.identifier=='Image'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Image'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='R'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'R'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='G'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'G'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='B'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'B'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    
    #Zone1_Gradient Mask
    zone1_gradient_mask_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone1_gradient_mask_1.location = (-328.15277099609375, 427.28961181640625)
    PNGtoBITMAP01 = Zone1_GradientMask.replace('.png', FileExtension)
    zone1_gradient_mask_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP01))
    zone1_gradient_mask_1.image.colorspace_settings.name = 'Non-Color'
    zone1_gradient_mask_1.label = 'Zone1_Gradient Mask'
    
    #Zone1_Normal
    zone1_normal_1 = node_tree1.nodes.new('ShaderNodeTexImage')
    zone1_normal_1.location = (-328.4542236328125, 172.760498046875)
    PNGtoBITMAP02 = Zone1_Normal.replace('.png', FileExtension)
    zone1_normal_1.image = bpy.data.images.load(str(DetailTexturePath + PNGtoBITMAP02))
    zone1_normal_1.image.colorspace_settings.name = 'Non-Color'
    zone1_normal_1.label = 'Zone1_Normal'


    # LINKS
    node_tree1.links.new(uv_map_1.outputs[0], mapping_1.inputs[0])
    node_tree1.links.new(combine_xyz_1.outputs[0], mapping_1.inputs[3])
    node_tree1.links.new(zone1_normal_1.outputs[0], group_output_1.inputs[2])
    node_tree1.links.new(group_input_1.outputs[3], reroute_001_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[4], reroute_002_1.inputs[0])
    node_tree1.links.new(reroute_001_1.outputs[0], reroute_004_1.inputs[0])
    node_tree1.links.new(reroute_002_1.outputs[0], reroute_005_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[2], reroute_006_1.inputs[0])
    node_tree1.links.new(reroute_006_1.outputs[0], reroute_007_1.inputs[0])
    node_tree1.links.new(mapping_1.outputs[0], reroute_010_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], zone1_gradient_mask_1.inputs[0])
    node_tree1.links.new(reroute_010_1.outputs[0], reroute_011_1.inputs[0])
    node_tree1.links.new(reroute_011_1.outputs[0], zone1_normal_1.inputs[0])
    node_tree1.links.new(reroute_012_1.outputs[0], reroute_013_1.inputs[0])
    node_tree1.links.new(reroute_013_1.outputs[0], group_output_1.inputs[1])
    node_tree1.links.new(zone1_gradient_mask_1.outputs[0], reroute_014_1.inputs[0])
    node_tree1.links.new(reroute_014_1.outputs[0], reroute_015_1.inputs[0])
    node_tree1.links.new(reroute_015_1.outputs[0], separate_rgb_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[2], reroute_016_1.inputs[0])
    node_tree1.links.new(reroute_016_1.outputs[0], reroute_017_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[0], reroute_018_1.inputs[0])
    node_tree1.links.new(reroute_018_1.outputs[0], reroute_019_1.inputs[0])
    node_tree1.links.new(reroute_019_1.outputs[0], group_output_1.inputs[0])
    node_tree1.links.new(reroute_017_1.outputs[0], math_009_1.inputs[0])
    node_tree1.links.new(reroute_007_1.outputs[0], math_009_1.inputs[1])
    node_tree1.links.new(reroute_004_1.outputs[0], mix_1.inputs[1])
    node_tree1.links.new(reroute_005_1.outputs[0], mix_1.inputs[2])
    node_tree1.links.new(mix_1.outputs[0], reroute_012_1.inputs[0])
    node_tree1.links.new(math_009_1.outputs[0], reroute_020_1.inputs[0])
    node_tree1.links.new(reroute_020_1.outputs[0], reroute_021_1.inputs[0])
    node_tree1.links.new(reroute_021_1.outputs[0], mix_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[1], combine_xyz_1.inputs[1])
    node_tree1.links.new(group_input_1.outputs[0], combine_xyz_1.inputs[0])

group_001_0 = node_tree0.nodes.new('ShaderNodeGroup')
if hasattr(group_001_0, 'node_tree'):
    group_001_0.node_tree = bpy.data.node_groups.get('Zone1 ' + ArmorRegionName + ' ' + CoatingName + ' ' + str(randomnumber))
if hasattr(group_001_0, 'color'):
    group_001_0.color = Zone1_SwatchNodegroupColor
if hasattr(group_001_0, 'hide'):
    group_001_0.hide = False
if hasattr(group_001_0, 'location'):
    group_001_0.location = (-421.73388671875, -138.93133544921875)
if hasattr(group_001_0, 'mute'):
    group_001_0.mute = False
if hasattr(group_001_0, 'name'):
    group_001_0.name = 'Group.001'
if hasattr(group_001_0, 'use_custom_color'):
    group_001_0.use_custom_color = True
if hasattr(group_001_0, 'width'):
    group_001_0.width = 248.24505615234375
if hasattr(group_001_0.inputs[0], 'default_value'):
    group_001_0.inputs[0].default_value = Zone1_XScale*ArmorRegion
if hasattr(group_001_0.inputs[0], 'display_shape'):
    group_001_0.inputs[0].display_shape = 'CIRCLE'
if hasattr(group_001_0.inputs[0], 'enabled'):
    group_001_0.inputs[0].enabled = True
if hasattr(group_001_0.inputs[0], 'hide'):
    group_001_0.inputs[0].hide = False
if hasattr(group_001_0.inputs[0], 'hide_value'):
    group_001_0.inputs[0].hide_value = False
if hasattr(group_001_0.inputs[0], 'name'):
    group_001_0.inputs[0].name = 'X-Scale'
if hasattr(group_001_0.inputs[0], 'show_expanded'):
    group_001_0.inputs[0].show_expanded = False
if hasattr(group_001_0.inputs[1], 'default_value'):
    group_001_0.inputs[1].default_value = Zone1_YScale*ArmorRegion
if hasattr(group_001_0.inputs[1], 'display_shape'):
    group_001_0.inputs[1].display_shape = 'CIRCLE'
if hasattr(group_001_0.inputs[1], 'enabled'):
    group_001_0.inputs[1].enabled = True
if hasattr(group_001_0.inputs[1], 'hide'):
    group_001_0.inputs[1].hide = False
if hasattr(group_001_0.inputs[1], 'hide_value'):
    group_001_0.inputs[1].hide_value = False
if hasattr(group_001_0.inputs[1], 'name'):
    group_001_0.inputs[1].name = 'Y-Scale'
if hasattr(group_001_0.inputs[1], 'show_expanded'):
    group_001_0.inputs[1].show_expanded = False
if hasattr(group_001_0.inputs[2], 'default_value'):
    group_001_0.inputs[2].default_value = Zone1_Roughness
if hasattr(group_001_0.inputs[2], 'display_shape'):
    group_001_0.inputs[2].display_shape = 'CIRCLE'
if hasattr(group_001_0.inputs[2], 'enabled'):
    group_001_0.inputs[2].enabled = True
if hasattr(group_001_0.inputs[2], 'hide'):
    group_001_0.inputs[2].hide = False
if hasattr(group_001_0.inputs[2], 'hide_value'):
    group_001_0.inputs[2].hide_value = False
if hasattr(group_001_0.inputs[2], 'name'):
    group_001_0.inputs[2].name = 'Roughness'
if hasattr(group_001_0.inputs[2], 'show_expanded'):
    group_001_0.inputs[2].show_expanded = False
if hasattr(group_001_0.inputs[3], 'default_value'):
    group_001_0.inputs[3].default_value = Zone1_RoughnessBlack
if hasattr(group_001_0.inputs[3], 'display_shape'):
    group_001_0.inputs[3].display_shape = 'CIRCLE'
if hasattr(group_001_0.inputs[3], 'enabled'):
    group_001_0.inputs[3].enabled = True
if hasattr(group_001_0.inputs[3], 'hide'):
    group_001_0.inputs[3].hide = False
if hasattr(group_001_0.inputs[3], 'hide_value'):
    group_001_0.inputs[3].hide_value = False
if hasattr(group_001_0.inputs[3], 'name'):
    group_001_0.inputs[3].name = 'Roughness Black'
if hasattr(group_001_0.inputs[3], 'show_expanded'):
    group_001_0.inputs[3].show_expanded = False
if hasattr(group_001_0.inputs[4], 'default_value'):
    group_001_0.inputs[4].default_value = Zone1_RoughnessWhite
if hasattr(group_001_0.inputs[4], 'display_shape'):
    group_001_0.inputs[4].display_shape = 'CIRCLE'
if hasattr(group_001_0.inputs[4], 'enabled'):
    group_001_0.inputs[4].enabled = True
if hasattr(group_001_0.inputs[4], 'hide'):
    group_001_0.inputs[4].hide = False
if hasattr(group_001_0.inputs[4], 'hide_value'):
    group_001_0.inputs[4].hide_value = False
if hasattr(group_001_0.inputs[4], 'name'):
    group_001_0.inputs[4].name = 'Roughness White'
if hasattr(group_001_0.inputs[4], 'show_expanded'):
    group_001_0.inputs[4].show_expanded = False
if hasattr(group_001_0.outputs[0], 'default_value'):
    group_001_0.outputs[0].default_value = 0.0
if hasattr(group_001_0.outputs[0], 'display_shape'):
    group_001_0.outputs[0].display_shape = 'CIRCLE'
if hasattr(group_001_0.outputs[0], 'enabled'):
    group_001_0.outputs[0].enabled = True
if hasattr(group_001_0.outputs[0], 'hide'):
    group_001_0.outputs[0].hide = False
if hasattr(group_001_0.outputs[0], 'hide_value'):
    group_001_0.outputs[0].hide_value = False
if hasattr(group_001_0.outputs[0], 'name'):
    group_001_0.outputs[0].name = 'Gradient Out'
if hasattr(group_001_0.outputs[0], 'show_expanded'):
    group_001_0.outputs[0].show_expanded = False
if hasattr(group_001_0.outputs[1], 'default_value'):
    group_001_0.outputs[1].default_value = 0.0
if hasattr(group_001_0.outputs[1], 'display_shape'):
    group_001_0.outputs[1].display_shape = 'CIRCLE'
if hasattr(group_001_0.outputs[1], 'enabled'):
    group_001_0.outputs[1].enabled = True
if hasattr(group_001_0.outputs[1], 'hide'):
    group_001_0.outputs[1].hide = False
if hasattr(group_001_0.outputs[1], 'hide_value'):
    group_001_0.outputs[1].hide_value = False
if hasattr(group_001_0.outputs[1], 'name'):
    group_001_0.outputs[1].name = 'Rough Out'
if hasattr(group_001_0.outputs[1], 'show_expanded'):
    group_001_0.outputs[1].show_expanded = False
if hasattr(group_001_0.outputs[2], 'default_value'):
    group_001_0.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_001_0.outputs[2], 'display_shape'):
    group_001_0.outputs[2].display_shape = 'CIRCLE'
if hasattr(group_001_0.outputs[2], 'enabled'):
    group_001_0.outputs[2].enabled = True
if hasattr(group_001_0.outputs[2], 'hide'):
    group_001_0.outputs[2].hide = False
if hasattr(group_001_0.outputs[2], 'hide_value'):
    group_001_0.outputs[2].hide_value = False
if hasattr(group_001_0.outputs[2], 'name'):
    group_001_0.outputs[2].name = 'Norm Out'
if hasattr(group_001_0.outputs[2], 'show_expanded'):
    group_001_0.outputs[2].show_expanded = False

asg_texture_0 = node_tree0.nodes.new('ShaderNodeTexImage')
asg_texture_0.location = (-911.4202880859375, -136.4393310546875)
asg_texture_0.label = 'ASG Texture (set this to non-color)'

mask_0_texture_0 = node_tree0.nodes.new('ShaderNodeTexImage')
mask_0_texture_0.location = (-911.4202880859375, -396.439453125)
mask_0_texture_0.label = 'Mask_0 Texture (set this to non-color)'

mask_1_texture_0 = node_tree0.nodes.new('ShaderNodeTexImage')
mask_1_texture_0.label = 'Mask_1 Texture (set this to non-color)'
mask_1_texture_0.location = (-911.4202880859375, -656.439208984375)

normal_map_texture_0 = node_tree0.nodes.new('ShaderNodeTexImage')
normal_map_texture_0.label = 'Normal Map Texture (set this to non-color)'
normal_map_texture_0.location = (-911.4202880859375, -914.7949829101562)

node_tree1 = bpy.data.node_groups.get('Halo Infinite Shader 2.2 by Average Trap Enthusiast')
if not node_tree1:
    node_tree1 = bpy.data.node_groups.new('Halo Infinite Shader 2.2 by Average Trap Enthusiast', 'ShaderNodeTree')
    for node in node_tree1.nodes:
        node_tree1.nodes.remove(node)
    # INPUTS
    input = node_tree1.inputs.new('NodeSocketColor', 'ASG')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.6357148289680481, 0.0, 0.3142859935760498, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'ASG'
    input = node_tree1.inputs.new('NodeSocketColor', 'Mask_0')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.49285757541656494, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Mask_0'
    input = node_tree1.inputs.new('NodeSocketColor', 'Mask_1')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.0, 0.16794772446155548, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Mask_1'
    input = node_tree1.inputs.new('NodeSocketColor', 'Normal')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 1.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Normal'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Grime Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Grime Amount'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Dust Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Dust Amount'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 1 Gradient Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 1 Gradient Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 1 Rough Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Zone 1 Rough Out'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 1 Norm Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 1.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 1 Norm Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 1 Scratch Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 1 Scratch Amount'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 1 Scratch Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 1 Scratch Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 1 Scratch Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 1 Scratch Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 1 Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 1 Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 1 Emmisive Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 100.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 1 Emmisive Amount'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 1 TopColor')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (1.0, 0.0, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 1 TopColor'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 1 MidColor')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.0, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 1 MidColor'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 1 BotColor')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.25, 0.0, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 1 BotColor'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 1 ScratchColor')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 1 ScratchColor'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 2 Gradient Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Gradient Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 2 Rough Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Rough Out'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 2 Norm Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 1.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Norm Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 2 Scratch Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Scratch Amount'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 2 Scratch Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Scratch Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 2 Scratch Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Scratch Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 2 Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 2 Emmisive Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 100.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Emmisive Amount'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 2 Top')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (1.0, 1.0, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Top'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 2 Mid')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Mid'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 2 Bot')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.25, 0.25, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 2 Bot'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 2 ScratchColor')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 2 ScratchColor'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Zone 3 Gradient Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Gradient Out'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Zone 3 Rough Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Rough Out'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 3 Norm Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 1.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Norm Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 3 Scratch Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Scratch Amount'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 3 Scratch Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Scratch Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 3 Scratch Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.25
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Scratch Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 3 Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 3 Emmisive Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 100.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Emmisive Amount'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 3 Top')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 1.0, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Top'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 3 Mid')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.5, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Mid'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 3 Bot')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.25, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 3 Bot'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 3 ScratchColor')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 3 ScratchColor'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Zone 4 Gradient Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Gradient Out'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Zone 4 Rough Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Rough Out'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 4 Norm Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Norm Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 4 Scratch Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Scratch Amount'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 4 Scratch Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Scratch Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 4 Scratch Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Scratch Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 4 Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 4 Emmisive Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 100.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Emmisive Amount'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 4 Top')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.0, 1.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Top'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 4 Mid')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.0, 0.5, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Mid'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 4 Bot')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.0, 0.25, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Bot'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 4 Scratch Color')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 4 Scratch Color'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Zone 5 Gradient Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Gradient Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 5 Rough Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Rough Out'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 5 Norm Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Norm Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 5 Scratch Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Scratch Amount'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 5 Scratch Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Scratch Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 5 Scratch Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Scratch Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 5 Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 5 Emmisive Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 100.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Emmisive Amount'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 5 Top')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 1.0, 1.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Top'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 5 Mid')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.5, 0.5, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Mid'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 5 Bot')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.25, 0.25, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Bot'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 5 Scratch Color')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 5 Scratch Color'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Zone 6 Gradient Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Gradient Out'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Zone 6 Rough Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Rough Out'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 6 Norm Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Norm Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 6 Scratch Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Scratch Amount'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 6 Scratch Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Scratch Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 6 Scratch Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Scratch Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 6 Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Zone 6 Emmisive Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 100.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Emmisive Amount'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 6 Top')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Top'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 6 Mid')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Mid'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 6 Bot')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.25, 0.25, 0.25, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Bot'
    input = node_tree1.inputs.new('NodeSocketColor', 'Zone 6 Scratch Color')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Zone 6 Scratch Color'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Grime Gradient Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = -3.4028234663852886e+38
    if hasattr(input, 'name'):
        input.name = 'Grime Gradient Out'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Grime Rough Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 3.4028234663852886e+38
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Grime Rough Out'
    input = node_tree1.inputs.new('NodeSocketColor', 'Grime Norm Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Grime Norm Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Grime Scratch Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Grime Scratch Amount'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Grime Scratch Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Grime Scratch Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Grime Scratch Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Grime Scratch Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Grime Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Grime Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Grime Emissive Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 100.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Grime Emissive Amount'
    input = node_tree1.inputs.new('NodeSocketColor', 'Grime TopColor')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Grime TopColor'
    input = node_tree1.inputs.new('NodeSocketColor', 'Grime MidColor')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Grime MidColor'
    input = node_tree1.inputs.new('NodeSocketColor', 'Grime BotColor')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Grime BotColor'
    input = node_tree1.inputs.new('NodeSocketColor', 'Grime Scratch Color')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Grime Scratch Color'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Dust Gradient Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 100.0
    if hasattr(input, 'min_value'):
        input.min_value = -100.0
    if hasattr(input, 'name'):
        input.name = 'Dust Gradient Out'
    input = node_tree1.inputs.new('NodeSocketFloatFactor', 'Dust Rough Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 100.0
    if hasattr(input, 'min_value'):
        input.min_value = -100.0
    if hasattr(input, 'name'):
        input.name = 'Dust Rough Out'
    input = node_tree1.inputs.new('NodeSocketColor', 'Dust Norm Out')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 1.0, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Dust Norm Out'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Dust Scratch Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Dust Scratch Amount'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Dust Scratch Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Dust Scratch Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Dust Scratch Roughness')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Dust Scratch Roughness'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Dust Metallic')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 1.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 1.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Dust Metallic'
    input = node_tree1.inputs.new('NodeSocketFloat', 'Dust Emissive Amount')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = 0.0
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'max_value'):
        input.max_value = 100.0
    if hasattr(input, 'min_value'):
        input.min_value = 0.0
    if hasattr(input, 'name'):
        input.name = 'Dust Emissive Amount'
    input = node_tree1.inputs.new('NodeSocketColor', 'Dust Top')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Dust Top'
    input = node_tree1.inputs.new('NodeSocketColor', 'Dust Mid')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Dust Mid'
    input = node_tree1.inputs.new('NodeSocketColor', 'Dust Bot')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Dust Bot'
    input = node_tree1.inputs.new('NodeSocketColor', 'Dust Scratch Color')
    if hasattr(input, 'attribute_domain'):
        input.attribute_domain = 'POINT'
    if hasattr(input, 'default_value'):
        input.default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(input, 'hide_value'):
        input.hide_value = False
    if hasattr(input, 'name'):
        input.name = 'Dust Scratch Color'
    # OUTPUTS
    output = node_tree1.outputs.new('NodeSocketShader', 'BSDF')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'BSDF'
    output = node_tree1.outputs.new('NodeSocketColor', 'Bake_Color')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Bake_Color'
    output = node_tree1.outputs.new('NodeSocketColor', 'Bake_Metallic')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Bake_Metallic'
    output = node_tree1.outputs.new('NodeSocketColor', 'Bake_Roughness')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Bake_Roughness'
    output = node_tree1.outputs.new('NodeSocketColor', 'Bake_Emissive')
    if hasattr(output, 'attribute_domain'):
        output.attribute_domain = 'POINT'
    if hasattr(output, 'default_value'):
        output.default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(output, 'hide_value'):
        output.hide_value = False
    if hasattr(output, 'name'):
        output.name = 'Bake_Emissive'
    # NODES
    node_tree2 = bpy.data.node_groups.get('Color Mixer')
    if not node_tree2:
        node_tree2 = bpy.data.node_groups.new('Color Mixer', 'ShaderNodeTree')
        for node in node_tree2.nodes:
            node_tree2.nodes.remove(node)
        # INPUTS
        input = node_tree2.inputs.new('NodeSocketFloatFactor', 'Gradient Out')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 0.5
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 1.0
        if hasattr(input, 'min_value'):
            input.min_value = 0.0
        if hasattr(input, 'name'):
            input.name = 'Gradient Out'
        input = node_tree2.inputs.new('NodeSocketColor', 'Top')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Top'
        input = node_tree2.inputs.new('NodeSocketColor', 'Mid')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Mid'
        input = node_tree2.inputs.new('NodeSocketColor', 'Bot')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Bot'
        # OUTPUTS
        output = node_tree2.outputs.new('NodeSocketColor', 'Color')
        if hasattr(output, 'attribute_domain'):
            output.attribute_domain = 'POINT'
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        # NODES
        group_output_2 = node_tree2.nodes.new('NodeGroupOutput')
        if hasattr(group_output_2, 'color'):
            group_output_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_output_2, 'hide'):
            group_output_2.hide = False
        if hasattr(group_output_2, 'is_active_output'):
            group_output_2.is_active_output = True
        if hasattr(group_output_2, 'location'):
            group_output_2.location = (529.7381591796875, 3.7900390625)
        if hasattr(group_output_2, 'mute'):
            group_output_2.mute = False
        if hasattr(group_output_2, 'name'):
            group_output_2.name = 'Group Output'
        if hasattr(group_output_2, 'use_custom_color'):
            group_output_2.use_custom_color = False
        if hasattr(group_output_2, 'width'):
            group_output_2.width = 140.0
        if hasattr(group_output_2.inputs[0], 'default_value'):
            group_output_2.inputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(group_output_2.inputs[0], 'display_shape'):
            group_output_2.inputs[0].display_shape = 'CIRCLE'
        if hasattr(group_output_2.inputs[0], 'enabled'):
            group_output_2.inputs[0].enabled = True
        if hasattr(group_output_2.inputs[0], 'hide'):
            group_output_2.inputs[0].hide = False
        if hasattr(group_output_2.inputs[0], 'hide_value'):
            group_output_2.inputs[0].hide_value = False
        if hasattr(group_output_2.inputs[0], 'name'):
            group_output_2.inputs[0].name = 'Color'
        if hasattr(group_output_2.inputs[0], 'show_expanded'):
            group_output_2.inputs[0].show_expanded = False

        group_input_2 = node_tree2.nodes.new('NodeGroupInput')
        if hasattr(group_input_2, 'color'):
            group_input_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_input_2, 'hide'):
            group_input_2.hide = False
        if hasattr(group_input_2, 'location'):
            group_input_2.location = (-474.3421936035156, 0.0)
        if hasattr(group_input_2, 'mute'):
            group_input_2.mute = False
        if hasattr(group_input_2, 'name'):
            group_input_2.name = 'Group Input'
        if hasattr(group_input_2, 'use_custom_color'):
            group_input_2.use_custom_color = False
        if hasattr(group_input_2, 'width'):
            group_input_2.width = 140.0
        if hasattr(group_input_2.outputs[0], 'default_value'):
            group_input_2.outputs[0].default_value = 0.5
        if hasattr(group_input_2.outputs[0], 'display_shape'):
            group_input_2.outputs[0].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[0], 'enabled'):
            group_input_2.outputs[0].enabled = True
        if hasattr(group_input_2.outputs[0], 'hide'):
            group_input_2.outputs[0].hide = False
        if hasattr(group_input_2.outputs[0], 'hide_value'):
            group_input_2.outputs[0].hide_value = False
        if hasattr(group_input_2.outputs[0], 'name'):
            group_input_2.outputs[0].name = 'Gradient Out'
        if hasattr(group_input_2.outputs[0], 'show_expanded'):
            group_input_2.outputs[0].show_expanded = False
        if hasattr(group_input_2.outputs[1], 'default_value'):
            group_input_2.outputs[1].default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(group_input_2.outputs[1], 'display_shape'):
            group_input_2.outputs[1].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[1], 'enabled'):
            group_input_2.outputs[1].enabled = True
        if hasattr(group_input_2.outputs[1], 'hide'):
            group_input_2.outputs[1].hide = False
        if hasattr(group_input_2.outputs[1], 'hide_value'):
            group_input_2.outputs[1].hide_value = False
        if hasattr(group_input_2.outputs[1], 'name'):
            group_input_2.outputs[1].name = 'Top'
        if hasattr(group_input_2.outputs[1], 'show_expanded'):
            group_input_2.outputs[1].show_expanded = False
        if hasattr(group_input_2.outputs[2], 'default_value'):
            group_input_2.outputs[2].default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(group_input_2.outputs[2], 'display_shape'):
            group_input_2.outputs[2].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[2], 'enabled'):
            group_input_2.outputs[2].enabled = True
        if hasattr(group_input_2.outputs[2], 'hide'):
            group_input_2.outputs[2].hide = False
        if hasattr(group_input_2.outputs[2], 'hide_value'):
            group_input_2.outputs[2].hide_value = False
        if hasattr(group_input_2.outputs[2], 'name'):
            group_input_2.outputs[2].name = 'Mid'
        if hasattr(group_input_2.outputs[2], 'show_expanded'):
            group_input_2.outputs[2].show_expanded = False
        if hasattr(group_input_2.outputs[3], 'default_value'):
            group_input_2.outputs[3].default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(group_input_2.outputs[3], 'display_shape'):
            group_input_2.outputs[3].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[3], 'enabled'):
            group_input_2.outputs[3].enabled = True
        if hasattr(group_input_2.outputs[3], 'hide'):
            group_input_2.outputs[3].hide = False
        if hasattr(group_input_2.outputs[3], 'hide_value'):
            group_input_2.outputs[3].hide_value = False
        if hasattr(group_input_2.outputs[3], 'name'):
            group_input_2.outputs[3].name = 'Bot'
        if hasattr(group_input_2.outputs[3], 'show_expanded'):
            group_input_2.outputs[3].show_expanded = False

        math_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_2, 'color'):
            math_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_2, 'hide'):
            math_2.hide = False
        if hasattr(math_2, 'location'):
            math_2.location = (-200.0, 200.00003051757812)
        if hasattr(math_2, 'mute'):
            math_2.mute = False
        if hasattr(math_2, 'name'):
            math_2.name = 'Math'
        if hasattr(math_2, 'operation'):
            math_2.operation = 'MULTIPLY_ADD'
        if hasattr(math_2, 'use_clamp'):
            math_2.use_clamp = True
        if hasattr(math_2, 'use_custom_color'):
            math_2.use_custom_color = False
        if hasattr(math_2, 'width'):
            math_2.width = 140.0
        input_ = next((input_ for input_ in math_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = -2.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_001_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_001_2, 'color'):
            math_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_001_2, 'hide'):
            math_001_2.hide = False
        if hasattr(math_001_2, 'location'):
            math_001_2.location = (-200.0, 380.0000305175781)
        if hasattr(math_001_2, 'mute'):
            math_001_2.mute = False
        if hasattr(math_001_2, 'name'):
            math_001_2.name = 'Math.001'
        if hasattr(math_001_2, 'operation'):
            math_001_2.operation = 'MULTIPLY_ADD'
        if hasattr(math_001_2, 'use_clamp'):
            math_001_2.use_clamp = True
        if hasattr(math_001_2, 'use_custom_color'):
            math_001_2.use_custom_color = False
        if hasattr(math_001_2, 'width'):
            math_001_2.width = 140.0
        input_ = next((input_ for input_ in math_001_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_001_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 2.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_001_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = -1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_001_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_001_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_001_2, 'blend_type'):
            mix_001_2.blend_type = 'MIX'
        if hasattr(mix_001_2, 'color'):
            mix_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_001_2, 'hide'):
            mix_001_2.hide = False
        if hasattr(mix_001_2, 'location'):
            mix_001_2.location = (300.0000305175781, 80.00003051757812)
        if hasattr(mix_001_2, 'mute'):
            mix_001_2.mute = False
        if hasattr(mix_001_2, 'name'):
            mix_001_2.name = 'Mix.001'
        if hasattr(mix_001_2, 'use_alpha'):
            mix_001_2.use_alpha = False
        if hasattr(mix_001_2, 'use_clamp'):
            mix_001_2.use_clamp = False
        if hasattr(mix_001_2, 'use_custom_color'):
            mix_001_2.use_custom_color = False
        if hasattr(mix_001_2, 'width'):
            mix_001_2.width = 140.0
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_001_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_2, 'blend_type'):
            mix_2.blend_type = 'MIX'
        if hasattr(mix_2, 'color'):
            mix_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_2, 'hide'):
            mix_2.hide = False
        if hasattr(mix_2, 'location'):
            mix_2.location = (66.67642211914062, 127.76028442382812)
        if hasattr(mix_2, 'mute'):
            mix_2.mute = False
        if hasattr(mix_2, 'name'):
            mix_2.name = 'Mix'
        if hasattr(mix_2, 'use_alpha'):
            mix_2.use_alpha = False
        if hasattr(mix_2, 'use_clamp'):
            mix_2.use_clamp = False
        if hasattr(mix_2, 'use_custom_color'):
            mix_2.use_custom_color = False
        if hasattr(mix_2, 'width'):
            mix_2.width = 140.0
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        # LINKS
        node_tree2.links.new(group_input_2.outputs[2], mix_2.inputs[1])
        node_tree2.links.new(mix_2.outputs[0], mix_001_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[3], mix_001_2.inputs[2])
        node_tree2.links.new(mix_001_2.outputs[0], group_output_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[0], math_2.inputs[0])
        node_tree2.links.new(math_2.outputs[0], mix_001_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[0], math_001_2.inputs[0])
        node_tree2.links.new(math_001_2.outputs[0], mix_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[1], mix_2.inputs[2])

    group_012_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_012_1, 'node_tree'):
        group_012_1.node_tree = bpy.data.node_groups.get('Color Mixer')
    if hasattr(group_012_1, 'color'):
        group_012_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_012_1, 'hide'):
        group_012_1.hide = False
    if hasattr(group_012_1, 'location'):
        group_012_1.location = (-1660.0, 1400.0)
    if hasattr(group_012_1, 'mute'):
        group_012_1.mute = False
    if hasattr(group_012_1, 'name'):
        group_012_1.name = 'Group.012'
    if hasattr(group_012_1, 'use_custom_color'):
        group_012_1.use_custom_color = False
    if hasattr(group_012_1, 'width'):
        group_012_1.width = 140.0
    if hasattr(group_012_1.inputs[0], 'default_value'):
        group_012_1.inputs[0].default_value = 0.0
    if hasattr(group_012_1.inputs[0], 'display_shape'):
        group_012_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_012_1.inputs[0], 'enabled'):
        group_012_1.inputs[0].enabled = True
    if hasattr(group_012_1.inputs[0], 'hide'):
        group_012_1.inputs[0].hide = False
    if hasattr(group_012_1.inputs[0], 'hide_value'):
        group_012_1.inputs[0].hide_value = False
    if hasattr(group_012_1.inputs[0], 'name'):
        group_012_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_012_1.inputs[0], 'show_expanded'):
        group_012_1.inputs[0].show_expanded = False
    if hasattr(group_012_1.inputs[1], 'default_value'):
        group_012_1.inputs[1].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_012_1.inputs[1], 'display_shape'):
        group_012_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_012_1.inputs[1], 'enabled'):
        group_012_1.inputs[1].enabled = True
    if hasattr(group_012_1.inputs[1], 'hide'):
        group_012_1.inputs[1].hide = False
    if hasattr(group_012_1.inputs[1], 'hide_value'):
        group_012_1.inputs[1].hide_value = False
    if hasattr(group_012_1.inputs[1], 'name'):
        group_012_1.inputs[1].name = 'Top'
    if hasattr(group_012_1.inputs[1], 'show_expanded'):
        group_012_1.inputs[1].show_expanded = False
    if hasattr(group_012_1.inputs[2], 'default_value'):
        group_012_1.inputs[2].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_012_1.inputs[2], 'display_shape'):
        group_012_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_012_1.inputs[2], 'enabled'):
        group_012_1.inputs[2].enabled = True
    if hasattr(group_012_1.inputs[2], 'hide'):
        group_012_1.inputs[2].hide = False
    if hasattr(group_012_1.inputs[2], 'hide_value'):
        group_012_1.inputs[2].hide_value = False
    if hasattr(group_012_1.inputs[2], 'name'):
        group_012_1.inputs[2].name = 'Mid'
    if hasattr(group_012_1.inputs[2], 'show_expanded'):
        group_012_1.inputs[2].show_expanded = False
    if hasattr(group_012_1.inputs[3], 'default_value'):
        group_012_1.inputs[3].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_012_1.inputs[3], 'display_shape'):
        group_012_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_012_1.inputs[3], 'enabled'):
        group_012_1.inputs[3].enabled = True
    if hasattr(group_012_1.inputs[3], 'hide'):
        group_012_1.inputs[3].hide = False
    if hasattr(group_012_1.inputs[3], 'hide_value'):
        group_012_1.inputs[3].hide_value = False
    if hasattr(group_012_1.inputs[3], 'name'):
        group_012_1.inputs[3].name = 'Bot'
    if hasattr(group_012_1.inputs[3], 'show_expanded'):
        group_012_1.inputs[3].show_expanded = False
    if hasattr(group_012_1.outputs[0], 'default_value'):
        group_012_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_012_1.outputs[0], 'display_shape'):
        group_012_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_012_1.outputs[0], 'enabled'):
        group_012_1.outputs[0].enabled = True
    if hasattr(group_012_1.outputs[0], 'hide'):
        group_012_1.outputs[0].hide = False
    if hasattr(group_012_1.outputs[0], 'hide_value'):
        group_012_1.outputs[0].hide_value = False
    if hasattr(group_012_1.outputs[0], 'name'):
        group_012_1.outputs[0].name = 'Color'
    if hasattr(group_012_1.outputs[0], 'show_expanded'):
        group_012_1.outputs[0].show_expanded = False

    group_016_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_016_1, 'node_tree'):
        group_016_1.node_tree = bpy.data.node_groups.get('Color Mixer')
    if hasattr(group_016_1, 'color'):
        group_016_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_016_1, 'hide'):
        group_016_1.hide = False
    if hasattr(group_016_1, 'location'):
        group_016_1.location = (-1660.0, 1040.0)
    if hasattr(group_016_1, 'mute'):
        group_016_1.mute = False
    if hasattr(group_016_1, 'name'):
        group_016_1.name = 'Group.016'
    if hasattr(group_016_1, 'use_custom_color'):
        group_016_1.use_custom_color = False
    if hasattr(group_016_1, 'width'):
        group_016_1.width = 140.0
    if hasattr(group_016_1.inputs[0], 'default_value'):
        group_016_1.inputs[0].default_value = 0.0
    if hasattr(group_016_1.inputs[0], 'display_shape'):
        group_016_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_016_1.inputs[0], 'enabled'):
        group_016_1.inputs[0].enabled = True
    if hasattr(group_016_1.inputs[0], 'hide'):
        group_016_1.inputs[0].hide = False
    if hasattr(group_016_1.inputs[0], 'hide_value'):
        group_016_1.inputs[0].hide_value = False
    if hasattr(group_016_1.inputs[0], 'name'):
        group_016_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_016_1.inputs[0], 'show_expanded'):
        group_016_1.inputs[0].show_expanded = False
    if hasattr(group_016_1.inputs[1], 'default_value'):
        group_016_1.inputs[1].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_016_1.inputs[1], 'display_shape'):
        group_016_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_016_1.inputs[1], 'enabled'):
        group_016_1.inputs[1].enabled = True
    if hasattr(group_016_1.inputs[1], 'hide'):
        group_016_1.inputs[1].hide = False
    if hasattr(group_016_1.inputs[1], 'hide_value'):
        group_016_1.inputs[1].hide_value = False
    if hasattr(group_016_1.inputs[1], 'name'):
        group_016_1.inputs[1].name = 'Top'
    if hasattr(group_016_1.inputs[1], 'show_expanded'):
        group_016_1.inputs[1].show_expanded = False
    if hasattr(group_016_1.inputs[2], 'default_value'):
        group_016_1.inputs[2].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_016_1.inputs[2], 'display_shape'):
        group_016_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_016_1.inputs[2], 'enabled'):
        group_016_1.inputs[2].enabled = True
    if hasattr(group_016_1.inputs[2], 'hide'):
        group_016_1.inputs[2].hide = False
    if hasattr(group_016_1.inputs[2], 'hide_value'):
        group_016_1.inputs[2].hide_value = False
    if hasattr(group_016_1.inputs[2], 'name'):
        group_016_1.inputs[2].name = 'Mid'
    if hasattr(group_016_1.inputs[2], 'show_expanded'):
        group_016_1.inputs[2].show_expanded = False
    if hasattr(group_016_1.inputs[3], 'default_value'):
        group_016_1.inputs[3].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_016_1.inputs[3], 'display_shape'):
        group_016_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_016_1.inputs[3], 'enabled'):
        group_016_1.inputs[3].enabled = True
    if hasattr(group_016_1.inputs[3], 'hide'):
        group_016_1.inputs[3].hide = False
    if hasattr(group_016_1.inputs[3], 'hide_value'):
        group_016_1.inputs[3].hide_value = False
    if hasattr(group_016_1.inputs[3], 'name'):
        group_016_1.inputs[3].name = 'Bot'
    if hasattr(group_016_1.inputs[3], 'show_expanded'):
        group_016_1.inputs[3].show_expanded = False
    if hasattr(group_016_1.outputs[0], 'default_value'):
        group_016_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_016_1.outputs[0], 'display_shape'):
        group_016_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_016_1.outputs[0], 'enabled'):
        group_016_1.outputs[0].enabled = True
    if hasattr(group_016_1.outputs[0], 'hide'):
        group_016_1.outputs[0].hide = False
    if hasattr(group_016_1.outputs[0], 'hide_value'):
        group_016_1.outputs[0].hide_value = False
    if hasattr(group_016_1.outputs[0], 'name'):
        group_016_1.outputs[0].name = 'Color'
    if hasattr(group_016_1.outputs[0], 'show_expanded'):
        group_016_1.outputs[0].show_expanded = False

    group_008_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_008_1, 'node_tree'):
        group_008_1.node_tree = bpy.data.node_groups.get('Color Mixer')
    if hasattr(group_008_1, 'color'):
        group_008_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_008_1, 'hide'):
        group_008_1.hide = False
    if hasattr(group_008_1, 'location'):
        group_008_1.location = (-1660.0, 1940.0001220703125)
    if hasattr(group_008_1, 'mute'):
        group_008_1.mute = False
    if hasattr(group_008_1, 'name'):
        group_008_1.name = 'Group.008'
    if hasattr(group_008_1, 'use_custom_color'):
        group_008_1.use_custom_color = False
    if hasattr(group_008_1, 'width'):
        group_008_1.width = 140.0
    if hasattr(group_008_1.inputs[0], 'default_value'):
        group_008_1.inputs[0].default_value = 0.0
    if hasattr(group_008_1.inputs[0], 'display_shape'):
        group_008_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_008_1.inputs[0], 'enabled'):
        group_008_1.inputs[0].enabled = True
    if hasattr(group_008_1.inputs[0], 'hide'):
        group_008_1.inputs[0].hide = False
    if hasattr(group_008_1.inputs[0], 'hide_value'):
        group_008_1.inputs[0].hide_value = False
    if hasattr(group_008_1.inputs[0], 'name'):
        group_008_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_008_1.inputs[0], 'show_expanded'):
        group_008_1.inputs[0].show_expanded = False
    if hasattr(group_008_1.inputs[1], 'default_value'):
        group_008_1.inputs[1].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_008_1.inputs[1], 'display_shape'):
        group_008_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_008_1.inputs[1], 'enabled'):
        group_008_1.inputs[1].enabled = True
    if hasattr(group_008_1.inputs[1], 'hide'):
        group_008_1.inputs[1].hide = False
    if hasattr(group_008_1.inputs[1], 'hide_value'):
        group_008_1.inputs[1].hide_value = False
    if hasattr(group_008_1.inputs[1], 'name'):
        group_008_1.inputs[1].name = 'Top'
    if hasattr(group_008_1.inputs[1], 'show_expanded'):
        group_008_1.inputs[1].show_expanded = False
    if hasattr(group_008_1.inputs[2], 'default_value'):
        group_008_1.inputs[2].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_008_1.inputs[2], 'display_shape'):
        group_008_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_008_1.inputs[2], 'enabled'):
        group_008_1.inputs[2].enabled = True
    if hasattr(group_008_1.inputs[2], 'hide'):
        group_008_1.inputs[2].hide = False
    if hasattr(group_008_1.inputs[2], 'hide_value'):
        group_008_1.inputs[2].hide_value = False
    if hasattr(group_008_1.inputs[2], 'name'):
        group_008_1.inputs[2].name = 'Mid'
    if hasattr(group_008_1.inputs[2], 'show_expanded'):
        group_008_1.inputs[2].show_expanded = False
    if hasattr(group_008_1.inputs[3], 'default_value'):
        group_008_1.inputs[3].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_008_1.inputs[3], 'display_shape'):
        group_008_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_008_1.inputs[3], 'enabled'):
        group_008_1.inputs[3].enabled = True
    if hasattr(group_008_1.inputs[3], 'hide'):
        group_008_1.inputs[3].hide = False
    if hasattr(group_008_1.inputs[3], 'hide_value'):
        group_008_1.inputs[3].hide_value = False
    if hasattr(group_008_1.inputs[3], 'name'):
        group_008_1.inputs[3].name = 'Bot'
    if hasattr(group_008_1.inputs[3], 'show_expanded'):
        group_008_1.inputs[3].show_expanded = False
    if hasattr(group_008_1.outputs[0], 'default_value'):
        group_008_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_008_1.outputs[0], 'display_shape'):
        group_008_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_008_1.outputs[0], 'enabled'):
        group_008_1.outputs[0].enabled = True
    if hasattr(group_008_1.outputs[0], 'hide'):
        group_008_1.outputs[0].hide = False
    if hasattr(group_008_1.outputs[0], 'hide_value'):
        group_008_1.outputs[0].hide_value = False
    if hasattr(group_008_1.outputs[0], 'name'):
        group_008_1.outputs[0].name = 'Color'
    if hasattr(group_008_1.outputs[0], 'show_expanded'):
        group_008_1.outputs[0].show_expanded = False

    group_output_1 = node_tree1.nodes.new('NodeGroupOutput')
    if hasattr(group_output_1, 'color'):
        group_output_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_output_1, 'hide'):
        group_output_1.hide = False
    if hasattr(group_output_1, 'is_active_output'):
        group_output_1.is_active_output = True
    if hasattr(group_output_1, 'location'):
        group_output_1.location = (3099.999755859375, 480.0)
    if hasattr(group_output_1, 'mute'):
        group_output_1.mute = False
    if hasattr(group_output_1, 'name'):
        group_output_1.name = 'Group Output'
    if hasattr(group_output_1, 'use_custom_color'):
        group_output_1.use_custom_color = False
    if hasattr(group_output_1, 'width'):
        group_output_1.width = 140.0
    if hasattr(group_output_1.inputs[1], 'default_value'):
        group_output_1.inputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[1], 'display_shape'):
        group_output_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[1], 'enabled'):
        group_output_1.inputs[1].enabled = True
    if hasattr(group_output_1.inputs[1], 'hide'):
        group_output_1.inputs[1].hide = False
    if hasattr(group_output_1.inputs[1], 'hide_value'):
        group_output_1.inputs[1].hide_value = False
    if hasattr(group_output_1.inputs[1], 'name'):
        group_output_1.inputs[1].name = 'Bake_Color'
    if hasattr(group_output_1.inputs[1], 'show_expanded'):
        group_output_1.inputs[1].show_expanded = False
    if hasattr(group_output_1.inputs[2], 'default_value'):
        group_output_1.inputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[2], 'display_shape'):
        group_output_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[2], 'enabled'):
        group_output_1.inputs[2].enabled = True
    if hasattr(group_output_1.inputs[2], 'hide'):
        group_output_1.inputs[2].hide = False
    if hasattr(group_output_1.inputs[2], 'hide_value'):
        group_output_1.inputs[2].hide_value = False
    if hasattr(group_output_1.inputs[2], 'name'):
        group_output_1.inputs[2].name = 'Bake_Metallic'
    if hasattr(group_output_1.inputs[2], 'show_expanded'):
        group_output_1.inputs[2].show_expanded = False
    if hasattr(group_output_1.inputs[3], 'default_value'):
        group_output_1.inputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[3], 'display_shape'):
        group_output_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[3], 'enabled'):
        group_output_1.inputs[3].enabled = True
    if hasattr(group_output_1.inputs[3], 'hide'):
        group_output_1.inputs[3].hide = False
    if hasattr(group_output_1.inputs[3], 'hide_value'):
        group_output_1.inputs[3].hide_value = False
    if hasattr(group_output_1.inputs[3], 'name'):
        group_output_1.inputs[3].name = 'Bake_Roughness'
    if hasattr(group_output_1.inputs[3], 'show_expanded'):
        group_output_1.inputs[3].show_expanded = False
    if hasattr(group_output_1.inputs[4], 'default_value'):
        group_output_1.inputs[4].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_output_1.inputs[4], 'display_shape'):
        group_output_1.inputs[4].display_shape = 'CIRCLE'
    if hasattr(group_output_1.inputs[4], 'enabled'):
        group_output_1.inputs[4].enabled = True
    if hasattr(group_output_1.inputs[4], 'hide'):
        group_output_1.inputs[4].hide = False
    if hasattr(group_output_1.inputs[4], 'hide_value'):
        group_output_1.inputs[4].hide_value = False
    if hasattr(group_output_1.inputs[4], 'name'):
        group_output_1.inputs[4].name = 'Bake_Emissive'
    if hasattr(group_output_1.inputs[4], 'show_expanded'):
        group_output_1.inputs[4].show_expanded = False

    group_015_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_015_1, 'node_tree'):
        group_015_1.node_tree = bpy.data.node_groups.get('Color Mixer')
    if hasattr(group_015_1, 'color'):
        group_015_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_015_1, 'hide'):
        group_015_1.hide = False
    if hasattr(group_015_1, 'location'):
        group_015_1.location = (-1660.0, 1220.0)
    if hasattr(group_015_1, 'mute'):
        group_015_1.mute = False
    if hasattr(group_015_1, 'name'):
        group_015_1.name = 'Group.015'
    if hasattr(group_015_1, 'use_custom_color'):
        group_015_1.use_custom_color = False
    if hasattr(group_015_1, 'width'):
        group_015_1.width = 140.0
    if hasattr(group_015_1.inputs[0], 'default_value'):
        group_015_1.inputs[0].default_value = 0.0
    if hasattr(group_015_1.inputs[0], 'display_shape'):
        group_015_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_015_1.inputs[0], 'enabled'):
        group_015_1.inputs[0].enabled = True
    if hasattr(group_015_1.inputs[0], 'hide'):
        group_015_1.inputs[0].hide = False
    if hasattr(group_015_1.inputs[0], 'hide_value'):
        group_015_1.inputs[0].hide_value = False
    if hasattr(group_015_1.inputs[0], 'name'):
        group_015_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_015_1.inputs[0], 'show_expanded'):
        group_015_1.inputs[0].show_expanded = False
    if hasattr(group_015_1.inputs[1], 'default_value'):
        group_015_1.inputs[1].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_015_1.inputs[1], 'display_shape'):
        group_015_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_015_1.inputs[1], 'enabled'):
        group_015_1.inputs[1].enabled = True
    if hasattr(group_015_1.inputs[1], 'hide'):
        group_015_1.inputs[1].hide = False
    if hasattr(group_015_1.inputs[1], 'hide_value'):
        group_015_1.inputs[1].hide_value = False
    if hasattr(group_015_1.inputs[1], 'name'):
        group_015_1.inputs[1].name = 'Top'
    if hasattr(group_015_1.inputs[1], 'show_expanded'):
        group_015_1.inputs[1].show_expanded = False
    if hasattr(group_015_1.inputs[2], 'default_value'):
        group_015_1.inputs[2].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_015_1.inputs[2], 'display_shape'):
        group_015_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_015_1.inputs[2], 'enabled'):
        group_015_1.inputs[2].enabled = True
    if hasattr(group_015_1.inputs[2], 'hide'):
        group_015_1.inputs[2].hide = False
    if hasattr(group_015_1.inputs[2], 'hide_value'):
        group_015_1.inputs[2].hide_value = False
    if hasattr(group_015_1.inputs[2], 'name'):
        group_015_1.inputs[2].name = 'Mid'
    if hasattr(group_015_1.inputs[2], 'show_expanded'):
        group_015_1.inputs[2].show_expanded = False
    if hasattr(group_015_1.inputs[3], 'default_value'):
        group_015_1.inputs[3].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_015_1.inputs[3], 'display_shape'):
        group_015_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_015_1.inputs[3], 'enabled'):
        group_015_1.inputs[3].enabled = True
    if hasattr(group_015_1.inputs[3], 'hide'):
        group_015_1.inputs[3].hide = False
    if hasattr(group_015_1.inputs[3], 'hide_value'):
        group_015_1.inputs[3].hide_value = False
    if hasattr(group_015_1.inputs[3], 'name'):
        group_015_1.inputs[3].name = 'Bot'
    if hasattr(group_015_1.inputs[3], 'show_expanded'):
        group_015_1.inputs[3].show_expanded = False
    if hasattr(group_015_1.outputs[0], 'default_value'):
        group_015_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_015_1.outputs[0], 'display_shape'):
        group_015_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_015_1.outputs[0], 'enabled'):
        group_015_1.outputs[0].enabled = True
    if hasattr(group_015_1.outputs[0], 'hide'):
        group_015_1.outputs[0].hide = False
    if hasattr(group_015_1.outputs[0], 'hide_value'):
        group_015_1.outputs[0].hide_value = False
    if hasattr(group_015_1.outputs[0], 'name'):
        group_015_1.outputs[0].name = 'Color'
    if hasattr(group_015_1.outputs[0], 'show_expanded'):
        group_015_1.outputs[0].show_expanded = False

    group_002_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_002_1, 'node_tree'):
        group_002_1.node_tree = bpy.data.node_groups.get('Color Mixer')
    if hasattr(group_002_1, 'color'):
        group_002_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_002_1, 'hide'):
        group_002_1.hide = False
    if hasattr(group_002_1, 'location'):
        group_002_1.location = (-1660.0, 2300.0)
    if hasattr(group_002_1, 'mute'):
        group_002_1.mute = False
    if hasattr(group_002_1, 'name'):
        group_002_1.name = 'Group.002'
    if hasattr(group_002_1, 'use_custom_color'):
        group_002_1.use_custom_color = False
    if hasattr(group_002_1, 'width'):
        group_002_1.width = 140.0
    if hasattr(group_002_1.inputs[0], 'default_value'):
        group_002_1.inputs[0].default_value = 0.0
    if hasattr(group_002_1.inputs[0], 'display_shape'):
        group_002_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_002_1.inputs[0], 'enabled'):
        group_002_1.inputs[0].enabled = True
    if hasattr(group_002_1.inputs[0], 'hide'):
        group_002_1.inputs[0].hide = False
    if hasattr(group_002_1.inputs[0], 'hide_value'):
        group_002_1.inputs[0].hide_value = False
    if hasattr(group_002_1.inputs[0], 'name'):
        group_002_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_002_1.inputs[0], 'show_expanded'):
        group_002_1.inputs[0].show_expanded = False
    if hasattr(group_002_1.inputs[1], 'default_value'):
        group_002_1.inputs[1].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_002_1.inputs[1], 'display_shape'):
        group_002_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_002_1.inputs[1], 'enabled'):
        group_002_1.inputs[1].enabled = True
    if hasattr(group_002_1.inputs[1], 'hide'):
        group_002_1.inputs[1].hide = False
    if hasattr(group_002_1.inputs[1], 'hide_value'):
        group_002_1.inputs[1].hide_value = False
    if hasattr(group_002_1.inputs[1], 'name'):
        group_002_1.inputs[1].name = 'Top'
    if hasattr(group_002_1.inputs[1], 'show_expanded'):
        group_002_1.inputs[1].show_expanded = False
    if hasattr(group_002_1.inputs[2], 'default_value'):
        group_002_1.inputs[2].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_002_1.inputs[2], 'display_shape'):
        group_002_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_002_1.inputs[2], 'enabled'):
        group_002_1.inputs[2].enabled = True
    if hasattr(group_002_1.inputs[2], 'hide'):
        group_002_1.inputs[2].hide = False
    if hasattr(group_002_1.inputs[2], 'hide_value'):
        group_002_1.inputs[2].hide_value = False
    if hasattr(group_002_1.inputs[2], 'name'):
        group_002_1.inputs[2].name = 'Mid'
    if hasattr(group_002_1.inputs[2], 'show_expanded'):
        group_002_1.inputs[2].show_expanded = False
    if hasattr(group_002_1.inputs[3], 'default_value'):
        group_002_1.inputs[3].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_002_1.inputs[3], 'display_shape'):
        group_002_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_002_1.inputs[3], 'enabled'):
        group_002_1.inputs[3].enabled = True
    if hasattr(group_002_1.inputs[3], 'hide'):
        group_002_1.inputs[3].hide = False
    if hasattr(group_002_1.inputs[3], 'hide_value'):
        group_002_1.inputs[3].hide_value = False
    if hasattr(group_002_1.inputs[3], 'name'):
        group_002_1.inputs[3].name = 'Bot'
    if hasattr(group_002_1.inputs[3], 'show_expanded'):
        group_002_1.inputs[3].show_expanded = False
    if hasattr(group_002_1.outputs[0], 'default_value'):
        group_002_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_002_1.outputs[0], 'display_shape'):
        group_002_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_002_1.outputs[0], 'enabled'):
        group_002_1.outputs[0].enabled = True
    if hasattr(group_002_1.outputs[0], 'hide'):
        group_002_1.outputs[0].hide = False
    if hasattr(group_002_1.outputs[0], 'hide_value'):
        group_002_1.outputs[0].hide_value = False
    if hasattr(group_002_1.outputs[0], 'name'):
        group_002_1.outputs[0].name = 'Color'
    if hasattr(group_002_1.outputs[0], 'show_expanded'):
        group_002_1.outputs[0].show_expanded = False

    mix_003_1 = node_tree1.nodes.new('ShaderNodeMixRGB')
    if hasattr(mix_003_1, 'blend_type'):
        mix_003_1.blend_type = 'MULTIPLY'
    if hasattr(mix_003_1, 'color'):
        mix_003_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_003_1, 'hide'):
        mix_003_1.hide = False
    if hasattr(mix_003_1, 'location'):
        mix_003_1.location = (1820.0, 1080.0)
    if hasattr(mix_003_1, 'mute'):
        mix_003_1.mute = False
    if hasattr(mix_003_1, 'name'):
        mix_003_1.name = 'Mix.003'
    if hasattr(mix_003_1, 'use_alpha'):
        mix_003_1.use_alpha = False
    if hasattr(mix_003_1, 'use_clamp'):
        mix_003_1.use_clamp = True
    if hasattr(mix_003_1, 'use_custom_color'):
        mix_003_1.use_custom_color = False
    if hasattr(mix_003_1, 'width'):
        mix_003_1.width = 140.0
    input_ = next((input_ for input_ in mix_003_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_003_1.inputs if input_.identifier=='Color1'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color1'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_003_1.inputs if input_.identifier=='Color2'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color2'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mix_003_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_010_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_010_1, 'node_tree'):
        group_010_1.node_tree = bpy.data.node_groups.get('Color Mixer')
    if hasattr(group_010_1, 'color'):
        group_010_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_010_1, 'hide'):
        group_010_1.hide = False
    if hasattr(group_010_1, 'location'):
        group_010_1.location = (-1660.0, 1759.9998779296875)
    if hasattr(group_010_1, 'mute'):
        group_010_1.mute = False
    if hasattr(group_010_1, 'name'):
        group_010_1.name = 'Group.010'
    if hasattr(group_010_1, 'use_custom_color'):
        group_010_1.use_custom_color = False
    if hasattr(group_010_1, 'width'):
        group_010_1.width = 140.0
    if hasattr(group_010_1.inputs[0], 'default_value'):
        group_010_1.inputs[0].default_value = 0.0
    if hasattr(group_010_1.inputs[0], 'display_shape'):
        group_010_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_010_1.inputs[0], 'enabled'):
        group_010_1.inputs[0].enabled = True
    if hasattr(group_010_1.inputs[0], 'hide'):
        group_010_1.inputs[0].hide = False
    if hasattr(group_010_1.inputs[0], 'hide_value'):
        group_010_1.inputs[0].hide_value = False
    if hasattr(group_010_1.inputs[0], 'name'):
        group_010_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_010_1.inputs[0], 'show_expanded'):
        group_010_1.inputs[0].show_expanded = False
    if hasattr(group_010_1.inputs[1], 'default_value'):
        group_010_1.inputs[1].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_010_1.inputs[1], 'display_shape'):
        group_010_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_010_1.inputs[1], 'enabled'):
        group_010_1.inputs[1].enabled = True
    if hasattr(group_010_1.inputs[1], 'hide'):
        group_010_1.inputs[1].hide = False
    if hasattr(group_010_1.inputs[1], 'hide_value'):
        group_010_1.inputs[1].hide_value = False
    if hasattr(group_010_1.inputs[1], 'name'):
        group_010_1.inputs[1].name = 'Top'
    if hasattr(group_010_1.inputs[1], 'show_expanded'):
        group_010_1.inputs[1].show_expanded = False
    if hasattr(group_010_1.inputs[2], 'default_value'):
        group_010_1.inputs[2].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_010_1.inputs[2], 'display_shape'):
        group_010_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_010_1.inputs[2], 'enabled'):
        group_010_1.inputs[2].enabled = True
    if hasattr(group_010_1.inputs[2], 'hide'):
        group_010_1.inputs[2].hide = False
    if hasattr(group_010_1.inputs[2], 'hide_value'):
        group_010_1.inputs[2].hide_value = False
    if hasattr(group_010_1.inputs[2], 'name'):
        group_010_1.inputs[2].name = 'Mid'
    if hasattr(group_010_1.inputs[2], 'show_expanded'):
        group_010_1.inputs[2].show_expanded = False
    if hasattr(group_010_1.inputs[3], 'default_value'):
        group_010_1.inputs[3].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_010_1.inputs[3], 'display_shape'):
        group_010_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_010_1.inputs[3], 'enabled'):
        group_010_1.inputs[3].enabled = True
    if hasattr(group_010_1.inputs[3], 'hide'):
        group_010_1.inputs[3].hide = False
    if hasattr(group_010_1.inputs[3], 'hide_value'):
        group_010_1.inputs[3].hide_value = False
    if hasattr(group_010_1.inputs[3], 'name'):
        group_010_1.inputs[3].name = 'Bot'
    if hasattr(group_010_1.inputs[3], 'show_expanded'):
        group_010_1.inputs[3].show_expanded = False
    if hasattr(group_010_1.outputs[0], 'default_value'):
        group_010_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_010_1.outputs[0], 'display_shape'):
        group_010_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_010_1.outputs[0], 'enabled'):
        group_010_1.outputs[0].enabled = True
    if hasattr(group_010_1.outputs[0], 'hide'):
        group_010_1.outputs[0].hide = False
    if hasattr(group_010_1.outputs[0], 'hide_value'):
        group_010_1.outputs[0].hide_value = False
    if hasattr(group_010_1.outputs[0], 'name'):
        group_010_1.outputs[0].name = 'Color'
    if hasattr(group_010_1.outputs[0], 'show_expanded'):
        group_010_1.outputs[0].show_expanded = False

    group_011_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_011_1, 'node_tree'):
        group_011_1.node_tree = bpy.data.node_groups.get('Color Mixer')
    if hasattr(group_011_1, 'color'):
        group_011_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_011_1, 'hide'):
        group_011_1.hide = False
    if hasattr(group_011_1, 'location'):
        group_011_1.location = (-1660.0, 1579.9998779296875)
    if hasattr(group_011_1, 'mute'):
        group_011_1.mute = False
    if hasattr(group_011_1, 'name'):
        group_011_1.name = 'Group.011'
    if hasattr(group_011_1, 'use_custom_color'):
        group_011_1.use_custom_color = False
    if hasattr(group_011_1, 'width'):
        group_011_1.width = 140.0
    if hasattr(group_011_1.inputs[0], 'default_value'):
        group_011_1.inputs[0].default_value = 0.0
    if hasattr(group_011_1.inputs[0], 'display_shape'):
        group_011_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_011_1.inputs[0], 'enabled'):
        group_011_1.inputs[0].enabled = True
    if hasattr(group_011_1.inputs[0], 'hide'):
        group_011_1.inputs[0].hide = False
    if hasattr(group_011_1.inputs[0], 'hide_value'):
        group_011_1.inputs[0].hide_value = False
    if hasattr(group_011_1.inputs[0], 'name'):
        group_011_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_011_1.inputs[0], 'show_expanded'):
        group_011_1.inputs[0].show_expanded = False
    if hasattr(group_011_1.inputs[1], 'default_value'):
        group_011_1.inputs[1].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_011_1.inputs[1], 'display_shape'):
        group_011_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_011_1.inputs[1], 'enabled'):
        group_011_1.inputs[1].enabled = True
    if hasattr(group_011_1.inputs[1], 'hide'):
        group_011_1.inputs[1].hide = False
    if hasattr(group_011_1.inputs[1], 'hide_value'):
        group_011_1.inputs[1].hide_value = False
    if hasattr(group_011_1.inputs[1], 'name'):
        group_011_1.inputs[1].name = 'Top'
    if hasattr(group_011_1.inputs[1], 'show_expanded'):
        group_011_1.inputs[1].show_expanded = False
    if hasattr(group_011_1.inputs[2], 'default_value'):
        group_011_1.inputs[2].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_011_1.inputs[2], 'display_shape'):
        group_011_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_011_1.inputs[2], 'enabled'):
        group_011_1.inputs[2].enabled = True
    if hasattr(group_011_1.inputs[2], 'hide'):
        group_011_1.inputs[2].hide = False
    if hasattr(group_011_1.inputs[2], 'hide_value'):
        group_011_1.inputs[2].hide_value = False
    if hasattr(group_011_1.inputs[2], 'name'):
        group_011_1.inputs[2].name = 'Mid'
    if hasattr(group_011_1.inputs[2], 'show_expanded'):
        group_011_1.inputs[2].show_expanded = False
    if hasattr(group_011_1.inputs[3], 'default_value'):
        group_011_1.inputs[3].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_011_1.inputs[3], 'display_shape'):
        group_011_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_011_1.inputs[3], 'enabled'):
        group_011_1.inputs[3].enabled = True
    if hasattr(group_011_1.inputs[3], 'hide'):
        group_011_1.inputs[3].hide = False
    if hasattr(group_011_1.inputs[3], 'hide_value'):
        group_011_1.inputs[3].hide_value = False
    if hasattr(group_011_1.inputs[3], 'name'):
        group_011_1.inputs[3].name = 'Bot'
    if hasattr(group_011_1.inputs[3], 'show_expanded'):
        group_011_1.inputs[3].show_expanded = False
    if hasattr(group_011_1.outputs[0], 'default_value'):
        group_011_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_011_1.outputs[0], 'display_shape'):
        group_011_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_011_1.outputs[0], 'enabled'):
        group_011_1.outputs[0].enabled = True
    if hasattr(group_011_1.outputs[0], 'hide'):
        group_011_1.outputs[0].hide = False
    if hasattr(group_011_1.outputs[0], 'hide_value'):
        group_011_1.outputs[0].hide_value = False
    if hasattr(group_011_1.outputs[0], 'name'):
        group_011_1.outputs[0].name = 'Color'
    if hasattr(group_011_1.outputs[0], 'show_expanded'):
        group_011_1.outputs[0].show_expanded = False

    group_input_007_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_007_1, 'color'):
        group_input_007_1.color = (0.42922577261924744, 0.0, 0.0)
    if hasattr(group_input_007_1, 'hide'):
        group_input_007_1.hide = False
    if hasattr(group_input_007_1, 'label'):
        group_input_007_1.label = 'Slot 1'
    if hasattr(group_input_007_1, 'location'):
        group_input_007_1.location = (-2060.0, 2260.0)
    if hasattr(group_input_007_1, 'mute'):
        group_input_007_1.mute = False
    if hasattr(group_input_007_1, 'name'):
        group_input_007_1.name = 'Group Input.007'
    if hasattr(group_input_007_1, 'use_custom_color'):
        group_input_007_1.use_custom_color = True
    if hasattr(group_input_007_1, 'width'):
        group_input_007_1.width = 179.714111328125
    if hasattr(group_input_007_1.outputs[0], 'default_value'):
        group_input_007_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[0], 'display_shape'):
        group_input_007_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[0], 'enabled'):
        group_input_007_1.outputs[0].enabled = True
    if hasattr(group_input_007_1.outputs[0], 'hide'):
        group_input_007_1.outputs[0].hide = True
    if hasattr(group_input_007_1.outputs[0], 'hide_value'):
        group_input_007_1.outputs[0].hide_value = False
    if hasattr(group_input_007_1.outputs[0], 'name'):
        group_input_007_1.outputs[0].name = 'ASG'
    if hasattr(group_input_007_1.outputs[0], 'show_expanded'):
        group_input_007_1.outputs[0].show_expanded = False
    if hasattr(group_input_007_1.outputs[1], 'default_value'):
        group_input_007_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[1], 'display_shape'):
        group_input_007_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[1], 'enabled'):
        group_input_007_1.outputs[1].enabled = True
    if hasattr(group_input_007_1.outputs[1], 'hide'):
        group_input_007_1.outputs[1].hide = True
    if hasattr(group_input_007_1.outputs[1], 'hide_value'):
        group_input_007_1.outputs[1].hide_value = False
    if hasattr(group_input_007_1.outputs[1], 'name'):
        group_input_007_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_007_1.outputs[1], 'show_expanded'):
        group_input_007_1.outputs[1].show_expanded = False
    if hasattr(group_input_007_1.outputs[2], 'default_value'):
        group_input_007_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[2], 'display_shape'):
        group_input_007_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[2], 'enabled'):
        group_input_007_1.outputs[2].enabled = True
    if hasattr(group_input_007_1.outputs[2], 'hide'):
        group_input_007_1.outputs[2].hide = True
    if hasattr(group_input_007_1.outputs[2], 'hide_value'):
        group_input_007_1.outputs[2].hide_value = False
    if hasattr(group_input_007_1.outputs[2], 'name'):
        group_input_007_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_007_1.outputs[2], 'show_expanded'):
        group_input_007_1.outputs[2].show_expanded = False
    if hasattr(group_input_007_1.outputs[3], 'default_value'):
        group_input_007_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[3], 'display_shape'):
        group_input_007_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[3], 'enabled'):
        group_input_007_1.outputs[3].enabled = True
    if hasattr(group_input_007_1.outputs[3], 'hide'):
        group_input_007_1.outputs[3].hide = True
    if hasattr(group_input_007_1.outputs[3], 'hide_value'):
        group_input_007_1.outputs[3].hide_value = False
    if hasattr(group_input_007_1.outputs[3], 'name'):
        group_input_007_1.outputs[3].name = 'Normal'
    if hasattr(group_input_007_1.outputs[3], 'show_expanded'):
        group_input_007_1.outputs[3].show_expanded = False
    if hasattr(group_input_007_1.outputs[4], 'default_value'):
        group_input_007_1.outputs[4].default_value = 0.0
    if hasattr(group_input_007_1.outputs[4], 'display_shape'):
        group_input_007_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[4], 'enabled'):
        group_input_007_1.outputs[4].enabled = True
    if hasattr(group_input_007_1.outputs[4], 'hide'):
        group_input_007_1.outputs[4].hide = True
    if hasattr(group_input_007_1.outputs[4], 'hide_value'):
        group_input_007_1.outputs[4].hide_value = False
    if hasattr(group_input_007_1.outputs[4], 'name'):
        group_input_007_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_007_1.outputs[4], 'show_expanded'):
        group_input_007_1.outputs[4].show_expanded = False
    if hasattr(group_input_007_1.outputs[5], 'default_value'):
        group_input_007_1.outputs[5].default_value = 1.0
    if hasattr(group_input_007_1.outputs[5], 'display_shape'):
        group_input_007_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[5], 'enabled'):
        group_input_007_1.outputs[5].enabled = True
    if hasattr(group_input_007_1.outputs[5], 'hide'):
        group_input_007_1.outputs[5].hide = True
    if hasattr(group_input_007_1.outputs[5], 'hide_value'):
        group_input_007_1.outputs[5].hide_value = False
    if hasattr(group_input_007_1.outputs[5], 'name'):
        group_input_007_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_007_1.outputs[5], 'show_expanded'):
        group_input_007_1.outputs[5].show_expanded = False
    if hasattr(group_input_007_1.outputs[6], 'default_value'):
        group_input_007_1.outputs[6].default_value = 0.0
    if hasattr(group_input_007_1.outputs[6], 'display_shape'):
        group_input_007_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[6], 'enabled'):
        group_input_007_1.outputs[6].enabled = True
    if hasattr(group_input_007_1.outputs[6], 'hide'):
        group_input_007_1.outputs[6].hide = False
    if hasattr(group_input_007_1.outputs[6], 'hide_value'):
        group_input_007_1.outputs[6].hide_value = False
    if hasattr(group_input_007_1.outputs[6], 'name'):
        group_input_007_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_007_1.outputs[6], 'show_expanded'):
        group_input_007_1.outputs[6].show_expanded = False
    if hasattr(group_input_007_1.outputs[7], 'default_value'):
        group_input_007_1.outputs[7].default_value = 0.0
    if hasattr(group_input_007_1.outputs[7], 'display_shape'):
        group_input_007_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[7], 'enabled'):
        group_input_007_1.outputs[7].enabled = True
    if hasattr(group_input_007_1.outputs[7], 'hide'):
        group_input_007_1.outputs[7].hide = True
    if hasattr(group_input_007_1.outputs[7], 'hide_value'):
        group_input_007_1.outputs[7].hide_value = False
    if hasattr(group_input_007_1.outputs[7], 'name'):
        group_input_007_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_007_1.outputs[7], 'show_expanded'):
        group_input_007_1.outputs[7].show_expanded = False
    if hasattr(group_input_007_1.outputs[8], 'default_value'):
        group_input_007_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[8], 'display_shape'):
        group_input_007_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[8], 'enabled'):
        group_input_007_1.outputs[8].enabled = True
    if hasattr(group_input_007_1.outputs[8], 'hide'):
        group_input_007_1.outputs[8].hide = True
    if hasattr(group_input_007_1.outputs[8], 'hide_value'):
        group_input_007_1.outputs[8].hide_value = False
    if hasattr(group_input_007_1.outputs[8], 'name'):
        group_input_007_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_007_1.outputs[8], 'show_expanded'):
        group_input_007_1.outputs[8].show_expanded = False
    if hasattr(group_input_007_1.outputs[9], 'default_value'):
        group_input_007_1.outputs[9].default_value = 0.0
    if hasattr(group_input_007_1.outputs[9], 'display_shape'):
        group_input_007_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[9], 'enabled'):
        group_input_007_1.outputs[9].enabled = True
    if hasattr(group_input_007_1.outputs[9], 'hide'):
        group_input_007_1.outputs[9].hide = True
    if hasattr(group_input_007_1.outputs[9], 'hide_value'):
        group_input_007_1.outputs[9].hide_value = False
    if hasattr(group_input_007_1.outputs[9], 'name'):
        group_input_007_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_007_1.outputs[9], 'show_expanded'):
        group_input_007_1.outputs[9].show_expanded = False
    if hasattr(group_input_007_1.outputs[10], 'default_value'):
        group_input_007_1.outputs[10].default_value = 0.0
    if hasattr(group_input_007_1.outputs[10], 'display_shape'):
        group_input_007_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[10], 'enabled'):
        group_input_007_1.outputs[10].enabled = True
    if hasattr(group_input_007_1.outputs[10], 'hide'):
        group_input_007_1.outputs[10].hide = True
    if hasattr(group_input_007_1.outputs[10], 'hide_value'):
        group_input_007_1.outputs[10].hide_value = False
    if hasattr(group_input_007_1.outputs[10], 'name'):
        group_input_007_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_007_1.outputs[10], 'show_expanded'):
        group_input_007_1.outputs[10].show_expanded = False
    if hasattr(group_input_007_1.outputs[11], 'default_value'):
        group_input_007_1.outputs[11].default_value = 0.0
    if hasattr(group_input_007_1.outputs[11], 'display_shape'):
        group_input_007_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[11], 'enabled'):
        group_input_007_1.outputs[11].enabled = True
    if hasattr(group_input_007_1.outputs[11], 'hide'):
        group_input_007_1.outputs[11].hide = True
    if hasattr(group_input_007_1.outputs[11], 'hide_value'):
        group_input_007_1.outputs[11].hide_value = False
    if hasattr(group_input_007_1.outputs[11], 'name'):
        group_input_007_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_007_1.outputs[11], 'show_expanded'):
        group_input_007_1.outputs[11].show_expanded = False
    if hasattr(group_input_007_1.outputs[12], 'default_value'):
        group_input_007_1.outputs[12].default_value = 0.0
    if hasattr(group_input_007_1.outputs[12], 'display_shape'):
        group_input_007_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[12], 'enabled'):
        group_input_007_1.outputs[12].enabled = True
    if hasattr(group_input_007_1.outputs[12], 'hide'):
        group_input_007_1.outputs[12].hide = True
    if hasattr(group_input_007_1.outputs[12], 'hide_value'):
        group_input_007_1.outputs[12].hide_value = False
    if hasattr(group_input_007_1.outputs[12], 'name'):
        group_input_007_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_007_1.outputs[12], 'show_expanded'):
        group_input_007_1.outputs[12].show_expanded = False
    if hasattr(group_input_007_1.outputs[13], 'default_value'):
        group_input_007_1.outputs[13].default_value = 0.0
    if hasattr(group_input_007_1.outputs[13], 'display_shape'):
        group_input_007_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[13], 'enabled'):
        group_input_007_1.outputs[13].enabled = True
    if hasattr(group_input_007_1.outputs[13], 'hide'):
        group_input_007_1.outputs[13].hide = True
    if hasattr(group_input_007_1.outputs[13], 'hide_value'):
        group_input_007_1.outputs[13].hide_value = False
    if hasattr(group_input_007_1.outputs[13], 'name'):
        group_input_007_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_007_1.outputs[13], 'show_expanded'):
        group_input_007_1.outputs[13].show_expanded = False
    if hasattr(group_input_007_1.outputs[14], 'default_value'):
        group_input_007_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_007_1.outputs[14], 'display_shape'):
        group_input_007_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[14], 'enabled'):
        group_input_007_1.outputs[14].enabled = True
    if hasattr(group_input_007_1.outputs[14], 'hide'):
        group_input_007_1.outputs[14].hide = False
    if hasattr(group_input_007_1.outputs[14], 'hide_value'):
        group_input_007_1.outputs[14].hide_value = False
    if hasattr(group_input_007_1.outputs[14], 'name'):
        group_input_007_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_007_1.outputs[14], 'show_expanded'):
        group_input_007_1.outputs[14].show_expanded = False
    if hasattr(group_input_007_1.outputs[15], 'default_value'):
        group_input_007_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_007_1.outputs[15], 'display_shape'):
        group_input_007_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[15], 'enabled'):
        group_input_007_1.outputs[15].enabled = True
    if hasattr(group_input_007_1.outputs[15], 'hide'):
        group_input_007_1.outputs[15].hide = False
    if hasattr(group_input_007_1.outputs[15], 'hide_value'):
        group_input_007_1.outputs[15].hide_value = False
    if hasattr(group_input_007_1.outputs[15], 'name'):
        group_input_007_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_007_1.outputs[15], 'show_expanded'):
        group_input_007_1.outputs[15].show_expanded = False
    if hasattr(group_input_007_1.outputs[16], 'default_value'):
        group_input_007_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_007_1.outputs[16], 'display_shape'):
        group_input_007_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[16], 'enabled'):
        group_input_007_1.outputs[16].enabled = True
    if hasattr(group_input_007_1.outputs[16], 'hide'):
        group_input_007_1.outputs[16].hide = False
    if hasattr(group_input_007_1.outputs[16], 'hide_value'):
        group_input_007_1.outputs[16].hide_value = False
    if hasattr(group_input_007_1.outputs[16], 'name'):
        group_input_007_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_007_1.outputs[16], 'show_expanded'):
        group_input_007_1.outputs[16].show_expanded = False
    if hasattr(group_input_007_1.outputs[17], 'default_value'):
        group_input_007_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_007_1.outputs[17], 'display_shape'):
        group_input_007_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[17], 'enabled'):
        group_input_007_1.outputs[17].enabled = True
    if hasattr(group_input_007_1.outputs[17], 'hide'):
        group_input_007_1.outputs[17].hide = True
    if hasattr(group_input_007_1.outputs[17], 'hide_value'):
        group_input_007_1.outputs[17].hide_value = False
    if hasattr(group_input_007_1.outputs[17], 'name'):
        group_input_007_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_007_1.outputs[17], 'show_expanded'):
        group_input_007_1.outputs[17].show_expanded = False
    if hasattr(group_input_007_1.outputs[18], 'default_value'):
        group_input_007_1.outputs[18].default_value = 0.0
    if hasattr(group_input_007_1.outputs[18], 'display_shape'):
        group_input_007_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[18], 'enabled'):
        group_input_007_1.outputs[18].enabled = True
    if hasattr(group_input_007_1.outputs[18], 'hide'):
        group_input_007_1.outputs[18].hide = True
    if hasattr(group_input_007_1.outputs[18], 'hide_value'):
        group_input_007_1.outputs[18].hide_value = False
    if hasattr(group_input_007_1.outputs[18], 'name'):
        group_input_007_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_007_1.outputs[18], 'show_expanded'):
        group_input_007_1.outputs[18].show_expanded = False
    if hasattr(group_input_007_1.outputs[19], 'default_value'):
        group_input_007_1.outputs[19].default_value = 0.0
    if hasattr(group_input_007_1.outputs[19], 'display_shape'):
        group_input_007_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[19], 'enabled'):
        group_input_007_1.outputs[19].enabled = True
    if hasattr(group_input_007_1.outputs[19], 'hide'):
        group_input_007_1.outputs[19].hide = True
    if hasattr(group_input_007_1.outputs[19], 'hide_value'):
        group_input_007_1.outputs[19].hide_value = False
    if hasattr(group_input_007_1.outputs[19], 'name'):
        group_input_007_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_007_1.outputs[19], 'show_expanded'):
        group_input_007_1.outputs[19].show_expanded = False
    if hasattr(group_input_007_1.outputs[20], 'default_value'):
        group_input_007_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[20], 'display_shape'):
        group_input_007_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[20], 'enabled'):
        group_input_007_1.outputs[20].enabled = True
    if hasattr(group_input_007_1.outputs[20], 'hide'):
        group_input_007_1.outputs[20].hide = True
    if hasattr(group_input_007_1.outputs[20], 'hide_value'):
        group_input_007_1.outputs[20].hide_value = False
    if hasattr(group_input_007_1.outputs[20], 'name'):
        group_input_007_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_007_1.outputs[20], 'show_expanded'):
        group_input_007_1.outputs[20].show_expanded = False
    if hasattr(group_input_007_1.outputs[21], 'default_value'):
        group_input_007_1.outputs[21].default_value = 0.0
    if hasattr(group_input_007_1.outputs[21], 'display_shape'):
        group_input_007_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[21], 'enabled'):
        group_input_007_1.outputs[21].enabled = True
    if hasattr(group_input_007_1.outputs[21], 'hide'):
        group_input_007_1.outputs[21].hide = True
    if hasattr(group_input_007_1.outputs[21], 'hide_value'):
        group_input_007_1.outputs[21].hide_value = False
    if hasattr(group_input_007_1.outputs[21], 'name'):
        group_input_007_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_007_1.outputs[21], 'show_expanded'):
        group_input_007_1.outputs[21].show_expanded = False
    if hasattr(group_input_007_1.outputs[22], 'default_value'):
        group_input_007_1.outputs[22].default_value = 0.0
    if hasattr(group_input_007_1.outputs[22], 'display_shape'):
        group_input_007_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[22], 'enabled'):
        group_input_007_1.outputs[22].enabled = True
    if hasattr(group_input_007_1.outputs[22], 'hide'):
        group_input_007_1.outputs[22].hide = True
    if hasattr(group_input_007_1.outputs[22], 'hide_value'):
        group_input_007_1.outputs[22].hide_value = False
    if hasattr(group_input_007_1.outputs[22], 'name'):
        group_input_007_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_007_1.outputs[22], 'show_expanded'):
        group_input_007_1.outputs[22].show_expanded = False
    if hasattr(group_input_007_1.outputs[23], 'default_value'):
        group_input_007_1.outputs[23].default_value = 0.0
    if hasattr(group_input_007_1.outputs[23], 'display_shape'):
        group_input_007_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[23], 'enabled'):
        group_input_007_1.outputs[23].enabled = True
    if hasattr(group_input_007_1.outputs[23], 'hide'):
        group_input_007_1.outputs[23].hide = True
    if hasattr(group_input_007_1.outputs[23], 'hide_value'):
        group_input_007_1.outputs[23].hide_value = False
    if hasattr(group_input_007_1.outputs[23], 'name'):
        group_input_007_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_007_1.outputs[23], 'show_expanded'):
        group_input_007_1.outputs[23].show_expanded = False
    if hasattr(group_input_007_1.outputs[24], 'default_value'):
        group_input_007_1.outputs[24].default_value = 0.0
    if hasattr(group_input_007_1.outputs[24], 'display_shape'):
        group_input_007_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[24], 'enabled'):
        group_input_007_1.outputs[24].enabled = True
    if hasattr(group_input_007_1.outputs[24], 'hide'):
        group_input_007_1.outputs[24].hide = True
    if hasattr(group_input_007_1.outputs[24], 'hide_value'):
        group_input_007_1.outputs[24].hide_value = False
    if hasattr(group_input_007_1.outputs[24], 'name'):
        group_input_007_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_007_1.outputs[24], 'show_expanded'):
        group_input_007_1.outputs[24].show_expanded = False
    if hasattr(group_input_007_1.outputs[25], 'default_value'):
        group_input_007_1.outputs[25].default_value = 0.0
    if hasattr(group_input_007_1.outputs[25], 'display_shape'):
        group_input_007_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[25], 'enabled'):
        group_input_007_1.outputs[25].enabled = True
    if hasattr(group_input_007_1.outputs[25], 'hide'):
        group_input_007_1.outputs[25].hide = True
    if hasattr(group_input_007_1.outputs[25], 'hide_value'):
        group_input_007_1.outputs[25].hide_value = False
    if hasattr(group_input_007_1.outputs[25], 'name'):
        group_input_007_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_007_1.outputs[25], 'show_expanded'):
        group_input_007_1.outputs[25].show_expanded = False
    if hasattr(group_input_007_1.outputs[26], 'default_value'):
        group_input_007_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_007_1.outputs[26], 'display_shape'):
        group_input_007_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[26], 'enabled'):
        group_input_007_1.outputs[26].enabled = True
    if hasattr(group_input_007_1.outputs[26], 'hide'):
        group_input_007_1.outputs[26].hide = True
    if hasattr(group_input_007_1.outputs[26], 'hide_value'):
        group_input_007_1.outputs[26].hide_value = False
    if hasattr(group_input_007_1.outputs[26], 'name'):
        group_input_007_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_007_1.outputs[26], 'show_expanded'):
        group_input_007_1.outputs[26].show_expanded = False
    if hasattr(group_input_007_1.outputs[27], 'default_value'):
        group_input_007_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_007_1.outputs[27], 'display_shape'):
        group_input_007_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[27], 'enabled'):
        group_input_007_1.outputs[27].enabled = True
    if hasattr(group_input_007_1.outputs[27], 'hide'):
        group_input_007_1.outputs[27].hide = True
    if hasattr(group_input_007_1.outputs[27], 'hide_value'):
        group_input_007_1.outputs[27].hide_value = False
    if hasattr(group_input_007_1.outputs[27], 'name'):
        group_input_007_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_007_1.outputs[27], 'show_expanded'):
        group_input_007_1.outputs[27].show_expanded = False
    if hasattr(group_input_007_1.outputs[28], 'default_value'):
        group_input_007_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_007_1.outputs[28], 'display_shape'):
        group_input_007_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[28], 'enabled'):
        group_input_007_1.outputs[28].enabled = True
    if hasattr(group_input_007_1.outputs[28], 'hide'):
        group_input_007_1.outputs[28].hide = True
    if hasattr(group_input_007_1.outputs[28], 'hide_value'):
        group_input_007_1.outputs[28].hide_value = False
    if hasattr(group_input_007_1.outputs[28], 'name'):
        group_input_007_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_007_1.outputs[28], 'show_expanded'):
        group_input_007_1.outputs[28].show_expanded = False
    if hasattr(group_input_007_1.outputs[29], 'default_value'):
        group_input_007_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_007_1.outputs[29], 'display_shape'):
        group_input_007_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[29], 'enabled'):
        group_input_007_1.outputs[29].enabled = True
    if hasattr(group_input_007_1.outputs[29], 'hide'):
        group_input_007_1.outputs[29].hide = True
    if hasattr(group_input_007_1.outputs[29], 'hide_value'):
        group_input_007_1.outputs[29].hide_value = False
    if hasattr(group_input_007_1.outputs[29], 'name'):
        group_input_007_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_007_1.outputs[29], 'show_expanded'):
        group_input_007_1.outputs[29].show_expanded = False
    if hasattr(group_input_007_1.outputs[30], 'default_value'):
        group_input_007_1.outputs[30].default_value = 0.0
    if hasattr(group_input_007_1.outputs[30], 'display_shape'):
        group_input_007_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[30], 'enabled'):
        group_input_007_1.outputs[30].enabled = True
    if hasattr(group_input_007_1.outputs[30], 'hide'):
        group_input_007_1.outputs[30].hide = True
    if hasattr(group_input_007_1.outputs[30], 'hide_value'):
        group_input_007_1.outputs[30].hide_value = False
    if hasattr(group_input_007_1.outputs[30], 'name'):
        group_input_007_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_007_1.outputs[30], 'show_expanded'):
        group_input_007_1.outputs[30].show_expanded = False
    if hasattr(group_input_007_1.outputs[31], 'default_value'):
        group_input_007_1.outputs[31].default_value = 0.0
    if hasattr(group_input_007_1.outputs[31], 'display_shape'):
        group_input_007_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[31], 'enabled'):
        group_input_007_1.outputs[31].enabled = True
    if hasattr(group_input_007_1.outputs[31], 'hide'):
        group_input_007_1.outputs[31].hide = True
    if hasattr(group_input_007_1.outputs[31], 'hide_value'):
        group_input_007_1.outputs[31].hide_value = False
    if hasattr(group_input_007_1.outputs[31], 'name'):
        group_input_007_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_007_1.outputs[31], 'show_expanded'):
        group_input_007_1.outputs[31].show_expanded = False
    if hasattr(group_input_007_1.outputs[32], 'default_value'):
        group_input_007_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[32], 'display_shape'):
        group_input_007_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[32], 'enabled'):
        group_input_007_1.outputs[32].enabled = True
    if hasattr(group_input_007_1.outputs[32], 'hide'):
        group_input_007_1.outputs[32].hide = True
    if hasattr(group_input_007_1.outputs[32], 'hide_value'):
        group_input_007_1.outputs[32].hide_value = False
    if hasattr(group_input_007_1.outputs[32], 'name'):
        group_input_007_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_007_1.outputs[32], 'show_expanded'):
        group_input_007_1.outputs[32].show_expanded = False
    if hasattr(group_input_007_1.outputs[33], 'default_value'):
        group_input_007_1.outputs[33].default_value = 0.0
    if hasattr(group_input_007_1.outputs[33], 'display_shape'):
        group_input_007_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[33], 'enabled'):
        group_input_007_1.outputs[33].enabled = True
    if hasattr(group_input_007_1.outputs[33], 'hide'):
        group_input_007_1.outputs[33].hide = True
    if hasattr(group_input_007_1.outputs[33], 'hide_value'):
        group_input_007_1.outputs[33].hide_value = False
    if hasattr(group_input_007_1.outputs[33], 'name'):
        group_input_007_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_007_1.outputs[33], 'show_expanded'):
        group_input_007_1.outputs[33].show_expanded = False
    if hasattr(group_input_007_1.outputs[34], 'default_value'):
        group_input_007_1.outputs[34].default_value = 0.0
    if hasattr(group_input_007_1.outputs[34], 'display_shape'):
        group_input_007_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[34], 'enabled'):
        group_input_007_1.outputs[34].enabled = True
    if hasattr(group_input_007_1.outputs[34], 'hide'):
        group_input_007_1.outputs[34].hide = True
    if hasattr(group_input_007_1.outputs[34], 'hide_value'):
        group_input_007_1.outputs[34].hide_value = False
    if hasattr(group_input_007_1.outputs[34], 'name'):
        group_input_007_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_007_1.outputs[34], 'show_expanded'):
        group_input_007_1.outputs[34].show_expanded = False
    if hasattr(group_input_007_1.outputs[35], 'default_value'):
        group_input_007_1.outputs[35].default_value = 0.0
    if hasattr(group_input_007_1.outputs[35], 'display_shape'):
        group_input_007_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[35], 'enabled'):
        group_input_007_1.outputs[35].enabled = True
    if hasattr(group_input_007_1.outputs[35], 'hide'):
        group_input_007_1.outputs[35].hide = True
    if hasattr(group_input_007_1.outputs[35], 'hide_value'):
        group_input_007_1.outputs[35].hide_value = False
    if hasattr(group_input_007_1.outputs[35], 'name'):
        group_input_007_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_007_1.outputs[35], 'show_expanded'):
        group_input_007_1.outputs[35].show_expanded = False
    if hasattr(group_input_007_1.outputs[36], 'default_value'):
        group_input_007_1.outputs[36].default_value = 0.0
    if hasattr(group_input_007_1.outputs[36], 'display_shape'):
        group_input_007_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[36], 'enabled'):
        group_input_007_1.outputs[36].enabled = True
    if hasattr(group_input_007_1.outputs[36], 'hide'):
        group_input_007_1.outputs[36].hide = True
    if hasattr(group_input_007_1.outputs[36], 'hide_value'):
        group_input_007_1.outputs[36].hide_value = False
    if hasattr(group_input_007_1.outputs[36], 'name'):
        group_input_007_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_007_1.outputs[36], 'show_expanded'):
        group_input_007_1.outputs[36].show_expanded = False
    if hasattr(group_input_007_1.outputs[37], 'default_value'):
        group_input_007_1.outputs[37].default_value = 0.0
    if hasattr(group_input_007_1.outputs[37], 'display_shape'):
        group_input_007_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[37], 'enabled'):
        group_input_007_1.outputs[37].enabled = True
    if hasattr(group_input_007_1.outputs[37], 'hide'):
        group_input_007_1.outputs[37].hide = True
    if hasattr(group_input_007_1.outputs[37], 'hide_value'):
        group_input_007_1.outputs[37].hide_value = False
    if hasattr(group_input_007_1.outputs[37], 'name'):
        group_input_007_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_007_1.outputs[37], 'show_expanded'):
        group_input_007_1.outputs[37].show_expanded = False
    if hasattr(group_input_007_1.outputs[38], 'default_value'):
        group_input_007_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_007_1.outputs[38], 'display_shape'):
        group_input_007_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[38], 'enabled'):
        group_input_007_1.outputs[38].enabled = True
    if hasattr(group_input_007_1.outputs[38], 'hide'):
        group_input_007_1.outputs[38].hide = True
    if hasattr(group_input_007_1.outputs[38], 'hide_value'):
        group_input_007_1.outputs[38].hide_value = False
    if hasattr(group_input_007_1.outputs[38], 'name'):
        group_input_007_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_007_1.outputs[38], 'show_expanded'):
        group_input_007_1.outputs[38].show_expanded = False
    if hasattr(group_input_007_1.outputs[39], 'default_value'):
        group_input_007_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_007_1.outputs[39], 'display_shape'):
        group_input_007_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[39], 'enabled'):
        group_input_007_1.outputs[39].enabled = True
    if hasattr(group_input_007_1.outputs[39], 'hide'):
        group_input_007_1.outputs[39].hide = True
    if hasattr(group_input_007_1.outputs[39], 'hide_value'):
        group_input_007_1.outputs[39].hide_value = False
    if hasattr(group_input_007_1.outputs[39], 'name'):
        group_input_007_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_007_1.outputs[39], 'show_expanded'):
        group_input_007_1.outputs[39].show_expanded = False
    if hasattr(group_input_007_1.outputs[40], 'default_value'):
        group_input_007_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_007_1.outputs[40], 'display_shape'):
        group_input_007_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[40], 'enabled'):
        group_input_007_1.outputs[40].enabled = True
    if hasattr(group_input_007_1.outputs[40], 'hide'):
        group_input_007_1.outputs[40].hide = True
    if hasattr(group_input_007_1.outputs[40], 'hide_value'):
        group_input_007_1.outputs[40].hide_value = False
    if hasattr(group_input_007_1.outputs[40], 'name'):
        group_input_007_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_007_1.outputs[40], 'show_expanded'):
        group_input_007_1.outputs[40].show_expanded = False
    if hasattr(group_input_007_1.outputs[41], 'default_value'):
        group_input_007_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_007_1.outputs[41], 'display_shape'):
        group_input_007_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[41], 'enabled'):
        group_input_007_1.outputs[41].enabled = True
    if hasattr(group_input_007_1.outputs[41], 'hide'):
        group_input_007_1.outputs[41].hide = True
    if hasattr(group_input_007_1.outputs[41], 'hide_value'):
        group_input_007_1.outputs[41].hide_value = False
    if hasattr(group_input_007_1.outputs[41], 'name'):
        group_input_007_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_007_1.outputs[41], 'show_expanded'):
        group_input_007_1.outputs[41].show_expanded = False
    if hasattr(group_input_007_1.outputs[42], 'default_value'):
        group_input_007_1.outputs[42].default_value = 0.0
    if hasattr(group_input_007_1.outputs[42], 'display_shape'):
        group_input_007_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[42], 'enabled'):
        group_input_007_1.outputs[42].enabled = True
    if hasattr(group_input_007_1.outputs[42], 'hide'):
        group_input_007_1.outputs[42].hide = True
    if hasattr(group_input_007_1.outputs[42], 'hide_value'):
        group_input_007_1.outputs[42].hide_value = False
    if hasattr(group_input_007_1.outputs[42], 'name'):
        group_input_007_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_007_1.outputs[42], 'show_expanded'):
        group_input_007_1.outputs[42].show_expanded = False
    if hasattr(group_input_007_1.outputs[43], 'default_value'):
        group_input_007_1.outputs[43].default_value = 0.0
    if hasattr(group_input_007_1.outputs[43], 'display_shape'):
        group_input_007_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[43], 'enabled'):
        group_input_007_1.outputs[43].enabled = True
    if hasattr(group_input_007_1.outputs[43], 'hide'):
        group_input_007_1.outputs[43].hide = True
    if hasattr(group_input_007_1.outputs[43], 'hide_value'):
        group_input_007_1.outputs[43].hide_value = False
    if hasattr(group_input_007_1.outputs[43], 'name'):
        group_input_007_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_007_1.outputs[43], 'show_expanded'):
        group_input_007_1.outputs[43].show_expanded = False
    if hasattr(group_input_007_1.outputs[44], 'default_value'):
        group_input_007_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[44], 'display_shape'):
        group_input_007_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[44], 'enabled'):
        group_input_007_1.outputs[44].enabled = True
    if hasattr(group_input_007_1.outputs[44], 'hide'):
        group_input_007_1.outputs[44].hide = True
    if hasattr(group_input_007_1.outputs[44], 'hide_value'):
        group_input_007_1.outputs[44].hide_value = False
    if hasattr(group_input_007_1.outputs[44], 'name'):
        group_input_007_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_007_1.outputs[44], 'show_expanded'):
        group_input_007_1.outputs[44].show_expanded = False
    if hasattr(group_input_007_1.outputs[45], 'default_value'):
        group_input_007_1.outputs[45].default_value = 0.0
    if hasattr(group_input_007_1.outputs[45], 'display_shape'):
        group_input_007_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[45], 'enabled'):
        group_input_007_1.outputs[45].enabled = True
    if hasattr(group_input_007_1.outputs[45], 'hide'):
        group_input_007_1.outputs[45].hide = True
    if hasattr(group_input_007_1.outputs[45], 'hide_value'):
        group_input_007_1.outputs[45].hide_value = False
    if hasattr(group_input_007_1.outputs[45], 'name'):
        group_input_007_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_007_1.outputs[45], 'show_expanded'):
        group_input_007_1.outputs[45].show_expanded = False
    if hasattr(group_input_007_1.outputs[46], 'default_value'):
        group_input_007_1.outputs[46].default_value = 0.0
    if hasattr(group_input_007_1.outputs[46], 'display_shape'):
        group_input_007_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[46], 'enabled'):
        group_input_007_1.outputs[46].enabled = True
    if hasattr(group_input_007_1.outputs[46], 'hide'):
        group_input_007_1.outputs[46].hide = True
    if hasattr(group_input_007_1.outputs[46], 'hide_value'):
        group_input_007_1.outputs[46].hide_value = False
    if hasattr(group_input_007_1.outputs[46], 'name'):
        group_input_007_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_007_1.outputs[46], 'show_expanded'):
        group_input_007_1.outputs[46].show_expanded = False
    if hasattr(group_input_007_1.outputs[47], 'default_value'):
        group_input_007_1.outputs[47].default_value = 0.0
    if hasattr(group_input_007_1.outputs[47], 'display_shape'):
        group_input_007_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[47], 'enabled'):
        group_input_007_1.outputs[47].enabled = True
    if hasattr(group_input_007_1.outputs[47], 'hide'):
        group_input_007_1.outputs[47].hide = True
    if hasattr(group_input_007_1.outputs[47], 'hide_value'):
        group_input_007_1.outputs[47].hide_value = False
    if hasattr(group_input_007_1.outputs[47], 'name'):
        group_input_007_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_007_1.outputs[47], 'show_expanded'):
        group_input_007_1.outputs[47].show_expanded = False
    if hasattr(group_input_007_1.outputs[48], 'default_value'):
        group_input_007_1.outputs[48].default_value = 0.0
    if hasattr(group_input_007_1.outputs[48], 'display_shape'):
        group_input_007_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[48], 'enabled'):
        group_input_007_1.outputs[48].enabled = True
    if hasattr(group_input_007_1.outputs[48], 'hide'):
        group_input_007_1.outputs[48].hide = True
    if hasattr(group_input_007_1.outputs[48], 'hide_value'):
        group_input_007_1.outputs[48].hide_value = False
    if hasattr(group_input_007_1.outputs[48], 'name'):
        group_input_007_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_007_1.outputs[48], 'show_expanded'):
        group_input_007_1.outputs[48].show_expanded = False
    if hasattr(group_input_007_1.outputs[49], 'default_value'):
        group_input_007_1.outputs[49].default_value = 0.0
    if hasattr(group_input_007_1.outputs[49], 'display_shape'):
        group_input_007_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[49], 'enabled'):
        group_input_007_1.outputs[49].enabled = True
    if hasattr(group_input_007_1.outputs[49], 'hide'):
        group_input_007_1.outputs[49].hide = True
    if hasattr(group_input_007_1.outputs[49], 'hide_value'):
        group_input_007_1.outputs[49].hide_value = False
    if hasattr(group_input_007_1.outputs[49], 'name'):
        group_input_007_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_007_1.outputs[49], 'show_expanded'):
        group_input_007_1.outputs[49].show_expanded = False
    if hasattr(group_input_007_1.outputs[50], 'default_value'):
        group_input_007_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_007_1.outputs[50], 'display_shape'):
        group_input_007_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[50], 'enabled'):
        group_input_007_1.outputs[50].enabled = True
    if hasattr(group_input_007_1.outputs[50], 'hide'):
        group_input_007_1.outputs[50].hide = True
    if hasattr(group_input_007_1.outputs[50], 'hide_value'):
        group_input_007_1.outputs[50].hide_value = False
    if hasattr(group_input_007_1.outputs[50], 'name'):
        group_input_007_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_007_1.outputs[50], 'show_expanded'):
        group_input_007_1.outputs[50].show_expanded = False
    if hasattr(group_input_007_1.outputs[51], 'default_value'):
        group_input_007_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_007_1.outputs[51], 'display_shape'):
        group_input_007_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[51], 'enabled'):
        group_input_007_1.outputs[51].enabled = True
    if hasattr(group_input_007_1.outputs[51], 'hide'):
        group_input_007_1.outputs[51].hide = True
    if hasattr(group_input_007_1.outputs[51], 'hide_value'):
        group_input_007_1.outputs[51].hide_value = False
    if hasattr(group_input_007_1.outputs[51], 'name'):
        group_input_007_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_007_1.outputs[51], 'show_expanded'):
        group_input_007_1.outputs[51].show_expanded = False
    if hasattr(group_input_007_1.outputs[52], 'default_value'):
        group_input_007_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_007_1.outputs[52], 'display_shape'):
        group_input_007_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[52], 'enabled'):
        group_input_007_1.outputs[52].enabled = True
    if hasattr(group_input_007_1.outputs[52], 'hide'):
        group_input_007_1.outputs[52].hide = True
    if hasattr(group_input_007_1.outputs[52], 'hide_value'):
        group_input_007_1.outputs[52].hide_value = False
    if hasattr(group_input_007_1.outputs[52], 'name'):
        group_input_007_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_007_1.outputs[52], 'show_expanded'):
        group_input_007_1.outputs[52].show_expanded = False
    if hasattr(group_input_007_1.outputs[53], 'default_value'):
        group_input_007_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_007_1.outputs[53], 'display_shape'):
        group_input_007_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[53], 'enabled'):
        group_input_007_1.outputs[53].enabled = True
    if hasattr(group_input_007_1.outputs[53], 'hide'):
        group_input_007_1.outputs[53].hide = True
    if hasattr(group_input_007_1.outputs[53], 'hide_value'):
        group_input_007_1.outputs[53].hide_value = False
    if hasattr(group_input_007_1.outputs[53], 'name'):
        group_input_007_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_007_1.outputs[53], 'show_expanded'):
        group_input_007_1.outputs[53].show_expanded = False
    if hasattr(group_input_007_1.outputs[54], 'default_value'):
        group_input_007_1.outputs[54].default_value = 0.0
    if hasattr(group_input_007_1.outputs[54], 'display_shape'):
        group_input_007_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[54], 'enabled'):
        group_input_007_1.outputs[54].enabled = True
    if hasattr(group_input_007_1.outputs[54], 'hide'):
        group_input_007_1.outputs[54].hide = True
    if hasattr(group_input_007_1.outputs[54], 'hide_value'):
        group_input_007_1.outputs[54].hide_value = False
    if hasattr(group_input_007_1.outputs[54], 'name'):
        group_input_007_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_007_1.outputs[54], 'show_expanded'):
        group_input_007_1.outputs[54].show_expanded = False
    if hasattr(group_input_007_1.outputs[55], 'default_value'):
        group_input_007_1.outputs[55].default_value = 0.0
    if hasattr(group_input_007_1.outputs[55], 'display_shape'):
        group_input_007_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[55], 'enabled'):
        group_input_007_1.outputs[55].enabled = True
    if hasattr(group_input_007_1.outputs[55], 'hide'):
        group_input_007_1.outputs[55].hide = True
    if hasattr(group_input_007_1.outputs[55], 'hide_value'):
        group_input_007_1.outputs[55].hide_value = False
    if hasattr(group_input_007_1.outputs[55], 'name'):
        group_input_007_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_007_1.outputs[55], 'show_expanded'):
        group_input_007_1.outputs[55].show_expanded = False
    if hasattr(group_input_007_1.outputs[56], 'default_value'):
        group_input_007_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[56], 'display_shape'):
        group_input_007_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[56], 'enabled'):
        group_input_007_1.outputs[56].enabled = True
    if hasattr(group_input_007_1.outputs[56], 'hide'):
        group_input_007_1.outputs[56].hide = True
    if hasattr(group_input_007_1.outputs[56], 'hide_value'):
        group_input_007_1.outputs[56].hide_value = False
    if hasattr(group_input_007_1.outputs[56], 'name'):
        group_input_007_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_007_1.outputs[56], 'show_expanded'):
        group_input_007_1.outputs[56].show_expanded = False
    if hasattr(group_input_007_1.outputs[57], 'default_value'):
        group_input_007_1.outputs[57].default_value = 0.0
    if hasattr(group_input_007_1.outputs[57], 'display_shape'):
        group_input_007_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[57], 'enabled'):
        group_input_007_1.outputs[57].enabled = True
    if hasattr(group_input_007_1.outputs[57], 'hide'):
        group_input_007_1.outputs[57].hide = True
    if hasattr(group_input_007_1.outputs[57], 'hide_value'):
        group_input_007_1.outputs[57].hide_value = False
    if hasattr(group_input_007_1.outputs[57], 'name'):
        group_input_007_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_007_1.outputs[57], 'show_expanded'):
        group_input_007_1.outputs[57].show_expanded = False
    if hasattr(group_input_007_1.outputs[58], 'default_value'):
        group_input_007_1.outputs[58].default_value = 0.0
    if hasattr(group_input_007_1.outputs[58], 'display_shape'):
        group_input_007_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[58], 'enabled'):
        group_input_007_1.outputs[58].enabled = True
    if hasattr(group_input_007_1.outputs[58], 'hide'):
        group_input_007_1.outputs[58].hide = True
    if hasattr(group_input_007_1.outputs[58], 'hide_value'):
        group_input_007_1.outputs[58].hide_value = False
    if hasattr(group_input_007_1.outputs[58], 'name'):
        group_input_007_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_007_1.outputs[58], 'show_expanded'):
        group_input_007_1.outputs[58].show_expanded = False
    if hasattr(group_input_007_1.outputs[59], 'default_value'):
        group_input_007_1.outputs[59].default_value = 0.0
    if hasattr(group_input_007_1.outputs[59], 'display_shape'):
        group_input_007_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[59], 'enabled'):
        group_input_007_1.outputs[59].enabled = True
    if hasattr(group_input_007_1.outputs[59], 'hide'):
        group_input_007_1.outputs[59].hide = True
    if hasattr(group_input_007_1.outputs[59], 'hide_value'):
        group_input_007_1.outputs[59].hide_value = False
    if hasattr(group_input_007_1.outputs[59], 'name'):
        group_input_007_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_007_1.outputs[59], 'show_expanded'):
        group_input_007_1.outputs[59].show_expanded = False
    if hasattr(group_input_007_1.outputs[60], 'default_value'):
        group_input_007_1.outputs[60].default_value = 0.0
    if hasattr(group_input_007_1.outputs[60], 'display_shape'):
        group_input_007_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[60], 'enabled'):
        group_input_007_1.outputs[60].enabled = True
    if hasattr(group_input_007_1.outputs[60], 'hide'):
        group_input_007_1.outputs[60].hide = True
    if hasattr(group_input_007_1.outputs[60], 'hide_value'):
        group_input_007_1.outputs[60].hide_value = False
    if hasattr(group_input_007_1.outputs[60], 'name'):
        group_input_007_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_007_1.outputs[60], 'show_expanded'):
        group_input_007_1.outputs[60].show_expanded = False
    if hasattr(group_input_007_1.outputs[61], 'default_value'):
        group_input_007_1.outputs[61].default_value = 0.0
    if hasattr(group_input_007_1.outputs[61], 'display_shape'):
        group_input_007_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[61], 'enabled'):
        group_input_007_1.outputs[61].enabled = True
    if hasattr(group_input_007_1.outputs[61], 'hide'):
        group_input_007_1.outputs[61].hide = True
    if hasattr(group_input_007_1.outputs[61], 'hide_value'):
        group_input_007_1.outputs[61].hide_value = False
    if hasattr(group_input_007_1.outputs[61], 'name'):
        group_input_007_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_007_1.outputs[61], 'show_expanded'):
        group_input_007_1.outputs[61].show_expanded = False
    if hasattr(group_input_007_1.outputs[62], 'default_value'):
        group_input_007_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_007_1.outputs[62], 'display_shape'):
        group_input_007_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[62], 'enabled'):
        group_input_007_1.outputs[62].enabled = True
    if hasattr(group_input_007_1.outputs[62], 'hide'):
        group_input_007_1.outputs[62].hide = True
    if hasattr(group_input_007_1.outputs[62], 'hide_value'):
        group_input_007_1.outputs[62].hide_value = False
    if hasattr(group_input_007_1.outputs[62], 'name'):
        group_input_007_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_007_1.outputs[62], 'show_expanded'):
        group_input_007_1.outputs[62].show_expanded = False
    if hasattr(group_input_007_1.outputs[63], 'default_value'):
        group_input_007_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_007_1.outputs[63], 'display_shape'):
        group_input_007_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[63], 'enabled'):
        group_input_007_1.outputs[63].enabled = True
    if hasattr(group_input_007_1.outputs[63], 'hide'):
        group_input_007_1.outputs[63].hide = True
    if hasattr(group_input_007_1.outputs[63], 'hide_value'):
        group_input_007_1.outputs[63].hide_value = False
    if hasattr(group_input_007_1.outputs[63], 'name'):
        group_input_007_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_007_1.outputs[63], 'show_expanded'):
        group_input_007_1.outputs[63].show_expanded = False
    if hasattr(group_input_007_1.outputs[64], 'default_value'):
        group_input_007_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_007_1.outputs[64], 'display_shape'):
        group_input_007_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[64], 'enabled'):
        group_input_007_1.outputs[64].enabled = True
    if hasattr(group_input_007_1.outputs[64], 'hide'):
        group_input_007_1.outputs[64].hide = True
    if hasattr(group_input_007_1.outputs[64], 'hide_value'):
        group_input_007_1.outputs[64].hide_value = False
    if hasattr(group_input_007_1.outputs[64], 'name'):
        group_input_007_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_007_1.outputs[64], 'show_expanded'):
        group_input_007_1.outputs[64].show_expanded = False
    if hasattr(group_input_007_1.outputs[65], 'default_value'):
        group_input_007_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_007_1.outputs[65], 'display_shape'):
        group_input_007_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[65], 'enabled'):
        group_input_007_1.outputs[65].enabled = True
    if hasattr(group_input_007_1.outputs[65], 'hide'):
        group_input_007_1.outputs[65].hide = True
    if hasattr(group_input_007_1.outputs[65], 'hide_value'):
        group_input_007_1.outputs[65].hide_value = False
    if hasattr(group_input_007_1.outputs[65], 'name'):
        group_input_007_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_007_1.outputs[65], 'show_expanded'):
        group_input_007_1.outputs[65].show_expanded = False
    if hasattr(group_input_007_1.outputs[66], 'default_value'):
        group_input_007_1.outputs[66].default_value = 0.0
    if hasattr(group_input_007_1.outputs[66], 'display_shape'):
        group_input_007_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[66], 'enabled'):
        group_input_007_1.outputs[66].enabled = True
    if hasattr(group_input_007_1.outputs[66], 'hide'):
        group_input_007_1.outputs[66].hide = True
    if hasattr(group_input_007_1.outputs[66], 'hide_value'):
        group_input_007_1.outputs[66].hide_value = False
    if hasattr(group_input_007_1.outputs[66], 'name'):
        group_input_007_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_007_1.outputs[66], 'show_expanded'):
        group_input_007_1.outputs[66].show_expanded = False
    if hasattr(group_input_007_1.outputs[67], 'default_value'):
        group_input_007_1.outputs[67].default_value = 0.0
    if hasattr(group_input_007_1.outputs[67], 'display_shape'):
        group_input_007_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[67], 'enabled'):
        group_input_007_1.outputs[67].enabled = True
    if hasattr(group_input_007_1.outputs[67], 'hide'):
        group_input_007_1.outputs[67].hide = True
    if hasattr(group_input_007_1.outputs[67], 'hide_value'):
        group_input_007_1.outputs[67].hide_value = False
    if hasattr(group_input_007_1.outputs[67], 'name'):
        group_input_007_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_007_1.outputs[67], 'show_expanded'):
        group_input_007_1.outputs[67].show_expanded = False
    if hasattr(group_input_007_1.outputs[68], 'default_value'):
        group_input_007_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[68], 'display_shape'):
        group_input_007_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[68], 'enabled'):
        group_input_007_1.outputs[68].enabled = True
    if hasattr(group_input_007_1.outputs[68], 'hide'):
        group_input_007_1.outputs[68].hide = True
    if hasattr(group_input_007_1.outputs[68], 'hide_value'):
        group_input_007_1.outputs[68].hide_value = False
    if hasattr(group_input_007_1.outputs[68], 'name'):
        group_input_007_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_007_1.outputs[68], 'show_expanded'):
        group_input_007_1.outputs[68].show_expanded = False
    if hasattr(group_input_007_1.outputs[69], 'default_value'):
        group_input_007_1.outputs[69].default_value = 0.0
    if hasattr(group_input_007_1.outputs[69], 'display_shape'):
        group_input_007_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[69], 'enabled'):
        group_input_007_1.outputs[69].enabled = True
    if hasattr(group_input_007_1.outputs[69], 'hide'):
        group_input_007_1.outputs[69].hide = True
    if hasattr(group_input_007_1.outputs[69], 'hide_value'):
        group_input_007_1.outputs[69].hide_value = False
    if hasattr(group_input_007_1.outputs[69], 'name'):
        group_input_007_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_007_1.outputs[69], 'show_expanded'):
        group_input_007_1.outputs[69].show_expanded = False
    if hasattr(group_input_007_1.outputs[70], 'default_value'):
        group_input_007_1.outputs[70].default_value = 0.0
    if hasattr(group_input_007_1.outputs[70], 'display_shape'):
        group_input_007_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[70], 'enabled'):
        group_input_007_1.outputs[70].enabled = True
    if hasattr(group_input_007_1.outputs[70], 'hide'):
        group_input_007_1.outputs[70].hide = True
    if hasattr(group_input_007_1.outputs[70], 'hide_value'):
        group_input_007_1.outputs[70].hide_value = False
    if hasattr(group_input_007_1.outputs[70], 'name'):
        group_input_007_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_007_1.outputs[70], 'show_expanded'):
        group_input_007_1.outputs[70].show_expanded = False
    if hasattr(group_input_007_1.outputs[71], 'default_value'):
        group_input_007_1.outputs[71].default_value = 0.0
    if hasattr(group_input_007_1.outputs[71], 'display_shape'):
        group_input_007_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[71], 'enabled'):
        group_input_007_1.outputs[71].enabled = True
    if hasattr(group_input_007_1.outputs[71], 'hide'):
        group_input_007_1.outputs[71].hide = True
    if hasattr(group_input_007_1.outputs[71], 'hide_value'):
        group_input_007_1.outputs[71].hide_value = False
    if hasattr(group_input_007_1.outputs[71], 'name'):
        group_input_007_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_007_1.outputs[71], 'show_expanded'):
        group_input_007_1.outputs[71].show_expanded = False
    if hasattr(group_input_007_1.outputs[72], 'default_value'):
        group_input_007_1.outputs[72].default_value = 0.0
    if hasattr(group_input_007_1.outputs[72], 'display_shape'):
        group_input_007_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[72], 'enabled'):
        group_input_007_1.outputs[72].enabled = True
    if hasattr(group_input_007_1.outputs[72], 'hide'):
        group_input_007_1.outputs[72].hide = True
    if hasattr(group_input_007_1.outputs[72], 'hide_value'):
        group_input_007_1.outputs[72].hide_value = False
    if hasattr(group_input_007_1.outputs[72], 'name'):
        group_input_007_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_007_1.outputs[72], 'show_expanded'):
        group_input_007_1.outputs[72].show_expanded = False
    if hasattr(group_input_007_1.outputs[73], 'default_value'):
        group_input_007_1.outputs[73].default_value = 0.0
    if hasattr(group_input_007_1.outputs[73], 'display_shape'):
        group_input_007_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[73], 'enabled'):
        group_input_007_1.outputs[73].enabled = True
    if hasattr(group_input_007_1.outputs[73], 'hide'):
        group_input_007_1.outputs[73].hide = True
    if hasattr(group_input_007_1.outputs[73], 'hide_value'):
        group_input_007_1.outputs[73].hide_value = False
    if hasattr(group_input_007_1.outputs[73], 'name'):
        group_input_007_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_007_1.outputs[73], 'show_expanded'):
        group_input_007_1.outputs[73].show_expanded = False
    if hasattr(group_input_007_1.outputs[74], 'default_value'):
        group_input_007_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_007_1.outputs[74], 'display_shape'):
        group_input_007_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[74], 'enabled'):
        group_input_007_1.outputs[74].enabled = True
    if hasattr(group_input_007_1.outputs[74], 'hide'):
        group_input_007_1.outputs[74].hide = True
    if hasattr(group_input_007_1.outputs[74], 'hide_value'):
        group_input_007_1.outputs[74].hide_value = False
    if hasattr(group_input_007_1.outputs[74], 'name'):
        group_input_007_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_007_1.outputs[74], 'show_expanded'):
        group_input_007_1.outputs[74].show_expanded = False
    if hasattr(group_input_007_1.outputs[75], 'default_value'):
        group_input_007_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_007_1.outputs[75], 'display_shape'):
        group_input_007_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[75], 'enabled'):
        group_input_007_1.outputs[75].enabled = True
    if hasattr(group_input_007_1.outputs[75], 'hide'):
        group_input_007_1.outputs[75].hide = True
    if hasattr(group_input_007_1.outputs[75], 'hide_value'):
        group_input_007_1.outputs[75].hide_value = False
    if hasattr(group_input_007_1.outputs[75], 'name'):
        group_input_007_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_007_1.outputs[75], 'show_expanded'):
        group_input_007_1.outputs[75].show_expanded = False
    if hasattr(group_input_007_1.outputs[76], 'default_value'):
        group_input_007_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_007_1.outputs[76], 'display_shape'):
        group_input_007_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[76], 'enabled'):
        group_input_007_1.outputs[76].enabled = True
    if hasattr(group_input_007_1.outputs[76], 'hide'):
        group_input_007_1.outputs[76].hide = True
    if hasattr(group_input_007_1.outputs[76], 'hide_value'):
        group_input_007_1.outputs[76].hide_value = False
    if hasattr(group_input_007_1.outputs[76], 'name'):
        group_input_007_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_007_1.outputs[76], 'show_expanded'):
        group_input_007_1.outputs[76].show_expanded = False
    if hasattr(group_input_007_1.outputs[77], 'default_value'):
        group_input_007_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_007_1.outputs[77], 'display_shape'):
        group_input_007_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[77], 'enabled'):
        group_input_007_1.outputs[77].enabled = True
    if hasattr(group_input_007_1.outputs[77], 'hide'):
        group_input_007_1.outputs[77].hide = True
    if hasattr(group_input_007_1.outputs[77], 'hide_value'):
        group_input_007_1.outputs[77].hide_value = False
    if hasattr(group_input_007_1.outputs[77], 'name'):
        group_input_007_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_007_1.outputs[77], 'show_expanded'):
        group_input_007_1.outputs[77].show_expanded = False
    if hasattr(group_input_007_1.outputs[78], 'default_value'):
        group_input_007_1.outputs[78].default_value = 0.0
    if hasattr(group_input_007_1.outputs[78], 'display_shape'):
        group_input_007_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[78], 'enabled'):
        group_input_007_1.outputs[78].enabled = True
    if hasattr(group_input_007_1.outputs[78], 'hide'):
        group_input_007_1.outputs[78].hide = True
    if hasattr(group_input_007_1.outputs[78], 'hide_value'):
        group_input_007_1.outputs[78].hide_value = False
    if hasattr(group_input_007_1.outputs[78], 'name'):
        group_input_007_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_007_1.outputs[78], 'show_expanded'):
        group_input_007_1.outputs[78].show_expanded = False
    if hasattr(group_input_007_1.outputs[79], 'default_value'):
        group_input_007_1.outputs[79].default_value = 0.0
    if hasattr(group_input_007_1.outputs[79], 'display_shape'):
        group_input_007_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[79], 'enabled'):
        group_input_007_1.outputs[79].enabled = True
    if hasattr(group_input_007_1.outputs[79], 'hide'):
        group_input_007_1.outputs[79].hide = True
    if hasattr(group_input_007_1.outputs[79], 'hide_value'):
        group_input_007_1.outputs[79].hide_value = False
    if hasattr(group_input_007_1.outputs[79], 'name'):
        group_input_007_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_007_1.outputs[79], 'show_expanded'):
        group_input_007_1.outputs[79].show_expanded = False
    if hasattr(group_input_007_1.outputs[80], 'default_value'):
        group_input_007_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[80], 'display_shape'):
        group_input_007_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[80], 'enabled'):
        group_input_007_1.outputs[80].enabled = True
    if hasattr(group_input_007_1.outputs[80], 'hide'):
        group_input_007_1.outputs[80].hide = True
    if hasattr(group_input_007_1.outputs[80], 'hide_value'):
        group_input_007_1.outputs[80].hide_value = False
    if hasattr(group_input_007_1.outputs[80], 'name'):
        group_input_007_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_007_1.outputs[80], 'show_expanded'):
        group_input_007_1.outputs[80].show_expanded = False
    if hasattr(group_input_007_1.outputs[81], 'default_value'):
        group_input_007_1.outputs[81].default_value = 0.0
    if hasattr(group_input_007_1.outputs[81], 'display_shape'):
        group_input_007_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[81], 'enabled'):
        group_input_007_1.outputs[81].enabled = True
    if hasattr(group_input_007_1.outputs[81], 'hide'):
        group_input_007_1.outputs[81].hide = True
    if hasattr(group_input_007_1.outputs[81], 'hide_value'):
        group_input_007_1.outputs[81].hide_value = False
    if hasattr(group_input_007_1.outputs[81], 'name'):
        group_input_007_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_007_1.outputs[81], 'show_expanded'):
        group_input_007_1.outputs[81].show_expanded = False
    if hasattr(group_input_007_1.outputs[82], 'default_value'):
        group_input_007_1.outputs[82].default_value = 0.0
    if hasattr(group_input_007_1.outputs[82], 'display_shape'):
        group_input_007_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[82], 'enabled'):
        group_input_007_1.outputs[82].enabled = True
    if hasattr(group_input_007_1.outputs[82], 'hide'):
        group_input_007_1.outputs[82].hide = True
    if hasattr(group_input_007_1.outputs[82], 'hide_value'):
        group_input_007_1.outputs[82].hide_value = False
    if hasattr(group_input_007_1.outputs[82], 'name'):
        group_input_007_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_007_1.outputs[82], 'show_expanded'):
        group_input_007_1.outputs[82].show_expanded = False
    if hasattr(group_input_007_1.outputs[83], 'default_value'):
        group_input_007_1.outputs[83].default_value = 0.0
    if hasattr(group_input_007_1.outputs[83], 'display_shape'):
        group_input_007_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[83], 'enabled'):
        group_input_007_1.outputs[83].enabled = True
    if hasattr(group_input_007_1.outputs[83], 'hide'):
        group_input_007_1.outputs[83].hide = True
    if hasattr(group_input_007_1.outputs[83], 'hide_value'):
        group_input_007_1.outputs[83].hide_value = False
    if hasattr(group_input_007_1.outputs[83], 'name'):
        group_input_007_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_007_1.outputs[83], 'show_expanded'):
        group_input_007_1.outputs[83].show_expanded = False
    if hasattr(group_input_007_1.outputs[84], 'default_value'):
        group_input_007_1.outputs[84].default_value = 0.0
    if hasattr(group_input_007_1.outputs[84], 'display_shape'):
        group_input_007_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[84], 'enabled'):
        group_input_007_1.outputs[84].enabled = True
    if hasattr(group_input_007_1.outputs[84], 'hide'):
        group_input_007_1.outputs[84].hide = True
    if hasattr(group_input_007_1.outputs[84], 'hide_value'):
        group_input_007_1.outputs[84].hide_value = False
    if hasattr(group_input_007_1.outputs[84], 'name'):
        group_input_007_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_007_1.outputs[84], 'show_expanded'):
        group_input_007_1.outputs[84].show_expanded = False
    if hasattr(group_input_007_1.outputs[85], 'default_value'):
        group_input_007_1.outputs[85].default_value = 0.0
    if hasattr(group_input_007_1.outputs[85], 'display_shape'):
        group_input_007_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[85], 'enabled'):
        group_input_007_1.outputs[85].enabled = True
    if hasattr(group_input_007_1.outputs[85], 'hide'):
        group_input_007_1.outputs[85].hide = True
    if hasattr(group_input_007_1.outputs[85], 'hide_value'):
        group_input_007_1.outputs[85].hide_value = False
    if hasattr(group_input_007_1.outputs[85], 'name'):
        group_input_007_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_007_1.outputs[85], 'show_expanded'):
        group_input_007_1.outputs[85].show_expanded = False
    if hasattr(group_input_007_1.outputs[86], 'default_value'):
        group_input_007_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_007_1.outputs[86], 'display_shape'):
        group_input_007_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[86], 'enabled'):
        group_input_007_1.outputs[86].enabled = True
    if hasattr(group_input_007_1.outputs[86], 'hide'):
        group_input_007_1.outputs[86].hide = True
    if hasattr(group_input_007_1.outputs[86], 'hide_value'):
        group_input_007_1.outputs[86].hide_value = False
    if hasattr(group_input_007_1.outputs[86], 'name'):
        group_input_007_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_007_1.outputs[86], 'show_expanded'):
        group_input_007_1.outputs[86].show_expanded = False
    if hasattr(group_input_007_1.outputs[87], 'default_value'):
        group_input_007_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_007_1.outputs[87], 'display_shape'):
        group_input_007_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[87], 'enabled'):
        group_input_007_1.outputs[87].enabled = True
    if hasattr(group_input_007_1.outputs[87], 'hide'):
        group_input_007_1.outputs[87].hide = True
    if hasattr(group_input_007_1.outputs[87], 'hide_value'):
        group_input_007_1.outputs[87].hide_value = False
    if hasattr(group_input_007_1.outputs[87], 'name'):
        group_input_007_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_007_1.outputs[87], 'show_expanded'):
        group_input_007_1.outputs[87].show_expanded = False
    if hasattr(group_input_007_1.outputs[88], 'default_value'):
        group_input_007_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_007_1.outputs[88], 'display_shape'):
        group_input_007_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[88], 'enabled'):
        group_input_007_1.outputs[88].enabled = True
    if hasattr(group_input_007_1.outputs[88], 'hide'):
        group_input_007_1.outputs[88].hide = True
    if hasattr(group_input_007_1.outputs[88], 'hide_value'):
        group_input_007_1.outputs[88].hide_value = False
    if hasattr(group_input_007_1.outputs[88], 'name'):
        group_input_007_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_007_1.outputs[88], 'show_expanded'):
        group_input_007_1.outputs[88].show_expanded = False
    if hasattr(group_input_007_1.outputs[89], 'default_value'):
        group_input_007_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_007_1.outputs[89], 'display_shape'):
        group_input_007_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[89], 'enabled'):
        group_input_007_1.outputs[89].enabled = True
    if hasattr(group_input_007_1.outputs[89], 'hide'):
        group_input_007_1.outputs[89].hide = True
    if hasattr(group_input_007_1.outputs[89], 'hide_value'):
        group_input_007_1.outputs[89].hide_value = False
    if hasattr(group_input_007_1.outputs[89], 'name'):
        group_input_007_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_007_1.outputs[89], 'show_expanded'):
        group_input_007_1.outputs[89].show_expanded = False
    if hasattr(group_input_007_1.outputs[90], 'default_value'):
        group_input_007_1.outputs[90].default_value = 0.0
    if hasattr(group_input_007_1.outputs[90], 'display_shape'):
        group_input_007_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[90], 'enabled'):
        group_input_007_1.outputs[90].enabled = True
    if hasattr(group_input_007_1.outputs[90], 'hide'):
        group_input_007_1.outputs[90].hide = True
    if hasattr(group_input_007_1.outputs[90], 'hide_value'):
        group_input_007_1.outputs[90].hide_value = False
    if hasattr(group_input_007_1.outputs[90], 'name'):
        group_input_007_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_007_1.outputs[90], 'show_expanded'):
        group_input_007_1.outputs[90].show_expanded = False
    if hasattr(group_input_007_1.outputs[91], 'default_value'):
        group_input_007_1.outputs[91].default_value = 0.0
    if hasattr(group_input_007_1.outputs[91], 'display_shape'):
        group_input_007_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[91], 'enabled'):
        group_input_007_1.outputs[91].enabled = True
    if hasattr(group_input_007_1.outputs[91], 'hide'):
        group_input_007_1.outputs[91].hide = True
    if hasattr(group_input_007_1.outputs[91], 'hide_value'):
        group_input_007_1.outputs[91].hide_value = False
    if hasattr(group_input_007_1.outputs[91], 'name'):
        group_input_007_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_007_1.outputs[91], 'show_expanded'):
        group_input_007_1.outputs[91].show_expanded = False
    if hasattr(group_input_007_1.outputs[92], 'default_value'):
        group_input_007_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_007_1.outputs[92], 'display_shape'):
        group_input_007_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[92], 'enabled'):
        group_input_007_1.outputs[92].enabled = True
    if hasattr(group_input_007_1.outputs[92], 'hide'):
        group_input_007_1.outputs[92].hide = True
    if hasattr(group_input_007_1.outputs[92], 'hide_value'):
        group_input_007_1.outputs[92].hide_value = False
    if hasattr(group_input_007_1.outputs[92], 'name'):
        group_input_007_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_007_1.outputs[92], 'show_expanded'):
        group_input_007_1.outputs[92].show_expanded = False
    if hasattr(group_input_007_1.outputs[93], 'default_value'):
        group_input_007_1.outputs[93].default_value = 0.0
    if hasattr(group_input_007_1.outputs[93], 'display_shape'):
        group_input_007_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[93], 'enabled'):
        group_input_007_1.outputs[93].enabled = True
    if hasattr(group_input_007_1.outputs[93], 'hide'):
        group_input_007_1.outputs[93].hide = True
    if hasattr(group_input_007_1.outputs[93], 'hide_value'):
        group_input_007_1.outputs[93].hide_value = False
    if hasattr(group_input_007_1.outputs[93], 'name'):
        group_input_007_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_007_1.outputs[93], 'show_expanded'):
        group_input_007_1.outputs[93].show_expanded = False
    if hasattr(group_input_007_1.outputs[94], 'default_value'):
        group_input_007_1.outputs[94].default_value = 0.0
    if hasattr(group_input_007_1.outputs[94], 'display_shape'):
        group_input_007_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[94], 'enabled'):
        group_input_007_1.outputs[94].enabled = True
    if hasattr(group_input_007_1.outputs[94], 'hide'):
        group_input_007_1.outputs[94].hide = True
    if hasattr(group_input_007_1.outputs[94], 'hide_value'):
        group_input_007_1.outputs[94].hide_value = False
    if hasattr(group_input_007_1.outputs[94], 'name'):
        group_input_007_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_007_1.outputs[94], 'show_expanded'):
        group_input_007_1.outputs[94].show_expanded = False
    if hasattr(group_input_007_1.outputs[95], 'default_value'):
        group_input_007_1.outputs[95].default_value = 0.0
    if hasattr(group_input_007_1.outputs[95], 'display_shape'):
        group_input_007_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[95], 'enabled'):
        group_input_007_1.outputs[95].enabled = True
    if hasattr(group_input_007_1.outputs[95], 'hide'):
        group_input_007_1.outputs[95].hide = True
    if hasattr(group_input_007_1.outputs[95], 'hide_value'):
        group_input_007_1.outputs[95].hide_value = False
    if hasattr(group_input_007_1.outputs[95], 'name'):
        group_input_007_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_007_1.outputs[95], 'show_expanded'):
        group_input_007_1.outputs[95].show_expanded = False
    if hasattr(group_input_007_1.outputs[96], 'default_value'):
        group_input_007_1.outputs[96].default_value = 0.0
    if hasattr(group_input_007_1.outputs[96], 'display_shape'):
        group_input_007_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[96], 'enabled'):
        group_input_007_1.outputs[96].enabled = True
    if hasattr(group_input_007_1.outputs[96], 'hide'):
        group_input_007_1.outputs[96].hide = True
    if hasattr(group_input_007_1.outputs[96], 'hide_value'):
        group_input_007_1.outputs[96].hide_value = False
    if hasattr(group_input_007_1.outputs[96], 'name'):
        group_input_007_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_007_1.outputs[96], 'show_expanded'):
        group_input_007_1.outputs[96].show_expanded = False
    if hasattr(group_input_007_1.outputs[97], 'default_value'):
        group_input_007_1.outputs[97].default_value = 0.0
    if hasattr(group_input_007_1.outputs[97], 'display_shape'):
        group_input_007_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[97], 'enabled'):
        group_input_007_1.outputs[97].enabled = True
    if hasattr(group_input_007_1.outputs[97], 'hide'):
        group_input_007_1.outputs[97].hide = True
    if hasattr(group_input_007_1.outputs[97], 'hide_value'):
        group_input_007_1.outputs[97].hide_value = False
    if hasattr(group_input_007_1.outputs[97], 'name'):
        group_input_007_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_007_1.outputs[97], 'show_expanded'):
        group_input_007_1.outputs[97].show_expanded = False
    if hasattr(group_input_007_1.outputs[98], 'default_value'):
        group_input_007_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_007_1.outputs[98], 'display_shape'):
        group_input_007_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[98], 'enabled'):
        group_input_007_1.outputs[98].enabled = True
    if hasattr(group_input_007_1.outputs[98], 'hide'):
        group_input_007_1.outputs[98].hide = True
    if hasattr(group_input_007_1.outputs[98], 'hide_value'):
        group_input_007_1.outputs[98].hide_value = False
    if hasattr(group_input_007_1.outputs[98], 'name'):
        group_input_007_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_007_1.outputs[98], 'show_expanded'):
        group_input_007_1.outputs[98].show_expanded = False
    if hasattr(group_input_007_1.outputs[99], 'default_value'):
        group_input_007_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_007_1.outputs[99], 'display_shape'):
        group_input_007_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[99], 'enabled'):
        group_input_007_1.outputs[99].enabled = True
    if hasattr(group_input_007_1.outputs[99], 'hide'):
        group_input_007_1.outputs[99].hide = True
    if hasattr(group_input_007_1.outputs[99], 'hide_value'):
        group_input_007_1.outputs[99].hide_value = False
    if hasattr(group_input_007_1.outputs[99], 'name'):
        group_input_007_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_007_1.outputs[99], 'show_expanded'):
        group_input_007_1.outputs[99].show_expanded = False
    if hasattr(group_input_007_1.outputs[100], 'default_value'):
        group_input_007_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_007_1.outputs[100], 'display_shape'):
        group_input_007_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[100], 'enabled'):
        group_input_007_1.outputs[100].enabled = True
    if hasattr(group_input_007_1.outputs[100], 'hide'):
        group_input_007_1.outputs[100].hide = True
    if hasattr(group_input_007_1.outputs[100], 'hide_value'):
        group_input_007_1.outputs[100].hide_value = False
    if hasattr(group_input_007_1.outputs[100], 'name'):
        group_input_007_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_007_1.outputs[100], 'show_expanded'):
        group_input_007_1.outputs[100].show_expanded = False
    if hasattr(group_input_007_1.outputs[101], 'default_value'):
        group_input_007_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_007_1.outputs[101], 'display_shape'):
        group_input_007_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_007_1.outputs[101], 'enabled'):
        group_input_007_1.outputs[101].enabled = True
    if hasattr(group_input_007_1.outputs[101], 'hide'):
        group_input_007_1.outputs[101].hide = True
    if hasattr(group_input_007_1.outputs[101], 'hide_value'):
        group_input_007_1.outputs[101].hide_value = False
    if hasattr(group_input_007_1.outputs[101], 'name'):
        group_input_007_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_007_1.outputs[101], 'show_expanded'):
        group_input_007_1.outputs[101].show_expanded = False

    group_input_008_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_008_1, 'color'):
        group_input_008_1.color = (0.5, 0.5, 0.0)
    if hasattr(group_input_008_1, 'hide'):
        group_input_008_1.hide = False
    if hasattr(group_input_008_1, 'label'):
        group_input_008_1.label = 'Slot 2'
    if hasattr(group_input_008_1, 'location'):
        group_input_008_1.location = (-2060.0, 2080.0)
    if hasattr(group_input_008_1, 'mute'):
        group_input_008_1.mute = False
    if hasattr(group_input_008_1, 'name'):
        group_input_008_1.name = 'Group Input.008'
    if hasattr(group_input_008_1, 'use_custom_color'):
        group_input_008_1.use_custom_color = True
    if hasattr(group_input_008_1, 'width'):
        group_input_008_1.width = 179.714111328125
    if hasattr(group_input_008_1.outputs[0], 'default_value'):
        group_input_008_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[0], 'display_shape'):
        group_input_008_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[0], 'enabled'):
        group_input_008_1.outputs[0].enabled = True
    if hasattr(group_input_008_1.outputs[0], 'hide'):
        group_input_008_1.outputs[0].hide = True
    if hasattr(group_input_008_1.outputs[0], 'hide_value'):
        group_input_008_1.outputs[0].hide_value = False
    if hasattr(group_input_008_1.outputs[0], 'name'):
        group_input_008_1.outputs[0].name = 'ASG'
    if hasattr(group_input_008_1.outputs[0], 'show_expanded'):
        group_input_008_1.outputs[0].show_expanded = False
    if hasattr(group_input_008_1.outputs[1], 'default_value'):
        group_input_008_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[1], 'display_shape'):
        group_input_008_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[1], 'enabled'):
        group_input_008_1.outputs[1].enabled = True
    if hasattr(group_input_008_1.outputs[1], 'hide'):
        group_input_008_1.outputs[1].hide = True
    if hasattr(group_input_008_1.outputs[1], 'hide_value'):
        group_input_008_1.outputs[1].hide_value = False
    if hasattr(group_input_008_1.outputs[1], 'name'):
        group_input_008_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_008_1.outputs[1], 'show_expanded'):
        group_input_008_1.outputs[1].show_expanded = False
    if hasattr(group_input_008_1.outputs[2], 'default_value'):
        group_input_008_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[2], 'display_shape'):
        group_input_008_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[2], 'enabled'):
        group_input_008_1.outputs[2].enabled = True
    if hasattr(group_input_008_1.outputs[2], 'hide'):
        group_input_008_1.outputs[2].hide = True
    if hasattr(group_input_008_1.outputs[2], 'hide_value'):
        group_input_008_1.outputs[2].hide_value = False
    if hasattr(group_input_008_1.outputs[2], 'name'):
        group_input_008_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_008_1.outputs[2], 'show_expanded'):
        group_input_008_1.outputs[2].show_expanded = False
    if hasattr(group_input_008_1.outputs[3], 'default_value'):
        group_input_008_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[3], 'display_shape'):
        group_input_008_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[3], 'enabled'):
        group_input_008_1.outputs[3].enabled = True
    if hasattr(group_input_008_1.outputs[3], 'hide'):
        group_input_008_1.outputs[3].hide = True
    if hasattr(group_input_008_1.outputs[3], 'hide_value'):
        group_input_008_1.outputs[3].hide_value = False
    if hasattr(group_input_008_1.outputs[3], 'name'):
        group_input_008_1.outputs[3].name = 'Normal'
    if hasattr(group_input_008_1.outputs[3], 'show_expanded'):
        group_input_008_1.outputs[3].show_expanded = False
    if hasattr(group_input_008_1.outputs[4], 'default_value'):
        group_input_008_1.outputs[4].default_value = 0.0
    if hasattr(group_input_008_1.outputs[4], 'display_shape'):
        group_input_008_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[4], 'enabled'):
        group_input_008_1.outputs[4].enabled = True
    if hasattr(group_input_008_1.outputs[4], 'hide'):
        group_input_008_1.outputs[4].hide = True
    if hasattr(group_input_008_1.outputs[4], 'hide_value'):
        group_input_008_1.outputs[4].hide_value = False
    if hasattr(group_input_008_1.outputs[4], 'name'):
        group_input_008_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_008_1.outputs[4], 'show_expanded'):
        group_input_008_1.outputs[4].show_expanded = False
    if hasattr(group_input_008_1.outputs[5], 'default_value'):
        group_input_008_1.outputs[5].default_value = 1.0
    if hasattr(group_input_008_1.outputs[5], 'display_shape'):
        group_input_008_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[5], 'enabled'):
        group_input_008_1.outputs[5].enabled = True
    if hasattr(group_input_008_1.outputs[5], 'hide'):
        group_input_008_1.outputs[5].hide = True
    if hasattr(group_input_008_1.outputs[5], 'hide_value'):
        group_input_008_1.outputs[5].hide_value = False
    if hasattr(group_input_008_1.outputs[5], 'name'):
        group_input_008_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_008_1.outputs[5], 'show_expanded'):
        group_input_008_1.outputs[5].show_expanded = False
    if hasattr(group_input_008_1.outputs[6], 'default_value'):
        group_input_008_1.outputs[6].default_value = 0.0
    if hasattr(group_input_008_1.outputs[6], 'display_shape'):
        group_input_008_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[6], 'enabled'):
        group_input_008_1.outputs[6].enabled = True
    if hasattr(group_input_008_1.outputs[6], 'hide'):
        group_input_008_1.outputs[6].hide = True
    if hasattr(group_input_008_1.outputs[6], 'hide_value'):
        group_input_008_1.outputs[6].hide_value = False
    if hasattr(group_input_008_1.outputs[6], 'name'):
        group_input_008_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_008_1.outputs[6], 'show_expanded'):
        group_input_008_1.outputs[6].show_expanded = False
    if hasattr(group_input_008_1.outputs[7], 'default_value'):
        group_input_008_1.outputs[7].default_value = 0.0
    if hasattr(group_input_008_1.outputs[7], 'display_shape'):
        group_input_008_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[7], 'enabled'):
        group_input_008_1.outputs[7].enabled = True
    if hasattr(group_input_008_1.outputs[7], 'hide'):
        group_input_008_1.outputs[7].hide = True
    if hasattr(group_input_008_1.outputs[7], 'hide_value'):
        group_input_008_1.outputs[7].hide_value = False
    if hasattr(group_input_008_1.outputs[7], 'name'):
        group_input_008_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_008_1.outputs[7], 'show_expanded'):
        group_input_008_1.outputs[7].show_expanded = False
    if hasattr(group_input_008_1.outputs[8], 'default_value'):
        group_input_008_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[8], 'display_shape'):
        group_input_008_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[8], 'enabled'):
        group_input_008_1.outputs[8].enabled = True
    if hasattr(group_input_008_1.outputs[8], 'hide'):
        group_input_008_1.outputs[8].hide = True
    if hasattr(group_input_008_1.outputs[8], 'hide_value'):
        group_input_008_1.outputs[8].hide_value = False
    if hasattr(group_input_008_1.outputs[8], 'name'):
        group_input_008_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_008_1.outputs[8], 'show_expanded'):
        group_input_008_1.outputs[8].show_expanded = False
    if hasattr(group_input_008_1.outputs[9], 'default_value'):
        group_input_008_1.outputs[9].default_value = 0.0
    if hasattr(group_input_008_1.outputs[9], 'display_shape'):
        group_input_008_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[9], 'enabled'):
        group_input_008_1.outputs[9].enabled = True
    if hasattr(group_input_008_1.outputs[9], 'hide'):
        group_input_008_1.outputs[9].hide = True
    if hasattr(group_input_008_1.outputs[9], 'hide_value'):
        group_input_008_1.outputs[9].hide_value = False
    if hasattr(group_input_008_1.outputs[9], 'name'):
        group_input_008_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_008_1.outputs[9], 'show_expanded'):
        group_input_008_1.outputs[9].show_expanded = False
    if hasattr(group_input_008_1.outputs[10], 'default_value'):
        group_input_008_1.outputs[10].default_value = 0.0
    if hasattr(group_input_008_1.outputs[10], 'display_shape'):
        group_input_008_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[10], 'enabled'):
        group_input_008_1.outputs[10].enabled = True
    if hasattr(group_input_008_1.outputs[10], 'hide'):
        group_input_008_1.outputs[10].hide = True
    if hasattr(group_input_008_1.outputs[10], 'hide_value'):
        group_input_008_1.outputs[10].hide_value = False
    if hasattr(group_input_008_1.outputs[10], 'name'):
        group_input_008_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_008_1.outputs[10], 'show_expanded'):
        group_input_008_1.outputs[10].show_expanded = False
    if hasattr(group_input_008_1.outputs[11], 'default_value'):
        group_input_008_1.outputs[11].default_value = 0.0
    if hasattr(group_input_008_1.outputs[11], 'display_shape'):
        group_input_008_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[11], 'enabled'):
        group_input_008_1.outputs[11].enabled = True
    if hasattr(group_input_008_1.outputs[11], 'hide'):
        group_input_008_1.outputs[11].hide = True
    if hasattr(group_input_008_1.outputs[11], 'hide_value'):
        group_input_008_1.outputs[11].hide_value = False
    if hasattr(group_input_008_1.outputs[11], 'name'):
        group_input_008_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_008_1.outputs[11], 'show_expanded'):
        group_input_008_1.outputs[11].show_expanded = False
    if hasattr(group_input_008_1.outputs[12], 'default_value'):
        group_input_008_1.outputs[12].default_value = 0.0
    if hasattr(group_input_008_1.outputs[12], 'display_shape'):
        group_input_008_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[12], 'enabled'):
        group_input_008_1.outputs[12].enabled = True
    if hasattr(group_input_008_1.outputs[12], 'hide'):
        group_input_008_1.outputs[12].hide = True
    if hasattr(group_input_008_1.outputs[12], 'hide_value'):
        group_input_008_1.outputs[12].hide_value = False
    if hasattr(group_input_008_1.outputs[12], 'name'):
        group_input_008_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_008_1.outputs[12], 'show_expanded'):
        group_input_008_1.outputs[12].show_expanded = False
    if hasattr(group_input_008_1.outputs[13], 'default_value'):
        group_input_008_1.outputs[13].default_value = 0.0
    if hasattr(group_input_008_1.outputs[13], 'display_shape'):
        group_input_008_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[13], 'enabled'):
        group_input_008_1.outputs[13].enabled = True
    if hasattr(group_input_008_1.outputs[13], 'hide'):
        group_input_008_1.outputs[13].hide = True
    if hasattr(group_input_008_1.outputs[13], 'hide_value'):
        group_input_008_1.outputs[13].hide_value = False
    if hasattr(group_input_008_1.outputs[13], 'name'):
        group_input_008_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_008_1.outputs[13], 'show_expanded'):
        group_input_008_1.outputs[13].show_expanded = False
    if hasattr(group_input_008_1.outputs[14], 'default_value'):
        group_input_008_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_008_1.outputs[14], 'display_shape'):
        group_input_008_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[14], 'enabled'):
        group_input_008_1.outputs[14].enabled = True
    if hasattr(group_input_008_1.outputs[14], 'hide'):
        group_input_008_1.outputs[14].hide = True
    if hasattr(group_input_008_1.outputs[14], 'hide_value'):
        group_input_008_1.outputs[14].hide_value = False
    if hasattr(group_input_008_1.outputs[14], 'name'):
        group_input_008_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_008_1.outputs[14], 'show_expanded'):
        group_input_008_1.outputs[14].show_expanded = False
    if hasattr(group_input_008_1.outputs[15], 'default_value'):
        group_input_008_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_008_1.outputs[15], 'display_shape'):
        group_input_008_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[15], 'enabled'):
        group_input_008_1.outputs[15].enabled = True
    if hasattr(group_input_008_1.outputs[15], 'hide'):
        group_input_008_1.outputs[15].hide = True
    if hasattr(group_input_008_1.outputs[15], 'hide_value'):
        group_input_008_1.outputs[15].hide_value = False
    if hasattr(group_input_008_1.outputs[15], 'name'):
        group_input_008_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_008_1.outputs[15], 'show_expanded'):
        group_input_008_1.outputs[15].show_expanded = False
    if hasattr(group_input_008_1.outputs[16], 'default_value'):
        group_input_008_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_008_1.outputs[16], 'display_shape'):
        group_input_008_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[16], 'enabled'):
        group_input_008_1.outputs[16].enabled = True
    if hasattr(group_input_008_1.outputs[16], 'hide'):
        group_input_008_1.outputs[16].hide = True
    if hasattr(group_input_008_1.outputs[16], 'hide_value'):
        group_input_008_1.outputs[16].hide_value = False
    if hasattr(group_input_008_1.outputs[16], 'name'):
        group_input_008_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_008_1.outputs[16], 'show_expanded'):
        group_input_008_1.outputs[16].show_expanded = False
    if hasattr(group_input_008_1.outputs[17], 'default_value'):
        group_input_008_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_008_1.outputs[17], 'display_shape'):
        group_input_008_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[17], 'enabled'):
        group_input_008_1.outputs[17].enabled = True
    if hasattr(group_input_008_1.outputs[17], 'hide'):
        group_input_008_1.outputs[17].hide = True
    if hasattr(group_input_008_1.outputs[17], 'hide_value'):
        group_input_008_1.outputs[17].hide_value = False
    if hasattr(group_input_008_1.outputs[17], 'name'):
        group_input_008_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_008_1.outputs[17], 'show_expanded'):
        group_input_008_1.outputs[17].show_expanded = False
    if hasattr(group_input_008_1.outputs[18], 'default_value'):
        group_input_008_1.outputs[18].default_value = 0.0
    if hasattr(group_input_008_1.outputs[18], 'display_shape'):
        group_input_008_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[18], 'enabled'):
        group_input_008_1.outputs[18].enabled = True
    if hasattr(group_input_008_1.outputs[18], 'hide'):
        group_input_008_1.outputs[18].hide = False
    if hasattr(group_input_008_1.outputs[18], 'hide_value'):
        group_input_008_1.outputs[18].hide_value = False
    if hasattr(group_input_008_1.outputs[18], 'name'):
        group_input_008_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_008_1.outputs[18], 'show_expanded'):
        group_input_008_1.outputs[18].show_expanded = False
    if hasattr(group_input_008_1.outputs[19], 'default_value'):
        group_input_008_1.outputs[19].default_value = 0.0
    if hasattr(group_input_008_1.outputs[19], 'display_shape'):
        group_input_008_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[19], 'enabled'):
        group_input_008_1.outputs[19].enabled = True
    if hasattr(group_input_008_1.outputs[19], 'hide'):
        group_input_008_1.outputs[19].hide = True
    if hasattr(group_input_008_1.outputs[19], 'hide_value'):
        group_input_008_1.outputs[19].hide_value = False
    if hasattr(group_input_008_1.outputs[19], 'name'):
        group_input_008_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_008_1.outputs[19], 'show_expanded'):
        group_input_008_1.outputs[19].show_expanded = False
    if hasattr(group_input_008_1.outputs[20], 'default_value'):
        group_input_008_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[20], 'display_shape'):
        group_input_008_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[20], 'enabled'):
        group_input_008_1.outputs[20].enabled = True
    if hasattr(group_input_008_1.outputs[20], 'hide'):
        group_input_008_1.outputs[20].hide = True
    if hasattr(group_input_008_1.outputs[20], 'hide_value'):
        group_input_008_1.outputs[20].hide_value = False
    if hasattr(group_input_008_1.outputs[20], 'name'):
        group_input_008_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_008_1.outputs[20], 'show_expanded'):
        group_input_008_1.outputs[20].show_expanded = False
    if hasattr(group_input_008_1.outputs[21], 'default_value'):
        group_input_008_1.outputs[21].default_value = 0.0
    if hasattr(group_input_008_1.outputs[21], 'display_shape'):
        group_input_008_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[21], 'enabled'):
        group_input_008_1.outputs[21].enabled = True
    if hasattr(group_input_008_1.outputs[21], 'hide'):
        group_input_008_1.outputs[21].hide = True
    if hasattr(group_input_008_1.outputs[21], 'hide_value'):
        group_input_008_1.outputs[21].hide_value = False
    if hasattr(group_input_008_1.outputs[21], 'name'):
        group_input_008_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_008_1.outputs[21], 'show_expanded'):
        group_input_008_1.outputs[21].show_expanded = False
    if hasattr(group_input_008_1.outputs[22], 'default_value'):
        group_input_008_1.outputs[22].default_value = 0.0
    if hasattr(group_input_008_1.outputs[22], 'display_shape'):
        group_input_008_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[22], 'enabled'):
        group_input_008_1.outputs[22].enabled = True
    if hasattr(group_input_008_1.outputs[22], 'hide'):
        group_input_008_1.outputs[22].hide = True
    if hasattr(group_input_008_1.outputs[22], 'hide_value'):
        group_input_008_1.outputs[22].hide_value = False
    if hasattr(group_input_008_1.outputs[22], 'name'):
        group_input_008_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_008_1.outputs[22], 'show_expanded'):
        group_input_008_1.outputs[22].show_expanded = False
    if hasattr(group_input_008_1.outputs[23], 'default_value'):
        group_input_008_1.outputs[23].default_value = 0.0
    if hasattr(group_input_008_1.outputs[23], 'display_shape'):
        group_input_008_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[23], 'enabled'):
        group_input_008_1.outputs[23].enabled = True
    if hasattr(group_input_008_1.outputs[23], 'hide'):
        group_input_008_1.outputs[23].hide = True
    if hasattr(group_input_008_1.outputs[23], 'hide_value'):
        group_input_008_1.outputs[23].hide_value = False
    if hasattr(group_input_008_1.outputs[23], 'name'):
        group_input_008_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_008_1.outputs[23], 'show_expanded'):
        group_input_008_1.outputs[23].show_expanded = False
    if hasattr(group_input_008_1.outputs[24], 'default_value'):
        group_input_008_1.outputs[24].default_value = 0.0
    if hasattr(group_input_008_1.outputs[24], 'display_shape'):
        group_input_008_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[24], 'enabled'):
        group_input_008_1.outputs[24].enabled = True
    if hasattr(group_input_008_1.outputs[24], 'hide'):
        group_input_008_1.outputs[24].hide = True
    if hasattr(group_input_008_1.outputs[24], 'hide_value'):
        group_input_008_1.outputs[24].hide_value = False
    if hasattr(group_input_008_1.outputs[24], 'name'):
        group_input_008_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_008_1.outputs[24], 'show_expanded'):
        group_input_008_1.outputs[24].show_expanded = False
    if hasattr(group_input_008_1.outputs[25], 'default_value'):
        group_input_008_1.outputs[25].default_value = 0.0
    if hasattr(group_input_008_1.outputs[25], 'display_shape'):
        group_input_008_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[25], 'enabled'):
        group_input_008_1.outputs[25].enabled = True
    if hasattr(group_input_008_1.outputs[25], 'hide'):
        group_input_008_1.outputs[25].hide = True
    if hasattr(group_input_008_1.outputs[25], 'hide_value'):
        group_input_008_1.outputs[25].hide_value = False
    if hasattr(group_input_008_1.outputs[25], 'name'):
        group_input_008_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_008_1.outputs[25], 'show_expanded'):
        group_input_008_1.outputs[25].show_expanded = False
    if hasattr(group_input_008_1.outputs[26], 'default_value'):
        group_input_008_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_008_1.outputs[26], 'display_shape'):
        group_input_008_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[26], 'enabled'):
        group_input_008_1.outputs[26].enabled = True
    if hasattr(group_input_008_1.outputs[26], 'hide'):
        group_input_008_1.outputs[26].hide = False
    if hasattr(group_input_008_1.outputs[26], 'hide_value'):
        group_input_008_1.outputs[26].hide_value = False
    if hasattr(group_input_008_1.outputs[26], 'name'):
        group_input_008_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_008_1.outputs[26], 'show_expanded'):
        group_input_008_1.outputs[26].show_expanded = False
    if hasattr(group_input_008_1.outputs[27], 'default_value'):
        group_input_008_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_008_1.outputs[27], 'display_shape'):
        group_input_008_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[27], 'enabled'):
        group_input_008_1.outputs[27].enabled = True
    if hasattr(group_input_008_1.outputs[27], 'hide'):
        group_input_008_1.outputs[27].hide = False
    if hasattr(group_input_008_1.outputs[27], 'hide_value'):
        group_input_008_1.outputs[27].hide_value = False
    if hasattr(group_input_008_1.outputs[27], 'name'):
        group_input_008_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_008_1.outputs[27], 'show_expanded'):
        group_input_008_1.outputs[27].show_expanded = False
    if hasattr(group_input_008_1.outputs[28], 'default_value'):
        group_input_008_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_008_1.outputs[28], 'display_shape'):
        group_input_008_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[28], 'enabled'):
        group_input_008_1.outputs[28].enabled = True
    if hasattr(group_input_008_1.outputs[28], 'hide'):
        group_input_008_1.outputs[28].hide = False
    if hasattr(group_input_008_1.outputs[28], 'hide_value'):
        group_input_008_1.outputs[28].hide_value = False
    if hasattr(group_input_008_1.outputs[28], 'name'):
        group_input_008_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_008_1.outputs[28], 'show_expanded'):
        group_input_008_1.outputs[28].show_expanded = False
    if hasattr(group_input_008_1.outputs[29], 'default_value'):
        group_input_008_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_008_1.outputs[29], 'display_shape'):
        group_input_008_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[29], 'enabled'):
        group_input_008_1.outputs[29].enabled = True
    if hasattr(group_input_008_1.outputs[29], 'hide'):
        group_input_008_1.outputs[29].hide = True
    if hasattr(group_input_008_1.outputs[29], 'hide_value'):
        group_input_008_1.outputs[29].hide_value = False
    if hasattr(group_input_008_1.outputs[29], 'name'):
        group_input_008_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_008_1.outputs[29], 'show_expanded'):
        group_input_008_1.outputs[29].show_expanded = False
    if hasattr(group_input_008_1.outputs[30], 'default_value'):
        group_input_008_1.outputs[30].default_value = 0.0
    if hasattr(group_input_008_1.outputs[30], 'display_shape'):
        group_input_008_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[30], 'enabled'):
        group_input_008_1.outputs[30].enabled = True
    if hasattr(group_input_008_1.outputs[30], 'hide'):
        group_input_008_1.outputs[30].hide = True
    if hasattr(group_input_008_1.outputs[30], 'hide_value'):
        group_input_008_1.outputs[30].hide_value = False
    if hasattr(group_input_008_1.outputs[30], 'name'):
        group_input_008_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_008_1.outputs[30], 'show_expanded'):
        group_input_008_1.outputs[30].show_expanded = False
    if hasattr(group_input_008_1.outputs[31], 'default_value'):
        group_input_008_1.outputs[31].default_value = 0.0
    if hasattr(group_input_008_1.outputs[31], 'display_shape'):
        group_input_008_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[31], 'enabled'):
        group_input_008_1.outputs[31].enabled = True
    if hasattr(group_input_008_1.outputs[31], 'hide'):
        group_input_008_1.outputs[31].hide = True
    if hasattr(group_input_008_1.outputs[31], 'hide_value'):
        group_input_008_1.outputs[31].hide_value = False
    if hasattr(group_input_008_1.outputs[31], 'name'):
        group_input_008_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_008_1.outputs[31], 'show_expanded'):
        group_input_008_1.outputs[31].show_expanded = False
    if hasattr(group_input_008_1.outputs[32], 'default_value'):
        group_input_008_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[32], 'display_shape'):
        group_input_008_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[32], 'enabled'):
        group_input_008_1.outputs[32].enabled = True
    if hasattr(group_input_008_1.outputs[32], 'hide'):
        group_input_008_1.outputs[32].hide = True
    if hasattr(group_input_008_1.outputs[32], 'hide_value'):
        group_input_008_1.outputs[32].hide_value = False
    if hasattr(group_input_008_1.outputs[32], 'name'):
        group_input_008_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_008_1.outputs[32], 'show_expanded'):
        group_input_008_1.outputs[32].show_expanded = False
    if hasattr(group_input_008_1.outputs[33], 'default_value'):
        group_input_008_1.outputs[33].default_value = 0.0
    if hasattr(group_input_008_1.outputs[33], 'display_shape'):
        group_input_008_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[33], 'enabled'):
        group_input_008_1.outputs[33].enabled = True
    if hasattr(group_input_008_1.outputs[33], 'hide'):
        group_input_008_1.outputs[33].hide = True
    if hasattr(group_input_008_1.outputs[33], 'hide_value'):
        group_input_008_1.outputs[33].hide_value = False
    if hasattr(group_input_008_1.outputs[33], 'name'):
        group_input_008_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_008_1.outputs[33], 'show_expanded'):
        group_input_008_1.outputs[33].show_expanded = False
    if hasattr(group_input_008_1.outputs[34], 'default_value'):
        group_input_008_1.outputs[34].default_value = 0.0
    if hasattr(group_input_008_1.outputs[34], 'display_shape'):
        group_input_008_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[34], 'enabled'):
        group_input_008_1.outputs[34].enabled = True
    if hasattr(group_input_008_1.outputs[34], 'hide'):
        group_input_008_1.outputs[34].hide = True
    if hasattr(group_input_008_1.outputs[34], 'hide_value'):
        group_input_008_1.outputs[34].hide_value = False
    if hasattr(group_input_008_1.outputs[34], 'name'):
        group_input_008_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_008_1.outputs[34], 'show_expanded'):
        group_input_008_1.outputs[34].show_expanded = False
    if hasattr(group_input_008_1.outputs[35], 'default_value'):
        group_input_008_1.outputs[35].default_value = 0.0
    if hasattr(group_input_008_1.outputs[35], 'display_shape'):
        group_input_008_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[35], 'enabled'):
        group_input_008_1.outputs[35].enabled = True
    if hasattr(group_input_008_1.outputs[35], 'hide'):
        group_input_008_1.outputs[35].hide = True
    if hasattr(group_input_008_1.outputs[35], 'hide_value'):
        group_input_008_1.outputs[35].hide_value = False
    if hasattr(group_input_008_1.outputs[35], 'name'):
        group_input_008_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_008_1.outputs[35], 'show_expanded'):
        group_input_008_1.outputs[35].show_expanded = False
    if hasattr(group_input_008_1.outputs[36], 'default_value'):
        group_input_008_1.outputs[36].default_value = 0.0
    if hasattr(group_input_008_1.outputs[36], 'display_shape'):
        group_input_008_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[36], 'enabled'):
        group_input_008_1.outputs[36].enabled = True
    if hasattr(group_input_008_1.outputs[36], 'hide'):
        group_input_008_1.outputs[36].hide = True
    if hasattr(group_input_008_1.outputs[36], 'hide_value'):
        group_input_008_1.outputs[36].hide_value = False
    if hasattr(group_input_008_1.outputs[36], 'name'):
        group_input_008_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_008_1.outputs[36], 'show_expanded'):
        group_input_008_1.outputs[36].show_expanded = False
    if hasattr(group_input_008_1.outputs[37], 'default_value'):
        group_input_008_1.outputs[37].default_value = 0.0
    if hasattr(group_input_008_1.outputs[37], 'display_shape'):
        group_input_008_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[37], 'enabled'):
        group_input_008_1.outputs[37].enabled = True
    if hasattr(group_input_008_1.outputs[37], 'hide'):
        group_input_008_1.outputs[37].hide = True
    if hasattr(group_input_008_1.outputs[37], 'hide_value'):
        group_input_008_1.outputs[37].hide_value = False
    if hasattr(group_input_008_1.outputs[37], 'name'):
        group_input_008_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_008_1.outputs[37], 'show_expanded'):
        group_input_008_1.outputs[37].show_expanded = False
    if hasattr(group_input_008_1.outputs[38], 'default_value'):
        group_input_008_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_008_1.outputs[38], 'display_shape'):
        group_input_008_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[38], 'enabled'):
        group_input_008_1.outputs[38].enabled = True
    if hasattr(group_input_008_1.outputs[38], 'hide'):
        group_input_008_1.outputs[38].hide = True
    if hasattr(group_input_008_1.outputs[38], 'hide_value'):
        group_input_008_1.outputs[38].hide_value = False
    if hasattr(group_input_008_1.outputs[38], 'name'):
        group_input_008_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_008_1.outputs[38], 'show_expanded'):
        group_input_008_1.outputs[38].show_expanded = False
    if hasattr(group_input_008_1.outputs[39], 'default_value'):
        group_input_008_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_008_1.outputs[39], 'display_shape'):
        group_input_008_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[39], 'enabled'):
        group_input_008_1.outputs[39].enabled = True
    if hasattr(group_input_008_1.outputs[39], 'hide'):
        group_input_008_1.outputs[39].hide = True
    if hasattr(group_input_008_1.outputs[39], 'hide_value'):
        group_input_008_1.outputs[39].hide_value = False
    if hasattr(group_input_008_1.outputs[39], 'name'):
        group_input_008_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_008_1.outputs[39], 'show_expanded'):
        group_input_008_1.outputs[39].show_expanded = False
    if hasattr(group_input_008_1.outputs[40], 'default_value'):
        group_input_008_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_008_1.outputs[40], 'display_shape'):
        group_input_008_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[40], 'enabled'):
        group_input_008_1.outputs[40].enabled = True
    if hasattr(group_input_008_1.outputs[40], 'hide'):
        group_input_008_1.outputs[40].hide = True
    if hasattr(group_input_008_1.outputs[40], 'hide_value'):
        group_input_008_1.outputs[40].hide_value = False
    if hasattr(group_input_008_1.outputs[40], 'name'):
        group_input_008_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_008_1.outputs[40], 'show_expanded'):
        group_input_008_1.outputs[40].show_expanded = False
    if hasattr(group_input_008_1.outputs[41], 'default_value'):
        group_input_008_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_008_1.outputs[41], 'display_shape'):
        group_input_008_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[41], 'enabled'):
        group_input_008_1.outputs[41].enabled = True
    if hasattr(group_input_008_1.outputs[41], 'hide'):
        group_input_008_1.outputs[41].hide = True
    if hasattr(group_input_008_1.outputs[41], 'hide_value'):
        group_input_008_1.outputs[41].hide_value = False
    if hasattr(group_input_008_1.outputs[41], 'name'):
        group_input_008_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_008_1.outputs[41], 'show_expanded'):
        group_input_008_1.outputs[41].show_expanded = False
    if hasattr(group_input_008_1.outputs[42], 'default_value'):
        group_input_008_1.outputs[42].default_value = 0.0
    if hasattr(group_input_008_1.outputs[42], 'display_shape'):
        group_input_008_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[42], 'enabled'):
        group_input_008_1.outputs[42].enabled = True
    if hasattr(group_input_008_1.outputs[42], 'hide'):
        group_input_008_1.outputs[42].hide = True
    if hasattr(group_input_008_1.outputs[42], 'hide_value'):
        group_input_008_1.outputs[42].hide_value = False
    if hasattr(group_input_008_1.outputs[42], 'name'):
        group_input_008_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_008_1.outputs[42], 'show_expanded'):
        group_input_008_1.outputs[42].show_expanded = False
    if hasattr(group_input_008_1.outputs[43], 'default_value'):
        group_input_008_1.outputs[43].default_value = 0.0
    if hasattr(group_input_008_1.outputs[43], 'display_shape'):
        group_input_008_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[43], 'enabled'):
        group_input_008_1.outputs[43].enabled = True
    if hasattr(group_input_008_1.outputs[43], 'hide'):
        group_input_008_1.outputs[43].hide = True
    if hasattr(group_input_008_1.outputs[43], 'hide_value'):
        group_input_008_1.outputs[43].hide_value = False
    if hasattr(group_input_008_1.outputs[43], 'name'):
        group_input_008_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_008_1.outputs[43], 'show_expanded'):
        group_input_008_1.outputs[43].show_expanded = False
    if hasattr(group_input_008_1.outputs[44], 'default_value'):
        group_input_008_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[44], 'display_shape'):
        group_input_008_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[44], 'enabled'):
        group_input_008_1.outputs[44].enabled = True
    if hasattr(group_input_008_1.outputs[44], 'hide'):
        group_input_008_1.outputs[44].hide = True
    if hasattr(group_input_008_1.outputs[44], 'hide_value'):
        group_input_008_1.outputs[44].hide_value = False
    if hasattr(group_input_008_1.outputs[44], 'name'):
        group_input_008_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_008_1.outputs[44], 'show_expanded'):
        group_input_008_1.outputs[44].show_expanded = False
    if hasattr(group_input_008_1.outputs[45], 'default_value'):
        group_input_008_1.outputs[45].default_value = 0.0
    if hasattr(group_input_008_1.outputs[45], 'display_shape'):
        group_input_008_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[45], 'enabled'):
        group_input_008_1.outputs[45].enabled = True
    if hasattr(group_input_008_1.outputs[45], 'hide'):
        group_input_008_1.outputs[45].hide = True
    if hasattr(group_input_008_1.outputs[45], 'hide_value'):
        group_input_008_1.outputs[45].hide_value = False
    if hasattr(group_input_008_1.outputs[45], 'name'):
        group_input_008_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_008_1.outputs[45], 'show_expanded'):
        group_input_008_1.outputs[45].show_expanded = False
    if hasattr(group_input_008_1.outputs[46], 'default_value'):
        group_input_008_1.outputs[46].default_value = 0.0
    if hasattr(group_input_008_1.outputs[46], 'display_shape'):
        group_input_008_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[46], 'enabled'):
        group_input_008_1.outputs[46].enabled = True
    if hasattr(group_input_008_1.outputs[46], 'hide'):
        group_input_008_1.outputs[46].hide = True
    if hasattr(group_input_008_1.outputs[46], 'hide_value'):
        group_input_008_1.outputs[46].hide_value = False
    if hasattr(group_input_008_1.outputs[46], 'name'):
        group_input_008_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_008_1.outputs[46], 'show_expanded'):
        group_input_008_1.outputs[46].show_expanded = False
    if hasattr(group_input_008_1.outputs[47], 'default_value'):
        group_input_008_1.outputs[47].default_value = 0.0
    if hasattr(group_input_008_1.outputs[47], 'display_shape'):
        group_input_008_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[47], 'enabled'):
        group_input_008_1.outputs[47].enabled = True
    if hasattr(group_input_008_1.outputs[47], 'hide'):
        group_input_008_1.outputs[47].hide = True
    if hasattr(group_input_008_1.outputs[47], 'hide_value'):
        group_input_008_1.outputs[47].hide_value = False
    if hasattr(group_input_008_1.outputs[47], 'name'):
        group_input_008_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_008_1.outputs[47], 'show_expanded'):
        group_input_008_1.outputs[47].show_expanded = False
    if hasattr(group_input_008_1.outputs[48], 'default_value'):
        group_input_008_1.outputs[48].default_value = 0.0
    if hasattr(group_input_008_1.outputs[48], 'display_shape'):
        group_input_008_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[48], 'enabled'):
        group_input_008_1.outputs[48].enabled = True
    if hasattr(group_input_008_1.outputs[48], 'hide'):
        group_input_008_1.outputs[48].hide = True
    if hasattr(group_input_008_1.outputs[48], 'hide_value'):
        group_input_008_1.outputs[48].hide_value = False
    if hasattr(group_input_008_1.outputs[48], 'name'):
        group_input_008_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_008_1.outputs[48], 'show_expanded'):
        group_input_008_1.outputs[48].show_expanded = False
    if hasattr(group_input_008_1.outputs[49], 'default_value'):
        group_input_008_1.outputs[49].default_value = 0.0
    if hasattr(group_input_008_1.outputs[49], 'display_shape'):
        group_input_008_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[49], 'enabled'):
        group_input_008_1.outputs[49].enabled = True
    if hasattr(group_input_008_1.outputs[49], 'hide'):
        group_input_008_1.outputs[49].hide = True
    if hasattr(group_input_008_1.outputs[49], 'hide_value'):
        group_input_008_1.outputs[49].hide_value = False
    if hasattr(group_input_008_1.outputs[49], 'name'):
        group_input_008_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_008_1.outputs[49], 'show_expanded'):
        group_input_008_1.outputs[49].show_expanded = False
    if hasattr(group_input_008_1.outputs[50], 'default_value'):
        group_input_008_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_008_1.outputs[50], 'display_shape'):
        group_input_008_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[50], 'enabled'):
        group_input_008_1.outputs[50].enabled = True
    if hasattr(group_input_008_1.outputs[50], 'hide'):
        group_input_008_1.outputs[50].hide = True
    if hasattr(group_input_008_1.outputs[50], 'hide_value'):
        group_input_008_1.outputs[50].hide_value = False
    if hasattr(group_input_008_1.outputs[50], 'name'):
        group_input_008_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_008_1.outputs[50], 'show_expanded'):
        group_input_008_1.outputs[50].show_expanded = False
    if hasattr(group_input_008_1.outputs[51], 'default_value'):
        group_input_008_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_008_1.outputs[51], 'display_shape'):
        group_input_008_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[51], 'enabled'):
        group_input_008_1.outputs[51].enabled = True
    if hasattr(group_input_008_1.outputs[51], 'hide'):
        group_input_008_1.outputs[51].hide = True
    if hasattr(group_input_008_1.outputs[51], 'hide_value'):
        group_input_008_1.outputs[51].hide_value = False
    if hasattr(group_input_008_1.outputs[51], 'name'):
        group_input_008_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_008_1.outputs[51], 'show_expanded'):
        group_input_008_1.outputs[51].show_expanded = False
    if hasattr(group_input_008_1.outputs[52], 'default_value'):
        group_input_008_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_008_1.outputs[52], 'display_shape'):
        group_input_008_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[52], 'enabled'):
        group_input_008_1.outputs[52].enabled = True
    if hasattr(group_input_008_1.outputs[52], 'hide'):
        group_input_008_1.outputs[52].hide = True
    if hasattr(group_input_008_1.outputs[52], 'hide_value'):
        group_input_008_1.outputs[52].hide_value = False
    if hasattr(group_input_008_1.outputs[52], 'name'):
        group_input_008_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_008_1.outputs[52], 'show_expanded'):
        group_input_008_1.outputs[52].show_expanded = False
    if hasattr(group_input_008_1.outputs[53], 'default_value'):
        group_input_008_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_008_1.outputs[53], 'display_shape'):
        group_input_008_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[53], 'enabled'):
        group_input_008_1.outputs[53].enabled = True
    if hasattr(group_input_008_1.outputs[53], 'hide'):
        group_input_008_1.outputs[53].hide = True
    if hasattr(group_input_008_1.outputs[53], 'hide_value'):
        group_input_008_1.outputs[53].hide_value = False
    if hasattr(group_input_008_1.outputs[53], 'name'):
        group_input_008_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_008_1.outputs[53], 'show_expanded'):
        group_input_008_1.outputs[53].show_expanded = False
    if hasattr(group_input_008_1.outputs[54], 'default_value'):
        group_input_008_1.outputs[54].default_value = 0.0
    if hasattr(group_input_008_1.outputs[54], 'display_shape'):
        group_input_008_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[54], 'enabled'):
        group_input_008_1.outputs[54].enabled = True
    if hasattr(group_input_008_1.outputs[54], 'hide'):
        group_input_008_1.outputs[54].hide = True
    if hasattr(group_input_008_1.outputs[54], 'hide_value'):
        group_input_008_1.outputs[54].hide_value = False
    if hasattr(group_input_008_1.outputs[54], 'name'):
        group_input_008_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_008_1.outputs[54], 'show_expanded'):
        group_input_008_1.outputs[54].show_expanded = False
    if hasattr(group_input_008_1.outputs[55], 'default_value'):
        group_input_008_1.outputs[55].default_value = 0.0
    if hasattr(group_input_008_1.outputs[55], 'display_shape'):
        group_input_008_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[55], 'enabled'):
        group_input_008_1.outputs[55].enabled = True
    if hasattr(group_input_008_1.outputs[55], 'hide'):
        group_input_008_1.outputs[55].hide = True
    if hasattr(group_input_008_1.outputs[55], 'hide_value'):
        group_input_008_1.outputs[55].hide_value = False
    if hasattr(group_input_008_1.outputs[55], 'name'):
        group_input_008_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_008_1.outputs[55], 'show_expanded'):
        group_input_008_1.outputs[55].show_expanded = False
    if hasattr(group_input_008_1.outputs[56], 'default_value'):
        group_input_008_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[56], 'display_shape'):
        group_input_008_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[56], 'enabled'):
        group_input_008_1.outputs[56].enabled = True
    if hasattr(group_input_008_1.outputs[56], 'hide'):
        group_input_008_1.outputs[56].hide = True
    if hasattr(group_input_008_1.outputs[56], 'hide_value'):
        group_input_008_1.outputs[56].hide_value = False
    if hasattr(group_input_008_1.outputs[56], 'name'):
        group_input_008_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_008_1.outputs[56], 'show_expanded'):
        group_input_008_1.outputs[56].show_expanded = False
    if hasattr(group_input_008_1.outputs[57], 'default_value'):
        group_input_008_1.outputs[57].default_value = 0.0
    if hasattr(group_input_008_1.outputs[57], 'display_shape'):
        group_input_008_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[57], 'enabled'):
        group_input_008_1.outputs[57].enabled = True
    if hasattr(group_input_008_1.outputs[57], 'hide'):
        group_input_008_1.outputs[57].hide = True
    if hasattr(group_input_008_1.outputs[57], 'hide_value'):
        group_input_008_1.outputs[57].hide_value = False
    if hasattr(group_input_008_1.outputs[57], 'name'):
        group_input_008_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_008_1.outputs[57], 'show_expanded'):
        group_input_008_1.outputs[57].show_expanded = False
    if hasattr(group_input_008_1.outputs[58], 'default_value'):
        group_input_008_1.outputs[58].default_value = 0.0
    if hasattr(group_input_008_1.outputs[58], 'display_shape'):
        group_input_008_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[58], 'enabled'):
        group_input_008_1.outputs[58].enabled = True
    if hasattr(group_input_008_1.outputs[58], 'hide'):
        group_input_008_1.outputs[58].hide = True
    if hasattr(group_input_008_1.outputs[58], 'hide_value'):
        group_input_008_1.outputs[58].hide_value = False
    if hasattr(group_input_008_1.outputs[58], 'name'):
        group_input_008_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_008_1.outputs[58], 'show_expanded'):
        group_input_008_1.outputs[58].show_expanded = False
    if hasattr(group_input_008_1.outputs[59], 'default_value'):
        group_input_008_1.outputs[59].default_value = 0.0
    if hasattr(group_input_008_1.outputs[59], 'display_shape'):
        group_input_008_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[59], 'enabled'):
        group_input_008_1.outputs[59].enabled = True
    if hasattr(group_input_008_1.outputs[59], 'hide'):
        group_input_008_1.outputs[59].hide = True
    if hasattr(group_input_008_1.outputs[59], 'hide_value'):
        group_input_008_1.outputs[59].hide_value = False
    if hasattr(group_input_008_1.outputs[59], 'name'):
        group_input_008_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_008_1.outputs[59], 'show_expanded'):
        group_input_008_1.outputs[59].show_expanded = False
    if hasattr(group_input_008_1.outputs[60], 'default_value'):
        group_input_008_1.outputs[60].default_value = 0.0
    if hasattr(group_input_008_1.outputs[60], 'display_shape'):
        group_input_008_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[60], 'enabled'):
        group_input_008_1.outputs[60].enabled = True
    if hasattr(group_input_008_1.outputs[60], 'hide'):
        group_input_008_1.outputs[60].hide = True
    if hasattr(group_input_008_1.outputs[60], 'hide_value'):
        group_input_008_1.outputs[60].hide_value = False
    if hasattr(group_input_008_1.outputs[60], 'name'):
        group_input_008_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_008_1.outputs[60], 'show_expanded'):
        group_input_008_1.outputs[60].show_expanded = False
    if hasattr(group_input_008_1.outputs[61], 'default_value'):
        group_input_008_1.outputs[61].default_value = 0.0
    if hasattr(group_input_008_1.outputs[61], 'display_shape'):
        group_input_008_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[61], 'enabled'):
        group_input_008_1.outputs[61].enabled = True
    if hasattr(group_input_008_1.outputs[61], 'hide'):
        group_input_008_1.outputs[61].hide = True
    if hasattr(group_input_008_1.outputs[61], 'hide_value'):
        group_input_008_1.outputs[61].hide_value = False
    if hasattr(group_input_008_1.outputs[61], 'name'):
        group_input_008_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_008_1.outputs[61], 'show_expanded'):
        group_input_008_1.outputs[61].show_expanded = False
    if hasattr(group_input_008_1.outputs[62], 'default_value'):
        group_input_008_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_008_1.outputs[62], 'display_shape'):
        group_input_008_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[62], 'enabled'):
        group_input_008_1.outputs[62].enabled = True
    if hasattr(group_input_008_1.outputs[62], 'hide'):
        group_input_008_1.outputs[62].hide = True
    if hasattr(group_input_008_1.outputs[62], 'hide_value'):
        group_input_008_1.outputs[62].hide_value = False
    if hasattr(group_input_008_1.outputs[62], 'name'):
        group_input_008_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_008_1.outputs[62], 'show_expanded'):
        group_input_008_1.outputs[62].show_expanded = False
    if hasattr(group_input_008_1.outputs[63], 'default_value'):
        group_input_008_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_008_1.outputs[63], 'display_shape'):
        group_input_008_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[63], 'enabled'):
        group_input_008_1.outputs[63].enabled = True
    if hasattr(group_input_008_1.outputs[63], 'hide'):
        group_input_008_1.outputs[63].hide = True
    if hasattr(group_input_008_1.outputs[63], 'hide_value'):
        group_input_008_1.outputs[63].hide_value = False
    if hasattr(group_input_008_1.outputs[63], 'name'):
        group_input_008_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_008_1.outputs[63], 'show_expanded'):
        group_input_008_1.outputs[63].show_expanded = False
    if hasattr(group_input_008_1.outputs[64], 'default_value'):
        group_input_008_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_008_1.outputs[64], 'display_shape'):
        group_input_008_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[64], 'enabled'):
        group_input_008_1.outputs[64].enabled = True
    if hasattr(group_input_008_1.outputs[64], 'hide'):
        group_input_008_1.outputs[64].hide = True
    if hasattr(group_input_008_1.outputs[64], 'hide_value'):
        group_input_008_1.outputs[64].hide_value = False
    if hasattr(group_input_008_1.outputs[64], 'name'):
        group_input_008_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_008_1.outputs[64], 'show_expanded'):
        group_input_008_1.outputs[64].show_expanded = False
    if hasattr(group_input_008_1.outputs[65], 'default_value'):
        group_input_008_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_008_1.outputs[65], 'display_shape'):
        group_input_008_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[65], 'enabled'):
        group_input_008_1.outputs[65].enabled = True
    if hasattr(group_input_008_1.outputs[65], 'hide'):
        group_input_008_1.outputs[65].hide = True
    if hasattr(group_input_008_1.outputs[65], 'hide_value'):
        group_input_008_1.outputs[65].hide_value = False
    if hasattr(group_input_008_1.outputs[65], 'name'):
        group_input_008_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_008_1.outputs[65], 'show_expanded'):
        group_input_008_1.outputs[65].show_expanded = False
    if hasattr(group_input_008_1.outputs[66], 'default_value'):
        group_input_008_1.outputs[66].default_value = 0.0
    if hasattr(group_input_008_1.outputs[66], 'display_shape'):
        group_input_008_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[66], 'enabled'):
        group_input_008_1.outputs[66].enabled = True
    if hasattr(group_input_008_1.outputs[66], 'hide'):
        group_input_008_1.outputs[66].hide = True
    if hasattr(group_input_008_1.outputs[66], 'hide_value'):
        group_input_008_1.outputs[66].hide_value = False
    if hasattr(group_input_008_1.outputs[66], 'name'):
        group_input_008_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_008_1.outputs[66], 'show_expanded'):
        group_input_008_1.outputs[66].show_expanded = False
    if hasattr(group_input_008_1.outputs[67], 'default_value'):
        group_input_008_1.outputs[67].default_value = 0.0
    if hasattr(group_input_008_1.outputs[67], 'display_shape'):
        group_input_008_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[67], 'enabled'):
        group_input_008_1.outputs[67].enabled = True
    if hasattr(group_input_008_1.outputs[67], 'hide'):
        group_input_008_1.outputs[67].hide = True
    if hasattr(group_input_008_1.outputs[67], 'hide_value'):
        group_input_008_1.outputs[67].hide_value = False
    if hasattr(group_input_008_1.outputs[67], 'name'):
        group_input_008_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_008_1.outputs[67], 'show_expanded'):
        group_input_008_1.outputs[67].show_expanded = False
    if hasattr(group_input_008_1.outputs[68], 'default_value'):
        group_input_008_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[68], 'display_shape'):
        group_input_008_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[68], 'enabled'):
        group_input_008_1.outputs[68].enabled = True
    if hasattr(group_input_008_1.outputs[68], 'hide'):
        group_input_008_1.outputs[68].hide = True
    if hasattr(group_input_008_1.outputs[68], 'hide_value'):
        group_input_008_1.outputs[68].hide_value = False
    if hasattr(group_input_008_1.outputs[68], 'name'):
        group_input_008_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_008_1.outputs[68], 'show_expanded'):
        group_input_008_1.outputs[68].show_expanded = False
    if hasattr(group_input_008_1.outputs[69], 'default_value'):
        group_input_008_1.outputs[69].default_value = 0.0
    if hasattr(group_input_008_1.outputs[69], 'display_shape'):
        group_input_008_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[69], 'enabled'):
        group_input_008_1.outputs[69].enabled = True
    if hasattr(group_input_008_1.outputs[69], 'hide'):
        group_input_008_1.outputs[69].hide = True
    if hasattr(group_input_008_1.outputs[69], 'hide_value'):
        group_input_008_1.outputs[69].hide_value = False
    if hasattr(group_input_008_1.outputs[69], 'name'):
        group_input_008_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_008_1.outputs[69], 'show_expanded'):
        group_input_008_1.outputs[69].show_expanded = False
    if hasattr(group_input_008_1.outputs[70], 'default_value'):
        group_input_008_1.outputs[70].default_value = 0.0
    if hasattr(group_input_008_1.outputs[70], 'display_shape'):
        group_input_008_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[70], 'enabled'):
        group_input_008_1.outputs[70].enabled = True
    if hasattr(group_input_008_1.outputs[70], 'hide'):
        group_input_008_1.outputs[70].hide = True
    if hasattr(group_input_008_1.outputs[70], 'hide_value'):
        group_input_008_1.outputs[70].hide_value = False
    if hasattr(group_input_008_1.outputs[70], 'name'):
        group_input_008_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_008_1.outputs[70], 'show_expanded'):
        group_input_008_1.outputs[70].show_expanded = False
    if hasattr(group_input_008_1.outputs[71], 'default_value'):
        group_input_008_1.outputs[71].default_value = 0.0
    if hasattr(group_input_008_1.outputs[71], 'display_shape'):
        group_input_008_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[71], 'enabled'):
        group_input_008_1.outputs[71].enabled = True
    if hasattr(group_input_008_1.outputs[71], 'hide'):
        group_input_008_1.outputs[71].hide = True
    if hasattr(group_input_008_1.outputs[71], 'hide_value'):
        group_input_008_1.outputs[71].hide_value = False
    if hasattr(group_input_008_1.outputs[71], 'name'):
        group_input_008_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_008_1.outputs[71], 'show_expanded'):
        group_input_008_1.outputs[71].show_expanded = False
    if hasattr(group_input_008_1.outputs[72], 'default_value'):
        group_input_008_1.outputs[72].default_value = 0.0
    if hasattr(group_input_008_1.outputs[72], 'display_shape'):
        group_input_008_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[72], 'enabled'):
        group_input_008_1.outputs[72].enabled = True
    if hasattr(group_input_008_1.outputs[72], 'hide'):
        group_input_008_1.outputs[72].hide = True
    if hasattr(group_input_008_1.outputs[72], 'hide_value'):
        group_input_008_1.outputs[72].hide_value = False
    if hasattr(group_input_008_1.outputs[72], 'name'):
        group_input_008_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_008_1.outputs[72], 'show_expanded'):
        group_input_008_1.outputs[72].show_expanded = False
    if hasattr(group_input_008_1.outputs[73], 'default_value'):
        group_input_008_1.outputs[73].default_value = 0.0
    if hasattr(group_input_008_1.outputs[73], 'display_shape'):
        group_input_008_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[73], 'enabled'):
        group_input_008_1.outputs[73].enabled = True
    if hasattr(group_input_008_1.outputs[73], 'hide'):
        group_input_008_1.outputs[73].hide = True
    if hasattr(group_input_008_1.outputs[73], 'hide_value'):
        group_input_008_1.outputs[73].hide_value = False
    if hasattr(group_input_008_1.outputs[73], 'name'):
        group_input_008_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_008_1.outputs[73], 'show_expanded'):
        group_input_008_1.outputs[73].show_expanded = False
    if hasattr(group_input_008_1.outputs[74], 'default_value'):
        group_input_008_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_008_1.outputs[74], 'display_shape'):
        group_input_008_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[74], 'enabled'):
        group_input_008_1.outputs[74].enabled = True
    if hasattr(group_input_008_1.outputs[74], 'hide'):
        group_input_008_1.outputs[74].hide = True
    if hasattr(group_input_008_1.outputs[74], 'hide_value'):
        group_input_008_1.outputs[74].hide_value = False
    if hasattr(group_input_008_1.outputs[74], 'name'):
        group_input_008_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_008_1.outputs[74], 'show_expanded'):
        group_input_008_1.outputs[74].show_expanded = False
    if hasattr(group_input_008_1.outputs[75], 'default_value'):
        group_input_008_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_008_1.outputs[75], 'display_shape'):
        group_input_008_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[75], 'enabled'):
        group_input_008_1.outputs[75].enabled = True
    if hasattr(group_input_008_1.outputs[75], 'hide'):
        group_input_008_1.outputs[75].hide = True
    if hasattr(group_input_008_1.outputs[75], 'hide_value'):
        group_input_008_1.outputs[75].hide_value = False
    if hasattr(group_input_008_1.outputs[75], 'name'):
        group_input_008_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_008_1.outputs[75], 'show_expanded'):
        group_input_008_1.outputs[75].show_expanded = False
    if hasattr(group_input_008_1.outputs[76], 'default_value'):
        group_input_008_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_008_1.outputs[76], 'display_shape'):
        group_input_008_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[76], 'enabled'):
        group_input_008_1.outputs[76].enabled = True
    if hasattr(group_input_008_1.outputs[76], 'hide'):
        group_input_008_1.outputs[76].hide = True
    if hasattr(group_input_008_1.outputs[76], 'hide_value'):
        group_input_008_1.outputs[76].hide_value = False
    if hasattr(group_input_008_1.outputs[76], 'name'):
        group_input_008_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_008_1.outputs[76], 'show_expanded'):
        group_input_008_1.outputs[76].show_expanded = False
    if hasattr(group_input_008_1.outputs[77], 'default_value'):
        group_input_008_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_008_1.outputs[77], 'display_shape'):
        group_input_008_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[77], 'enabled'):
        group_input_008_1.outputs[77].enabled = True
    if hasattr(group_input_008_1.outputs[77], 'hide'):
        group_input_008_1.outputs[77].hide = True
    if hasattr(group_input_008_1.outputs[77], 'hide_value'):
        group_input_008_1.outputs[77].hide_value = False
    if hasattr(group_input_008_1.outputs[77], 'name'):
        group_input_008_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_008_1.outputs[77], 'show_expanded'):
        group_input_008_1.outputs[77].show_expanded = False
    if hasattr(group_input_008_1.outputs[78], 'default_value'):
        group_input_008_1.outputs[78].default_value = 0.0
    if hasattr(group_input_008_1.outputs[78], 'display_shape'):
        group_input_008_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[78], 'enabled'):
        group_input_008_1.outputs[78].enabled = True
    if hasattr(group_input_008_1.outputs[78], 'hide'):
        group_input_008_1.outputs[78].hide = True
    if hasattr(group_input_008_1.outputs[78], 'hide_value'):
        group_input_008_1.outputs[78].hide_value = False
    if hasattr(group_input_008_1.outputs[78], 'name'):
        group_input_008_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_008_1.outputs[78], 'show_expanded'):
        group_input_008_1.outputs[78].show_expanded = False
    if hasattr(group_input_008_1.outputs[79], 'default_value'):
        group_input_008_1.outputs[79].default_value = 0.0
    if hasattr(group_input_008_1.outputs[79], 'display_shape'):
        group_input_008_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[79], 'enabled'):
        group_input_008_1.outputs[79].enabled = True
    if hasattr(group_input_008_1.outputs[79], 'hide'):
        group_input_008_1.outputs[79].hide = True
    if hasattr(group_input_008_1.outputs[79], 'hide_value'):
        group_input_008_1.outputs[79].hide_value = False
    if hasattr(group_input_008_1.outputs[79], 'name'):
        group_input_008_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_008_1.outputs[79], 'show_expanded'):
        group_input_008_1.outputs[79].show_expanded = False
    if hasattr(group_input_008_1.outputs[80], 'default_value'):
        group_input_008_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[80], 'display_shape'):
        group_input_008_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[80], 'enabled'):
        group_input_008_1.outputs[80].enabled = True
    if hasattr(group_input_008_1.outputs[80], 'hide'):
        group_input_008_1.outputs[80].hide = True
    if hasattr(group_input_008_1.outputs[80], 'hide_value'):
        group_input_008_1.outputs[80].hide_value = False
    if hasattr(group_input_008_1.outputs[80], 'name'):
        group_input_008_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_008_1.outputs[80], 'show_expanded'):
        group_input_008_1.outputs[80].show_expanded = False
    if hasattr(group_input_008_1.outputs[81], 'default_value'):
        group_input_008_1.outputs[81].default_value = 0.0
    if hasattr(group_input_008_1.outputs[81], 'display_shape'):
        group_input_008_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[81], 'enabled'):
        group_input_008_1.outputs[81].enabled = True
    if hasattr(group_input_008_1.outputs[81], 'hide'):
        group_input_008_1.outputs[81].hide = True
    if hasattr(group_input_008_1.outputs[81], 'hide_value'):
        group_input_008_1.outputs[81].hide_value = False
    if hasattr(group_input_008_1.outputs[81], 'name'):
        group_input_008_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_008_1.outputs[81], 'show_expanded'):
        group_input_008_1.outputs[81].show_expanded = False
    if hasattr(group_input_008_1.outputs[82], 'default_value'):
        group_input_008_1.outputs[82].default_value = 0.0
    if hasattr(group_input_008_1.outputs[82], 'display_shape'):
        group_input_008_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[82], 'enabled'):
        group_input_008_1.outputs[82].enabled = True
    if hasattr(group_input_008_1.outputs[82], 'hide'):
        group_input_008_1.outputs[82].hide = True
    if hasattr(group_input_008_1.outputs[82], 'hide_value'):
        group_input_008_1.outputs[82].hide_value = False
    if hasattr(group_input_008_1.outputs[82], 'name'):
        group_input_008_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_008_1.outputs[82], 'show_expanded'):
        group_input_008_1.outputs[82].show_expanded = False
    if hasattr(group_input_008_1.outputs[83], 'default_value'):
        group_input_008_1.outputs[83].default_value = 0.0
    if hasattr(group_input_008_1.outputs[83], 'display_shape'):
        group_input_008_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[83], 'enabled'):
        group_input_008_1.outputs[83].enabled = True
    if hasattr(group_input_008_1.outputs[83], 'hide'):
        group_input_008_1.outputs[83].hide = True
    if hasattr(group_input_008_1.outputs[83], 'hide_value'):
        group_input_008_1.outputs[83].hide_value = False
    if hasattr(group_input_008_1.outputs[83], 'name'):
        group_input_008_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_008_1.outputs[83], 'show_expanded'):
        group_input_008_1.outputs[83].show_expanded = False
    if hasattr(group_input_008_1.outputs[84], 'default_value'):
        group_input_008_1.outputs[84].default_value = 0.0
    if hasattr(group_input_008_1.outputs[84], 'display_shape'):
        group_input_008_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[84], 'enabled'):
        group_input_008_1.outputs[84].enabled = True
    if hasattr(group_input_008_1.outputs[84], 'hide'):
        group_input_008_1.outputs[84].hide = True
    if hasattr(group_input_008_1.outputs[84], 'hide_value'):
        group_input_008_1.outputs[84].hide_value = False
    if hasattr(group_input_008_1.outputs[84], 'name'):
        group_input_008_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_008_1.outputs[84], 'show_expanded'):
        group_input_008_1.outputs[84].show_expanded = False
    if hasattr(group_input_008_1.outputs[85], 'default_value'):
        group_input_008_1.outputs[85].default_value = 0.0
    if hasattr(group_input_008_1.outputs[85], 'display_shape'):
        group_input_008_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[85], 'enabled'):
        group_input_008_1.outputs[85].enabled = True
    if hasattr(group_input_008_1.outputs[85], 'hide'):
        group_input_008_1.outputs[85].hide = True
    if hasattr(group_input_008_1.outputs[85], 'hide_value'):
        group_input_008_1.outputs[85].hide_value = False
    if hasattr(group_input_008_1.outputs[85], 'name'):
        group_input_008_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_008_1.outputs[85], 'show_expanded'):
        group_input_008_1.outputs[85].show_expanded = False
    if hasattr(group_input_008_1.outputs[86], 'default_value'):
        group_input_008_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_008_1.outputs[86], 'display_shape'):
        group_input_008_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[86], 'enabled'):
        group_input_008_1.outputs[86].enabled = True
    if hasattr(group_input_008_1.outputs[86], 'hide'):
        group_input_008_1.outputs[86].hide = True
    if hasattr(group_input_008_1.outputs[86], 'hide_value'):
        group_input_008_1.outputs[86].hide_value = False
    if hasattr(group_input_008_1.outputs[86], 'name'):
        group_input_008_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_008_1.outputs[86], 'show_expanded'):
        group_input_008_1.outputs[86].show_expanded = False
    if hasattr(group_input_008_1.outputs[87], 'default_value'):
        group_input_008_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_008_1.outputs[87], 'display_shape'):
        group_input_008_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[87], 'enabled'):
        group_input_008_1.outputs[87].enabled = True
    if hasattr(group_input_008_1.outputs[87], 'hide'):
        group_input_008_1.outputs[87].hide = True
    if hasattr(group_input_008_1.outputs[87], 'hide_value'):
        group_input_008_1.outputs[87].hide_value = False
    if hasattr(group_input_008_1.outputs[87], 'name'):
        group_input_008_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_008_1.outputs[87], 'show_expanded'):
        group_input_008_1.outputs[87].show_expanded = False
    if hasattr(group_input_008_1.outputs[88], 'default_value'):
        group_input_008_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_008_1.outputs[88], 'display_shape'):
        group_input_008_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[88], 'enabled'):
        group_input_008_1.outputs[88].enabled = True
    if hasattr(group_input_008_1.outputs[88], 'hide'):
        group_input_008_1.outputs[88].hide = True
    if hasattr(group_input_008_1.outputs[88], 'hide_value'):
        group_input_008_1.outputs[88].hide_value = False
    if hasattr(group_input_008_1.outputs[88], 'name'):
        group_input_008_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_008_1.outputs[88], 'show_expanded'):
        group_input_008_1.outputs[88].show_expanded = False
    if hasattr(group_input_008_1.outputs[89], 'default_value'):
        group_input_008_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_008_1.outputs[89], 'display_shape'):
        group_input_008_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[89], 'enabled'):
        group_input_008_1.outputs[89].enabled = True
    if hasattr(group_input_008_1.outputs[89], 'hide'):
        group_input_008_1.outputs[89].hide = True
    if hasattr(group_input_008_1.outputs[89], 'hide_value'):
        group_input_008_1.outputs[89].hide_value = False
    if hasattr(group_input_008_1.outputs[89], 'name'):
        group_input_008_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_008_1.outputs[89], 'show_expanded'):
        group_input_008_1.outputs[89].show_expanded = False
    if hasattr(group_input_008_1.outputs[90], 'default_value'):
        group_input_008_1.outputs[90].default_value = 0.0
    if hasattr(group_input_008_1.outputs[90], 'display_shape'):
        group_input_008_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[90], 'enabled'):
        group_input_008_1.outputs[90].enabled = True
    if hasattr(group_input_008_1.outputs[90], 'hide'):
        group_input_008_1.outputs[90].hide = True
    if hasattr(group_input_008_1.outputs[90], 'hide_value'):
        group_input_008_1.outputs[90].hide_value = False
    if hasattr(group_input_008_1.outputs[90], 'name'):
        group_input_008_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_008_1.outputs[90], 'show_expanded'):
        group_input_008_1.outputs[90].show_expanded = False
    if hasattr(group_input_008_1.outputs[91], 'default_value'):
        group_input_008_1.outputs[91].default_value = 0.0
    if hasattr(group_input_008_1.outputs[91], 'display_shape'):
        group_input_008_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[91], 'enabled'):
        group_input_008_1.outputs[91].enabled = True
    if hasattr(group_input_008_1.outputs[91], 'hide'):
        group_input_008_1.outputs[91].hide = True
    if hasattr(group_input_008_1.outputs[91], 'hide_value'):
        group_input_008_1.outputs[91].hide_value = False
    if hasattr(group_input_008_1.outputs[91], 'name'):
        group_input_008_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_008_1.outputs[91], 'show_expanded'):
        group_input_008_1.outputs[91].show_expanded = False
    if hasattr(group_input_008_1.outputs[92], 'default_value'):
        group_input_008_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_008_1.outputs[92], 'display_shape'):
        group_input_008_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[92], 'enabled'):
        group_input_008_1.outputs[92].enabled = True
    if hasattr(group_input_008_1.outputs[92], 'hide'):
        group_input_008_1.outputs[92].hide = True
    if hasattr(group_input_008_1.outputs[92], 'hide_value'):
        group_input_008_1.outputs[92].hide_value = False
    if hasattr(group_input_008_1.outputs[92], 'name'):
        group_input_008_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_008_1.outputs[92], 'show_expanded'):
        group_input_008_1.outputs[92].show_expanded = False
    if hasattr(group_input_008_1.outputs[93], 'default_value'):
        group_input_008_1.outputs[93].default_value = 0.0
    if hasattr(group_input_008_1.outputs[93], 'display_shape'):
        group_input_008_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[93], 'enabled'):
        group_input_008_1.outputs[93].enabled = True
    if hasattr(group_input_008_1.outputs[93], 'hide'):
        group_input_008_1.outputs[93].hide = True
    if hasattr(group_input_008_1.outputs[93], 'hide_value'):
        group_input_008_1.outputs[93].hide_value = False
    if hasattr(group_input_008_1.outputs[93], 'name'):
        group_input_008_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_008_1.outputs[93], 'show_expanded'):
        group_input_008_1.outputs[93].show_expanded = False
    if hasattr(group_input_008_1.outputs[94], 'default_value'):
        group_input_008_1.outputs[94].default_value = 0.0
    if hasattr(group_input_008_1.outputs[94], 'display_shape'):
        group_input_008_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[94], 'enabled'):
        group_input_008_1.outputs[94].enabled = True
    if hasattr(group_input_008_1.outputs[94], 'hide'):
        group_input_008_1.outputs[94].hide = True
    if hasattr(group_input_008_1.outputs[94], 'hide_value'):
        group_input_008_1.outputs[94].hide_value = False
    if hasattr(group_input_008_1.outputs[94], 'name'):
        group_input_008_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_008_1.outputs[94], 'show_expanded'):
        group_input_008_1.outputs[94].show_expanded = False
    if hasattr(group_input_008_1.outputs[95], 'default_value'):
        group_input_008_1.outputs[95].default_value = 0.0
    if hasattr(group_input_008_1.outputs[95], 'display_shape'):
        group_input_008_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[95], 'enabled'):
        group_input_008_1.outputs[95].enabled = True
    if hasattr(group_input_008_1.outputs[95], 'hide'):
        group_input_008_1.outputs[95].hide = True
    if hasattr(group_input_008_1.outputs[95], 'hide_value'):
        group_input_008_1.outputs[95].hide_value = False
    if hasattr(group_input_008_1.outputs[95], 'name'):
        group_input_008_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_008_1.outputs[95], 'show_expanded'):
        group_input_008_1.outputs[95].show_expanded = False
    if hasattr(group_input_008_1.outputs[96], 'default_value'):
        group_input_008_1.outputs[96].default_value = 0.0
    if hasattr(group_input_008_1.outputs[96], 'display_shape'):
        group_input_008_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[96], 'enabled'):
        group_input_008_1.outputs[96].enabled = True
    if hasattr(group_input_008_1.outputs[96], 'hide'):
        group_input_008_1.outputs[96].hide = True
    if hasattr(group_input_008_1.outputs[96], 'hide_value'):
        group_input_008_1.outputs[96].hide_value = False
    if hasattr(group_input_008_1.outputs[96], 'name'):
        group_input_008_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_008_1.outputs[96], 'show_expanded'):
        group_input_008_1.outputs[96].show_expanded = False
    if hasattr(group_input_008_1.outputs[97], 'default_value'):
        group_input_008_1.outputs[97].default_value = 0.0
    if hasattr(group_input_008_1.outputs[97], 'display_shape'):
        group_input_008_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[97], 'enabled'):
        group_input_008_1.outputs[97].enabled = True
    if hasattr(group_input_008_1.outputs[97], 'hide'):
        group_input_008_1.outputs[97].hide = True
    if hasattr(group_input_008_1.outputs[97], 'hide_value'):
        group_input_008_1.outputs[97].hide_value = False
    if hasattr(group_input_008_1.outputs[97], 'name'):
        group_input_008_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_008_1.outputs[97], 'show_expanded'):
        group_input_008_1.outputs[97].show_expanded = False
    if hasattr(group_input_008_1.outputs[98], 'default_value'):
        group_input_008_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_008_1.outputs[98], 'display_shape'):
        group_input_008_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[98], 'enabled'):
        group_input_008_1.outputs[98].enabled = True
    if hasattr(group_input_008_1.outputs[98], 'hide'):
        group_input_008_1.outputs[98].hide = True
    if hasattr(group_input_008_1.outputs[98], 'hide_value'):
        group_input_008_1.outputs[98].hide_value = False
    if hasattr(group_input_008_1.outputs[98], 'name'):
        group_input_008_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_008_1.outputs[98], 'show_expanded'):
        group_input_008_1.outputs[98].show_expanded = False
    if hasattr(group_input_008_1.outputs[99], 'default_value'):
        group_input_008_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_008_1.outputs[99], 'display_shape'):
        group_input_008_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[99], 'enabled'):
        group_input_008_1.outputs[99].enabled = True
    if hasattr(group_input_008_1.outputs[99], 'hide'):
        group_input_008_1.outputs[99].hide = True
    if hasattr(group_input_008_1.outputs[99], 'hide_value'):
        group_input_008_1.outputs[99].hide_value = False
    if hasattr(group_input_008_1.outputs[99], 'name'):
        group_input_008_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_008_1.outputs[99], 'show_expanded'):
        group_input_008_1.outputs[99].show_expanded = False
    if hasattr(group_input_008_1.outputs[100], 'default_value'):
        group_input_008_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_008_1.outputs[100], 'display_shape'):
        group_input_008_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[100], 'enabled'):
        group_input_008_1.outputs[100].enabled = True
    if hasattr(group_input_008_1.outputs[100], 'hide'):
        group_input_008_1.outputs[100].hide = True
    if hasattr(group_input_008_1.outputs[100], 'hide_value'):
        group_input_008_1.outputs[100].hide_value = False
    if hasattr(group_input_008_1.outputs[100], 'name'):
        group_input_008_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_008_1.outputs[100], 'show_expanded'):
        group_input_008_1.outputs[100].show_expanded = False
    if hasattr(group_input_008_1.outputs[101], 'default_value'):
        group_input_008_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_008_1.outputs[101], 'display_shape'):
        group_input_008_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_008_1.outputs[101], 'enabled'):
        group_input_008_1.outputs[101].enabled = True
    if hasattr(group_input_008_1.outputs[101], 'hide'):
        group_input_008_1.outputs[101].hide = True
    if hasattr(group_input_008_1.outputs[101], 'hide_value'):
        group_input_008_1.outputs[101].hide_value = False
    if hasattr(group_input_008_1.outputs[101], 'name'):
        group_input_008_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_008_1.outputs[101], 'show_expanded'):
        group_input_008_1.outputs[101].show_expanded = False

    group_input_009_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_009_1, 'color'):
        group_input_009_1.color = (0.0, 0.5, 0.0)
    if hasattr(group_input_009_1, 'hide'):
        group_input_009_1.hide = False
    if hasattr(group_input_009_1, 'label'):
        group_input_009_1.label = 'Slot 3'
    if hasattr(group_input_009_1, 'location'):
        group_input_009_1.location = (-2060.0, 1900.0)
    if hasattr(group_input_009_1, 'mute'):
        group_input_009_1.mute = False
    if hasattr(group_input_009_1, 'name'):
        group_input_009_1.name = 'Group Input.009'
    if hasattr(group_input_009_1, 'use_custom_color'):
        group_input_009_1.use_custom_color = True
    if hasattr(group_input_009_1, 'width'):
        group_input_009_1.width = 179.714111328125
    if hasattr(group_input_009_1.outputs[0], 'default_value'):
        group_input_009_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[0], 'display_shape'):
        group_input_009_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[0], 'enabled'):
        group_input_009_1.outputs[0].enabled = True
    if hasattr(group_input_009_1.outputs[0], 'hide'):
        group_input_009_1.outputs[0].hide = True
    if hasattr(group_input_009_1.outputs[0], 'hide_value'):
        group_input_009_1.outputs[0].hide_value = False
    if hasattr(group_input_009_1.outputs[0], 'name'):
        group_input_009_1.outputs[0].name = 'ASG'
    if hasattr(group_input_009_1.outputs[0], 'show_expanded'):
        group_input_009_1.outputs[0].show_expanded = False
    if hasattr(group_input_009_1.outputs[1], 'default_value'):
        group_input_009_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[1], 'display_shape'):
        group_input_009_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[1], 'enabled'):
        group_input_009_1.outputs[1].enabled = True
    if hasattr(group_input_009_1.outputs[1], 'hide'):
        group_input_009_1.outputs[1].hide = True
    if hasattr(group_input_009_1.outputs[1], 'hide_value'):
        group_input_009_1.outputs[1].hide_value = False
    if hasattr(group_input_009_1.outputs[1], 'name'):
        group_input_009_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_009_1.outputs[1], 'show_expanded'):
        group_input_009_1.outputs[1].show_expanded = False
    if hasattr(group_input_009_1.outputs[2], 'default_value'):
        group_input_009_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[2], 'display_shape'):
        group_input_009_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[2], 'enabled'):
        group_input_009_1.outputs[2].enabled = True
    if hasattr(group_input_009_1.outputs[2], 'hide'):
        group_input_009_1.outputs[2].hide = True
    if hasattr(group_input_009_1.outputs[2], 'hide_value'):
        group_input_009_1.outputs[2].hide_value = False
    if hasattr(group_input_009_1.outputs[2], 'name'):
        group_input_009_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_009_1.outputs[2], 'show_expanded'):
        group_input_009_1.outputs[2].show_expanded = False
    if hasattr(group_input_009_1.outputs[3], 'default_value'):
        group_input_009_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[3], 'display_shape'):
        group_input_009_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[3], 'enabled'):
        group_input_009_1.outputs[3].enabled = True
    if hasattr(group_input_009_1.outputs[3], 'hide'):
        group_input_009_1.outputs[3].hide = True
    if hasattr(group_input_009_1.outputs[3], 'hide_value'):
        group_input_009_1.outputs[3].hide_value = False
    if hasattr(group_input_009_1.outputs[3], 'name'):
        group_input_009_1.outputs[3].name = 'Normal'
    if hasattr(group_input_009_1.outputs[3], 'show_expanded'):
        group_input_009_1.outputs[3].show_expanded = False
    if hasattr(group_input_009_1.outputs[4], 'default_value'):
        group_input_009_1.outputs[4].default_value = 0.0
    if hasattr(group_input_009_1.outputs[4], 'display_shape'):
        group_input_009_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[4], 'enabled'):
        group_input_009_1.outputs[4].enabled = True
    if hasattr(group_input_009_1.outputs[4], 'hide'):
        group_input_009_1.outputs[4].hide = True
    if hasattr(group_input_009_1.outputs[4], 'hide_value'):
        group_input_009_1.outputs[4].hide_value = False
    if hasattr(group_input_009_1.outputs[4], 'name'):
        group_input_009_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_009_1.outputs[4], 'show_expanded'):
        group_input_009_1.outputs[4].show_expanded = False
    if hasattr(group_input_009_1.outputs[5], 'default_value'):
        group_input_009_1.outputs[5].default_value = 1.0
    if hasattr(group_input_009_1.outputs[5], 'display_shape'):
        group_input_009_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[5], 'enabled'):
        group_input_009_1.outputs[5].enabled = True
    if hasattr(group_input_009_1.outputs[5], 'hide'):
        group_input_009_1.outputs[5].hide = True
    if hasattr(group_input_009_1.outputs[5], 'hide_value'):
        group_input_009_1.outputs[5].hide_value = False
    if hasattr(group_input_009_1.outputs[5], 'name'):
        group_input_009_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_009_1.outputs[5], 'show_expanded'):
        group_input_009_1.outputs[5].show_expanded = False
    if hasattr(group_input_009_1.outputs[6], 'default_value'):
        group_input_009_1.outputs[6].default_value = 0.0
    if hasattr(group_input_009_1.outputs[6], 'display_shape'):
        group_input_009_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[6], 'enabled'):
        group_input_009_1.outputs[6].enabled = True
    if hasattr(group_input_009_1.outputs[6], 'hide'):
        group_input_009_1.outputs[6].hide = True
    if hasattr(group_input_009_1.outputs[6], 'hide_value'):
        group_input_009_1.outputs[6].hide_value = False
    if hasattr(group_input_009_1.outputs[6], 'name'):
        group_input_009_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_009_1.outputs[6], 'show_expanded'):
        group_input_009_1.outputs[6].show_expanded = False
    if hasattr(group_input_009_1.outputs[7], 'default_value'):
        group_input_009_1.outputs[7].default_value = 0.0
    if hasattr(group_input_009_1.outputs[7], 'display_shape'):
        group_input_009_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[7], 'enabled'):
        group_input_009_1.outputs[7].enabled = True
    if hasattr(group_input_009_1.outputs[7], 'hide'):
        group_input_009_1.outputs[7].hide = True
    if hasattr(group_input_009_1.outputs[7], 'hide_value'):
        group_input_009_1.outputs[7].hide_value = False
    if hasattr(group_input_009_1.outputs[7], 'name'):
        group_input_009_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_009_1.outputs[7], 'show_expanded'):
        group_input_009_1.outputs[7].show_expanded = False
    if hasattr(group_input_009_1.outputs[8], 'default_value'):
        group_input_009_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[8], 'display_shape'):
        group_input_009_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[8], 'enabled'):
        group_input_009_1.outputs[8].enabled = True
    if hasattr(group_input_009_1.outputs[8], 'hide'):
        group_input_009_1.outputs[8].hide = True
    if hasattr(group_input_009_1.outputs[8], 'hide_value'):
        group_input_009_1.outputs[8].hide_value = False
    if hasattr(group_input_009_1.outputs[8], 'name'):
        group_input_009_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_009_1.outputs[8], 'show_expanded'):
        group_input_009_1.outputs[8].show_expanded = False
    if hasattr(group_input_009_1.outputs[9], 'default_value'):
        group_input_009_1.outputs[9].default_value = 0.0
    if hasattr(group_input_009_1.outputs[9], 'display_shape'):
        group_input_009_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[9], 'enabled'):
        group_input_009_1.outputs[9].enabled = True
    if hasattr(group_input_009_1.outputs[9], 'hide'):
        group_input_009_1.outputs[9].hide = True
    if hasattr(group_input_009_1.outputs[9], 'hide_value'):
        group_input_009_1.outputs[9].hide_value = False
    if hasattr(group_input_009_1.outputs[9], 'name'):
        group_input_009_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_009_1.outputs[9], 'show_expanded'):
        group_input_009_1.outputs[9].show_expanded = False
    if hasattr(group_input_009_1.outputs[10], 'default_value'):
        group_input_009_1.outputs[10].default_value = 0.0
    if hasattr(group_input_009_1.outputs[10], 'display_shape'):
        group_input_009_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[10], 'enabled'):
        group_input_009_1.outputs[10].enabled = True
    if hasattr(group_input_009_1.outputs[10], 'hide'):
        group_input_009_1.outputs[10].hide = True
    if hasattr(group_input_009_1.outputs[10], 'hide_value'):
        group_input_009_1.outputs[10].hide_value = False
    if hasattr(group_input_009_1.outputs[10], 'name'):
        group_input_009_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_009_1.outputs[10], 'show_expanded'):
        group_input_009_1.outputs[10].show_expanded = False
    if hasattr(group_input_009_1.outputs[11], 'default_value'):
        group_input_009_1.outputs[11].default_value = 0.0
    if hasattr(group_input_009_1.outputs[11], 'display_shape'):
        group_input_009_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[11], 'enabled'):
        group_input_009_1.outputs[11].enabled = True
    if hasattr(group_input_009_1.outputs[11], 'hide'):
        group_input_009_1.outputs[11].hide = True
    if hasattr(group_input_009_1.outputs[11], 'hide_value'):
        group_input_009_1.outputs[11].hide_value = False
    if hasattr(group_input_009_1.outputs[11], 'name'):
        group_input_009_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_009_1.outputs[11], 'show_expanded'):
        group_input_009_1.outputs[11].show_expanded = False
    if hasattr(group_input_009_1.outputs[12], 'default_value'):
        group_input_009_1.outputs[12].default_value = 0.0
    if hasattr(group_input_009_1.outputs[12], 'display_shape'):
        group_input_009_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[12], 'enabled'):
        group_input_009_1.outputs[12].enabled = True
    if hasattr(group_input_009_1.outputs[12], 'hide'):
        group_input_009_1.outputs[12].hide = True
    if hasattr(group_input_009_1.outputs[12], 'hide_value'):
        group_input_009_1.outputs[12].hide_value = False
    if hasattr(group_input_009_1.outputs[12], 'name'):
        group_input_009_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_009_1.outputs[12], 'show_expanded'):
        group_input_009_1.outputs[12].show_expanded = False
    if hasattr(group_input_009_1.outputs[13], 'default_value'):
        group_input_009_1.outputs[13].default_value = 0.0
    if hasattr(group_input_009_1.outputs[13], 'display_shape'):
        group_input_009_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[13], 'enabled'):
        group_input_009_1.outputs[13].enabled = True
    if hasattr(group_input_009_1.outputs[13], 'hide'):
        group_input_009_1.outputs[13].hide = True
    if hasattr(group_input_009_1.outputs[13], 'hide_value'):
        group_input_009_1.outputs[13].hide_value = False
    if hasattr(group_input_009_1.outputs[13], 'name'):
        group_input_009_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_009_1.outputs[13], 'show_expanded'):
        group_input_009_1.outputs[13].show_expanded = False
    if hasattr(group_input_009_1.outputs[14], 'default_value'):
        group_input_009_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_009_1.outputs[14], 'display_shape'):
        group_input_009_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[14], 'enabled'):
        group_input_009_1.outputs[14].enabled = True
    if hasattr(group_input_009_1.outputs[14], 'hide'):
        group_input_009_1.outputs[14].hide = True
    if hasattr(group_input_009_1.outputs[14], 'hide_value'):
        group_input_009_1.outputs[14].hide_value = False
    if hasattr(group_input_009_1.outputs[14], 'name'):
        group_input_009_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_009_1.outputs[14], 'show_expanded'):
        group_input_009_1.outputs[14].show_expanded = False
    if hasattr(group_input_009_1.outputs[15], 'default_value'):
        group_input_009_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_009_1.outputs[15], 'display_shape'):
        group_input_009_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[15], 'enabled'):
        group_input_009_1.outputs[15].enabled = True
    if hasattr(group_input_009_1.outputs[15], 'hide'):
        group_input_009_1.outputs[15].hide = True
    if hasattr(group_input_009_1.outputs[15], 'hide_value'):
        group_input_009_1.outputs[15].hide_value = False
    if hasattr(group_input_009_1.outputs[15], 'name'):
        group_input_009_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_009_1.outputs[15], 'show_expanded'):
        group_input_009_1.outputs[15].show_expanded = False
    if hasattr(group_input_009_1.outputs[16], 'default_value'):
        group_input_009_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_009_1.outputs[16], 'display_shape'):
        group_input_009_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[16], 'enabled'):
        group_input_009_1.outputs[16].enabled = True
    if hasattr(group_input_009_1.outputs[16], 'hide'):
        group_input_009_1.outputs[16].hide = True
    if hasattr(group_input_009_1.outputs[16], 'hide_value'):
        group_input_009_1.outputs[16].hide_value = False
    if hasattr(group_input_009_1.outputs[16], 'name'):
        group_input_009_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_009_1.outputs[16], 'show_expanded'):
        group_input_009_1.outputs[16].show_expanded = False
    if hasattr(group_input_009_1.outputs[17], 'default_value'):
        group_input_009_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_009_1.outputs[17], 'display_shape'):
        group_input_009_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[17], 'enabled'):
        group_input_009_1.outputs[17].enabled = True
    if hasattr(group_input_009_1.outputs[17], 'hide'):
        group_input_009_1.outputs[17].hide = True
    if hasattr(group_input_009_1.outputs[17], 'hide_value'):
        group_input_009_1.outputs[17].hide_value = False
    if hasattr(group_input_009_1.outputs[17], 'name'):
        group_input_009_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_009_1.outputs[17], 'show_expanded'):
        group_input_009_1.outputs[17].show_expanded = False
    if hasattr(group_input_009_1.outputs[18], 'default_value'):
        group_input_009_1.outputs[18].default_value = 0.0
    if hasattr(group_input_009_1.outputs[18], 'display_shape'):
        group_input_009_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[18], 'enabled'):
        group_input_009_1.outputs[18].enabled = True
    if hasattr(group_input_009_1.outputs[18], 'hide'):
        group_input_009_1.outputs[18].hide = True
    if hasattr(group_input_009_1.outputs[18], 'hide_value'):
        group_input_009_1.outputs[18].hide_value = False
    if hasattr(group_input_009_1.outputs[18], 'name'):
        group_input_009_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_009_1.outputs[18], 'show_expanded'):
        group_input_009_1.outputs[18].show_expanded = False
    if hasattr(group_input_009_1.outputs[19], 'default_value'):
        group_input_009_1.outputs[19].default_value = 0.0
    if hasattr(group_input_009_1.outputs[19], 'display_shape'):
        group_input_009_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[19], 'enabled'):
        group_input_009_1.outputs[19].enabled = True
    if hasattr(group_input_009_1.outputs[19], 'hide'):
        group_input_009_1.outputs[19].hide = True
    if hasattr(group_input_009_1.outputs[19], 'hide_value'):
        group_input_009_1.outputs[19].hide_value = False
    if hasattr(group_input_009_1.outputs[19], 'name'):
        group_input_009_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_009_1.outputs[19], 'show_expanded'):
        group_input_009_1.outputs[19].show_expanded = False
    if hasattr(group_input_009_1.outputs[20], 'default_value'):
        group_input_009_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[20], 'display_shape'):
        group_input_009_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[20], 'enabled'):
        group_input_009_1.outputs[20].enabled = True
    if hasattr(group_input_009_1.outputs[20], 'hide'):
        group_input_009_1.outputs[20].hide = True
    if hasattr(group_input_009_1.outputs[20], 'hide_value'):
        group_input_009_1.outputs[20].hide_value = False
    if hasattr(group_input_009_1.outputs[20], 'name'):
        group_input_009_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_009_1.outputs[20], 'show_expanded'):
        group_input_009_1.outputs[20].show_expanded = False
    if hasattr(group_input_009_1.outputs[21], 'default_value'):
        group_input_009_1.outputs[21].default_value = 0.0
    if hasattr(group_input_009_1.outputs[21], 'display_shape'):
        group_input_009_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[21], 'enabled'):
        group_input_009_1.outputs[21].enabled = True
    if hasattr(group_input_009_1.outputs[21], 'hide'):
        group_input_009_1.outputs[21].hide = True
    if hasattr(group_input_009_1.outputs[21], 'hide_value'):
        group_input_009_1.outputs[21].hide_value = False
    if hasattr(group_input_009_1.outputs[21], 'name'):
        group_input_009_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_009_1.outputs[21], 'show_expanded'):
        group_input_009_1.outputs[21].show_expanded = False
    if hasattr(group_input_009_1.outputs[22], 'default_value'):
        group_input_009_1.outputs[22].default_value = 0.0
    if hasattr(group_input_009_1.outputs[22], 'display_shape'):
        group_input_009_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[22], 'enabled'):
        group_input_009_1.outputs[22].enabled = True
    if hasattr(group_input_009_1.outputs[22], 'hide'):
        group_input_009_1.outputs[22].hide = True
    if hasattr(group_input_009_1.outputs[22], 'hide_value'):
        group_input_009_1.outputs[22].hide_value = False
    if hasattr(group_input_009_1.outputs[22], 'name'):
        group_input_009_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_009_1.outputs[22], 'show_expanded'):
        group_input_009_1.outputs[22].show_expanded = False
    if hasattr(group_input_009_1.outputs[23], 'default_value'):
        group_input_009_1.outputs[23].default_value = 0.0
    if hasattr(group_input_009_1.outputs[23], 'display_shape'):
        group_input_009_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[23], 'enabled'):
        group_input_009_1.outputs[23].enabled = True
    if hasattr(group_input_009_1.outputs[23], 'hide'):
        group_input_009_1.outputs[23].hide = True
    if hasattr(group_input_009_1.outputs[23], 'hide_value'):
        group_input_009_1.outputs[23].hide_value = False
    if hasattr(group_input_009_1.outputs[23], 'name'):
        group_input_009_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_009_1.outputs[23], 'show_expanded'):
        group_input_009_1.outputs[23].show_expanded = False
    if hasattr(group_input_009_1.outputs[24], 'default_value'):
        group_input_009_1.outputs[24].default_value = 0.0
    if hasattr(group_input_009_1.outputs[24], 'display_shape'):
        group_input_009_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[24], 'enabled'):
        group_input_009_1.outputs[24].enabled = True
    if hasattr(group_input_009_1.outputs[24], 'hide'):
        group_input_009_1.outputs[24].hide = True
    if hasattr(group_input_009_1.outputs[24], 'hide_value'):
        group_input_009_1.outputs[24].hide_value = False
    if hasattr(group_input_009_1.outputs[24], 'name'):
        group_input_009_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_009_1.outputs[24], 'show_expanded'):
        group_input_009_1.outputs[24].show_expanded = False
    if hasattr(group_input_009_1.outputs[25], 'default_value'):
        group_input_009_1.outputs[25].default_value = 0.0
    if hasattr(group_input_009_1.outputs[25], 'display_shape'):
        group_input_009_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[25], 'enabled'):
        group_input_009_1.outputs[25].enabled = True
    if hasattr(group_input_009_1.outputs[25], 'hide'):
        group_input_009_1.outputs[25].hide = True
    if hasattr(group_input_009_1.outputs[25], 'hide_value'):
        group_input_009_1.outputs[25].hide_value = False
    if hasattr(group_input_009_1.outputs[25], 'name'):
        group_input_009_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_009_1.outputs[25], 'show_expanded'):
        group_input_009_1.outputs[25].show_expanded = False
    if hasattr(group_input_009_1.outputs[26], 'default_value'):
        group_input_009_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_009_1.outputs[26], 'display_shape'):
        group_input_009_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[26], 'enabled'):
        group_input_009_1.outputs[26].enabled = True
    if hasattr(group_input_009_1.outputs[26], 'hide'):
        group_input_009_1.outputs[26].hide = True
    if hasattr(group_input_009_1.outputs[26], 'hide_value'):
        group_input_009_1.outputs[26].hide_value = False
    if hasattr(group_input_009_1.outputs[26], 'name'):
        group_input_009_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_009_1.outputs[26], 'show_expanded'):
        group_input_009_1.outputs[26].show_expanded = False
    if hasattr(group_input_009_1.outputs[27], 'default_value'):
        group_input_009_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_009_1.outputs[27], 'display_shape'):
        group_input_009_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[27], 'enabled'):
        group_input_009_1.outputs[27].enabled = True
    if hasattr(group_input_009_1.outputs[27], 'hide'):
        group_input_009_1.outputs[27].hide = True
    if hasattr(group_input_009_1.outputs[27], 'hide_value'):
        group_input_009_1.outputs[27].hide_value = False
    if hasattr(group_input_009_1.outputs[27], 'name'):
        group_input_009_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_009_1.outputs[27], 'show_expanded'):
        group_input_009_1.outputs[27].show_expanded = False
    if hasattr(group_input_009_1.outputs[28], 'default_value'):
        group_input_009_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_009_1.outputs[28], 'display_shape'):
        group_input_009_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[28], 'enabled'):
        group_input_009_1.outputs[28].enabled = True
    if hasattr(group_input_009_1.outputs[28], 'hide'):
        group_input_009_1.outputs[28].hide = True
    if hasattr(group_input_009_1.outputs[28], 'hide_value'):
        group_input_009_1.outputs[28].hide_value = False
    if hasattr(group_input_009_1.outputs[28], 'name'):
        group_input_009_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_009_1.outputs[28], 'show_expanded'):
        group_input_009_1.outputs[28].show_expanded = False
    if hasattr(group_input_009_1.outputs[29], 'default_value'):
        group_input_009_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_009_1.outputs[29], 'display_shape'):
        group_input_009_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[29], 'enabled'):
        group_input_009_1.outputs[29].enabled = True
    if hasattr(group_input_009_1.outputs[29], 'hide'):
        group_input_009_1.outputs[29].hide = True
    if hasattr(group_input_009_1.outputs[29], 'hide_value'):
        group_input_009_1.outputs[29].hide_value = False
    if hasattr(group_input_009_1.outputs[29], 'name'):
        group_input_009_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_009_1.outputs[29], 'show_expanded'):
        group_input_009_1.outputs[29].show_expanded = False
    if hasattr(group_input_009_1.outputs[30], 'default_value'):
        group_input_009_1.outputs[30].default_value = 0.0
    if hasattr(group_input_009_1.outputs[30], 'display_shape'):
        group_input_009_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[30], 'enabled'):
        group_input_009_1.outputs[30].enabled = True
    if hasattr(group_input_009_1.outputs[30], 'hide'):
        group_input_009_1.outputs[30].hide = False
    if hasattr(group_input_009_1.outputs[30], 'hide_value'):
        group_input_009_1.outputs[30].hide_value = False
    if hasattr(group_input_009_1.outputs[30], 'name'):
        group_input_009_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_009_1.outputs[30], 'show_expanded'):
        group_input_009_1.outputs[30].show_expanded = False
    if hasattr(group_input_009_1.outputs[31], 'default_value'):
        group_input_009_1.outputs[31].default_value = 0.0
    if hasattr(group_input_009_1.outputs[31], 'display_shape'):
        group_input_009_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[31], 'enabled'):
        group_input_009_1.outputs[31].enabled = True
    if hasattr(group_input_009_1.outputs[31], 'hide'):
        group_input_009_1.outputs[31].hide = True
    if hasattr(group_input_009_1.outputs[31], 'hide_value'):
        group_input_009_1.outputs[31].hide_value = False
    if hasattr(group_input_009_1.outputs[31], 'name'):
        group_input_009_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_009_1.outputs[31], 'show_expanded'):
        group_input_009_1.outputs[31].show_expanded = False
    if hasattr(group_input_009_1.outputs[32], 'default_value'):
        group_input_009_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[32], 'display_shape'):
        group_input_009_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[32], 'enabled'):
        group_input_009_1.outputs[32].enabled = True
    if hasattr(group_input_009_1.outputs[32], 'hide'):
        group_input_009_1.outputs[32].hide = True
    if hasattr(group_input_009_1.outputs[32], 'hide_value'):
        group_input_009_1.outputs[32].hide_value = False
    if hasattr(group_input_009_1.outputs[32], 'name'):
        group_input_009_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_009_1.outputs[32], 'show_expanded'):
        group_input_009_1.outputs[32].show_expanded = False
    if hasattr(group_input_009_1.outputs[33], 'default_value'):
        group_input_009_1.outputs[33].default_value = 0.0
    if hasattr(group_input_009_1.outputs[33], 'display_shape'):
        group_input_009_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[33], 'enabled'):
        group_input_009_1.outputs[33].enabled = True
    if hasattr(group_input_009_1.outputs[33], 'hide'):
        group_input_009_1.outputs[33].hide = True
    if hasattr(group_input_009_1.outputs[33], 'hide_value'):
        group_input_009_1.outputs[33].hide_value = False
    if hasattr(group_input_009_1.outputs[33], 'name'):
        group_input_009_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_009_1.outputs[33], 'show_expanded'):
        group_input_009_1.outputs[33].show_expanded = False
    if hasattr(group_input_009_1.outputs[34], 'default_value'):
        group_input_009_1.outputs[34].default_value = 0.0
    if hasattr(group_input_009_1.outputs[34], 'display_shape'):
        group_input_009_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[34], 'enabled'):
        group_input_009_1.outputs[34].enabled = True
    if hasattr(group_input_009_1.outputs[34], 'hide'):
        group_input_009_1.outputs[34].hide = True
    if hasattr(group_input_009_1.outputs[34], 'hide_value'):
        group_input_009_1.outputs[34].hide_value = False
    if hasattr(group_input_009_1.outputs[34], 'name'):
        group_input_009_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_009_1.outputs[34], 'show_expanded'):
        group_input_009_1.outputs[34].show_expanded = False
    if hasattr(group_input_009_1.outputs[35], 'default_value'):
        group_input_009_1.outputs[35].default_value = 0.0
    if hasattr(group_input_009_1.outputs[35], 'display_shape'):
        group_input_009_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[35], 'enabled'):
        group_input_009_1.outputs[35].enabled = True
    if hasattr(group_input_009_1.outputs[35], 'hide'):
        group_input_009_1.outputs[35].hide = True
    if hasattr(group_input_009_1.outputs[35], 'hide_value'):
        group_input_009_1.outputs[35].hide_value = False
    if hasattr(group_input_009_1.outputs[35], 'name'):
        group_input_009_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_009_1.outputs[35], 'show_expanded'):
        group_input_009_1.outputs[35].show_expanded = False
    if hasattr(group_input_009_1.outputs[36], 'default_value'):
        group_input_009_1.outputs[36].default_value = 0.0
    if hasattr(group_input_009_1.outputs[36], 'display_shape'):
        group_input_009_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[36], 'enabled'):
        group_input_009_1.outputs[36].enabled = True
    if hasattr(group_input_009_1.outputs[36], 'hide'):
        group_input_009_1.outputs[36].hide = True
    if hasattr(group_input_009_1.outputs[36], 'hide_value'):
        group_input_009_1.outputs[36].hide_value = False
    if hasattr(group_input_009_1.outputs[36], 'name'):
        group_input_009_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_009_1.outputs[36], 'show_expanded'):
        group_input_009_1.outputs[36].show_expanded = False
    if hasattr(group_input_009_1.outputs[37], 'default_value'):
        group_input_009_1.outputs[37].default_value = 0.0
    if hasattr(group_input_009_1.outputs[37], 'display_shape'):
        group_input_009_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[37], 'enabled'):
        group_input_009_1.outputs[37].enabled = True
    if hasattr(group_input_009_1.outputs[37], 'hide'):
        group_input_009_1.outputs[37].hide = True
    if hasattr(group_input_009_1.outputs[37], 'hide_value'):
        group_input_009_1.outputs[37].hide_value = False
    if hasattr(group_input_009_1.outputs[37], 'name'):
        group_input_009_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_009_1.outputs[37], 'show_expanded'):
        group_input_009_1.outputs[37].show_expanded = False
    if hasattr(group_input_009_1.outputs[38], 'default_value'):
        group_input_009_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_009_1.outputs[38], 'display_shape'):
        group_input_009_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[38], 'enabled'):
        group_input_009_1.outputs[38].enabled = True
    if hasattr(group_input_009_1.outputs[38], 'hide'):
        group_input_009_1.outputs[38].hide = False
    if hasattr(group_input_009_1.outputs[38], 'hide_value'):
        group_input_009_1.outputs[38].hide_value = False
    if hasattr(group_input_009_1.outputs[38], 'name'):
        group_input_009_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_009_1.outputs[38], 'show_expanded'):
        group_input_009_1.outputs[38].show_expanded = False
    if hasattr(group_input_009_1.outputs[39], 'default_value'):
        group_input_009_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_009_1.outputs[39], 'display_shape'):
        group_input_009_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[39], 'enabled'):
        group_input_009_1.outputs[39].enabled = True
    if hasattr(group_input_009_1.outputs[39], 'hide'):
        group_input_009_1.outputs[39].hide = False
    if hasattr(group_input_009_1.outputs[39], 'hide_value'):
        group_input_009_1.outputs[39].hide_value = False
    if hasattr(group_input_009_1.outputs[39], 'name'):
        group_input_009_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_009_1.outputs[39], 'show_expanded'):
        group_input_009_1.outputs[39].show_expanded = False
    if hasattr(group_input_009_1.outputs[40], 'default_value'):
        group_input_009_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_009_1.outputs[40], 'display_shape'):
        group_input_009_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[40], 'enabled'):
        group_input_009_1.outputs[40].enabled = True
    if hasattr(group_input_009_1.outputs[40], 'hide'):
        group_input_009_1.outputs[40].hide = False
    if hasattr(group_input_009_1.outputs[40], 'hide_value'):
        group_input_009_1.outputs[40].hide_value = False
    if hasattr(group_input_009_1.outputs[40], 'name'):
        group_input_009_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_009_1.outputs[40], 'show_expanded'):
        group_input_009_1.outputs[40].show_expanded = False
    if hasattr(group_input_009_1.outputs[41], 'default_value'):
        group_input_009_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_009_1.outputs[41], 'display_shape'):
        group_input_009_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[41], 'enabled'):
        group_input_009_1.outputs[41].enabled = True
    if hasattr(group_input_009_1.outputs[41], 'hide'):
        group_input_009_1.outputs[41].hide = True
    if hasattr(group_input_009_1.outputs[41], 'hide_value'):
        group_input_009_1.outputs[41].hide_value = False
    if hasattr(group_input_009_1.outputs[41], 'name'):
        group_input_009_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_009_1.outputs[41], 'show_expanded'):
        group_input_009_1.outputs[41].show_expanded = False
    if hasattr(group_input_009_1.outputs[42], 'default_value'):
        group_input_009_1.outputs[42].default_value = 0.0
    if hasattr(group_input_009_1.outputs[42], 'display_shape'):
        group_input_009_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[42], 'enabled'):
        group_input_009_1.outputs[42].enabled = True
    if hasattr(group_input_009_1.outputs[42], 'hide'):
        group_input_009_1.outputs[42].hide = True
    if hasattr(group_input_009_1.outputs[42], 'hide_value'):
        group_input_009_1.outputs[42].hide_value = False
    if hasattr(group_input_009_1.outputs[42], 'name'):
        group_input_009_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_009_1.outputs[42], 'show_expanded'):
        group_input_009_1.outputs[42].show_expanded = False
    if hasattr(group_input_009_1.outputs[43], 'default_value'):
        group_input_009_1.outputs[43].default_value = 0.0
    if hasattr(group_input_009_1.outputs[43], 'display_shape'):
        group_input_009_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[43], 'enabled'):
        group_input_009_1.outputs[43].enabled = True
    if hasattr(group_input_009_1.outputs[43], 'hide'):
        group_input_009_1.outputs[43].hide = True
    if hasattr(group_input_009_1.outputs[43], 'hide_value'):
        group_input_009_1.outputs[43].hide_value = False
    if hasattr(group_input_009_1.outputs[43], 'name'):
        group_input_009_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_009_1.outputs[43], 'show_expanded'):
        group_input_009_1.outputs[43].show_expanded = False
    if hasattr(group_input_009_1.outputs[44], 'default_value'):
        group_input_009_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[44], 'display_shape'):
        group_input_009_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[44], 'enabled'):
        group_input_009_1.outputs[44].enabled = True
    if hasattr(group_input_009_1.outputs[44], 'hide'):
        group_input_009_1.outputs[44].hide = True
    if hasattr(group_input_009_1.outputs[44], 'hide_value'):
        group_input_009_1.outputs[44].hide_value = False
    if hasattr(group_input_009_1.outputs[44], 'name'):
        group_input_009_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_009_1.outputs[44], 'show_expanded'):
        group_input_009_1.outputs[44].show_expanded = False
    if hasattr(group_input_009_1.outputs[45], 'default_value'):
        group_input_009_1.outputs[45].default_value = 0.0
    if hasattr(group_input_009_1.outputs[45], 'display_shape'):
        group_input_009_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[45], 'enabled'):
        group_input_009_1.outputs[45].enabled = True
    if hasattr(group_input_009_1.outputs[45], 'hide'):
        group_input_009_1.outputs[45].hide = True
    if hasattr(group_input_009_1.outputs[45], 'hide_value'):
        group_input_009_1.outputs[45].hide_value = False
    if hasattr(group_input_009_1.outputs[45], 'name'):
        group_input_009_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_009_1.outputs[45], 'show_expanded'):
        group_input_009_1.outputs[45].show_expanded = False
    if hasattr(group_input_009_1.outputs[46], 'default_value'):
        group_input_009_1.outputs[46].default_value = 0.0
    if hasattr(group_input_009_1.outputs[46], 'display_shape'):
        group_input_009_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[46], 'enabled'):
        group_input_009_1.outputs[46].enabled = True
    if hasattr(group_input_009_1.outputs[46], 'hide'):
        group_input_009_1.outputs[46].hide = True
    if hasattr(group_input_009_1.outputs[46], 'hide_value'):
        group_input_009_1.outputs[46].hide_value = False
    if hasattr(group_input_009_1.outputs[46], 'name'):
        group_input_009_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_009_1.outputs[46], 'show_expanded'):
        group_input_009_1.outputs[46].show_expanded = False
    if hasattr(group_input_009_1.outputs[47], 'default_value'):
        group_input_009_1.outputs[47].default_value = 0.0
    if hasattr(group_input_009_1.outputs[47], 'display_shape'):
        group_input_009_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[47], 'enabled'):
        group_input_009_1.outputs[47].enabled = True
    if hasattr(group_input_009_1.outputs[47], 'hide'):
        group_input_009_1.outputs[47].hide = True
    if hasattr(group_input_009_1.outputs[47], 'hide_value'):
        group_input_009_1.outputs[47].hide_value = False
    if hasattr(group_input_009_1.outputs[47], 'name'):
        group_input_009_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_009_1.outputs[47], 'show_expanded'):
        group_input_009_1.outputs[47].show_expanded = False
    if hasattr(group_input_009_1.outputs[48], 'default_value'):
        group_input_009_1.outputs[48].default_value = 0.0
    if hasattr(group_input_009_1.outputs[48], 'display_shape'):
        group_input_009_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[48], 'enabled'):
        group_input_009_1.outputs[48].enabled = True
    if hasattr(group_input_009_1.outputs[48], 'hide'):
        group_input_009_1.outputs[48].hide = True
    if hasattr(group_input_009_1.outputs[48], 'hide_value'):
        group_input_009_1.outputs[48].hide_value = False
    if hasattr(group_input_009_1.outputs[48], 'name'):
        group_input_009_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_009_1.outputs[48], 'show_expanded'):
        group_input_009_1.outputs[48].show_expanded = False
    if hasattr(group_input_009_1.outputs[49], 'default_value'):
        group_input_009_1.outputs[49].default_value = 0.0
    if hasattr(group_input_009_1.outputs[49], 'display_shape'):
        group_input_009_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[49], 'enabled'):
        group_input_009_1.outputs[49].enabled = True
    if hasattr(group_input_009_1.outputs[49], 'hide'):
        group_input_009_1.outputs[49].hide = True
    if hasattr(group_input_009_1.outputs[49], 'hide_value'):
        group_input_009_1.outputs[49].hide_value = False
    if hasattr(group_input_009_1.outputs[49], 'name'):
        group_input_009_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_009_1.outputs[49], 'show_expanded'):
        group_input_009_1.outputs[49].show_expanded = False
    if hasattr(group_input_009_1.outputs[50], 'default_value'):
        group_input_009_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_009_1.outputs[50], 'display_shape'):
        group_input_009_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[50], 'enabled'):
        group_input_009_1.outputs[50].enabled = True
    if hasattr(group_input_009_1.outputs[50], 'hide'):
        group_input_009_1.outputs[50].hide = True
    if hasattr(group_input_009_1.outputs[50], 'hide_value'):
        group_input_009_1.outputs[50].hide_value = False
    if hasattr(group_input_009_1.outputs[50], 'name'):
        group_input_009_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_009_1.outputs[50], 'show_expanded'):
        group_input_009_1.outputs[50].show_expanded = False
    if hasattr(group_input_009_1.outputs[51], 'default_value'):
        group_input_009_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_009_1.outputs[51], 'display_shape'):
        group_input_009_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[51], 'enabled'):
        group_input_009_1.outputs[51].enabled = True
    if hasattr(group_input_009_1.outputs[51], 'hide'):
        group_input_009_1.outputs[51].hide = True
    if hasattr(group_input_009_1.outputs[51], 'hide_value'):
        group_input_009_1.outputs[51].hide_value = False
    if hasattr(group_input_009_1.outputs[51], 'name'):
        group_input_009_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_009_1.outputs[51], 'show_expanded'):
        group_input_009_1.outputs[51].show_expanded = False
    if hasattr(group_input_009_1.outputs[52], 'default_value'):
        group_input_009_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_009_1.outputs[52], 'display_shape'):
        group_input_009_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[52], 'enabled'):
        group_input_009_1.outputs[52].enabled = True
    if hasattr(group_input_009_1.outputs[52], 'hide'):
        group_input_009_1.outputs[52].hide = True
    if hasattr(group_input_009_1.outputs[52], 'hide_value'):
        group_input_009_1.outputs[52].hide_value = False
    if hasattr(group_input_009_1.outputs[52], 'name'):
        group_input_009_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_009_1.outputs[52], 'show_expanded'):
        group_input_009_1.outputs[52].show_expanded = False
    if hasattr(group_input_009_1.outputs[53], 'default_value'):
        group_input_009_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_009_1.outputs[53], 'display_shape'):
        group_input_009_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[53], 'enabled'):
        group_input_009_1.outputs[53].enabled = True
    if hasattr(group_input_009_1.outputs[53], 'hide'):
        group_input_009_1.outputs[53].hide = True
    if hasattr(group_input_009_1.outputs[53], 'hide_value'):
        group_input_009_1.outputs[53].hide_value = False
    if hasattr(group_input_009_1.outputs[53], 'name'):
        group_input_009_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_009_1.outputs[53], 'show_expanded'):
        group_input_009_1.outputs[53].show_expanded = False
    if hasattr(group_input_009_1.outputs[54], 'default_value'):
        group_input_009_1.outputs[54].default_value = 0.0
    if hasattr(group_input_009_1.outputs[54], 'display_shape'):
        group_input_009_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[54], 'enabled'):
        group_input_009_1.outputs[54].enabled = True
    if hasattr(group_input_009_1.outputs[54], 'hide'):
        group_input_009_1.outputs[54].hide = True
    if hasattr(group_input_009_1.outputs[54], 'hide_value'):
        group_input_009_1.outputs[54].hide_value = False
    if hasattr(group_input_009_1.outputs[54], 'name'):
        group_input_009_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_009_1.outputs[54], 'show_expanded'):
        group_input_009_1.outputs[54].show_expanded = False
    if hasattr(group_input_009_1.outputs[55], 'default_value'):
        group_input_009_1.outputs[55].default_value = 0.0
    if hasattr(group_input_009_1.outputs[55], 'display_shape'):
        group_input_009_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[55], 'enabled'):
        group_input_009_1.outputs[55].enabled = True
    if hasattr(group_input_009_1.outputs[55], 'hide'):
        group_input_009_1.outputs[55].hide = True
    if hasattr(group_input_009_1.outputs[55], 'hide_value'):
        group_input_009_1.outputs[55].hide_value = False
    if hasattr(group_input_009_1.outputs[55], 'name'):
        group_input_009_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_009_1.outputs[55], 'show_expanded'):
        group_input_009_1.outputs[55].show_expanded = False
    if hasattr(group_input_009_1.outputs[56], 'default_value'):
        group_input_009_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[56], 'display_shape'):
        group_input_009_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[56], 'enabled'):
        group_input_009_1.outputs[56].enabled = True
    if hasattr(group_input_009_1.outputs[56], 'hide'):
        group_input_009_1.outputs[56].hide = True
    if hasattr(group_input_009_1.outputs[56], 'hide_value'):
        group_input_009_1.outputs[56].hide_value = False
    if hasattr(group_input_009_1.outputs[56], 'name'):
        group_input_009_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_009_1.outputs[56], 'show_expanded'):
        group_input_009_1.outputs[56].show_expanded = False
    if hasattr(group_input_009_1.outputs[57], 'default_value'):
        group_input_009_1.outputs[57].default_value = 0.0
    if hasattr(group_input_009_1.outputs[57], 'display_shape'):
        group_input_009_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[57], 'enabled'):
        group_input_009_1.outputs[57].enabled = True
    if hasattr(group_input_009_1.outputs[57], 'hide'):
        group_input_009_1.outputs[57].hide = True
    if hasattr(group_input_009_1.outputs[57], 'hide_value'):
        group_input_009_1.outputs[57].hide_value = False
    if hasattr(group_input_009_1.outputs[57], 'name'):
        group_input_009_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_009_1.outputs[57], 'show_expanded'):
        group_input_009_1.outputs[57].show_expanded = False
    if hasattr(group_input_009_1.outputs[58], 'default_value'):
        group_input_009_1.outputs[58].default_value = 0.0
    if hasattr(group_input_009_1.outputs[58], 'display_shape'):
        group_input_009_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[58], 'enabled'):
        group_input_009_1.outputs[58].enabled = True
    if hasattr(group_input_009_1.outputs[58], 'hide'):
        group_input_009_1.outputs[58].hide = True
    if hasattr(group_input_009_1.outputs[58], 'hide_value'):
        group_input_009_1.outputs[58].hide_value = False
    if hasattr(group_input_009_1.outputs[58], 'name'):
        group_input_009_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_009_1.outputs[58], 'show_expanded'):
        group_input_009_1.outputs[58].show_expanded = False
    if hasattr(group_input_009_1.outputs[59], 'default_value'):
        group_input_009_1.outputs[59].default_value = 0.0
    if hasattr(group_input_009_1.outputs[59], 'display_shape'):
        group_input_009_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[59], 'enabled'):
        group_input_009_1.outputs[59].enabled = True
    if hasattr(group_input_009_1.outputs[59], 'hide'):
        group_input_009_1.outputs[59].hide = True
    if hasattr(group_input_009_1.outputs[59], 'hide_value'):
        group_input_009_1.outputs[59].hide_value = False
    if hasattr(group_input_009_1.outputs[59], 'name'):
        group_input_009_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_009_1.outputs[59], 'show_expanded'):
        group_input_009_1.outputs[59].show_expanded = False
    if hasattr(group_input_009_1.outputs[60], 'default_value'):
        group_input_009_1.outputs[60].default_value = 0.0
    if hasattr(group_input_009_1.outputs[60], 'display_shape'):
        group_input_009_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[60], 'enabled'):
        group_input_009_1.outputs[60].enabled = True
    if hasattr(group_input_009_1.outputs[60], 'hide'):
        group_input_009_1.outputs[60].hide = True
    if hasattr(group_input_009_1.outputs[60], 'hide_value'):
        group_input_009_1.outputs[60].hide_value = False
    if hasattr(group_input_009_1.outputs[60], 'name'):
        group_input_009_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_009_1.outputs[60], 'show_expanded'):
        group_input_009_1.outputs[60].show_expanded = False
    if hasattr(group_input_009_1.outputs[61], 'default_value'):
        group_input_009_1.outputs[61].default_value = 0.0
    if hasattr(group_input_009_1.outputs[61], 'display_shape'):
        group_input_009_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[61], 'enabled'):
        group_input_009_1.outputs[61].enabled = True
    if hasattr(group_input_009_1.outputs[61], 'hide'):
        group_input_009_1.outputs[61].hide = True
    if hasattr(group_input_009_1.outputs[61], 'hide_value'):
        group_input_009_1.outputs[61].hide_value = False
    if hasattr(group_input_009_1.outputs[61], 'name'):
        group_input_009_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_009_1.outputs[61], 'show_expanded'):
        group_input_009_1.outputs[61].show_expanded = False
    if hasattr(group_input_009_1.outputs[62], 'default_value'):
        group_input_009_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_009_1.outputs[62], 'display_shape'):
        group_input_009_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[62], 'enabled'):
        group_input_009_1.outputs[62].enabled = True
    if hasattr(group_input_009_1.outputs[62], 'hide'):
        group_input_009_1.outputs[62].hide = True
    if hasattr(group_input_009_1.outputs[62], 'hide_value'):
        group_input_009_1.outputs[62].hide_value = False
    if hasattr(group_input_009_1.outputs[62], 'name'):
        group_input_009_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_009_1.outputs[62], 'show_expanded'):
        group_input_009_1.outputs[62].show_expanded = False
    if hasattr(group_input_009_1.outputs[63], 'default_value'):
        group_input_009_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_009_1.outputs[63], 'display_shape'):
        group_input_009_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[63], 'enabled'):
        group_input_009_1.outputs[63].enabled = True
    if hasattr(group_input_009_1.outputs[63], 'hide'):
        group_input_009_1.outputs[63].hide = True
    if hasattr(group_input_009_1.outputs[63], 'hide_value'):
        group_input_009_1.outputs[63].hide_value = False
    if hasattr(group_input_009_1.outputs[63], 'name'):
        group_input_009_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_009_1.outputs[63], 'show_expanded'):
        group_input_009_1.outputs[63].show_expanded = False
    if hasattr(group_input_009_1.outputs[64], 'default_value'):
        group_input_009_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_009_1.outputs[64], 'display_shape'):
        group_input_009_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[64], 'enabled'):
        group_input_009_1.outputs[64].enabled = True
    if hasattr(group_input_009_1.outputs[64], 'hide'):
        group_input_009_1.outputs[64].hide = True
    if hasattr(group_input_009_1.outputs[64], 'hide_value'):
        group_input_009_1.outputs[64].hide_value = False
    if hasattr(group_input_009_1.outputs[64], 'name'):
        group_input_009_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_009_1.outputs[64], 'show_expanded'):
        group_input_009_1.outputs[64].show_expanded = False
    if hasattr(group_input_009_1.outputs[65], 'default_value'):
        group_input_009_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_009_1.outputs[65], 'display_shape'):
        group_input_009_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[65], 'enabled'):
        group_input_009_1.outputs[65].enabled = True
    if hasattr(group_input_009_1.outputs[65], 'hide'):
        group_input_009_1.outputs[65].hide = True
    if hasattr(group_input_009_1.outputs[65], 'hide_value'):
        group_input_009_1.outputs[65].hide_value = False
    if hasattr(group_input_009_1.outputs[65], 'name'):
        group_input_009_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_009_1.outputs[65], 'show_expanded'):
        group_input_009_1.outputs[65].show_expanded = False
    if hasattr(group_input_009_1.outputs[66], 'default_value'):
        group_input_009_1.outputs[66].default_value = 0.0
    if hasattr(group_input_009_1.outputs[66], 'display_shape'):
        group_input_009_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[66], 'enabled'):
        group_input_009_1.outputs[66].enabled = True
    if hasattr(group_input_009_1.outputs[66], 'hide'):
        group_input_009_1.outputs[66].hide = True
    if hasattr(group_input_009_1.outputs[66], 'hide_value'):
        group_input_009_1.outputs[66].hide_value = False
    if hasattr(group_input_009_1.outputs[66], 'name'):
        group_input_009_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_009_1.outputs[66], 'show_expanded'):
        group_input_009_1.outputs[66].show_expanded = False
    if hasattr(group_input_009_1.outputs[67], 'default_value'):
        group_input_009_1.outputs[67].default_value = 0.0
    if hasattr(group_input_009_1.outputs[67], 'display_shape'):
        group_input_009_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[67], 'enabled'):
        group_input_009_1.outputs[67].enabled = True
    if hasattr(group_input_009_1.outputs[67], 'hide'):
        group_input_009_1.outputs[67].hide = True
    if hasattr(group_input_009_1.outputs[67], 'hide_value'):
        group_input_009_1.outputs[67].hide_value = False
    if hasattr(group_input_009_1.outputs[67], 'name'):
        group_input_009_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_009_1.outputs[67], 'show_expanded'):
        group_input_009_1.outputs[67].show_expanded = False
    if hasattr(group_input_009_1.outputs[68], 'default_value'):
        group_input_009_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[68], 'display_shape'):
        group_input_009_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[68], 'enabled'):
        group_input_009_1.outputs[68].enabled = True
    if hasattr(group_input_009_1.outputs[68], 'hide'):
        group_input_009_1.outputs[68].hide = True
    if hasattr(group_input_009_1.outputs[68], 'hide_value'):
        group_input_009_1.outputs[68].hide_value = False
    if hasattr(group_input_009_1.outputs[68], 'name'):
        group_input_009_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_009_1.outputs[68], 'show_expanded'):
        group_input_009_1.outputs[68].show_expanded = False
    if hasattr(group_input_009_1.outputs[69], 'default_value'):
        group_input_009_1.outputs[69].default_value = 0.0
    if hasattr(group_input_009_1.outputs[69], 'display_shape'):
        group_input_009_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[69], 'enabled'):
        group_input_009_1.outputs[69].enabled = True
    if hasattr(group_input_009_1.outputs[69], 'hide'):
        group_input_009_1.outputs[69].hide = True
    if hasattr(group_input_009_1.outputs[69], 'hide_value'):
        group_input_009_1.outputs[69].hide_value = False
    if hasattr(group_input_009_1.outputs[69], 'name'):
        group_input_009_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_009_1.outputs[69], 'show_expanded'):
        group_input_009_1.outputs[69].show_expanded = False
    if hasattr(group_input_009_1.outputs[70], 'default_value'):
        group_input_009_1.outputs[70].default_value = 0.0
    if hasattr(group_input_009_1.outputs[70], 'display_shape'):
        group_input_009_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[70], 'enabled'):
        group_input_009_1.outputs[70].enabled = True
    if hasattr(group_input_009_1.outputs[70], 'hide'):
        group_input_009_1.outputs[70].hide = True
    if hasattr(group_input_009_1.outputs[70], 'hide_value'):
        group_input_009_1.outputs[70].hide_value = False
    if hasattr(group_input_009_1.outputs[70], 'name'):
        group_input_009_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_009_1.outputs[70], 'show_expanded'):
        group_input_009_1.outputs[70].show_expanded = False
    if hasattr(group_input_009_1.outputs[71], 'default_value'):
        group_input_009_1.outputs[71].default_value = 0.0
    if hasattr(group_input_009_1.outputs[71], 'display_shape'):
        group_input_009_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[71], 'enabled'):
        group_input_009_1.outputs[71].enabled = True
    if hasattr(group_input_009_1.outputs[71], 'hide'):
        group_input_009_1.outputs[71].hide = True
    if hasattr(group_input_009_1.outputs[71], 'hide_value'):
        group_input_009_1.outputs[71].hide_value = False
    if hasattr(group_input_009_1.outputs[71], 'name'):
        group_input_009_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_009_1.outputs[71], 'show_expanded'):
        group_input_009_1.outputs[71].show_expanded = False
    if hasattr(group_input_009_1.outputs[72], 'default_value'):
        group_input_009_1.outputs[72].default_value = 0.0
    if hasattr(group_input_009_1.outputs[72], 'display_shape'):
        group_input_009_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[72], 'enabled'):
        group_input_009_1.outputs[72].enabled = True
    if hasattr(group_input_009_1.outputs[72], 'hide'):
        group_input_009_1.outputs[72].hide = True
    if hasattr(group_input_009_1.outputs[72], 'hide_value'):
        group_input_009_1.outputs[72].hide_value = False
    if hasattr(group_input_009_1.outputs[72], 'name'):
        group_input_009_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_009_1.outputs[72], 'show_expanded'):
        group_input_009_1.outputs[72].show_expanded = False
    if hasattr(group_input_009_1.outputs[73], 'default_value'):
        group_input_009_1.outputs[73].default_value = 0.0
    if hasattr(group_input_009_1.outputs[73], 'display_shape'):
        group_input_009_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[73], 'enabled'):
        group_input_009_1.outputs[73].enabled = True
    if hasattr(group_input_009_1.outputs[73], 'hide'):
        group_input_009_1.outputs[73].hide = True
    if hasattr(group_input_009_1.outputs[73], 'hide_value'):
        group_input_009_1.outputs[73].hide_value = False
    if hasattr(group_input_009_1.outputs[73], 'name'):
        group_input_009_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_009_1.outputs[73], 'show_expanded'):
        group_input_009_1.outputs[73].show_expanded = False
    if hasattr(group_input_009_1.outputs[74], 'default_value'):
        group_input_009_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_009_1.outputs[74], 'display_shape'):
        group_input_009_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[74], 'enabled'):
        group_input_009_1.outputs[74].enabled = True
    if hasattr(group_input_009_1.outputs[74], 'hide'):
        group_input_009_1.outputs[74].hide = True
    if hasattr(group_input_009_1.outputs[74], 'hide_value'):
        group_input_009_1.outputs[74].hide_value = False
    if hasattr(group_input_009_1.outputs[74], 'name'):
        group_input_009_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_009_1.outputs[74], 'show_expanded'):
        group_input_009_1.outputs[74].show_expanded = False
    if hasattr(group_input_009_1.outputs[75], 'default_value'):
        group_input_009_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_009_1.outputs[75], 'display_shape'):
        group_input_009_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[75], 'enabled'):
        group_input_009_1.outputs[75].enabled = True
    if hasattr(group_input_009_1.outputs[75], 'hide'):
        group_input_009_1.outputs[75].hide = True
    if hasattr(group_input_009_1.outputs[75], 'hide_value'):
        group_input_009_1.outputs[75].hide_value = False
    if hasattr(group_input_009_1.outputs[75], 'name'):
        group_input_009_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_009_1.outputs[75], 'show_expanded'):
        group_input_009_1.outputs[75].show_expanded = False
    if hasattr(group_input_009_1.outputs[76], 'default_value'):
        group_input_009_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_009_1.outputs[76], 'display_shape'):
        group_input_009_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[76], 'enabled'):
        group_input_009_1.outputs[76].enabled = True
    if hasattr(group_input_009_1.outputs[76], 'hide'):
        group_input_009_1.outputs[76].hide = True
    if hasattr(group_input_009_1.outputs[76], 'hide_value'):
        group_input_009_1.outputs[76].hide_value = False
    if hasattr(group_input_009_1.outputs[76], 'name'):
        group_input_009_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_009_1.outputs[76], 'show_expanded'):
        group_input_009_1.outputs[76].show_expanded = False
    if hasattr(group_input_009_1.outputs[77], 'default_value'):
        group_input_009_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_009_1.outputs[77], 'display_shape'):
        group_input_009_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[77], 'enabled'):
        group_input_009_1.outputs[77].enabled = True
    if hasattr(group_input_009_1.outputs[77], 'hide'):
        group_input_009_1.outputs[77].hide = True
    if hasattr(group_input_009_1.outputs[77], 'hide_value'):
        group_input_009_1.outputs[77].hide_value = False
    if hasattr(group_input_009_1.outputs[77], 'name'):
        group_input_009_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_009_1.outputs[77], 'show_expanded'):
        group_input_009_1.outputs[77].show_expanded = False
    if hasattr(group_input_009_1.outputs[78], 'default_value'):
        group_input_009_1.outputs[78].default_value = 0.0
    if hasattr(group_input_009_1.outputs[78], 'display_shape'):
        group_input_009_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[78], 'enabled'):
        group_input_009_1.outputs[78].enabled = True
    if hasattr(group_input_009_1.outputs[78], 'hide'):
        group_input_009_1.outputs[78].hide = True
    if hasattr(group_input_009_1.outputs[78], 'hide_value'):
        group_input_009_1.outputs[78].hide_value = False
    if hasattr(group_input_009_1.outputs[78], 'name'):
        group_input_009_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_009_1.outputs[78], 'show_expanded'):
        group_input_009_1.outputs[78].show_expanded = False
    if hasattr(group_input_009_1.outputs[79], 'default_value'):
        group_input_009_1.outputs[79].default_value = 0.0
    if hasattr(group_input_009_1.outputs[79], 'display_shape'):
        group_input_009_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[79], 'enabled'):
        group_input_009_1.outputs[79].enabled = True
    if hasattr(group_input_009_1.outputs[79], 'hide'):
        group_input_009_1.outputs[79].hide = True
    if hasattr(group_input_009_1.outputs[79], 'hide_value'):
        group_input_009_1.outputs[79].hide_value = False
    if hasattr(group_input_009_1.outputs[79], 'name'):
        group_input_009_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_009_1.outputs[79], 'show_expanded'):
        group_input_009_1.outputs[79].show_expanded = False
    if hasattr(group_input_009_1.outputs[80], 'default_value'):
        group_input_009_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[80], 'display_shape'):
        group_input_009_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[80], 'enabled'):
        group_input_009_1.outputs[80].enabled = True
    if hasattr(group_input_009_1.outputs[80], 'hide'):
        group_input_009_1.outputs[80].hide = True
    if hasattr(group_input_009_1.outputs[80], 'hide_value'):
        group_input_009_1.outputs[80].hide_value = False
    if hasattr(group_input_009_1.outputs[80], 'name'):
        group_input_009_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_009_1.outputs[80], 'show_expanded'):
        group_input_009_1.outputs[80].show_expanded = False
    if hasattr(group_input_009_1.outputs[81], 'default_value'):
        group_input_009_1.outputs[81].default_value = 0.0
    if hasattr(group_input_009_1.outputs[81], 'display_shape'):
        group_input_009_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[81], 'enabled'):
        group_input_009_1.outputs[81].enabled = True
    if hasattr(group_input_009_1.outputs[81], 'hide'):
        group_input_009_1.outputs[81].hide = True
    if hasattr(group_input_009_1.outputs[81], 'hide_value'):
        group_input_009_1.outputs[81].hide_value = False
    if hasattr(group_input_009_1.outputs[81], 'name'):
        group_input_009_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_009_1.outputs[81], 'show_expanded'):
        group_input_009_1.outputs[81].show_expanded = False
    if hasattr(group_input_009_1.outputs[82], 'default_value'):
        group_input_009_1.outputs[82].default_value = 0.0
    if hasattr(group_input_009_1.outputs[82], 'display_shape'):
        group_input_009_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[82], 'enabled'):
        group_input_009_1.outputs[82].enabled = True
    if hasattr(group_input_009_1.outputs[82], 'hide'):
        group_input_009_1.outputs[82].hide = True
    if hasattr(group_input_009_1.outputs[82], 'hide_value'):
        group_input_009_1.outputs[82].hide_value = False
    if hasattr(group_input_009_1.outputs[82], 'name'):
        group_input_009_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_009_1.outputs[82], 'show_expanded'):
        group_input_009_1.outputs[82].show_expanded = False
    if hasattr(group_input_009_1.outputs[83], 'default_value'):
        group_input_009_1.outputs[83].default_value = 0.0
    if hasattr(group_input_009_1.outputs[83], 'display_shape'):
        group_input_009_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[83], 'enabled'):
        group_input_009_1.outputs[83].enabled = True
    if hasattr(group_input_009_1.outputs[83], 'hide'):
        group_input_009_1.outputs[83].hide = True
    if hasattr(group_input_009_1.outputs[83], 'hide_value'):
        group_input_009_1.outputs[83].hide_value = False
    if hasattr(group_input_009_1.outputs[83], 'name'):
        group_input_009_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_009_1.outputs[83], 'show_expanded'):
        group_input_009_1.outputs[83].show_expanded = False
    if hasattr(group_input_009_1.outputs[84], 'default_value'):
        group_input_009_1.outputs[84].default_value = 0.0
    if hasattr(group_input_009_1.outputs[84], 'display_shape'):
        group_input_009_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[84], 'enabled'):
        group_input_009_1.outputs[84].enabled = True
    if hasattr(group_input_009_1.outputs[84], 'hide'):
        group_input_009_1.outputs[84].hide = True
    if hasattr(group_input_009_1.outputs[84], 'hide_value'):
        group_input_009_1.outputs[84].hide_value = False
    if hasattr(group_input_009_1.outputs[84], 'name'):
        group_input_009_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_009_1.outputs[84], 'show_expanded'):
        group_input_009_1.outputs[84].show_expanded = False
    if hasattr(group_input_009_1.outputs[85], 'default_value'):
        group_input_009_1.outputs[85].default_value = 0.0
    if hasattr(group_input_009_1.outputs[85], 'display_shape'):
        group_input_009_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[85], 'enabled'):
        group_input_009_1.outputs[85].enabled = True
    if hasattr(group_input_009_1.outputs[85], 'hide'):
        group_input_009_1.outputs[85].hide = True
    if hasattr(group_input_009_1.outputs[85], 'hide_value'):
        group_input_009_1.outputs[85].hide_value = False
    if hasattr(group_input_009_1.outputs[85], 'name'):
        group_input_009_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_009_1.outputs[85], 'show_expanded'):
        group_input_009_1.outputs[85].show_expanded = False
    if hasattr(group_input_009_1.outputs[86], 'default_value'):
        group_input_009_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_009_1.outputs[86], 'display_shape'):
        group_input_009_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[86], 'enabled'):
        group_input_009_1.outputs[86].enabled = True
    if hasattr(group_input_009_1.outputs[86], 'hide'):
        group_input_009_1.outputs[86].hide = True
    if hasattr(group_input_009_1.outputs[86], 'hide_value'):
        group_input_009_1.outputs[86].hide_value = False
    if hasattr(group_input_009_1.outputs[86], 'name'):
        group_input_009_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_009_1.outputs[86], 'show_expanded'):
        group_input_009_1.outputs[86].show_expanded = False
    if hasattr(group_input_009_1.outputs[87], 'default_value'):
        group_input_009_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_009_1.outputs[87], 'display_shape'):
        group_input_009_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[87], 'enabled'):
        group_input_009_1.outputs[87].enabled = True
    if hasattr(group_input_009_1.outputs[87], 'hide'):
        group_input_009_1.outputs[87].hide = True
    if hasattr(group_input_009_1.outputs[87], 'hide_value'):
        group_input_009_1.outputs[87].hide_value = False
    if hasattr(group_input_009_1.outputs[87], 'name'):
        group_input_009_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_009_1.outputs[87], 'show_expanded'):
        group_input_009_1.outputs[87].show_expanded = False
    if hasattr(group_input_009_1.outputs[88], 'default_value'):
        group_input_009_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_009_1.outputs[88], 'display_shape'):
        group_input_009_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[88], 'enabled'):
        group_input_009_1.outputs[88].enabled = True
    if hasattr(group_input_009_1.outputs[88], 'hide'):
        group_input_009_1.outputs[88].hide = True
    if hasattr(group_input_009_1.outputs[88], 'hide_value'):
        group_input_009_1.outputs[88].hide_value = False
    if hasattr(group_input_009_1.outputs[88], 'name'):
        group_input_009_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_009_1.outputs[88], 'show_expanded'):
        group_input_009_1.outputs[88].show_expanded = False
    if hasattr(group_input_009_1.outputs[89], 'default_value'):
        group_input_009_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_009_1.outputs[89], 'display_shape'):
        group_input_009_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[89], 'enabled'):
        group_input_009_1.outputs[89].enabled = True
    if hasattr(group_input_009_1.outputs[89], 'hide'):
        group_input_009_1.outputs[89].hide = True
    if hasattr(group_input_009_1.outputs[89], 'hide_value'):
        group_input_009_1.outputs[89].hide_value = False
    if hasattr(group_input_009_1.outputs[89], 'name'):
        group_input_009_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_009_1.outputs[89], 'show_expanded'):
        group_input_009_1.outputs[89].show_expanded = False
    if hasattr(group_input_009_1.outputs[90], 'default_value'):
        group_input_009_1.outputs[90].default_value = 0.0
    if hasattr(group_input_009_1.outputs[90], 'display_shape'):
        group_input_009_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[90], 'enabled'):
        group_input_009_1.outputs[90].enabled = True
    if hasattr(group_input_009_1.outputs[90], 'hide'):
        group_input_009_1.outputs[90].hide = True
    if hasattr(group_input_009_1.outputs[90], 'hide_value'):
        group_input_009_1.outputs[90].hide_value = False
    if hasattr(group_input_009_1.outputs[90], 'name'):
        group_input_009_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_009_1.outputs[90], 'show_expanded'):
        group_input_009_1.outputs[90].show_expanded = False
    if hasattr(group_input_009_1.outputs[91], 'default_value'):
        group_input_009_1.outputs[91].default_value = 0.0
    if hasattr(group_input_009_1.outputs[91], 'display_shape'):
        group_input_009_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[91], 'enabled'):
        group_input_009_1.outputs[91].enabled = True
    if hasattr(group_input_009_1.outputs[91], 'hide'):
        group_input_009_1.outputs[91].hide = True
    if hasattr(group_input_009_1.outputs[91], 'hide_value'):
        group_input_009_1.outputs[91].hide_value = False
    if hasattr(group_input_009_1.outputs[91], 'name'):
        group_input_009_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_009_1.outputs[91], 'show_expanded'):
        group_input_009_1.outputs[91].show_expanded = False
    if hasattr(group_input_009_1.outputs[92], 'default_value'):
        group_input_009_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_009_1.outputs[92], 'display_shape'):
        group_input_009_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[92], 'enabled'):
        group_input_009_1.outputs[92].enabled = True
    if hasattr(group_input_009_1.outputs[92], 'hide'):
        group_input_009_1.outputs[92].hide = True
    if hasattr(group_input_009_1.outputs[92], 'hide_value'):
        group_input_009_1.outputs[92].hide_value = False
    if hasattr(group_input_009_1.outputs[92], 'name'):
        group_input_009_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_009_1.outputs[92], 'show_expanded'):
        group_input_009_1.outputs[92].show_expanded = False
    if hasattr(group_input_009_1.outputs[93], 'default_value'):
        group_input_009_1.outputs[93].default_value = 0.0
    if hasattr(group_input_009_1.outputs[93], 'display_shape'):
        group_input_009_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[93], 'enabled'):
        group_input_009_1.outputs[93].enabled = True
    if hasattr(group_input_009_1.outputs[93], 'hide'):
        group_input_009_1.outputs[93].hide = True
    if hasattr(group_input_009_1.outputs[93], 'hide_value'):
        group_input_009_1.outputs[93].hide_value = False
    if hasattr(group_input_009_1.outputs[93], 'name'):
        group_input_009_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_009_1.outputs[93], 'show_expanded'):
        group_input_009_1.outputs[93].show_expanded = False
    if hasattr(group_input_009_1.outputs[94], 'default_value'):
        group_input_009_1.outputs[94].default_value = 0.0
    if hasattr(group_input_009_1.outputs[94], 'display_shape'):
        group_input_009_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[94], 'enabled'):
        group_input_009_1.outputs[94].enabled = True
    if hasattr(group_input_009_1.outputs[94], 'hide'):
        group_input_009_1.outputs[94].hide = True
    if hasattr(group_input_009_1.outputs[94], 'hide_value'):
        group_input_009_1.outputs[94].hide_value = False
    if hasattr(group_input_009_1.outputs[94], 'name'):
        group_input_009_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_009_1.outputs[94], 'show_expanded'):
        group_input_009_1.outputs[94].show_expanded = False
    if hasattr(group_input_009_1.outputs[95], 'default_value'):
        group_input_009_1.outputs[95].default_value = 0.0
    if hasattr(group_input_009_1.outputs[95], 'display_shape'):
        group_input_009_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[95], 'enabled'):
        group_input_009_1.outputs[95].enabled = True
    if hasattr(group_input_009_1.outputs[95], 'hide'):
        group_input_009_1.outputs[95].hide = True
    if hasattr(group_input_009_1.outputs[95], 'hide_value'):
        group_input_009_1.outputs[95].hide_value = False
    if hasattr(group_input_009_1.outputs[95], 'name'):
        group_input_009_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_009_1.outputs[95], 'show_expanded'):
        group_input_009_1.outputs[95].show_expanded = False
    if hasattr(group_input_009_1.outputs[96], 'default_value'):
        group_input_009_1.outputs[96].default_value = 0.0
    if hasattr(group_input_009_1.outputs[96], 'display_shape'):
        group_input_009_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[96], 'enabled'):
        group_input_009_1.outputs[96].enabled = True
    if hasattr(group_input_009_1.outputs[96], 'hide'):
        group_input_009_1.outputs[96].hide = True
    if hasattr(group_input_009_1.outputs[96], 'hide_value'):
        group_input_009_1.outputs[96].hide_value = False
    if hasattr(group_input_009_1.outputs[96], 'name'):
        group_input_009_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_009_1.outputs[96], 'show_expanded'):
        group_input_009_1.outputs[96].show_expanded = False
    if hasattr(group_input_009_1.outputs[97], 'default_value'):
        group_input_009_1.outputs[97].default_value = 0.0
    if hasattr(group_input_009_1.outputs[97], 'display_shape'):
        group_input_009_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[97], 'enabled'):
        group_input_009_1.outputs[97].enabled = True
    if hasattr(group_input_009_1.outputs[97], 'hide'):
        group_input_009_1.outputs[97].hide = True
    if hasattr(group_input_009_1.outputs[97], 'hide_value'):
        group_input_009_1.outputs[97].hide_value = False
    if hasattr(group_input_009_1.outputs[97], 'name'):
        group_input_009_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_009_1.outputs[97], 'show_expanded'):
        group_input_009_1.outputs[97].show_expanded = False
    if hasattr(group_input_009_1.outputs[98], 'default_value'):
        group_input_009_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_009_1.outputs[98], 'display_shape'):
        group_input_009_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[98], 'enabled'):
        group_input_009_1.outputs[98].enabled = True
    if hasattr(group_input_009_1.outputs[98], 'hide'):
        group_input_009_1.outputs[98].hide = True
    if hasattr(group_input_009_1.outputs[98], 'hide_value'):
        group_input_009_1.outputs[98].hide_value = False
    if hasattr(group_input_009_1.outputs[98], 'name'):
        group_input_009_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_009_1.outputs[98], 'show_expanded'):
        group_input_009_1.outputs[98].show_expanded = False
    if hasattr(group_input_009_1.outputs[99], 'default_value'):
        group_input_009_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_009_1.outputs[99], 'display_shape'):
        group_input_009_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[99], 'enabled'):
        group_input_009_1.outputs[99].enabled = True
    if hasattr(group_input_009_1.outputs[99], 'hide'):
        group_input_009_1.outputs[99].hide = True
    if hasattr(group_input_009_1.outputs[99], 'hide_value'):
        group_input_009_1.outputs[99].hide_value = False
    if hasattr(group_input_009_1.outputs[99], 'name'):
        group_input_009_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_009_1.outputs[99], 'show_expanded'):
        group_input_009_1.outputs[99].show_expanded = False
    if hasattr(group_input_009_1.outputs[100], 'default_value'):
        group_input_009_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_009_1.outputs[100], 'display_shape'):
        group_input_009_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[100], 'enabled'):
        group_input_009_1.outputs[100].enabled = True
    if hasattr(group_input_009_1.outputs[100], 'hide'):
        group_input_009_1.outputs[100].hide = True
    if hasattr(group_input_009_1.outputs[100], 'hide_value'):
        group_input_009_1.outputs[100].hide_value = False
    if hasattr(group_input_009_1.outputs[100], 'name'):
        group_input_009_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_009_1.outputs[100], 'show_expanded'):
        group_input_009_1.outputs[100].show_expanded = False
    if hasattr(group_input_009_1.outputs[101], 'default_value'):
        group_input_009_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_009_1.outputs[101], 'display_shape'):
        group_input_009_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_009_1.outputs[101], 'enabled'):
        group_input_009_1.outputs[101].enabled = True
    if hasattr(group_input_009_1.outputs[101], 'hide'):
        group_input_009_1.outputs[101].hide = True
    if hasattr(group_input_009_1.outputs[101], 'hide_value'):
        group_input_009_1.outputs[101].hide_value = False
    if hasattr(group_input_009_1.outputs[101], 'name'):
        group_input_009_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_009_1.outputs[101], 'show_expanded'):
        group_input_009_1.outputs[101].show_expanded = False

    group_input_010_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_010_1, 'color'):
        group_input_010_1.color = (0.0, 0.0, 1.0)
    if hasattr(group_input_010_1, 'hide'):
        group_input_010_1.hide = False
    if hasattr(group_input_010_1, 'label'):
        group_input_010_1.label = 'Slot 4'
    if hasattr(group_input_010_1, 'location'):
        group_input_010_1.location = (-2060.0, 1720.0)
    if hasattr(group_input_010_1, 'mute'):
        group_input_010_1.mute = False
    if hasattr(group_input_010_1, 'name'):
        group_input_010_1.name = 'Group Input.010'
    if hasattr(group_input_010_1, 'use_custom_color'):
        group_input_010_1.use_custom_color = True
    if hasattr(group_input_010_1, 'width'):
        group_input_010_1.width = 179.714111328125
    if hasattr(group_input_010_1.outputs[0], 'default_value'):
        group_input_010_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[0], 'display_shape'):
        group_input_010_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[0], 'enabled'):
        group_input_010_1.outputs[0].enabled = True
    if hasattr(group_input_010_1.outputs[0], 'hide'):
        group_input_010_1.outputs[0].hide = True
    if hasattr(group_input_010_1.outputs[0], 'hide_value'):
        group_input_010_1.outputs[0].hide_value = False
    if hasattr(group_input_010_1.outputs[0], 'name'):
        group_input_010_1.outputs[0].name = 'ASG'
    if hasattr(group_input_010_1.outputs[0], 'show_expanded'):
        group_input_010_1.outputs[0].show_expanded = False
    if hasattr(group_input_010_1.outputs[1], 'default_value'):
        group_input_010_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[1], 'display_shape'):
        group_input_010_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[1], 'enabled'):
        group_input_010_1.outputs[1].enabled = True
    if hasattr(group_input_010_1.outputs[1], 'hide'):
        group_input_010_1.outputs[1].hide = True
    if hasattr(group_input_010_1.outputs[1], 'hide_value'):
        group_input_010_1.outputs[1].hide_value = False
    if hasattr(group_input_010_1.outputs[1], 'name'):
        group_input_010_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_010_1.outputs[1], 'show_expanded'):
        group_input_010_1.outputs[1].show_expanded = False
    if hasattr(group_input_010_1.outputs[2], 'default_value'):
        group_input_010_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[2], 'display_shape'):
        group_input_010_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[2], 'enabled'):
        group_input_010_1.outputs[2].enabled = True
    if hasattr(group_input_010_1.outputs[2], 'hide'):
        group_input_010_1.outputs[2].hide = True
    if hasattr(group_input_010_1.outputs[2], 'hide_value'):
        group_input_010_1.outputs[2].hide_value = False
    if hasattr(group_input_010_1.outputs[2], 'name'):
        group_input_010_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_010_1.outputs[2], 'show_expanded'):
        group_input_010_1.outputs[2].show_expanded = False
    if hasattr(group_input_010_1.outputs[3], 'default_value'):
        group_input_010_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[3], 'display_shape'):
        group_input_010_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[3], 'enabled'):
        group_input_010_1.outputs[3].enabled = True
    if hasattr(group_input_010_1.outputs[3], 'hide'):
        group_input_010_1.outputs[3].hide = True
    if hasattr(group_input_010_1.outputs[3], 'hide_value'):
        group_input_010_1.outputs[3].hide_value = False
    if hasattr(group_input_010_1.outputs[3], 'name'):
        group_input_010_1.outputs[3].name = 'Normal'
    if hasattr(group_input_010_1.outputs[3], 'show_expanded'):
        group_input_010_1.outputs[3].show_expanded = False
    if hasattr(group_input_010_1.outputs[4], 'default_value'):
        group_input_010_1.outputs[4].default_value = 0.0
    if hasattr(group_input_010_1.outputs[4], 'display_shape'):
        group_input_010_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[4], 'enabled'):
        group_input_010_1.outputs[4].enabled = True
    if hasattr(group_input_010_1.outputs[4], 'hide'):
        group_input_010_1.outputs[4].hide = True
    if hasattr(group_input_010_1.outputs[4], 'hide_value'):
        group_input_010_1.outputs[4].hide_value = False
    if hasattr(group_input_010_1.outputs[4], 'name'):
        group_input_010_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_010_1.outputs[4], 'show_expanded'):
        group_input_010_1.outputs[4].show_expanded = False
    if hasattr(group_input_010_1.outputs[5], 'default_value'):
        group_input_010_1.outputs[5].default_value = 1.0
    if hasattr(group_input_010_1.outputs[5], 'display_shape'):
        group_input_010_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[5], 'enabled'):
        group_input_010_1.outputs[5].enabled = True
    if hasattr(group_input_010_1.outputs[5], 'hide'):
        group_input_010_1.outputs[5].hide = True
    if hasattr(group_input_010_1.outputs[5], 'hide_value'):
        group_input_010_1.outputs[5].hide_value = False
    if hasattr(group_input_010_1.outputs[5], 'name'):
        group_input_010_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_010_1.outputs[5], 'show_expanded'):
        group_input_010_1.outputs[5].show_expanded = False
    if hasattr(group_input_010_1.outputs[6], 'default_value'):
        group_input_010_1.outputs[6].default_value = 0.0
    if hasattr(group_input_010_1.outputs[6], 'display_shape'):
        group_input_010_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[6], 'enabled'):
        group_input_010_1.outputs[6].enabled = True
    if hasattr(group_input_010_1.outputs[6], 'hide'):
        group_input_010_1.outputs[6].hide = True
    if hasattr(group_input_010_1.outputs[6], 'hide_value'):
        group_input_010_1.outputs[6].hide_value = False
    if hasattr(group_input_010_1.outputs[6], 'name'):
        group_input_010_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_010_1.outputs[6], 'show_expanded'):
        group_input_010_1.outputs[6].show_expanded = False
    if hasattr(group_input_010_1.outputs[7], 'default_value'):
        group_input_010_1.outputs[7].default_value = 0.0
    if hasattr(group_input_010_1.outputs[7], 'display_shape'):
        group_input_010_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[7], 'enabled'):
        group_input_010_1.outputs[7].enabled = True
    if hasattr(group_input_010_1.outputs[7], 'hide'):
        group_input_010_1.outputs[7].hide = True
    if hasattr(group_input_010_1.outputs[7], 'hide_value'):
        group_input_010_1.outputs[7].hide_value = False
    if hasattr(group_input_010_1.outputs[7], 'name'):
        group_input_010_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_010_1.outputs[7], 'show_expanded'):
        group_input_010_1.outputs[7].show_expanded = False
    if hasattr(group_input_010_1.outputs[8], 'default_value'):
        group_input_010_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[8], 'display_shape'):
        group_input_010_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[8], 'enabled'):
        group_input_010_1.outputs[8].enabled = True
    if hasattr(group_input_010_1.outputs[8], 'hide'):
        group_input_010_1.outputs[8].hide = True
    if hasattr(group_input_010_1.outputs[8], 'hide_value'):
        group_input_010_1.outputs[8].hide_value = False
    if hasattr(group_input_010_1.outputs[8], 'name'):
        group_input_010_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_010_1.outputs[8], 'show_expanded'):
        group_input_010_1.outputs[8].show_expanded = False
    if hasattr(group_input_010_1.outputs[9], 'default_value'):
        group_input_010_1.outputs[9].default_value = 0.0
    if hasattr(group_input_010_1.outputs[9], 'display_shape'):
        group_input_010_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[9], 'enabled'):
        group_input_010_1.outputs[9].enabled = True
    if hasattr(group_input_010_1.outputs[9], 'hide'):
        group_input_010_1.outputs[9].hide = True
    if hasattr(group_input_010_1.outputs[9], 'hide_value'):
        group_input_010_1.outputs[9].hide_value = False
    if hasattr(group_input_010_1.outputs[9], 'name'):
        group_input_010_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_010_1.outputs[9], 'show_expanded'):
        group_input_010_1.outputs[9].show_expanded = False
    if hasattr(group_input_010_1.outputs[10], 'default_value'):
        group_input_010_1.outputs[10].default_value = 0.0
    if hasattr(group_input_010_1.outputs[10], 'display_shape'):
        group_input_010_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[10], 'enabled'):
        group_input_010_1.outputs[10].enabled = True
    if hasattr(group_input_010_1.outputs[10], 'hide'):
        group_input_010_1.outputs[10].hide = True
    if hasattr(group_input_010_1.outputs[10], 'hide_value'):
        group_input_010_1.outputs[10].hide_value = False
    if hasattr(group_input_010_1.outputs[10], 'name'):
        group_input_010_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_010_1.outputs[10], 'show_expanded'):
        group_input_010_1.outputs[10].show_expanded = False
    if hasattr(group_input_010_1.outputs[11], 'default_value'):
        group_input_010_1.outputs[11].default_value = 0.0
    if hasattr(group_input_010_1.outputs[11], 'display_shape'):
        group_input_010_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[11], 'enabled'):
        group_input_010_1.outputs[11].enabled = True
    if hasattr(group_input_010_1.outputs[11], 'hide'):
        group_input_010_1.outputs[11].hide = True
    if hasattr(group_input_010_1.outputs[11], 'hide_value'):
        group_input_010_1.outputs[11].hide_value = False
    if hasattr(group_input_010_1.outputs[11], 'name'):
        group_input_010_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_010_1.outputs[11], 'show_expanded'):
        group_input_010_1.outputs[11].show_expanded = False
    if hasattr(group_input_010_1.outputs[12], 'default_value'):
        group_input_010_1.outputs[12].default_value = 0.0
    if hasattr(group_input_010_1.outputs[12], 'display_shape'):
        group_input_010_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[12], 'enabled'):
        group_input_010_1.outputs[12].enabled = True
    if hasattr(group_input_010_1.outputs[12], 'hide'):
        group_input_010_1.outputs[12].hide = True
    if hasattr(group_input_010_1.outputs[12], 'hide_value'):
        group_input_010_1.outputs[12].hide_value = False
    if hasattr(group_input_010_1.outputs[12], 'name'):
        group_input_010_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_010_1.outputs[12], 'show_expanded'):
        group_input_010_1.outputs[12].show_expanded = False
    if hasattr(group_input_010_1.outputs[13], 'default_value'):
        group_input_010_1.outputs[13].default_value = 0.0
    if hasattr(group_input_010_1.outputs[13], 'display_shape'):
        group_input_010_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[13], 'enabled'):
        group_input_010_1.outputs[13].enabled = True
    if hasattr(group_input_010_1.outputs[13], 'hide'):
        group_input_010_1.outputs[13].hide = True
    if hasattr(group_input_010_1.outputs[13], 'hide_value'):
        group_input_010_1.outputs[13].hide_value = False
    if hasattr(group_input_010_1.outputs[13], 'name'):
        group_input_010_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_010_1.outputs[13], 'show_expanded'):
        group_input_010_1.outputs[13].show_expanded = False
    if hasattr(group_input_010_1.outputs[14], 'default_value'):
        group_input_010_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_010_1.outputs[14], 'display_shape'):
        group_input_010_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[14], 'enabled'):
        group_input_010_1.outputs[14].enabled = True
    if hasattr(group_input_010_1.outputs[14], 'hide'):
        group_input_010_1.outputs[14].hide = True
    if hasattr(group_input_010_1.outputs[14], 'hide_value'):
        group_input_010_1.outputs[14].hide_value = False
    if hasattr(group_input_010_1.outputs[14], 'name'):
        group_input_010_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_010_1.outputs[14], 'show_expanded'):
        group_input_010_1.outputs[14].show_expanded = False
    if hasattr(group_input_010_1.outputs[15], 'default_value'):
        group_input_010_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_010_1.outputs[15], 'display_shape'):
        group_input_010_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[15], 'enabled'):
        group_input_010_1.outputs[15].enabled = True
    if hasattr(group_input_010_1.outputs[15], 'hide'):
        group_input_010_1.outputs[15].hide = True
    if hasattr(group_input_010_1.outputs[15], 'hide_value'):
        group_input_010_1.outputs[15].hide_value = False
    if hasattr(group_input_010_1.outputs[15], 'name'):
        group_input_010_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_010_1.outputs[15], 'show_expanded'):
        group_input_010_1.outputs[15].show_expanded = False
    if hasattr(group_input_010_1.outputs[16], 'default_value'):
        group_input_010_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_010_1.outputs[16], 'display_shape'):
        group_input_010_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[16], 'enabled'):
        group_input_010_1.outputs[16].enabled = True
    if hasattr(group_input_010_1.outputs[16], 'hide'):
        group_input_010_1.outputs[16].hide = True
    if hasattr(group_input_010_1.outputs[16], 'hide_value'):
        group_input_010_1.outputs[16].hide_value = False
    if hasattr(group_input_010_1.outputs[16], 'name'):
        group_input_010_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_010_1.outputs[16], 'show_expanded'):
        group_input_010_1.outputs[16].show_expanded = False
    if hasattr(group_input_010_1.outputs[17], 'default_value'):
        group_input_010_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_010_1.outputs[17], 'display_shape'):
        group_input_010_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[17], 'enabled'):
        group_input_010_1.outputs[17].enabled = True
    if hasattr(group_input_010_1.outputs[17], 'hide'):
        group_input_010_1.outputs[17].hide = True
    if hasattr(group_input_010_1.outputs[17], 'hide_value'):
        group_input_010_1.outputs[17].hide_value = False
    if hasattr(group_input_010_1.outputs[17], 'name'):
        group_input_010_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_010_1.outputs[17], 'show_expanded'):
        group_input_010_1.outputs[17].show_expanded = False
    if hasattr(group_input_010_1.outputs[18], 'default_value'):
        group_input_010_1.outputs[18].default_value = 0.0
    if hasattr(group_input_010_1.outputs[18], 'display_shape'):
        group_input_010_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[18], 'enabled'):
        group_input_010_1.outputs[18].enabled = True
    if hasattr(group_input_010_1.outputs[18], 'hide'):
        group_input_010_1.outputs[18].hide = True
    if hasattr(group_input_010_1.outputs[18], 'hide_value'):
        group_input_010_1.outputs[18].hide_value = False
    if hasattr(group_input_010_1.outputs[18], 'name'):
        group_input_010_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_010_1.outputs[18], 'show_expanded'):
        group_input_010_1.outputs[18].show_expanded = False
    if hasattr(group_input_010_1.outputs[19], 'default_value'):
        group_input_010_1.outputs[19].default_value = 0.0
    if hasattr(group_input_010_1.outputs[19], 'display_shape'):
        group_input_010_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[19], 'enabled'):
        group_input_010_1.outputs[19].enabled = True
    if hasattr(group_input_010_1.outputs[19], 'hide'):
        group_input_010_1.outputs[19].hide = True
    if hasattr(group_input_010_1.outputs[19], 'hide_value'):
        group_input_010_1.outputs[19].hide_value = False
    if hasattr(group_input_010_1.outputs[19], 'name'):
        group_input_010_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_010_1.outputs[19], 'show_expanded'):
        group_input_010_1.outputs[19].show_expanded = False
    if hasattr(group_input_010_1.outputs[20], 'default_value'):
        group_input_010_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[20], 'display_shape'):
        group_input_010_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[20], 'enabled'):
        group_input_010_1.outputs[20].enabled = True
    if hasattr(group_input_010_1.outputs[20], 'hide'):
        group_input_010_1.outputs[20].hide = True
    if hasattr(group_input_010_1.outputs[20], 'hide_value'):
        group_input_010_1.outputs[20].hide_value = False
    if hasattr(group_input_010_1.outputs[20], 'name'):
        group_input_010_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_010_1.outputs[20], 'show_expanded'):
        group_input_010_1.outputs[20].show_expanded = False
    if hasattr(group_input_010_1.outputs[21], 'default_value'):
        group_input_010_1.outputs[21].default_value = 0.0
    if hasattr(group_input_010_1.outputs[21], 'display_shape'):
        group_input_010_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[21], 'enabled'):
        group_input_010_1.outputs[21].enabled = True
    if hasattr(group_input_010_1.outputs[21], 'hide'):
        group_input_010_1.outputs[21].hide = True
    if hasattr(group_input_010_1.outputs[21], 'hide_value'):
        group_input_010_1.outputs[21].hide_value = False
    if hasattr(group_input_010_1.outputs[21], 'name'):
        group_input_010_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_010_1.outputs[21], 'show_expanded'):
        group_input_010_1.outputs[21].show_expanded = False
    if hasattr(group_input_010_1.outputs[22], 'default_value'):
        group_input_010_1.outputs[22].default_value = 0.0
    if hasattr(group_input_010_1.outputs[22], 'display_shape'):
        group_input_010_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[22], 'enabled'):
        group_input_010_1.outputs[22].enabled = True
    if hasattr(group_input_010_1.outputs[22], 'hide'):
        group_input_010_1.outputs[22].hide = True
    if hasattr(group_input_010_1.outputs[22], 'hide_value'):
        group_input_010_1.outputs[22].hide_value = False
    if hasattr(group_input_010_1.outputs[22], 'name'):
        group_input_010_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_010_1.outputs[22], 'show_expanded'):
        group_input_010_1.outputs[22].show_expanded = False
    if hasattr(group_input_010_1.outputs[23], 'default_value'):
        group_input_010_1.outputs[23].default_value = 0.0
    if hasattr(group_input_010_1.outputs[23], 'display_shape'):
        group_input_010_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[23], 'enabled'):
        group_input_010_1.outputs[23].enabled = True
    if hasattr(group_input_010_1.outputs[23], 'hide'):
        group_input_010_1.outputs[23].hide = True
    if hasattr(group_input_010_1.outputs[23], 'hide_value'):
        group_input_010_1.outputs[23].hide_value = False
    if hasattr(group_input_010_1.outputs[23], 'name'):
        group_input_010_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_010_1.outputs[23], 'show_expanded'):
        group_input_010_1.outputs[23].show_expanded = False
    if hasattr(group_input_010_1.outputs[24], 'default_value'):
        group_input_010_1.outputs[24].default_value = 0.0
    if hasattr(group_input_010_1.outputs[24], 'display_shape'):
        group_input_010_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[24], 'enabled'):
        group_input_010_1.outputs[24].enabled = True
    if hasattr(group_input_010_1.outputs[24], 'hide'):
        group_input_010_1.outputs[24].hide = True
    if hasattr(group_input_010_1.outputs[24], 'hide_value'):
        group_input_010_1.outputs[24].hide_value = False
    if hasattr(group_input_010_1.outputs[24], 'name'):
        group_input_010_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_010_1.outputs[24], 'show_expanded'):
        group_input_010_1.outputs[24].show_expanded = False
    if hasattr(group_input_010_1.outputs[25], 'default_value'):
        group_input_010_1.outputs[25].default_value = 0.0
    if hasattr(group_input_010_1.outputs[25], 'display_shape'):
        group_input_010_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[25], 'enabled'):
        group_input_010_1.outputs[25].enabled = True
    if hasattr(group_input_010_1.outputs[25], 'hide'):
        group_input_010_1.outputs[25].hide = True
    if hasattr(group_input_010_1.outputs[25], 'hide_value'):
        group_input_010_1.outputs[25].hide_value = False
    if hasattr(group_input_010_1.outputs[25], 'name'):
        group_input_010_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_010_1.outputs[25], 'show_expanded'):
        group_input_010_1.outputs[25].show_expanded = False
    if hasattr(group_input_010_1.outputs[26], 'default_value'):
        group_input_010_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_010_1.outputs[26], 'display_shape'):
        group_input_010_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[26], 'enabled'):
        group_input_010_1.outputs[26].enabled = True
    if hasattr(group_input_010_1.outputs[26], 'hide'):
        group_input_010_1.outputs[26].hide = True
    if hasattr(group_input_010_1.outputs[26], 'hide_value'):
        group_input_010_1.outputs[26].hide_value = False
    if hasattr(group_input_010_1.outputs[26], 'name'):
        group_input_010_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_010_1.outputs[26], 'show_expanded'):
        group_input_010_1.outputs[26].show_expanded = False
    if hasattr(group_input_010_1.outputs[27], 'default_value'):
        group_input_010_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_010_1.outputs[27], 'display_shape'):
        group_input_010_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[27], 'enabled'):
        group_input_010_1.outputs[27].enabled = True
    if hasattr(group_input_010_1.outputs[27], 'hide'):
        group_input_010_1.outputs[27].hide = True
    if hasattr(group_input_010_1.outputs[27], 'hide_value'):
        group_input_010_1.outputs[27].hide_value = False
    if hasattr(group_input_010_1.outputs[27], 'name'):
        group_input_010_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_010_1.outputs[27], 'show_expanded'):
        group_input_010_1.outputs[27].show_expanded = False
    if hasattr(group_input_010_1.outputs[28], 'default_value'):
        group_input_010_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_010_1.outputs[28], 'display_shape'):
        group_input_010_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[28], 'enabled'):
        group_input_010_1.outputs[28].enabled = True
    if hasattr(group_input_010_1.outputs[28], 'hide'):
        group_input_010_1.outputs[28].hide = True
    if hasattr(group_input_010_1.outputs[28], 'hide_value'):
        group_input_010_1.outputs[28].hide_value = False
    if hasattr(group_input_010_1.outputs[28], 'name'):
        group_input_010_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_010_1.outputs[28], 'show_expanded'):
        group_input_010_1.outputs[28].show_expanded = False
    if hasattr(group_input_010_1.outputs[29], 'default_value'):
        group_input_010_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_010_1.outputs[29], 'display_shape'):
        group_input_010_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[29], 'enabled'):
        group_input_010_1.outputs[29].enabled = True
    if hasattr(group_input_010_1.outputs[29], 'hide'):
        group_input_010_1.outputs[29].hide = True
    if hasattr(group_input_010_1.outputs[29], 'hide_value'):
        group_input_010_1.outputs[29].hide_value = False
    if hasattr(group_input_010_1.outputs[29], 'name'):
        group_input_010_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_010_1.outputs[29], 'show_expanded'):
        group_input_010_1.outputs[29].show_expanded = False
    if hasattr(group_input_010_1.outputs[30], 'default_value'):
        group_input_010_1.outputs[30].default_value = 0.0
    if hasattr(group_input_010_1.outputs[30], 'display_shape'):
        group_input_010_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[30], 'enabled'):
        group_input_010_1.outputs[30].enabled = True
    if hasattr(group_input_010_1.outputs[30], 'hide'):
        group_input_010_1.outputs[30].hide = True
    if hasattr(group_input_010_1.outputs[30], 'hide_value'):
        group_input_010_1.outputs[30].hide_value = False
    if hasattr(group_input_010_1.outputs[30], 'name'):
        group_input_010_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_010_1.outputs[30], 'show_expanded'):
        group_input_010_1.outputs[30].show_expanded = False
    if hasattr(group_input_010_1.outputs[31], 'default_value'):
        group_input_010_1.outputs[31].default_value = 0.0
    if hasattr(group_input_010_1.outputs[31], 'display_shape'):
        group_input_010_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[31], 'enabled'):
        group_input_010_1.outputs[31].enabled = True
    if hasattr(group_input_010_1.outputs[31], 'hide'):
        group_input_010_1.outputs[31].hide = True
    if hasattr(group_input_010_1.outputs[31], 'hide_value'):
        group_input_010_1.outputs[31].hide_value = False
    if hasattr(group_input_010_1.outputs[31], 'name'):
        group_input_010_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_010_1.outputs[31], 'show_expanded'):
        group_input_010_1.outputs[31].show_expanded = False
    if hasattr(group_input_010_1.outputs[32], 'default_value'):
        group_input_010_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[32], 'display_shape'):
        group_input_010_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[32], 'enabled'):
        group_input_010_1.outputs[32].enabled = True
    if hasattr(group_input_010_1.outputs[32], 'hide'):
        group_input_010_1.outputs[32].hide = True
    if hasattr(group_input_010_1.outputs[32], 'hide_value'):
        group_input_010_1.outputs[32].hide_value = False
    if hasattr(group_input_010_1.outputs[32], 'name'):
        group_input_010_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_010_1.outputs[32], 'show_expanded'):
        group_input_010_1.outputs[32].show_expanded = False
    if hasattr(group_input_010_1.outputs[33], 'default_value'):
        group_input_010_1.outputs[33].default_value = 0.0
    if hasattr(group_input_010_1.outputs[33], 'display_shape'):
        group_input_010_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[33], 'enabled'):
        group_input_010_1.outputs[33].enabled = True
    if hasattr(group_input_010_1.outputs[33], 'hide'):
        group_input_010_1.outputs[33].hide = True
    if hasattr(group_input_010_1.outputs[33], 'hide_value'):
        group_input_010_1.outputs[33].hide_value = False
    if hasattr(group_input_010_1.outputs[33], 'name'):
        group_input_010_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_010_1.outputs[33], 'show_expanded'):
        group_input_010_1.outputs[33].show_expanded = False
    if hasattr(group_input_010_1.outputs[34], 'default_value'):
        group_input_010_1.outputs[34].default_value = 0.0
    if hasattr(group_input_010_1.outputs[34], 'display_shape'):
        group_input_010_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[34], 'enabled'):
        group_input_010_1.outputs[34].enabled = True
    if hasattr(group_input_010_1.outputs[34], 'hide'):
        group_input_010_1.outputs[34].hide = True
    if hasattr(group_input_010_1.outputs[34], 'hide_value'):
        group_input_010_1.outputs[34].hide_value = False
    if hasattr(group_input_010_1.outputs[34], 'name'):
        group_input_010_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_010_1.outputs[34], 'show_expanded'):
        group_input_010_1.outputs[34].show_expanded = False
    if hasattr(group_input_010_1.outputs[35], 'default_value'):
        group_input_010_1.outputs[35].default_value = 0.0
    if hasattr(group_input_010_1.outputs[35], 'display_shape'):
        group_input_010_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[35], 'enabled'):
        group_input_010_1.outputs[35].enabled = True
    if hasattr(group_input_010_1.outputs[35], 'hide'):
        group_input_010_1.outputs[35].hide = True
    if hasattr(group_input_010_1.outputs[35], 'hide_value'):
        group_input_010_1.outputs[35].hide_value = False
    if hasattr(group_input_010_1.outputs[35], 'name'):
        group_input_010_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_010_1.outputs[35], 'show_expanded'):
        group_input_010_1.outputs[35].show_expanded = False
    if hasattr(group_input_010_1.outputs[36], 'default_value'):
        group_input_010_1.outputs[36].default_value = 0.0
    if hasattr(group_input_010_1.outputs[36], 'display_shape'):
        group_input_010_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[36], 'enabled'):
        group_input_010_1.outputs[36].enabled = True
    if hasattr(group_input_010_1.outputs[36], 'hide'):
        group_input_010_1.outputs[36].hide = True
    if hasattr(group_input_010_1.outputs[36], 'hide_value'):
        group_input_010_1.outputs[36].hide_value = False
    if hasattr(group_input_010_1.outputs[36], 'name'):
        group_input_010_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_010_1.outputs[36], 'show_expanded'):
        group_input_010_1.outputs[36].show_expanded = False
    if hasattr(group_input_010_1.outputs[37], 'default_value'):
        group_input_010_1.outputs[37].default_value = 0.0
    if hasattr(group_input_010_1.outputs[37], 'display_shape'):
        group_input_010_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[37], 'enabled'):
        group_input_010_1.outputs[37].enabled = True
    if hasattr(group_input_010_1.outputs[37], 'hide'):
        group_input_010_1.outputs[37].hide = True
    if hasattr(group_input_010_1.outputs[37], 'hide_value'):
        group_input_010_1.outputs[37].hide_value = False
    if hasattr(group_input_010_1.outputs[37], 'name'):
        group_input_010_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_010_1.outputs[37], 'show_expanded'):
        group_input_010_1.outputs[37].show_expanded = False
    if hasattr(group_input_010_1.outputs[38], 'default_value'):
        group_input_010_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_010_1.outputs[38], 'display_shape'):
        group_input_010_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[38], 'enabled'):
        group_input_010_1.outputs[38].enabled = True
    if hasattr(group_input_010_1.outputs[38], 'hide'):
        group_input_010_1.outputs[38].hide = True
    if hasattr(group_input_010_1.outputs[38], 'hide_value'):
        group_input_010_1.outputs[38].hide_value = False
    if hasattr(group_input_010_1.outputs[38], 'name'):
        group_input_010_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_010_1.outputs[38], 'show_expanded'):
        group_input_010_1.outputs[38].show_expanded = False
    if hasattr(group_input_010_1.outputs[39], 'default_value'):
        group_input_010_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_010_1.outputs[39], 'display_shape'):
        group_input_010_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[39], 'enabled'):
        group_input_010_1.outputs[39].enabled = True
    if hasattr(group_input_010_1.outputs[39], 'hide'):
        group_input_010_1.outputs[39].hide = True
    if hasattr(group_input_010_1.outputs[39], 'hide_value'):
        group_input_010_1.outputs[39].hide_value = False
    if hasattr(group_input_010_1.outputs[39], 'name'):
        group_input_010_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_010_1.outputs[39], 'show_expanded'):
        group_input_010_1.outputs[39].show_expanded = False
    if hasattr(group_input_010_1.outputs[40], 'default_value'):
        group_input_010_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_010_1.outputs[40], 'display_shape'):
        group_input_010_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[40], 'enabled'):
        group_input_010_1.outputs[40].enabled = True
    if hasattr(group_input_010_1.outputs[40], 'hide'):
        group_input_010_1.outputs[40].hide = True
    if hasattr(group_input_010_1.outputs[40], 'hide_value'):
        group_input_010_1.outputs[40].hide_value = False
    if hasattr(group_input_010_1.outputs[40], 'name'):
        group_input_010_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_010_1.outputs[40], 'show_expanded'):
        group_input_010_1.outputs[40].show_expanded = False
    if hasattr(group_input_010_1.outputs[41], 'default_value'):
        group_input_010_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_010_1.outputs[41], 'display_shape'):
        group_input_010_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[41], 'enabled'):
        group_input_010_1.outputs[41].enabled = True
    if hasattr(group_input_010_1.outputs[41], 'hide'):
        group_input_010_1.outputs[41].hide = True
    if hasattr(group_input_010_1.outputs[41], 'hide_value'):
        group_input_010_1.outputs[41].hide_value = False
    if hasattr(group_input_010_1.outputs[41], 'name'):
        group_input_010_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_010_1.outputs[41], 'show_expanded'):
        group_input_010_1.outputs[41].show_expanded = False
    if hasattr(group_input_010_1.outputs[42], 'default_value'):
        group_input_010_1.outputs[42].default_value = 0.0
    if hasattr(group_input_010_1.outputs[42], 'display_shape'):
        group_input_010_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[42], 'enabled'):
        group_input_010_1.outputs[42].enabled = True
    if hasattr(group_input_010_1.outputs[42], 'hide'):
        group_input_010_1.outputs[42].hide = False
    if hasattr(group_input_010_1.outputs[42], 'hide_value'):
        group_input_010_1.outputs[42].hide_value = False
    if hasattr(group_input_010_1.outputs[42], 'name'):
        group_input_010_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_010_1.outputs[42], 'show_expanded'):
        group_input_010_1.outputs[42].show_expanded = False
    if hasattr(group_input_010_1.outputs[43], 'default_value'):
        group_input_010_1.outputs[43].default_value = 0.0
    if hasattr(group_input_010_1.outputs[43], 'display_shape'):
        group_input_010_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[43], 'enabled'):
        group_input_010_1.outputs[43].enabled = True
    if hasattr(group_input_010_1.outputs[43], 'hide'):
        group_input_010_1.outputs[43].hide = True
    if hasattr(group_input_010_1.outputs[43], 'hide_value'):
        group_input_010_1.outputs[43].hide_value = False
    if hasattr(group_input_010_1.outputs[43], 'name'):
        group_input_010_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_010_1.outputs[43], 'show_expanded'):
        group_input_010_1.outputs[43].show_expanded = False
    if hasattr(group_input_010_1.outputs[44], 'default_value'):
        group_input_010_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[44], 'display_shape'):
        group_input_010_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[44], 'enabled'):
        group_input_010_1.outputs[44].enabled = True
    if hasattr(group_input_010_1.outputs[44], 'hide'):
        group_input_010_1.outputs[44].hide = True
    if hasattr(group_input_010_1.outputs[44], 'hide_value'):
        group_input_010_1.outputs[44].hide_value = False
    if hasattr(group_input_010_1.outputs[44], 'name'):
        group_input_010_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_010_1.outputs[44], 'show_expanded'):
        group_input_010_1.outputs[44].show_expanded = False
    if hasattr(group_input_010_1.outputs[45], 'default_value'):
        group_input_010_1.outputs[45].default_value = 0.0
    if hasattr(group_input_010_1.outputs[45], 'display_shape'):
        group_input_010_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[45], 'enabled'):
        group_input_010_1.outputs[45].enabled = True
    if hasattr(group_input_010_1.outputs[45], 'hide'):
        group_input_010_1.outputs[45].hide = True
    if hasattr(group_input_010_1.outputs[45], 'hide_value'):
        group_input_010_1.outputs[45].hide_value = False
    if hasattr(group_input_010_1.outputs[45], 'name'):
        group_input_010_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_010_1.outputs[45], 'show_expanded'):
        group_input_010_1.outputs[45].show_expanded = False
    if hasattr(group_input_010_1.outputs[46], 'default_value'):
        group_input_010_1.outputs[46].default_value = 0.0
    if hasattr(group_input_010_1.outputs[46], 'display_shape'):
        group_input_010_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[46], 'enabled'):
        group_input_010_1.outputs[46].enabled = True
    if hasattr(group_input_010_1.outputs[46], 'hide'):
        group_input_010_1.outputs[46].hide = True
    if hasattr(group_input_010_1.outputs[46], 'hide_value'):
        group_input_010_1.outputs[46].hide_value = False
    if hasattr(group_input_010_1.outputs[46], 'name'):
        group_input_010_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_010_1.outputs[46], 'show_expanded'):
        group_input_010_1.outputs[46].show_expanded = False
    if hasattr(group_input_010_1.outputs[47], 'default_value'):
        group_input_010_1.outputs[47].default_value = 0.0
    if hasattr(group_input_010_1.outputs[47], 'display_shape'):
        group_input_010_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[47], 'enabled'):
        group_input_010_1.outputs[47].enabled = True
    if hasattr(group_input_010_1.outputs[47], 'hide'):
        group_input_010_1.outputs[47].hide = True
    if hasattr(group_input_010_1.outputs[47], 'hide_value'):
        group_input_010_1.outputs[47].hide_value = False
    if hasattr(group_input_010_1.outputs[47], 'name'):
        group_input_010_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_010_1.outputs[47], 'show_expanded'):
        group_input_010_1.outputs[47].show_expanded = False
    if hasattr(group_input_010_1.outputs[48], 'default_value'):
        group_input_010_1.outputs[48].default_value = 0.0
    if hasattr(group_input_010_1.outputs[48], 'display_shape'):
        group_input_010_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[48], 'enabled'):
        group_input_010_1.outputs[48].enabled = True
    if hasattr(group_input_010_1.outputs[48], 'hide'):
        group_input_010_1.outputs[48].hide = True
    if hasattr(group_input_010_1.outputs[48], 'hide_value'):
        group_input_010_1.outputs[48].hide_value = False
    if hasattr(group_input_010_1.outputs[48], 'name'):
        group_input_010_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_010_1.outputs[48], 'show_expanded'):
        group_input_010_1.outputs[48].show_expanded = False
    if hasattr(group_input_010_1.outputs[49], 'default_value'):
        group_input_010_1.outputs[49].default_value = 0.0
    if hasattr(group_input_010_1.outputs[49], 'display_shape'):
        group_input_010_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[49], 'enabled'):
        group_input_010_1.outputs[49].enabled = True
    if hasattr(group_input_010_1.outputs[49], 'hide'):
        group_input_010_1.outputs[49].hide = True
    if hasattr(group_input_010_1.outputs[49], 'hide_value'):
        group_input_010_1.outputs[49].hide_value = False
    if hasattr(group_input_010_1.outputs[49], 'name'):
        group_input_010_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_010_1.outputs[49], 'show_expanded'):
        group_input_010_1.outputs[49].show_expanded = False
    if hasattr(group_input_010_1.outputs[50], 'default_value'):
        group_input_010_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_010_1.outputs[50], 'display_shape'):
        group_input_010_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[50], 'enabled'):
        group_input_010_1.outputs[50].enabled = True
    if hasattr(group_input_010_1.outputs[50], 'hide'):
        group_input_010_1.outputs[50].hide = False
    if hasattr(group_input_010_1.outputs[50], 'hide_value'):
        group_input_010_1.outputs[50].hide_value = False
    if hasattr(group_input_010_1.outputs[50], 'name'):
        group_input_010_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_010_1.outputs[50], 'show_expanded'):
        group_input_010_1.outputs[50].show_expanded = False
    if hasattr(group_input_010_1.outputs[51], 'default_value'):
        group_input_010_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_010_1.outputs[51], 'display_shape'):
        group_input_010_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[51], 'enabled'):
        group_input_010_1.outputs[51].enabled = True
    if hasattr(group_input_010_1.outputs[51], 'hide'):
        group_input_010_1.outputs[51].hide = False
    if hasattr(group_input_010_1.outputs[51], 'hide_value'):
        group_input_010_1.outputs[51].hide_value = False
    if hasattr(group_input_010_1.outputs[51], 'name'):
        group_input_010_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_010_1.outputs[51], 'show_expanded'):
        group_input_010_1.outputs[51].show_expanded = False
    if hasattr(group_input_010_1.outputs[52], 'default_value'):
        group_input_010_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_010_1.outputs[52], 'display_shape'):
        group_input_010_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[52], 'enabled'):
        group_input_010_1.outputs[52].enabled = True
    if hasattr(group_input_010_1.outputs[52], 'hide'):
        group_input_010_1.outputs[52].hide = False
    if hasattr(group_input_010_1.outputs[52], 'hide_value'):
        group_input_010_1.outputs[52].hide_value = False
    if hasattr(group_input_010_1.outputs[52], 'name'):
        group_input_010_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_010_1.outputs[52], 'show_expanded'):
        group_input_010_1.outputs[52].show_expanded = False
    if hasattr(group_input_010_1.outputs[53], 'default_value'):
        group_input_010_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_010_1.outputs[53], 'display_shape'):
        group_input_010_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[53], 'enabled'):
        group_input_010_1.outputs[53].enabled = True
    if hasattr(group_input_010_1.outputs[53], 'hide'):
        group_input_010_1.outputs[53].hide = True
    if hasattr(group_input_010_1.outputs[53], 'hide_value'):
        group_input_010_1.outputs[53].hide_value = False
    if hasattr(group_input_010_1.outputs[53], 'name'):
        group_input_010_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_010_1.outputs[53], 'show_expanded'):
        group_input_010_1.outputs[53].show_expanded = False
    if hasattr(group_input_010_1.outputs[54], 'default_value'):
        group_input_010_1.outputs[54].default_value = 0.0
    if hasattr(group_input_010_1.outputs[54], 'display_shape'):
        group_input_010_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[54], 'enabled'):
        group_input_010_1.outputs[54].enabled = True
    if hasattr(group_input_010_1.outputs[54], 'hide'):
        group_input_010_1.outputs[54].hide = True
    if hasattr(group_input_010_1.outputs[54], 'hide_value'):
        group_input_010_1.outputs[54].hide_value = False
    if hasattr(group_input_010_1.outputs[54], 'name'):
        group_input_010_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_010_1.outputs[54], 'show_expanded'):
        group_input_010_1.outputs[54].show_expanded = False
    if hasattr(group_input_010_1.outputs[55], 'default_value'):
        group_input_010_1.outputs[55].default_value = 0.0
    if hasattr(group_input_010_1.outputs[55], 'display_shape'):
        group_input_010_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[55], 'enabled'):
        group_input_010_1.outputs[55].enabled = True
    if hasattr(group_input_010_1.outputs[55], 'hide'):
        group_input_010_1.outputs[55].hide = True
    if hasattr(group_input_010_1.outputs[55], 'hide_value'):
        group_input_010_1.outputs[55].hide_value = False
    if hasattr(group_input_010_1.outputs[55], 'name'):
        group_input_010_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_010_1.outputs[55], 'show_expanded'):
        group_input_010_1.outputs[55].show_expanded = False
    if hasattr(group_input_010_1.outputs[56], 'default_value'):
        group_input_010_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[56], 'display_shape'):
        group_input_010_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[56], 'enabled'):
        group_input_010_1.outputs[56].enabled = True
    if hasattr(group_input_010_1.outputs[56], 'hide'):
        group_input_010_1.outputs[56].hide = True
    if hasattr(group_input_010_1.outputs[56], 'hide_value'):
        group_input_010_1.outputs[56].hide_value = False
    if hasattr(group_input_010_1.outputs[56], 'name'):
        group_input_010_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_010_1.outputs[56], 'show_expanded'):
        group_input_010_1.outputs[56].show_expanded = False
    if hasattr(group_input_010_1.outputs[57], 'default_value'):
        group_input_010_1.outputs[57].default_value = 0.0
    if hasattr(group_input_010_1.outputs[57], 'display_shape'):
        group_input_010_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[57], 'enabled'):
        group_input_010_1.outputs[57].enabled = True
    if hasattr(group_input_010_1.outputs[57], 'hide'):
        group_input_010_1.outputs[57].hide = True
    if hasattr(group_input_010_1.outputs[57], 'hide_value'):
        group_input_010_1.outputs[57].hide_value = False
    if hasattr(group_input_010_1.outputs[57], 'name'):
        group_input_010_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_010_1.outputs[57], 'show_expanded'):
        group_input_010_1.outputs[57].show_expanded = False
    if hasattr(group_input_010_1.outputs[58], 'default_value'):
        group_input_010_1.outputs[58].default_value = 0.0
    if hasattr(group_input_010_1.outputs[58], 'display_shape'):
        group_input_010_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[58], 'enabled'):
        group_input_010_1.outputs[58].enabled = True
    if hasattr(group_input_010_1.outputs[58], 'hide'):
        group_input_010_1.outputs[58].hide = True
    if hasattr(group_input_010_1.outputs[58], 'hide_value'):
        group_input_010_1.outputs[58].hide_value = False
    if hasattr(group_input_010_1.outputs[58], 'name'):
        group_input_010_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_010_1.outputs[58], 'show_expanded'):
        group_input_010_1.outputs[58].show_expanded = False
    if hasattr(group_input_010_1.outputs[59], 'default_value'):
        group_input_010_1.outputs[59].default_value = 0.0
    if hasattr(group_input_010_1.outputs[59], 'display_shape'):
        group_input_010_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[59], 'enabled'):
        group_input_010_1.outputs[59].enabled = True
    if hasattr(group_input_010_1.outputs[59], 'hide'):
        group_input_010_1.outputs[59].hide = True
    if hasattr(group_input_010_1.outputs[59], 'hide_value'):
        group_input_010_1.outputs[59].hide_value = False
    if hasattr(group_input_010_1.outputs[59], 'name'):
        group_input_010_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_010_1.outputs[59], 'show_expanded'):
        group_input_010_1.outputs[59].show_expanded = False
    if hasattr(group_input_010_1.outputs[60], 'default_value'):
        group_input_010_1.outputs[60].default_value = 0.0
    if hasattr(group_input_010_1.outputs[60], 'display_shape'):
        group_input_010_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[60], 'enabled'):
        group_input_010_1.outputs[60].enabled = True
    if hasattr(group_input_010_1.outputs[60], 'hide'):
        group_input_010_1.outputs[60].hide = True
    if hasattr(group_input_010_1.outputs[60], 'hide_value'):
        group_input_010_1.outputs[60].hide_value = False
    if hasattr(group_input_010_1.outputs[60], 'name'):
        group_input_010_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_010_1.outputs[60], 'show_expanded'):
        group_input_010_1.outputs[60].show_expanded = False
    if hasattr(group_input_010_1.outputs[61], 'default_value'):
        group_input_010_1.outputs[61].default_value = 0.0
    if hasattr(group_input_010_1.outputs[61], 'display_shape'):
        group_input_010_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[61], 'enabled'):
        group_input_010_1.outputs[61].enabled = True
    if hasattr(group_input_010_1.outputs[61], 'hide'):
        group_input_010_1.outputs[61].hide = True
    if hasattr(group_input_010_1.outputs[61], 'hide_value'):
        group_input_010_1.outputs[61].hide_value = False
    if hasattr(group_input_010_1.outputs[61], 'name'):
        group_input_010_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_010_1.outputs[61], 'show_expanded'):
        group_input_010_1.outputs[61].show_expanded = False
    if hasattr(group_input_010_1.outputs[62], 'default_value'):
        group_input_010_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_010_1.outputs[62], 'display_shape'):
        group_input_010_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[62], 'enabled'):
        group_input_010_1.outputs[62].enabled = True
    if hasattr(group_input_010_1.outputs[62], 'hide'):
        group_input_010_1.outputs[62].hide = True
    if hasattr(group_input_010_1.outputs[62], 'hide_value'):
        group_input_010_1.outputs[62].hide_value = False
    if hasattr(group_input_010_1.outputs[62], 'name'):
        group_input_010_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_010_1.outputs[62], 'show_expanded'):
        group_input_010_1.outputs[62].show_expanded = False
    if hasattr(group_input_010_1.outputs[63], 'default_value'):
        group_input_010_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_010_1.outputs[63], 'display_shape'):
        group_input_010_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[63], 'enabled'):
        group_input_010_1.outputs[63].enabled = True
    if hasattr(group_input_010_1.outputs[63], 'hide'):
        group_input_010_1.outputs[63].hide = True
    if hasattr(group_input_010_1.outputs[63], 'hide_value'):
        group_input_010_1.outputs[63].hide_value = False
    if hasattr(group_input_010_1.outputs[63], 'name'):
        group_input_010_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_010_1.outputs[63], 'show_expanded'):
        group_input_010_1.outputs[63].show_expanded = False
    if hasattr(group_input_010_1.outputs[64], 'default_value'):
        group_input_010_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_010_1.outputs[64], 'display_shape'):
        group_input_010_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[64], 'enabled'):
        group_input_010_1.outputs[64].enabled = True
    if hasattr(group_input_010_1.outputs[64], 'hide'):
        group_input_010_1.outputs[64].hide = True
    if hasattr(group_input_010_1.outputs[64], 'hide_value'):
        group_input_010_1.outputs[64].hide_value = False
    if hasattr(group_input_010_1.outputs[64], 'name'):
        group_input_010_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_010_1.outputs[64], 'show_expanded'):
        group_input_010_1.outputs[64].show_expanded = False
    if hasattr(group_input_010_1.outputs[65], 'default_value'):
        group_input_010_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_010_1.outputs[65], 'display_shape'):
        group_input_010_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[65], 'enabled'):
        group_input_010_1.outputs[65].enabled = True
    if hasattr(group_input_010_1.outputs[65], 'hide'):
        group_input_010_1.outputs[65].hide = True
    if hasattr(group_input_010_1.outputs[65], 'hide_value'):
        group_input_010_1.outputs[65].hide_value = False
    if hasattr(group_input_010_1.outputs[65], 'name'):
        group_input_010_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_010_1.outputs[65], 'show_expanded'):
        group_input_010_1.outputs[65].show_expanded = False
    if hasattr(group_input_010_1.outputs[66], 'default_value'):
        group_input_010_1.outputs[66].default_value = 0.0
    if hasattr(group_input_010_1.outputs[66], 'display_shape'):
        group_input_010_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[66], 'enabled'):
        group_input_010_1.outputs[66].enabled = True
    if hasattr(group_input_010_1.outputs[66], 'hide'):
        group_input_010_1.outputs[66].hide = True
    if hasattr(group_input_010_1.outputs[66], 'hide_value'):
        group_input_010_1.outputs[66].hide_value = False
    if hasattr(group_input_010_1.outputs[66], 'name'):
        group_input_010_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_010_1.outputs[66], 'show_expanded'):
        group_input_010_1.outputs[66].show_expanded = False
    if hasattr(group_input_010_1.outputs[67], 'default_value'):
        group_input_010_1.outputs[67].default_value = 0.0
    if hasattr(group_input_010_1.outputs[67], 'display_shape'):
        group_input_010_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[67], 'enabled'):
        group_input_010_1.outputs[67].enabled = True
    if hasattr(group_input_010_1.outputs[67], 'hide'):
        group_input_010_1.outputs[67].hide = True
    if hasattr(group_input_010_1.outputs[67], 'hide_value'):
        group_input_010_1.outputs[67].hide_value = False
    if hasattr(group_input_010_1.outputs[67], 'name'):
        group_input_010_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_010_1.outputs[67], 'show_expanded'):
        group_input_010_1.outputs[67].show_expanded = False
    if hasattr(group_input_010_1.outputs[68], 'default_value'):
        group_input_010_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[68], 'display_shape'):
        group_input_010_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[68], 'enabled'):
        group_input_010_1.outputs[68].enabled = True
    if hasattr(group_input_010_1.outputs[68], 'hide'):
        group_input_010_1.outputs[68].hide = True
    if hasattr(group_input_010_1.outputs[68], 'hide_value'):
        group_input_010_1.outputs[68].hide_value = False
    if hasattr(group_input_010_1.outputs[68], 'name'):
        group_input_010_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_010_1.outputs[68], 'show_expanded'):
        group_input_010_1.outputs[68].show_expanded = False
    if hasattr(group_input_010_1.outputs[69], 'default_value'):
        group_input_010_1.outputs[69].default_value = 0.0
    if hasattr(group_input_010_1.outputs[69], 'display_shape'):
        group_input_010_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[69], 'enabled'):
        group_input_010_1.outputs[69].enabled = True
    if hasattr(group_input_010_1.outputs[69], 'hide'):
        group_input_010_1.outputs[69].hide = True
    if hasattr(group_input_010_1.outputs[69], 'hide_value'):
        group_input_010_1.outputs[69].hide_value = False
    if hasattr(group_input_010_1.outputs[69], 'name'):
        group_input_010_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_010_1.outputs[69], 'show_expanded'):
        group_input_010_1.outputs[69].show_expanded = False
    if hasattr(group_input_010_1.outputs[70], 'default_value'):
        group_input_010_1.outputs[70].default_value = 0.0
    if hasattr(group_input_010_1.outputs[70], 'display_shape'):
        group_input_010_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[70], 'enabled'):
        group_input_010_1.outputs[70].enabled = True
    if hasattr(group_input_010_1.outputs[70], 'hide'):
        group_input_010_1.outputs[70].hide = True
    if hasattr(group_input_010_1.outputs[70], 'hide_value'):
        group_input_010_1.outputs[70].hide_value = False
    if hasattr(group_input_010_1.outputs[70], 'name'):
        group_input_010_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_010_1.outputs[70], 'show_expanded'):
        group_input_010_1.outputs[70].show_expanded = False
    if hasattr(group_input_010_1.outputs[71], 'default_value'):
        group_input_010_1.outputs[71].default_value = 0.0
    if hasattr(group_input_010_1.outputs[71], 'display_shape'):
        group_input_010_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[71], 'enabled'):
        group_input_010_1.outputs[71].enabled = True
    if hasattr(group_input_010_1.outputs[71], 'hide'):
        group_input_010_1.outputs[71].hide = True
    if hasattr(group_input_010_1.outputs[71], 'hide_value'):
        group_input_010_1.outputs[71].hide_value = False
    if hasattr(group_input_010_1.outputs[71], 'name'):
        group_input_010_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_010_1.outputs[71], 'show_expanded'):
        group_input_010_1.outputs[71].show_expanded = False
    if hasattr(group_input_010_1.outputs[72], 'default_value'):
        group_input_010_1.outputs[72].default_value = 0.0
    if hasattr(group_input_010_1.outputs[72], 'display_shape'):
        group_input_010_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[72], 'enabled'):
        group_input_010_1.outputs[72].enabled = True
    if hasattr(group_input_010_1.outputs[72], 'hide'):
        group_input_010_1.outputs[72].hide = True
    if hasattr(group_input_010_1.outputs[72], 'hide_value'):
        group_input_010_1.outputs[72].hide_value = False
    if hasattr(group_input_010_1.outputs[72], 'name'):
        group_input_010_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_010_1.outputs[72], 'show_expanded'):
        group_input_010_1.outputs[72].show_expanded = False
    if hasattr(group_input_010_1.outputs[73], 'default_value'):
        group_input_010_1.outputs[73].default_value = 0.0
    if hasattr(group_input_010_1.outputs[73], 'display_shape'):
        group_input_010_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[73], 'enabled'):
        group_input_010_1.outputs[73].enabled = True
    if hasattr(group_input_010_1.outputs[73], 'hide'):
        group_input_010_1.outputs[73].hide = True
    if hasattr(group_input_010_1.outputs[73], 'hide_value'):
        group_input_010_1.outputs[73].hide_value = False
    if hasattr(group_input_010_1.outputs[73], 'name'):
        group_input_010_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_010_1.outputs[73], 'show_expanded'):
        group_input_010_1.outputs[73].show_expanded = False
    if hasattr(group_input_010_1.outputs[74], 'default_value'):
        group_input_010_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_010_1.outputs[74], 'display_shape'):
        group_input_010_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[74], 'enabled'):
        group_input_010_1.outputs[74].enabled = True
    if hasattr(group_input_010_1.outputs[74], 'hide'):
        group_input_010_1.outputs[74].hide = True
    if hasattr(group_input_010_1.outputs[74], 'hide_value'):
        group_input_010_1.outputs[74].hide_value = False
    if hasattr(group_input_010_1.outputs[74], 'name'):
        group_input_010_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_010_1.outputs[74], 'show_expanded'):
        group_input_010_1.outputs[74].show_expanded = False
    if hasattr(group_input_010_1.outputs[75], 'default_value'):
        group_input_010_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_010_1.outputs[75], 'display_shape'):
        group_input_010_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[75], 'enabled'):
        group_input_010_1.outputs[75].enabled = True
    if hasattr(group_input_010_1.outputs[75], 'hide'):
        group_input_010_1.outputs[75].hide = True
    if hasattr(group_input_010_1.outputs[75], 'hide_value'):
        group_input_010_1.outputs[75].hide_value = False
    if hasattr(group_input_010_1.outputs[75], 'name'):
        group_input_010_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_010_1.outputs[75], 'show_expanded'):
        group_input_010_1.outputs[75].show_expanded = False
    if hasattr(group_input_010_1.outputs[76], 'default_value'):
        group_input_010_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_010_1.outputs[76], 'display_shape'):
        group_input_010_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[76], 'enabled'):
        group_input_010_1.outputs[76].enabled = True
    if hasattr(group_input_010_1.outputs[76], 'hide'):
        group_input_010_1.outputs[76].hide = True
    if hasattr(group_input_010_1.outputs[76], 'hide_value'):
        group_input_010_1.outputs[76].hide_value = False
    if hasattr(group_input_010_1.outputs[76], 'name'):
        group_input_010_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_010_1.outputs[76], 'show_expanded'):
        group_input_010_1.outputs[76].show_expanded = False
    if hasattr(group_input_010_1.outputs[77], 'default_value'):
        group_input_010_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_010_1.outputs[77], 'display_shape'):
        group_input_010_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[77], 'enabled'):
        group_input_010_1.outputs[77].enabled = True
    if hasattr(group_input_010_1.outputs[77], 'hide'):
        group_input_010_1.outputs[77].hide = True
    if hasattr(group_input_010_1.outputs[77], 'hide_value'):
        group_input_010_1.outputs[77].hide_value = False
    if hasattr(group_input_010_1.outputs[77], 'name'):
        group_input_010_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_010_1.outputs[77], 'show_expanded'):
        group_input_010_1.outputs[77].show_expanded = False
    if hasattr(group_input_010_1.outputs[78], 'default_value'):
        group_input_010_1.outputs[78].default_value = 0.0
    if hasattr(group_input_010_1.outputs[78], 'display_shape'):
        group_input_010_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[78], 'enabled'):
        group_input_010_1.outputs[78].enabled = True
    if hasattr(group_input_010_1.outputs[78], 'hide'):
        group_input_010_1.outputs[78].hide = True
    if hasattr(group_input_010_1.outputs[78], 'hide_value'):
        group_input_010_1.outputs[78].hide_value = False
    if hasattr(group_input_010_1.outputs[78], 'name'):
        group_input_010_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_010_1.outputs[78], 'show_expanded'):
        group_input_010_1.outputs[78].show_expanded = False
    if hasattr(group_input_010_1.outputs[79], 'default_value'):
        group_input_010_1.outputs[79].default_value = 0.0
    if hasattr(group_input_010_1.outputs[79], 'display_shape'):
        group_input_010_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[79], 'enabled'):
        group_input_010_1.outputs[79].enabled = True
    if hasattr(group_input_010_1.outputs[79], 'hide'):
        group_input_010_1.outputs[79].hide = True
    if hasattr(group_input_010_1.outputs[79], 'hide_value'):
        group_input_010_1.outputs[79].hide_value = False
    if hasattr(group_input_010_1.outputs[79], 'name'):
        group_input_010_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_010_1.outputs[79], 'show_expanded'):
        group_input_010_1.outputs[79].show_expanded = False
    if hasattr(group_input_010_1.outputs[80], 'default_value'):
        group_input_010_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[80], 'display_shape'):
        group_input_010_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[80], 'enabled'):
        group_input_010_1.outputs[80].enabled = True
    if hasattr(group_input_010_1.outputs[80], 'hide'):
        group_input_010_1.outputs[80].hide = True
    if hasattr(group_input_010_1.outputs[80], 'hide_value'):
        group_input_010_1.outputs[80].hide_value = False
    if hasattr(group_input_010_1.outputs[80], 'name'):
        group_input_010_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_010_1.outputs[80], 'show_expanded'):
        group_input_010_1.outputs[80].show_expanded = False
    if hasattr(group_input_010_1.outputs[81], 'default_value'):
        group_input_010_1.outputs[81].default_value = 0.0
    if hasattr(group_input_010_1.outputs[81], 'display_shape'):
        group_input_010_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[81], 'enabled'):
        group_input_010_1.outputs[81].enabled = True
    if hasattr(group_input_010_1.outputs[81], 'hide'):
        group_input_010_1.outputs[81].hide = True
    if hasattr(group_input_010_1.outputs[81], 'hide_value'):
        group_input_010_1.outputs[81].hide_value = False
    if hasattr(group_input_010_1.outputs[81], 'name'):
        group_input_010_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_010_1.outputs[81], 'show_expanded'):
        group_input_010_1.outputs[81].show_expanded = False
    if hasattr(group_input_010_1.outputs[82], 'default_value'):
        group_input_010_1.outputs[82].default_value = 0.0
    if hasattr(group_input_010_1.outputs[82], 'display_shape'):
        group_input_010_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[82], 'enabled'):
        group_input_010_1.outputs[82].enabled = True
    if hasattr(group_input_010_1.outputs[82], 'hide'):
        group_input_010_1.outputs[82].hide = True
    if hasattr(group_input_010_1.outputs[82], 'hide_value'):
        group_input_010_1.outputs[82].hide_value = False
    if hasattr(group_input_010_1.outputs[82], 'name'):
        group_input_010_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_010_1.outputs[82], 'show_expanded'):
        group_input_010_1.outputs[82].show_expanded = False
    if hasattr(group_input_010_1.outputs[83], 'default_value'):
        group_input_010_1.outputs[83].default_value = 0.0
    if hasattr(group_input_010_1.outputs[83], 'display_shape'):
        group_input_010_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[83], 'enabled'):
        group_input_010_1.outputs[83].enabled = True
    if hasattr(group_input_010_1.outputs[83], 'hide'):
        group_input_010_1.outputs[83].hide = True
    if hasattr(group_input_010_1.outputs[83], 'hide_value'):
        group_input_010_1.outputs[83].hide_value = False
    if hasattr(group_input_010_1.outputs[83], 'name'):
        group_input_010_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_010_1.outputs[83], 'show_expanded'):
        group_input_010_1.outputs[83].show_expanded = False
    if hasattr(group_input_010_1.outputs[84], 'default_value'):
        group_input_010_1.outputs[84].default_value = 0.0
    if hasattr(group_input_010_1.outputs[84], 'display_shape'):
        group_input_010_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[84], 'enabled'):
        group_input_010_1.outputs[84].enabled = True
    if hasattr(group_input_010_1.outputs[84], 'hide'):
        group_input_010_1.outputs[84].hide = True
    if hasattr(group_input_010_1.outputs[84], 'hide_value'):
        group_input_010_1.outputs[84].hide_value = False
    if hasattr(group_input_010_1.outputs[84], 'name'):
        group_input_010_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_010_1.outputs[84], 'show_expanded'):
        group_input_010_1.outputs[84].show_expanded = False
    if hasattr(group_input_010_1.outputs[85], 'default_value'):
        group_input_010_1.outputs[85].default_value = 0.0
    if hasattr(group_input_010_1.outputs[85], 'display_shape'):
        group_input_010_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[85], 'enabled'):
        group_input_010_1.outputs[85].enabled = True
    if hasattr(group_input_010_1.outputs[85], 'hide'):
        group_input_010_1.outputs[85].hide = True
    if hasattr(group_input_010_1.outputs[85], 'hide_value'):
        group_input_010_1.outputs[85].hide_value = False
    if hasattr(group_input_010_1.outputs[85], 'name'):
        group_input_010_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_010_1.outputs[85], 'show_expanded'):
        group_input_010_1.outputs[85].show_expanded = False
    if hasattr(group_input_010_1.outputs[86], 'default_value'):
        group_input_010_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_010_1.outputs[86], 'display_shape'):
        group_input_010_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[86], 'enabled'):
        group_input_010_1.outputs[86].enabled = True
    if hasattr(group_input_010_1.outputs[86], 'hide'):
        group_input_010_1.outputs[86].hide = True
    if hasattr(group_input_010_1.outputs[86], 'hide_value'):
        group_input_010_1.outputs[86].hide_value = False
    if hasattr(group_input_010_1.outputs[86], 'name'):
        group_input_010_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_010_1.outputs[86], 'show_expanded'):
        group_input_010_1.outputs[86].show_expanded = False
    if hasattr(group_input_010_1.outputs[87], 'default_value'):
        group_input_010_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_010_1.outputs[87], 'display_shape'):
        group_input_010_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[87], 'enabled'):
        group_input_010_1.outputs[87].enabled = True
    if hasattr(group_input_010_1.outputs[87], 'hide'):
        group_input_010_1.outputs[87].hide = True
    if hasattr(group_input_010_1.outputs[87], 'hide_value'):
        group_input_010_1.outputs[87].hide_value = False
    if hasattr(group_input_010_1.outputs[87], 'name'):
        group_input_010_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_010_1.outputs[87], 'show_expanded'):
        group_input_010_1.outputs[87].show_expanded = False
    if hasattr(group_input_010_1.outputs[88], 'default_value'):
        group_input_010_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_010_1.outputs[88], 'display_shape'):
        group_input_010_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[88], 'enabled'):
        group_input_010_1.outputs[88].enabled = True
    if hasattr(group_input_010_1.outputs[88], 'hide'):
        group_input_010_1.outputs[88].hide = True
    if hasattr(group_input_010_1.outputs[88], 'hide_value'):
        group_input_010_1.outputs[88].hide_value = False
    if hasattr(group_input_010_1.outputs[88], 'name'):
        group_input_010_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_010_1.outputs[88], 'show_expanded'):
        group_input_010_1.outputs[88].show_expanded = False
    if hasattr(group_input_010_1.outputs[89], 'default_value'):
        group_input_010_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_010_1.outputs[89], 'display_shape'):
        group_input_010_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[89], 'enabled'):
        group_input_010_1.outputs[89].enabled = True
    if hasattr(group_input_010_1.outputs[89], 'hide'):
        group_input_010_1.outputs[89].hide = True
    if hasattr(group_input_010_1.outputs[89], 'hide_value'):
        group_input_010_1.outputs[89].hide_value = False
    if hasattr(group_input_010_1.outputs[89], 'name'):
        group_input_010_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_010_1.outputs[89], 'show_expanded'):
        group_input_010_1.outputs[89].show_expanded = False
    if hasattr(group_input_010_1.outputs[90], 'default_value'):
        group_input_010_1.outputs[90].default_value = 0.0
    if hasattr(group_input_010_1.outputs[90], 'display_shape'):
        group_input_010_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[90], 'enabled'):
        group_input_010_1.outputs[90].enabled = True
    if hasattr(group_input_010_1.outputs[90], 'hide'):
        group_input_010_1.outputs[90].hide = True
    if hasattr(group_input_010_1.outputs[90], 'hide_value'):
        group_input_010_1.outputs[90].hide_value = False
    if hasattr(group_input_010_1.outputs[90], 'name'):
        group_input_010_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_010_1.outputs[90], 'show_expanded'):
        group_input_010_1.outputs[90].show_expanded = False
    if hasattr(group_input_010_1.outputs[91], 'default_value'):
        group_input_010_1.outputs[91].default_value = 0.0
    if hasattr(group_input_010_1.outputs[91], 'display_shape'):
        group_input_010_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[91], 'enabled'):
        group_input_010_1.outputs[91].enabled = True
    if hasattr(group_input_010_1.outputs[91], 'hide'):
        group_input_010_1.outputs[91].hide = True
    if hasattr(group_input_010_1.outputs[91], 'hide_value'):
        group_input_010_1.outputs[91].hide_value = False
    if hasattr(group_input_010_1.outputs[91], 'name'):
        group_input_010_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_010_1.outputs[91], 'show_expanded'):
        group_input_010_1.outputs[91].show_expanded = False
    if hasattr(group_input_010_1.outputs[92], 'default_value'):
        group_input_010_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_010_1.outputs[92], 'display_shape'):
        group_input_010_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[92], 'enabled'):
        group_input_010_1.outputs[92].enabled = True
    if hasattr(group_input_010_1.outputs[92], 'hide'):
        group_input_010_1.outputs[92].hide = True
    if hasattr(group_input_010_1.outputs[92], 'hide_value'):
        group_input_010_1.outputs[92].hide_value = False
    if hasattr(group_input_010_1.outputs[92], 'name'):
        group_input_010_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_010_1.outputs[92], 'show_expanded'):
        group_input_010_1.outputs[92].show_expanded = False
    if hasattr(group_input_010_1.outputs[93], 'default_value'):
        group_input_010_1.outputs[93].default_value = 0.0
    if hasattr(group_input_010_1.outputs[93], 'display_shape'):
        group_input_010_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[93], 'enabled'):
        group_input_010_1.outputs[93].enabled = True
    if hasattr(group_input_010_1.outputs[93], 'hide'):
        group_input_010_1.outputs[93].hide = True
    if hasattr(group_input_010_1.outputs[93], 'hide_value'):
        group_input_010_1.outputs[93].hide_value = False
    if hasattr(group_input_010_1.outputs[93], 'name'):
        group_input_010_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_010_1.outputs[93], 'show_expanded'):
        group_input_010_1.outputs[93].show_expanded = False
    if hasattr(group_input_010_1.outputs[94], 'default_value'):
        group_input_010_1.outputs[94].default_value = 0.0
    if hasattr(group_input_010_1.outputs[94], 'display_shape'):
        group_input_010_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[94], 'enabled'):
        group_input_010_1.outputs[94].enabled = True
    if hasattr(group_input_010_1.outputs[94], 'hide'):
        group_input_010_1.outputs[94].hide = True
    if hasattr(group_input_010_1.outputs[94], 'hide_value'):
        group_input_010_1.outputs[94].hide_value = False
    if hasattr(group_input_010_1.outputs[94], 'name'):
        group_input_010_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_010_1.outputs[94], 'show_expanded'):
        group_input_010_1.outputs[94].show_expanded = False
    if hasattr(group_input_010_1.outputs[95], 'default_value'):
        group_input_010_1.outputs[95].default_value = 0.0
    if hasattr(group_input_010_1.outputs[95], 'display_shape'):
        group_input_010_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[95], 'enabled'):
        group_input_010_1.outputs[95].enabled = True
    if hasattr(group_input_010_1.outputs[95], 'hide'):
        group_input_010_1.outputs[95].hide = True
    if hasattr(group_input_010_1.outputs[95], 'hide_value'):
        group_input_010_1.outputs[95].hide_value = False
    if hasattr(group_input_010_1.outputs[95], 'name'):
        group_input_010_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_010_1.outputs[95], 'show_expanded'):
        group_input_010_1.outputs[95].show_expanded = False
    if hasattr(group_input_010_1.outputs[96], 'default_value'):
        group_input_010_1.outputs[96].default_value = 0.0
    if hasattr(group_input_010_1.outputs[96], 'display_shape'):
        group_input_010_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[96], 'enabled'):
        group_input_010_1.outputs[96].enabled = True
    if hasattr(group_input_010_1.outputs[96], 'hide'):
        group_input_010_1.outputs[96].hide = True
    if hasattr(group_input_010_1.outputs[96], 'hide_value'):
        group_input_010_1.outputs[96].hide_value = False
    if hasattr(group_input_010_1.outputs[96], 'name'):
        group_input_010_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_010_1.outputs[96], 'show_expanded'):
        group_input_010_1.outputs[96].show_expanded = False
    if hasattr(group_input_010_1.outputs[97], 'default_value'):
        group_input_010_1.outputs[97].default_value = 0.0
    if hasattr(group_input_010_1.outputs[97], 'display_shape'):
        group_input_010_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[97], 'enabled'):
        group_input_010_1.outputs[97].enabled = True
    if hasattr(group_input_010_1.outputs[97], 'hide'):
        group_input_010_1.outputs[97].hide = True
    if hasattr(group_input_010_1.outputs[97], 'hide_value'):
        group_input_010_1.outputs[97].hide_value = False
    if hasattr(group_input_010_1.outputs[97], 'name'):
        group_input_010_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_010_1.outputs[97], 'show_expanded'):
        group_input_010_1.outputs[97].show_expanded = False
    if hasattr(group_input_010_1.outputs[98], 'default_value'):
        group_input_010_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_010_1.outputs[98], 'display_shape'):
        group_input_010_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[98], 'enabled'):
        group_input_010_1.outputs[98].enabled = True
    if hasattr(group_input_010_1.outputs[98], 'hide'):
        group_input_010_1.outputs[98].hide = True
    if hasattr(group_input_010_1.outputs[98], 'hide_value'):
        group_input_010_1.outputs[98].hide_value = False
    if hasattr(group_input_010_1.outputs[98], 'name'):
        group_input_010_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_010_1.outputs[98], 'show_expanded'):
        group_input_010_1.outputs[98].show_expanded = False
    if hasattr(group_input_010_1.outputs[99], 'default_value'):
        group_input_010_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_010_1.outputs[99], 'display_shape'):
        group_input_010_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[99], 'enabled'):
        group_input_010_1.outputs[99].enabled = True
    if hasattr(group_input_010_1.outputs[99], 'hide'):
        group_input_010_1.outputs[99].hide = True
    if hasattr(group_input_010_1.outputs[99], 'hide_value'):
        group_input_010_1.outputs[99].hide_value = False
    if hasattr(group_input_010_1.outputs[99], 'name'):
        group_input_010_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_010_1.outputs[99], 'show_expanded'):
        group_input_010_1.outputs[99].show_expanded = False
    if hasattr(group_input_010_1.outputs[100], 'default_value'):
        group_input_010_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_010_1.outputs[100], 'display_shape'):
        group_input_010_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[100], 'enabled'):
        group_input_010_1.outputs[100].enabled = True
    if hasattr(group_input_010_1.outputs[100], 'hide'):
        group_input_010_1.outputs[100].hide = True
    if hasattr(group_input_010_1.outputs[100], 'hide_value'):
        group_input_010_1.outputs[100].hide_value = False
    if hasattr(group_input_010_1.outputs[100], 'name'):
        group_input_010_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_010_1.outputs[100], 'show_expanded'):
        group_input_010_1.outputs[100].show_expanded = False
    if hasattr(group_input_010_1.outputs[101], 'default_value'):
        group_input_010_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_010_1.outputs[101], 'display_shape'):
        group_input_010_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_010_1.outputs[101], 'enabled'):
        group_input_010_1.outputs[101].enabled = True
    if hasattr(group_input_010_1.outputs[101], 'hide'):
        group_input_010_1.outputs[101].hide = True
    if hasattr(group_input_010_1.outputs[101], 'hide_value'):
        group_input_010_1.outputs[101].hide_value = False
    if hasattr(group_input_010_1.outputs[101], 'name'):
        group_input_010_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_010_1.outputs[101], 'show_expanded'):
        group_input_010_1.outputs[101].show_expanded = False

    group_input_011_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_011_1, 'color'):
        group_input_011_1.color = (0.0, 0.5, 0.5)
    if hasattr(group_input_011_1, 'hide'):
        group_input_011_1.hide = False
    if hasattr(group_input_011_1, 'label'):
        group_input_011_1.label = 'Slot 5'
    if hasattr(group_input_011_1, 'location'):
        group_input_011_1.location = (-2060.0, 1540.0)
    if hasattr(group_input_011_1, 'mute'):
        group_input_011_1.mute = False
    if hasattr(group_input_011_1, 'name'):
        group_input_011_1.name = 'Group Input.011'
    if hasattr(group_input_011_1, 'use_custom_color'):
        group_input_011_1.use_custom_color = True
    if hasattr(group_input_011_1, 'width'):
        group_input_011_1.width = 179.714111328125
    if hasattr(group_input_011_1.outputs[0], 'default_value'):
        group_input_011_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[0], 'display_shape'):
        group_input_011_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[0], 'enabled'):
        group_input_011_1.outputs[0].enabled = True
    if hasattr(group_input_011_1.outputs[0], 'hide'):
        group_input_011_1.outputs[0].hide = True
    if hasattr(group_input_011_1.outputs[0], 'hide_value'):
        group_input_011_1.outputs[0].hide_value = False
    if hasattr(group_input_011_1.outputs[0], 'name'):
        group_input_011_1.outputs[0].name = 'ASG'
    if hasattr(group_input_011_1.outputs[0], 'show_expanded'):
        group_input_011_1.outputs[0].show_expanded = False
    if hasattr(group_input_011_1.outputs[1], 'default_value'):
        group_input_011_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[1], 'display_shape'):
        group_input_011_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[1], 'enabled'):
        group_input_011_1.outputs[1].enabled = True
    if hasattr(group_input_011_1.outputs[1], 'hide'):
        group_input_011_1.outputs[1].hide = True
    if hasattr(group_input_011_1.outputs[1], 'hide_value'):
        group_input_011_1.outputs[1].hide_value = False
    if hasattr(group_input_011_1.outputs[1], 'name'):
        group_input_011_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_011_1.outputs[1], 'show_expanded'):
        group_input_011_1.outputs[1].show_expanded = False
    if hasattr(group_input_011_1.outputs[2], 'default_value'):
        group_input_011_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[2], 'display_shape'):
        group_input_011_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[2], 'enabled'):
        group_input_011_1.outputs[2].enabled = True
    if hasattr(group_input_011_1.outputs[2], 'hide'):
        group_input_011_1.outputs[2].hide = True
    if hasattr(group_input_011_1.outputs[2], 'hide_value'):
        group_input_011_1.outputs[2].hide_value = False
    if hasattr(group_input_011_1.outputs[2], 'name'):
        group_input_011_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_011_1.outputs[2], 'show_expanded'):
        group_input_011_1.outputs[2].show_expanded = False
    if hasattr(group_input_011_1.outputs[3], 'default_value'):
        group_input_011_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[3], 'display_shape'):
        group_input_011_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[3], 'enabled'):
        group_input_011_1.outputs[3].enabled = True
    if hasattr(group_input_011_1.outputs[3], 'hide'):
        group_input_011_1.outputs[3].hide = True
    if hasattr(group_input_011_1.outputs[3], 'hide_value'):
        group_input_011_1.outputs[3].hide_value = False
    if hasattr(group_input_011_1.outputs[3], 'name'):
        group_input_011_1.outputs[3].name = 'Normal'
    if hasattr(group_input_011_1.outputs[3], 'show_expanded'):
        group_input_011_1.outputs[3].show_expanded = False
    if hasattr(group_input_011_1.outputs[4], 'default_value'):
        group_input_011_1.outputs[4].default_value = 0.0
    if hasattr(group_input_011_1.outputs[4], 'display_shape'):
        group_input_011_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[4], 'enabled'):
        group_input_011_1.outputs[4].enabled = True
    if hasattr(group_input_011_1.outputs[4], 'hide'):
        group_input_011_1.outputs[4].hide = True
    if hasattr(group_input_011_1.outputs[4], 'hide_value'):
        group_input_011_1.outputs[4].hide_value = False
    if hasattr(group_input_011_1.outputs[4], 'name'):
        group_input_011_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_011_1.outputs[4], 'show_expanded'):
        group_input_011_1.outputs[4].show_expanded = False
    if hasattr(group_input_011_1.outputs[5], 'default_value'):
        group_input_011_1.outputs[5].default_value = 1.0
    if hasattr(group_input_011_1.outputs[5], 'display_shape'):
        group_input_011_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[5], 'enabled'):
        group_input_011_1.outputs[5].enabled = True
    if hasattr(group_input_011_1.outputs[5], 'hide'):
        group_input_011_1.outputs[5].hide = True
    if hasattr(group_input_011_1.outputs[5], 'hide_value'):
        group_input_011_1.outputs[5].hide_value = False
    if hasattr(group_input_011_1.outputs[5], 'name'):
        group_input_011_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_011_1.outputs[5], 'show_expanded'):
        group_input_011_1.outputs[5].show_expanded = False
    if hasattr(group_input_011_1.outputs[6], 'default_value'):
        group_input_011_1.outputs[6].default_value = 0.0
    if hasattr(group_input_011_1.outputs[6], 'display_shape'):
        group_input_011_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[6], 'enabled'):
        group_input_011_1.outputs[6].enabled = True
    if hasattr(group_input_011_1.outputs[6], 'hide'):
        group_input_011_1.outputs[6].hide = True
    if hasattr(group_input_011_1.outputs[6], 'hide_value'):
        group_input_011_1.outputs[6].hide_value = False
    if hasattr(group_input_011_1.outputs[6], 'name'):
        group_input_011_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_011_1.outputs[6], 'show_expanded'):
        group_input_011_1.outputs[6].show_expanded = False
    if hasattr(group_input_011_1.outputs[7], 'default_value'):
        group_input_011_1.outputs[7].default_value = 0.0
    if hasattr(group_input_011_1.outputs[7], 'display_shape'):
        group_input_011_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[7], 'enabled'):
        group_input_011_1.outputs[7].enabled = True
    if hasattr(group_input_011_1.outputs[7], 'hide'):
        group_input_011_1.outputs[7].hide = True
    if hasattr(group_input_011_1.outputs[7], 'hide_value'):
        group_input_011_1.outputs[7].hide_value = False
    if hasattr(group_input_011_1.outputs[7], 'name'):
        group_input_011_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_011_1.outputs[7], 'show_expanded'):
        group_input_011_1.outputs[7].show_expanded = False
    if hasattr(group_input_011_1.outputs[8], 'default_value'):
        group_input_011_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[8], 'display_shape'):
        group_input_011_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[8], 'enabled'):
        group_input_011_1.outputs[8].enabled = True
    if hasattr(group_input_011_1.outputs[8], 'hide'):
        group_input_011_1.outputs[8].hide = True
    if hasattr(group_input_011_1.outputs[8], 'hide_value'):
        group_input_011_1.outputs[8].hide_value = False
    if hasattr(group_input_011_1.outputs[8], 'name'):
        group_input_011_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_011_1.outputs[8], 'show_expanded'):
        group_input_011_1.outputs[8].show_expanded = False
    if hasattr(group_input_011_1.outputs[9], 'default_value'):
        group_input_011_1.outputs[9].default_value = 0.0
    if hasattr(group_input_011_1.outputs[9], 'display_shape'):
        group_input_011_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[9], 'enabled'):
        group_input_011_1.outputs[9].enabled = True
    if hasattr(group_input_011_1.outputs[9], 'hide'):
        group_input_011_1.outputs[9].hide = True
    if hasattr(group_input_011_1.outputs[9], 'hide_value'):
        group_input_011_1.outputs[9].hide_value = False
    if hasattr(group_input_011_1.outputs[9], 'name'):
        group_input_011_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_011_1.outputs[9], 'show_expanded'):
        group_input_011_1.outputs[9].show_expanded = False
    if hasattr(group_input_011_1.outputs[10], 'default_value'):
        group_input_011_1.outputs[10].default_value = 0.0
    if hasattr(group_input_011_1.outputs[10], 'display_shape'):
        group_input_011_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[10], 'enabled'):
        group_input_011_1.outputs[10].enabled = True
    if hasattr(group_input_011_1.outputs[10], 'hide'):
        group_input_011_1.outputs[10].hide = True
    if hasattr(group_input_011_1.outputs[10], 'hide_value'):
        group_input_011_1.outputs[10].hide_value = False
    if hasattr(group_input_011_1.outputs[10], 'name'):
        group_input_011_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_011_1.outputs[10], 'show_expanded'):
        group_input_011_1.outputs[10].show_expanded = False
    if hasattr(group_input_011_1.outputs[11], 'default_value'):
        group_input_011_1.outputs[11].default_value = 0.0
    if hasattr(group_input_011_1.outputs[11], 'display_shape'):
        group_input_011_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[11], 'enabled'):
        group_input_011_1.outputs[11].enabled = True
    if hasattr(group_input_011_1.outputs[11], 'hide'):
        group_input_011_1.outputs[11].hide = True
    if hasattr(group_input_011_1.outputs[11], 'hide_value'):
        group_input_011_1.outputs[11].hide_value = False
    if hasattr(group_input_011_1.outputs[11], 'name'):
        group_input_011_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_011_1.outputs[11], 'show_expanded'):
        group_input_011_1.outputs[11].show_expanded = False
    if hasattr(group_input_011_1.outputs[12], 'default_value'):
        group_input_011_1.outputs[12].default_value = 0.0
    if hasattr(group_input_011_1.outputs[12], 'display_shape'):
        group_input_011_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[12], 'enabled'):
        group_input_011_1.outputs[12].enabled = True
    if hasattr(group_input_011_1.outputs[12], 'hide'):
        group_input_011_1.outputs[12].hide = True
    if hasattr(group_input_011_1.outputs[12], 'hide_value'):
        group_input_011_1.outputs[12].hide_value = False
    if hasattr(group_input_011_1.outputs[12], 'name'):
        group_input_011_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_011_1.outputs[12], 'show_expanded'):
        group_input_011_1.outputs[12].show_expanded = False
    if hasattr(group_input_011_1.outputs[13], 'default_value'):
        group_input_011_1.outputs[13].default_value = 0.0
    if hasattr(group_input_011_1.outputs[13], 'display_shape'):
        group_input_011_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[13], 'enabled'):
        group_input_011_1.outputs[13].enabled = True
    if hasattr(group_input_011_1.outputs[13], 'hide'):
        group_input_011_1.outputs[13].hide = True
    if hasattr(group_input_011_1.outputs[13], 'hide_value'):
        group_input_011_1.outputs[13].hide_value = False
    if hasattr(group_input_011_1.outputs[13], 'name'):
        group_input_011_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_011_1.outputs[13], 'show_expanded'):
        group_input_011_1.outputs[13].show_expanded = False
    if hasattr(group_input_011_1.outputs[14], 'default_value'):
        group_input_011_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_011_1.outputs[14], 'display_shape'):
        group_input_011_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[14], 'enabled'):
        group_input_011_1.outputs[14].enabled = True
    if hasattr(group_input_011_1.outputs[14], 'hide'):
        group_input_011_1.outputs[14].hide = True
    if hasattr(group_input_011_1.outputs[14], 'hide_value'):
        group_input_011_1.outputs[14].hide_value = False
    if hasattr(group_input_011_1.outputs[14], 'name'):
        group_input_011_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_011_1.outputs[14], 'show_expanded'):
        group_input_011_1.outputs[14].show_expanded = False
    if hasattr(group_input_011_1.outputs[15], 'default_value'):
        group_input_011_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_011_1.outputs[15], 'display_shape'):
        group_input_011_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[15], 'enabled'):
        group_input_011_1.outputs[15].enabled = True
    if hasattr(group_input_011_1.outputs[15], 'hide'):
        group_input_011_1.outputs[15].hide = True
    if hasattr(group_input_011_1.outputs[15], 'hide_value'):
        group_input_011_1.outputs[15].hide_value = False
    if hasattr(group_input_011_1.outputs[15], 'name'):
        group_input_011_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_011_1.outputs[15], 'show_expanded'):
        group_input_011_1.outputs[15].show_expanded = False
    if hasattr(group_input_011_1.outputs[16], 'default_value'):
        group_input_011_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_011_1.outputs[16], 'display_shape'):
        group_input_011_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[16], 'enabled'):
        group_input_011_1.outputs[16].enabled = True
    if hasattr(group_input_011_1.outputs[16], 'hide'):
        group_input_011_1.outputs[16].hide = True
    if hasattr(group_input_011_1.outputs[16], 'hide_value'):
        group_input_011_1.outputs[16].hide_value = False
    if hasattr(group_input_011_1.outputs[16], 'name'):
        group_input_011_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_011_1.outputs[16], 'show_expanded'):
        group_input_011_1.outputs[16].show_expanded = False
    if hasattr(group_input_011_1.outputs[17], 'default_value'):
        group_input_011_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_011_1.outputs[17], 'display_shape'):
        group_input_011_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[17], 'enabled'):
        group_input_011_1.outputs[17].enabled = True
    if hasattr(group_input_011_1.outputs[17], 'hide'):
        group_input_011_1.outputs[17].hide = True
    if hasattr(group_input_011_1.outputs[17], 'hide_value'):
        group_input_011_1.outputs[17].hide_value = False
    if hasattr(group_input_011_1.outputs[17], 'name'):
        group_input_011_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_011_1.outputs[17], 'show_expanded'):
        group_input_011_1.outputs[17].show_expanded = False
    if hasattr(group_input_011_1.outputs[18], 'default_value'):
        group_input_011_1.outputs[18].default_value = 0.0
    if hasattr(group_input_011_1.outputs[18], 'display_shape'):
        group_input_011_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[18], 'enabled'):
        group_input_011_1.outputs[18].enabled = True
    if hasattr(group_input_011_1.outputs[18], 'hide'):
        group_input_011_1.outputs[18].hide = True
    if hasattr(group_input_011_1.outputs[18], 'hide_value'):
        group_input_011_1.outputs[18].hide_value = False
    if hasattr(group_input_011_1.outputs[18], 'name'):
        group_input_011_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_011_1.outputs[18], 'show_expanded'):
        group_input_011_1.outputs[18].show_expanded = False
    if hasattr(group_input_011_1.outputs[19], 'default_value'):
        group_input_011_1.outputs[19].default_value = 0.0
    if hasattr(group_input_011_1.outputs[19], 'display_shape'):
        group_input_011_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[19], 'enabled'):
        group_input_011_1.outputs[19].enabled = True
    if hasattr(group_input_011_1.outputs[19], 'hide'):
        group_input_011_1.outputs[19].hide = True
    if hasattr(group_input_011_1.outputs[19], 'hide_value'):
        group_input_011_1.outputs[19].hide_value = False
    if hasattr(group_input_011_1.outputs[19], 'name'):
        group_input_011_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_011_1.outputs[19], 'show_expanded'):
        group_input_011_1.outputs[19].show_expanded = False
    if hasattr(group_input_011_1.outputs[20], 'default_value'):
        group_input_011_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[20], 'display_shape'):
        group_input_011_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[20], 'enabled'):
        group_input_011_1.outputs[20].enabled = True
    if hasattr(group_input_011_1.outputs[20], 'hide'):
        group_input_011_1.outputs[20].hide = True
    if hasattr(group_input_011_1.outputs[20], 'hide_value'):
        group_input_011_1.outputs[20].hide_value = False
    if hasattr(group_input_011_1.outputs[20], 'name'):
        group_input_011_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_011_1.outputs[20], 'show_expanded'):
        group_input_011_1.outputs[20].show_expanded = False
    if hasattr(group_input_011_1.outputs[21], 'default_value'):
        group_input_011_1.outputs[21].default_value = 0.0
    if hasattr(group_input_011_1.outputs[21], 'display_shape'):
        group_input_011_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[21], 'enabled'):
        group_input_011_1.outputs[21].enabled = True
    if hasattr(group_input_011_1.outputs[21], 'hide'):
        group_input_011_1.outputs[21].hide = True
    if hasattr(group_input_011_1.outputs[21], 'hide_value'):
        group_input_011_1.outputs[21].hide_value = False
    if hasattr(group_input_011_1.outputs[21], 'name'):
        group_input_011_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_011_1.outputs[21], 'show_expanded'):
        group_input_011_1.outputs[21].show_expanded = False
    if hasattr(group_input_011_1.outputs[22], 'default_value'):
        group_input_011_1.outputs[22].default_value = 0.0
    if hasattr(group_input_011_1.outputs[22], 'display_shape'):
        group_input_011_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[22], 'enabled'):
        group_input_011_1.outputs[22].enabled = True
    if hasattr(group_input_011_1.outputs[22], 'hide'):
        group_input_011_1.outputs[22].hide = True
    if hasattr(group_input_011_1.outputs[22], 'hide_value'):
        group_input_011_1.outputs[22].hide_value = False
    if hasattr(group_input_011_1.outputs[22], 'name'):
        group_input_011_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_011_1.outputs[22], 'show_expanded'):
        group_input_011_1.outputs[22].show_expanded = False
    if hasattr(group_input_011_1.outputs[23], 'default_value'):
        group_input_011_1.outputs[23].default_value = 0.0
    if hasattr(group_input_011_1.outputs[23], 'display_shape'):
        group_input_011_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[23], 'enabled'):
        group_input_011_1.outputs[23].enabled = True
    if hasattr(group_input_011_1.outputs[23], 'hide'):
        group_input_011_1.outputs[23].hide = True
    if hasattr(group_input_011_1.outputs[23], 'hide_value'):
        group_input_011_1.outputs[23].hide_value = False
    if hasattr(group_input_011_1.outputs[23], 'name'):
        group_input_011_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_011_1.outputs[23], 'show_expanded'):
        group_input_011_1.outputs[23].show_expanded = False
    if hasattr(group_input_011_1.outputs[24], 'default_value'):
        group_input_011_1.outputs[24].default_value = 0.0
    if hasattr(group_input_011_1.outputs[24], 'display_shape'):
        group_input_011_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[24], 'enabled'):
        group_input_011_1.outputs[24].enabled = True
    if hasattr(group_input_011_1.outputs[24], 'hide'):
        group_input_011_1.outputs[24].hide = True
    if hasattr(group_input_011_1.outputs[24], 'hide_value'):
        group_input_011_1.outputs[24].hide_value = False
    if hasattr(group_input_011_1.outputs[24], 'name'):
        group_input_011_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_011_1.outputs[24], 'show_expanded'):
        group_input_011_1.outputs[24].show_expanded = False
    if hasattr(group_input_011_1.outputs[25], 'default_value'):
        group_input_011_1.outputs[25].default_value = 0.0
    if hasattr(group_input_011_1.outputs[25], 'display_shape'):
        group_input_011_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[25], 'enabled'):
        group_input_011_1.outputs[25].enabled = True
    if hasattr(group_input_011_1.outputs[25], 'hide'):
        group_input_011_1.outputs[25].hide = True
    if hasattr(group_input_011_1.outputs[25], 'hide_value'):
        group_input_011_1.outputs[25].hide_value = False
    if hasattr(group_input_011_1.outputs[25], 'name'):
        group_input_011_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_011_1.outputs[25], 'show_expanded'):
        group_input_011_1.outputs[25].show_expanded = False
    if hasattr(group_input_011_1.outputs[26], 'default_value'):
        group_input_011_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_011_1.outputs[26], 'display_shape'):
        group_input_011_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[26], 'enabled'):
        group_input_011_1.outputs[26].enabled = True
    if hasattr(group_input_011_1.outputs[26], 'hide'):
        group_input_011_1.outputs[26].hide = True
    if hasattr(group_input_011_1.outputs[26], 'hide_value'):
        group_input_011_1.outputs[26].hide_value = False
    if hasattr(group_input_011_1.outputs[26], 'name'):
        group_input_011_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_011_1.outputs[26], 'show_expanded'):
        group_input_011_1.outputs[26].show_expanded = False
    if hasattr(group_input_011_1.outputs[27], 'default_value'):
        group_input_011_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_011_1.outputs[27], 'display_shape'):
        group_input_011_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[27], 'enabled'):
        group_input_011_1.outputs[27].enabled = True
    if hasattr(group_input_011_1.outputs[27], 'hide'):
        group_input_011_1.outputs[27].hide = True
    if hasattr(group_input_011_1.outputs[27], 'hide_value'):
        group_input_011_1.outputs[27].hide_value = False
    if hasattr(group_input_011_1.outputs[27], 'name'):
        group_input_011_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_011_1.outputs[27], 'show_expanded'):
        group_input_011_1.outputs[27].show_expanded = False
    if hasattr(group_input_011_1.outputs[28], 'default_value'):
        group_input_011_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_011_1.outputs[28], 'display_shape'):
        group_input_011_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[28], 'enabled'):
        group_input_011_1.outputs[28].enabled = True
    if hasattr(group_input_011_1.outputs[28], 'hide'):
        group_input_011_1.outputs[28].hide = True
    if hasattr(group_input_011_1.outputs[28], 'hide_value'):
        group_input_011_1.outputs[28].hide_value = False
    if hasattr(group_input_011_1.outputs[28], 'name'):
        group_input_011_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_011_1.outputs[28], 'show_expanded'):
        group_input_011_1.outputs[28].show_expanded = False
    if hasattr(group_input_011_1.outputs[29], 'default_value'):
        group_input_011_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_011_1.outputs[29], 'display_shape'):
        group_input_011_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[29], 'enabled'):
        group_input_011_1.outputs[29].enabled = True
    if hasattr(group_input_011_1.outputs[29], 'hide'):
        group_input_011_1.outputs[29].hide = True
    if hasattr(group_input_011_1.outputs[29], 'hide_value'):
        group_input_011_1.outputs[29].hide_value = False
    if hasattr(group_input_011_1.outputs[29], 'name'):
        group_input_011_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_011_1.outputs[29], 'show_expanded'):
        group_input_011_1.outputs[29].show_expanded = False
    if hasattr(group_input_011_1.outputs[30], 'default_value'):
        group_input_011_1.outputs[30].default_value = 0.0
    if hasattr(group_input_011_1.outputs[30], 'display_shape'):
        group_input_011_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[30], 'enabled'):
        group_input_011_1.outputs[30].enabled = True
    if hasattr(group_input_011_1.outputs[30], 'hide'):
        group_input_011_1.outputs[30].hide = True
    if hasattr(group_input_011_1.outputs[30], 'hide_value'):
        group_input_011_1.outputs[30].hide_value = False
    if hasattr(group_input_011_1.outputs[30], 'name'):
        group_input_011_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_011_1.outputs[30], 'show_expanded'):
        group_input_011_1.outputs[30].show_expanded = False
    if hasattr(group_input_011_1.outputs[31], 'default_value'):
        group_input_011_1.outputs[31].default_value = 0.0
    if hasattr(group_input_011_1.outputs[31], 'display_shape'):
        group_input_011_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[31], 'enabled'):
        group_input_011_1.outputs[31].enabled = True
    if hasattr(group_input_011_1.outputs[31], 'hide'):
        group_input_011_1.outputs[31].hide = True
    if hasattr(group_input_011_1.outputs[31], 'hide_value'):
        group_input_011_1.outputs[31].hide_value = False
    if hasattr(group_input_011_1.outputs[31], 'name'):
        group_input_011_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_011_1.outputs[31], 'show_expanded'):
        group_input_011_1.outputs[31].show_expanded = False
    if hasattr(group_input_011_1.outputs[32], 'default_value'):
        group_input_011_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[32], 'display_shape'):
        group_input_011_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[32], 'enabled'):
        group_input_011_1.outputs[32].enabled = True
    if hasattr(group_input_011_1.outputs[32], 'hide'):
        group_input_011_1.outputs[32].hide = True
    if hasattr(group_input_011_1.outputs[32], 'hide_value'):
        group_input_011_1.outputs[32].hide_value = False
    if hasattr(group_input_011_1.outputs[32], 'name'):
        group_input_011_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_011_1.outputs[32], 'show_expanded'):
        group_input_011_1.outputs[32].show_expanded = False
    if hasattr(group_input_011_1.outputs[33], 'default_value'):
        group_input_011_1.outputs[33].default_value = 0.0
    if hasattr(group_input_011_1.outputs[33], 'display_shape'):
        group_input_011_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[33], 'enabled'):
        group_input_011_1.outputs[33].enabled = True
    if hasattr(group_input_011_1.outputs[33], 'hide'):
        group_input_011_1.outputs[33].hide = True
    if hasattr(group_input_011_1.outputs[33], 'hide_value'):
        group_input_011_1.outputs[33].hide_value = False
    if hasattr(group_input_011_1.outputs[33], 'name'):
        group_input_011_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_011_1.outputs[33], 'show_expanded'):
        group_input_011_1.outputs[33].show_expanded = False
    if hasattr(group_input_011_1.outputs[34], 'default_value'):
        group_input_011_1.outputs[34].default_value = 0.0
    if hasattr(group_input_011_1.outputs[34], 'display_shape'):
        group_input_011_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[34], 'enabled'):
        group_input_011_1.outputs[34].enabled = True
    if hasattr(group_input_011_1.outputs[34], 'hide'):
        group_input_011_1.outputs[34].hide = True
    if hasattr(group_input_011_1.outputs[34], 'hide_value'):
        group_input_011_1.outputs[34].hide_value = False
    if hasattr(group_input_011_1.outputs[34], 'name'):
        group_input_011_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_011_1.outputs[34], 'show_expanded'):
        group_input_011_1.outputs[34].show_expanded = False
    if hasattr(group_input_011_1.outputs[35], 'default_value'):
        group_input_011_1.outputs[35].default_value = 0.0
    if hasattr(group_input_011_1.outputs[35], 'display_shape'):
        group_input_011_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[35], 'enabled'):
        group_input_011_1.outputs[35].enabled = True
    if hasattr(group_input_011_1.outputs[35], 'hide'):
        group_input_011_1.outputs[35].hide = True
    if hasattr(group_input_011_1.outputs[35], 'hide_value'):
        group_input_011_1.outputs[35].hide_value = False
    if hasattr(group_input_011_1.outputs[35], 'name'):
        group_input_011_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_011_1.outputs[35], 'show_expanded'):
        group_input_011_1.outputs[35].show_expanded = False
    if hasattr(group_input_011_1.outputs[36], 'default_value'):
        group_input_011_1.outputs[36].default_value = 0.0
    if hasattr(group_input_011_1.outputs[36], 'display_shape'):
        group_input_011_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[36], 'enabled'):
        group_input_011_1.outputs[36].enabled = True
    if hasattr(group_input_011_1.outputs[36], 'hide'):
        group_input_011_1.outputs[36].hide = True
    if hasattr(group_input_011_1.outputs[36], 'hide_value'):
        group_input_011_1.outputs[36].hide_value = False
    if hasattr(group_input_011_1.outputs[36], 'name'):
        group_input_011_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_011_1.outputs[36], 'show_expanded'):
        group_input_011_1.outputs[36].show_expanded = False
    if hasattr(group_input_011_1.outputs[37], 'default_value'):
        group_input_011_1.outputs[37].default_value = 0.0
    if hasattr(group_input_011_1.outputs[37], 'display_shape'):
        group_input_011_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[37], 'enabled'):
        group_input_011_1.outputs[37].enabled = True
    if hasattr(group_input_011_1.outputs[37], 'hide'):
        group_input_011_1.outputs[37].hide = True
    if hasattr(group_input_011_1.outputs[37], 'hide_value'):
        group_input_011_1.outputs[37].hide_value = False
    if hasattr(group_input_011_1.outputs[37], 'name'):
        group_input_011_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_011_1.outputs[37], 'show_expanded'):
        group_input_011_1.outputs[37].show_expanded = False
    if hasattr(group_input_011_1.outputs[38], 'default_value'):
        group_input_011_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_011_1.outputs[38], 'display_shape'):
        group_input_011_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[38], 'enabled'):
        group_input_011_1.outputs[38].enabled = True
    if hasattr(group_input_011_1.outputs[38], 'hide'):
        group_input_011_1.outputs[38].hide = True
    if hasattr(group_input_011_1.outputs[38], 'hide_value'):
        group_input_011_1.outputs[38].hide_value = False
    if hasattr(group_input_011_1.outputs[38], 'name'):
        group_input_011_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_011_1.outputs[38], 'show_expanded'):
        group_input_011_1.outputs[38].show_expanded = False
    if hasattr(group_input_011_1.outputs[39], 'default_value'):
        group_input_011_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_011_1.outputs[39], 'display_shape'):
        group_input_011_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[39], 'enabled'):
        group_input_011_1.outputs[39].enabled = True
    if hasattr(group_input_011_1.outputs[39], 'hide'):
        group_input_011_1.outputs[39].hide = True
    if hasattr(group_input_011_1.outputs[39], 'hide_value'):
        group_input_011_1.outputs[39].hide_value = False
    if hasattr(group_input_011_1.outputs[39], 'name'):
        group_input_011_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_011_1.outputs[39], 'show_expanded'):
        group_input_011_1.outputs[39].show_expanded = False
    if hasattr(group_input_011_1.outputs[40], 'default_value'):
        group_input_011_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_011_1.outputs[40], 'display_shape'):
        group_input_011_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[40], 'enabled'):
        group_input_011_1.outputs[40].enabled = True
    if hasattr(group_input_011_1.outputs[40], 'hide'):
        group_input_011_1.outputs[40].hide = True
    if hasattr(group_input_011_1.outputs[40], 'hide_value'):
        group_input_011_1.outputs[40].hide_value = False
    if hasattr(group_input_011_1.outputs[40], 'name'):
        group_input_011_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_011_1.outputs[40], 'show_expanded'):
        group_input_011_1.outputs[40].show_expanded = False
    if hasattr(group_input_011_1.outputs[41], 'default_value'):
        group_input_011_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_011_1.outputs[41], 'display_shape'):
        group_input_011_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[41], 'enabled'):
        group_input_011_1.outputs[41].enabled = True
    if hasattr(group_input_011_1.outputs[41], 'hide'):
        group_input_011_1.outputs[41].hide = True
    if hasattr(group_input_011_1.outputs[41], 'hide_value'):
        group_input_011_1.outputs[41].hide_value = False
    if hasattr(group_input_011_1.outputs[41], 'name'):
        group_input_011_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_011_1.outputs[41], 'show_expanded'):
        group_input_011_1.outputs[41].show_expanded = False
    if hasattr(group_input_011_1.outputs[42], 'default_value'):
        group_input_011_1.outputs[42].default_value = 0.0
    if hasattr(group_input_011_1.outputs[42], 'display_shape'):
        group_input_011_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[42], 'enabled'):
        group_input_011_1.outputs[42].enabled = True
    if hasattr(group_input_011_1.outputs[42], 'hide'):
        group_input_011_1.outputs[42].hide = True
    if hasattr(group_input_011_1.outputs[42], 'hide_value'):
        group_input_011_1.outputs[42].hide_value = False
    if hasattr(group_input_011_1.outputs[42], 'name'):
        group_input_011_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_011_1.outputs[42], 'show_expanded'):
        group_input_011_1.outputs[42].show_expanded = False
    if hasattr(group_input_011_1.outputs[43], 'default_value'):
        group_input_011_1.outputs[43].default_value = 0.0
    if hasattr(group_input_011_1.outputs[43], 'display_shape'):
        group_input_011_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[43], 'enabled'):
        group_input_011_1.outputs[43].enabled = True
    if hasattr(group_input_011_1.outputs[43], 'hide'):
        group_input_011_1.outputs[43].hide = True
    if hasattr(group_input_011_1.outputs[43], 'hide_value'):
        group_input_011_1.outputs[43].hide_value = False
    if hasattr(group_input_011_1.outputs[43], 'name'):
        group_input_011_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_011_1.outputs[43], 'show_expanded'):
        group_input_011_1.outputs[43].show_expanded = False
    if hasattr(group_input_011_1.outputs[44], 'default_value'):
        group_input_011_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[44], 'display_shape'):
        group_input_011_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[44], 'enabled'):
        group_input_011_1.outputs[44].enabled = True
    if hasattr(group_input_011_1.outputs[44], 'hide'):
        group_input_011_1.outputs[44].hide = True
    if hasattr(group_input_011_1.outputs[44], 'hide_value'):
        group_input_011_1.outputs[44].hide_value = False
    if hasattr(group_input_011_1.outputs[44], 'name'):
        group_input_011_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_011_1.outputs[44], 'show_expanded'):
        group_input_011_1.outputs[44].show_expanded = False
    if hasattr(group_input_011_1.outputs[45], 'default_value'):
        group_input_011_1.outputs[45].default_value = 0.0
    if hasattr(group_input_011_1.outputs[45], 'display_shape'):
        group_input_011_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[45], 'enabled'):
        group_input_011_1.outputs[45].enabled = True
    if hasattr(group_input_011_1.outputs[45], 'hide'):
        group_input_011_1.outputs[45].hide = True
    if hasattr(group_input_011_1.outputs[45], 'hide_value'):
        group_input_011_1.outputs[45].hide_value = False
    if hasattr(group_input_011_1.outputs[45], 'name'):
        group_input_011_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_011_1.outputs[45], 'show_expanded'):
        group_input_011_1.outputs[45].show_expanded = False
    if hasattr(group_input_011_1.outputs[46], 'default_value'):
        group_input_011_1.outputs[46].default_value = 0.0
    if hasattr(group_input_011_1.outputs[46], 'display_shape'):
        group_input_011_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[46], 'enabled'):
        group_input_011_1.outputs[46].enabled = True
    if hasattr(group_input_011_1.outputs[46], 'hide'):
        group_input_011_1.outputs[46].hide = True
    if hasattr(group_input_011_1.outputs[46], 'hide_value'):
        group_input_011_1.outputs[46].hide_value = False
    if hasattr(group_input_011_1.outputs[46], 'name'):
        group_input_011_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_011_1.outputs[46], 'show_expanded'):
        group_input_011_1.outputs[46].show_expanded = False
    if hasattr(group_input_011_1.outputs[47], 'default_value'):
        group_input_011_1.outputs[47].default_value = 0.0
    if hasattr(group_input_011_1.outputs[47], 'display_shape'):
        group_input_011_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[47], 'enabled'):
        group_input_011_1.outputs[47].enabled = True
    if hasattr(group_input_011_1.outputs[47], 'hide'):
        group_input_011_1.outputs[47].hide = True
    if hasattr(group_input_011_1.outputs[47], 'hide_value'):
        group_input_011_1.outputs[47].hide_value = False
    if hasattr(group_input_011_1.outputs[47], 'name'):
        group_input_011_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_011_1.outputs[47], 'show_expanded'):
        group_input_011_1.outputs[47].show_expanded = False
    if hasattr(group_input_011_1.outputs[48], 'default_value'):
        group_input_011_1.outputs[48].default_value = 0.0
    if hasattr(group_input_011_1.outputs[48], 'display_shape'):
        group_input_011_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[48], 'enabled'):
        group_input_011_1.outputs[48].enabled = True
    if hasattr(group_input_011_1.outputs[48], 'hide'):
        group_input_011_1.outputs[48].hide = True
    if hasattr(group_input_011_1.outputs[48], 'hide_value'):
        group_input_011_1.outputs[48].hide_value = False
    if hasattr(group_input_011_1.outputs[48], 'name'):
        group_input_011_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_011_1.outputs[48], 'show_expanded'):
        group_input_011_1.outputs[48].show_expanded = False
    if hasattr(group_input_011_1.outputs[49], 'default_value'):
        group_input_011_1.outputs[49].default_value = 0.0
    if hasattr(group_input_011_1.outputs[49], 'display_shape'):
        group_input_011_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[49], 'enabled'):
        group_input_011_1.outputs[49].enabled = True
    if hasattr(group_input_011_1.outputs[49], 'hide'):
        group_input_011_1.outputs[49].hide = True
    if hasattr(group_input_011_1.outputs[49], 'hide_value'):
        group_input_011_1.outputs[49].hide_value = False
    if hasattr(group_input_011_1.outputs[49], 'name'):
        group_input_011_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_011_1.outputs[49], 'show_expanded'):
        group_input_011_1.outputs[49].show_expanded = False
    if hasattr(group_input_011_1.outputs[50], 'default_value'):
        group_input_011_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_011_1.outputs[50], 'display_shape'):
        group_input_011_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[50], 'enabled'):
        group_input_011_1.outputs[50].enabled = True
    if hasattr(group_input_011_1.outputs[50], 'hide'):
        group_input_011_1.outputs[50].hide = True
    if hasattr(group_input_011_1.outputs[50], 'hide_value'):
        group_input_011_1.outputs[50].hide_value = False
    if hasattr(group_input_011_1.outputs[50], 'name'):
        group_input_011_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_011_1.outputs[50], 'show_expanded'):
        group_input_011_1.outputs[50].show_expanded = False
    if hasattr(group_input_011_1.outputs[51], 'default_value'):
        group_input_011_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_011_1.outputs[51], 'display_shape'):
        group_input_011_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[51], 'enabled'):
        group_input_011_1.outputs[51].enabled = True
    if hasattr(group_input_011_1.outputs[51], 'hide'):
        group_input_011_1.outputs[51].hide = True
    if hasattr(group_input_011_1.outputs[51], 'hide_value'):
        group_input_011_1.outputs[51].hide_value = False
    if hasattr(group_input_011_1.outputs[51], 'name'):
        group_input_011_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_011_1.outputs[51], 'show_expanded'):
        group_input_011_1.outputs[51].show_expanded = False
    if hasattr(group_input_011_1.outputs[52], 'default_value'):
        group_input_011_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_011_1.outputs[52], 'display_shape'):
        group_input_011_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[52], 'enabled'):
        group_input_011_1.outputs[52].enabled = True
    if hasattr(group_input_011_1.outputs[52], 'hide'):
        group_input_011_1.outputs[52].hide = True
    if hasattr(group_input_011_1.outputs[52], 'hide_value'):
        group_input_011_1.outputs[52].hide_value = False
    if hasattr(group_input_011_1.outputs[52], 'name'):
        group_input_011_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_011_1.outputs[52], 'show_expanded'):
        group_input_011_1.outputs[52].show_expanded = False
    if hasattr(group_input_011_1.outputs[53], 'default_value'):
        group_input_011_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_011_1.outputs[53], 'display_shape'):
        group_input_011_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[53], 'enabled'):
        group_input_011_1.outputs[53].enabled = True
    if hasattr(group_input_011_1.outputs[53], 'hide'):
        group_input_011_1.outputs[53].hide = True
    if hasattr(group_input_011_1.outputs[53], 'hide_value'):
        group_input_011_1.outputs[53].hide_value = False
    if hasattr(group_input_011_1.outputs[53], 'name'):
        group_input_011_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_011_1.outputs[53], 'show_expanded'):
        group_input_011_1.outputs[53].show_expanded = False
    if hasattr(group_input_011_1.outputs[54], 'default_value'):
        group_input_011_1.outputs[54].default_value = 0.0
    if hasattr(group_input_011_1.outputs[54], 'display_shape'):
        group_input_011_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[54], 'enabled'):
        group_input_011_1.outputs[54].enabled = True
    if hasattr(group_input_011_1.outputs[54], 'hide'):
        group_input_011_1.outputs[54].hide = False
    if hasattr(group_input_011_1.outputs[54], 'hide_value'):
        group_input_011_1.outputs[54].hide_value = False
    if hasattr(group_input_011_1.outputs[54], 'name'):
        group_input_011_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_011_1.outputs[54], 'show_expanded'):
        group_input_011_1.outputs[54].show_expanded = False
    if hasattr(group_input_011_1.outputs[55], 'default_value'):
        group_input_011_1.outputs[55].default_value = 0.0
    if hasattr(group_input_011_1.outputs[55], 'display_shape'):
        group_input_011_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[55], 'enabled'):
        group_input_011_1.outputs[55].enabled = True
    if hasattr(group_input_011_1.outputs[55], 'hide'):
        group_input_011_1.outputs[55].hide = True
    if hasattr(group_input_011_1.outputs[55], 'hide_value'):
        group_input_011_1.outputs[55].hide_value = False
    if hasattr(group_input_011_1.outputs[55], 'name'):
        group_input_011_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_011_1.outputs[55], 'show_expanded'):
        group_input_011_1.outputs[55].show_expanded = False
    if hasattr(group_input_011_1.outputs[56], 'default_value'):
        group_input_011_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[56], 'display_shape'):
        group_input_011_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[56], 'enabled'):
        group_input_011_1.outputs[56].enabled = True
    if hasattr(group_input_011_1.outputs[56], 'hide'):
        group_input_011_1.outputs[56].hide = True
    if hasattr(group_input_011_1.outputs[56], 'hide_value'):
        group_input_011_1.outputs[56].hide_value = False
    if hasattr(group_input_011_1.outputs[56], 'name'):
        group_input_011_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_011_1.outputs[56], 'show_expanded'):
        group_input_011_1.outputs[56].show_expanded = False
    if hasattr(group_input_011_1.outputs[57], 'default_value'):
        group_input_011_1.outputs[57].default_value = 0.0
    if hasattr(group_input_011_1.outputs[57], 'display_shape'):
        group_input_011_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[57], 'enabled'):
        group_input_011_1.outputs[57].enabled = True
    if hasattr(group_input_011_1.outputs[57], 'hide'):
        group_input_011_1.outputs[57].hide = True
    if hasattr(group_input_011_1.outputs[57], 'hide_value'):
        group_input_011_1.outputs[57].hide_value = False
    if hasattr(group_input_011_1.outputs[57], 'name'):
        group_input_011_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_011_1.outputs[57], 'show_expanded'):
        group_input_011_1.outputs[57].show_expanded = False
    if hasattr(group_input_011_1.outputs[58], 'default_value'):
        group_input_011_1.outputs[58].default_value = 0.0
    if hasattr(group_input_011_1.outputs[58], 'display_shape'):
        group_input_011_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[58], 'enabled'):
        group_input_011_1.outputs[58].enabled = True
    if hasattr(group_input_011_1.outputs[58], 'hide'):
        group_input_011_1.outputs[58].hide = True
    if hasattr(group_input_011_1.outputs[58], 'hide_value'):
        group_input_011_1.outputs[58].hide_value = False
    if hasattr(group_input_011_1.outputs[58], 'name'):
        group_input_011_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_011_1.outputs[58], 'show_expanded'):
        group_input_011_1.outputs[58].show_expanded = False
    if hasattr(group_input_011_1.outputs[59], 'default_value'):
        group_input_011_1.outputs[59].default_value = 0.0
    if hasattr(group_input_011_1.outputs[59], 'display_shape'):
        group_input_011_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[59], 'enabled'):
        group_input_011_1.outputs[59].enabled = True
    if hasattr(group_input_011_1.outputs[59], 'hide'):
        group_input_011_1.outputs[59].hide = True
    if hasattr(group_input_011_1.outputs[59], 'hide_value'):
        group_input_011_1.outputs[59].hide_value = False
    if hasattr(group_input_011_1.outputs[59], 'name'):
        group_input_011_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_011_1.outputs[59], 'show_expanded'):
        group_input_011_1.outputs[59].show_expanded = False
    if hasattr(group_input_011_1.outputs[60], 'default_value'):
        group_input_011_1.outputs[60].default_value = 0.0
    if hasattr(group_input_011_1.outputs[60], 'display_shape'):
        group_input_011_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[60], 'enabled'):
        group_input_011_1.outputs[60].enabled = True
    if hasattr(group_input_011_1.outputs[60], 'hide'):
        group_input_011_1.outputs[60].hide = True
    if hasattr(group_input_011_1.outputs[60], 'hide_value'):
        group_input_011_1.outputs[60].hide_value = False
    if hasattr(group_input_011_1.outputs[60], 'name'):
        group_input_011_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_011_1.outputs[60], 'show_expanded'):
        group_input_011_1.outputs[60].show_expanded = False
    if hasattr(group_input_011_1.outputs[61], 'default_value'):
        group_input_011_1.outputs[61].default_value = 0.0
    if hasattr(group_input_011_1.outputs[61], 'display_shape'):
        group_input_011_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[61], 'enabled'):
        group_input_011_1.outputs[61].enabled = True
    if hasattr(group_input_011_1.outputs[61], 'hide'):
        group_input_011_1.outputs[61].hide = True
    if hasattr(group_input_011_1.outputs[61], 'hide_value'):
        group_input_011_1.outputs[61].hide_value = False
    if hasattr(group_input_011_1.outputs[61], 'name'):
        group_input_011_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_011_1.outputs[61], 'show_expanded'):
        group_input_011_1.outputs[61].show_expanded = False
    if hasattr(group_input_011_1.outputs[62], 'default_value'):
        group_input_011_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_011_1.outputs[62], 'display_shape'):
        group_input_011_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[62], 'enabled'):
        group_input_011_1.outputs[62].enabled = True
    if hasattr(group_input_011_1.outputs[62], 'hide'):
        group_input_011_1.outputs[62].hide = False
    if hasattr(group_input_011_1.outputs[62], 'hide_value'):
        group_input_011_1.outputs[62].hide_value = False
    if hasattr(group_input_011_1.outputs[62], 'name'):
        group_input_011_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_011_1.outputs[62], 'show_expanded'):
        group_input_011_1.outputs[62].show_expanded = False
    if hasattr(group_input_011_1.outputs[63], 'default_value'):
        group_input_011_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_011_1.outputs[63], 'display_shape'):
        group_input_011_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[63], 'enabled'):
        group_input_011_1.outputs[63].enabled = True
    if hasattr(group_input_011_1.outputs[63], 'hide'):
        group_input_011_1.outputs[63].hide = False
    if hasattr(group_input_011_1.outputs[63], 'hide_value'):
        group_input_011_1.outputs[63].hide_value = False
    if hasattr(group_input_011_1.outputs[63], 'name'):
        group_input_011_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_011_1.outputs[63], 'show_expanded'):
        group_input_011_1.outputs[63].show_expanded = False
    if hasattr(group_input_011_1.outputs[64], 'default_value'):
        group_input_011_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_011_1.outputs[64], 'display_shape'):
        group_input_011_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[64], 'enabled'):
        group_input_011_1.outputs[64].enabled = True
    if hasattr(group_input_011_1.outputs[64], 'hide'):
        group_input_011_1.outputs[64].hide = False
    if hasattr(group_input_011_1.outputs[64], 'hide_value'):
        group_input_011_1.outputs[64].hide_value = False
    if hasattr(group_input_011_1.outputs[64], 'name'):
        group_input_011_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_011_1.outputs[64], 'show_expanded'):
        group_input_011_1.outputs[64].show_expanded = False
    if hasattr(group_input_011_1.outputs[65], 'default_value'):
        group_input_011_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_011_1.outputs[65], 'display_shape'):
        group_input_011_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[65], 'enabled'):
        group_input_011_1.outputs[65].enabled = True
    if hasattr(group_input_011_1.outputs[65], 'hide'):
        group_input_011_1.outputs[65].hide = True
    if hasattr(group_input_011_1.outputs[65], 'hide_value'):
        group_input_011_1.outputs[65].hide_value = False
    if hasattr(group_input_011_1.outputs[65], 'name'):
        group_input_011_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_011_1.outputs[65], 'show_expanded'):
        group_input_011_1.outputs[65].show_expanded = False
    if hasattr(group_input_011_1.outputs[66], 'default_value'):
        group_input_011_1.outputs[66].default_value = 0.0
    if hasattr(group_input_011_1.outputs[66], 'display_shape'):
        group_input_011_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[66], 'enabled'):
        group_input_011_1.outputs[66].enabled = True
    if hasattr(group_input_011_1.outputs[66], 'hide'):
        group_input_011_1.outputs[66].hide = True
    if hasattr(group_input_011_1.outputs[66], 'hide_value'):
        group_input_011_1.outputs[66].hide_value = False
    if hasattr(group_input_011_1.outputs[66], 'name'):
        group_input_011_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_011_1.outputs[66], 'show_expanded'):
        group_input_011_1.outputs[66].show_expanded = False
    if hasattr(group_input_011_1.outputs[67], 'default_value'):
        group_input_011_1.outputs[67].default_value = 0.0
    if hasattr(group_input_011_1.outputs[67], 'display_shape'):
        group_input_011_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[67], 'enabled'):
        group_input_011_1.outputs[67].enabled = True
    if hasattr(group_input_011_1.outputs[67], 'hide'):
        group_input_011_1.outputs[67].hide = True
    if hasattr(group_input_011_1.outputs[67], 'hide_value'):
        group_input_011_1.outputs[67].hide_value = False
    if hasattr(group_input_011_1.outputs[67], 'name'):
        group_input_011_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_011_1.outputs[67], 'show_expanded'):
        group_input_011_1.outputs[67].show_expanded = False
    if hasattr(group_input_011_1.outputs[68], 'default_value'):
        group_input_011_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[68], 'display_shape'):
        group_input_011_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[68], 'enabled'):
        group_input_011_1.outputs[68].enabled = True
    if hasattr(group_input_011_1.outputs[68], 'hide'):
        group_input_011_1.outputs[68].hide = True
    if hasattr(group_input_011_1.outputs[68], 'hide_value'):
        group_input_011_1.outputs[68].hide_value = False
    if hasattr(group_input_011_1.outputs[68], 'name'):
        group_input_011_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_011_1.outputs[68], 'show_expanded'):
        group_input_011_1.outputs[68].show_expanded = False
    if hasattr(group_input_011_1.outputs[69], 'default_value'):
        group_input_011_1.outputs[69].default_value = 0.0
    if hasattr(group_input_011_1.outputs[69], 'display_shape'):
        group_input_011_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[69], 'enabled'):
        group_input_011_1.outputs[69].enabled = True
    if hasattr(group_input_011_1.outputs[69], 'hide'):
        group_input_011_1.outputs[69].hide = True
    if hasattr(group_input_011_1.outputs[69], 'hide_value'):
        group_input_011_1.outputs[69].hide_value = False
    if hasattr(group_input_011_1.outputs[69], 'name'):
        group_input_011_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_011_1.outputs[69], 'show_expanded'):
        group_input_011_1.outputs[69].show_expanded = False
    if hasattr(group_input_011_1.outputs[70], 'default_value'):
        group_input_011_1.outputs[70].default_value = 0.0
    if hasattr(group_input_011_1.outputs[70], 'display_shape'):
        group_input_011_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[70], 'enabled'):
        group_input_011_1.outputs[70].enabled = True
    if hasattr(group_input_011_1.outputs[70], 'hide'):
        group_input_011_1.outputs[70].hide = True
    if hasattr(group_input_011_1.outputs[70], 'hide_value'):
        group_input_011_1.outputs[70].hide_value = False
    if hasattr(group_input_011_1.outputs[70], 'name'):
        group_input_011_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_011_1.outputs[70], 'show_expanded'):
        group_input_011_1.outputs[70].show_expanded = False
    if hasattr(group_input_011_1.outputs[71], 'default_value'):
        group_input_011_1.outputs[71].default_value = 0.0
    if hasattr(group_input_011_1.outputs[71], 'display_shape'):
        group_input_011_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[71], 'enabled'):
        group_input_011_1.outputs[71].enabled = True
    if hasattr(group_input_011_1.outputs[71], 'hide'):
        group_input_011_1.outputs[71].hide = True
    if hasattr(group_input_011_1.outputs[71], 'hide_value'):
        group_input_011_1.outputs[71].hide_value = False
    if hasattr(group_input_011_1.outputs[71], 'name'):
        group_input_011_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_011_1.outputs[71], 'show_expanded'):
        group_input_011_1.outputs[71].show_expanded = False
    if hasattr(group_input_011_1.outputs[72], 'default_value'):
        group_input_011_1.outputs[72].default_value = 0.0
    if hasattr(group_input_011_1.outputs[72], 'display_shape'):
        group_input_011_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[72], 'enabled'):
        group_input_011_1.outputs[72].enabled = True
    if hasattr(group_input_011_1.outputs[72], 'hide'):
        group_input_011_1.outputs[72].hide = True
    if hasattr(group_input_011_1.outputs[72], 'hide_value'):
        group_input_011_1.outputs[72].hide_value = False
    if hasattr(group_input_011_1.outputs[72], 'name'):
        group_input_011_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_011_1.outputs[72], 'show_expanded'):
        group_input_011_1.outputs[72].show_expanded = False
    if hasattr(group_input_011_1.outputs[73], 'default_value'):
        group_input_011_1.outputs[73].default_value = 0.0
    if hasattr(group_input_011_1.outputs[73], 'display_shape'):
        group_input_011_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[73], 'enabled'):
        group_input_011_1.outputs[73].enabled = True
    if hasattr(group_input_011_1.outputs[73], 'hide'):
        group_input_011_1.outputs[73].hide = True
    if hasattr(group_input_011_1.outputs[73], 'hide_value'):
        group_input_011_1.outputs[73].hide_value = False
    if hasattr(group_input_011_1.outputs[73], 'name'):
        group_input_011_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_011_1.outputs[73], 'show_expanded'):
        group_input_011_1.outputs[73].show_expanded = False
    if hasattr(group_input_011_1.outputs[74], 'default_value'):
        group_input_011_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_011_1.outputs[74], 'display_shape'):
        group_input_011_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[74], 'enabled'):
        group_input_011_1.outputs[74].enabled = True
    if hasattr(group_input_011_1.outputs[74], 'hide'):
        group_input_011_1.outputs[74].hide = True
    if hasattr(group_input_011_1.outputs[74], 'hide_value'):
        group_input_011_1.outputs[74].hide_value = False
    if hasattr(group_input_011_1.outputs[74], 'name'):
        group_input_011_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_011_1.outputs[74], 'show_expanded'):
        group_input_011_1.outputs[74].show_expanded = False
    if hasattr(group_input_011_1.outputs[75], 'default_value'):
        group_input_011_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_011_1.outputs[75], 'display_shape'):
        group_input_011_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[75], 'enabled'):
        group_input_011_1.outputs[75].enabled = True
    if hasattr(group_input_011_1.outputs[75], 'hide'):
        group_input_011_1.outputs[75].hide = True
    if hasattr(group_input_011_1.outputs[75], 'hide_value'):
        group_input_011_1.outputs[75].hide_value = False
    if hasattr(group_input_011_1.outputs[75], 'name'):
        group_input_011_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_011_1.outputs[75], 'show_expanded'):
        group_input_011_1.outputs[75].show_expanded = False
    if hasattr(group_input_011_1.outputs[76], 'default_value'):
        group_input_011_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_011_1.outputs[76], 'display_shape'):
        group_input_011_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[76], 'enabled'):
        group_input_011_1.outputs[76].enabled = True
    if hasattr(group_input_011_1.outputs[76], 'hide'):
        group_input_011_1.outputs[76].hide = True
    if hasattr(group_input_011_1.outputs[76], 'hide_value'):
        group_input_011_1.outputs[76].hide_value = False
    if hasattr(group_input_011_1.outputs[76], 'name'):
        group_input_011_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_011_1.outputs[76], 'show_expanded'):
        group_input_011_1.outputs[76].show_expanded = False
    if hasattr(group_input_011_1.outputs[77], 'default_value'):
        group_input_011_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_011_1.outputs[77], 'display_shape'):
        group_input_011_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[77], 'enabled'):
        group_input_011_1.outputs[77].enabled = True
    if hasattr(group_input_011_1.outputs[77], 'hide'):
        group_input_011_1.outputs[77].hide = True
    if hasattr(group_input_011_1.outputs[77], 'hide_value'):
        group_input_011_1.outputs[77].hide_value = False
    if hasattr(group_input_011_1.outputs[77], 'name'):
        group_input_011_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_011_1.outputs[77], 'show_expanded'):
        group_input_011_1.outputs[77].show_expanded = False
    if hasattr(group_input_011_1.outputs[78], 'default_value'):
        group_input_011_1.outputs[78].default_value = 0.0
    if hasattr(group_input_011_1.outputs[78], 'display_shape'):
        group_input_011_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[78], 'enabled'):
        group_input_011_1.outputs[78].enabled = True
    if hasattr(group_input_011_1.outputs[78], 'hide'):
        group_input_011_1.outputs[78].hide = True
    if hasattr(group_input_011_1.outputs[78], 'hide_value'):
        group_input_011_1.outputs[78].hide_value = False
    if hasattr(group_input_011_1.outputs[78], 'name'):
        group_input_011_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_011_1.outputs[78], 'show_expanded'):
        group_input_011_1.outputs[78].show_expanded = False
    if hasattr(group_input_011_1.outputs[79], 'default_value'):
        group_input_011_1.outputs[79].default_value = 0.0
    if hasattr(group_input_011_1.outputs[79], 'display_shape'):
        group_input_011_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[79], 'enabled'):
        group_input_011_1.outputs[79].enabled = True
    if hasattr(group_input_011_1.outputs[79], 'hide'):
        group_input_011_1.outputs[79].hide = True
    if hasattr(group_input_011_1.outputs[79], 'hide_value'):
        group_input_011_1.outputs[79].hide_value = False
    if hasattr(group_input_011_1.outputs[79], 'name'):
        group_input_011_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_011_1.outputs[79], 'show_expanded'):
        group_input_011_1.outputs[79].show_expanded = False
    if hasattr(group_input_011_1.outputs[80], 'default_value'):
        group_input_011_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[80], 'display_shape'):
        group_input_011_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[80], 'enabled'):
        group_input_011_1.outputs[80].enabled = True
    if hasattr(group_input_011_1.outputs[80], 'hide'):
        group_input_011_1.outputs[80].hide = True
    if hasattr(group_input_011_1.outputs[80], 'hide_value'):
        group_input_011_1.outputs[80].hide_value = False
    if hasattr(group_input_011_1.outputs[80], 'name'):
        group_input_011_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_011_1.outputs[80], 'show_expanded'):
        group_input_011_1.outputs[80].show_expanded = False
    if hasattr(group_input_011_1.outputs[81], 'default_value'):
        group_input_011_1.outputs[81].default_value = 0.0
    if hasattr(group_input_011_1.outputs[81], 'display_shape'):
        group_input_011_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[81], 'enabled'):
        group_input_011_1.outputs[81].enabled = True
    if hasattr(group_input_011_1.outputs[81], 'hide'):
        group_input_011_1.outputs[81].hide = True
    if hasattr(group_input_011_1.outputs[81], 'hide_value'):
        group_input_011_1.outputs[81].hide_value = False
    if hasattr(group_input_011_1.outputs[81], 'name'):
        group_input_011_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_011_1.outputs[81], 'show_expanded'):
        group_input_011_1.outputs[81].show_expanded = False
    if hasattr(group_input_011_1.outputs[82], 'default_value'):
        group_input_011_1.outputs[82].default_value = 0.0
    if hasattr(group_input_011_1.outputs[82], 'display_shape'):
        group_input_011_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[82], 'enabled'):
        group_input_011_1.outputs[82].enabled = True
    if hasattr(group_input_011_1.outputs[82], 'hide'):
        group_input_011_1.outputs[82].hide = True
    if hasattr(group_input_011_1.outputs[82], 'hide_value'):
        group_input_011_1.outputs[82].hide_value = False
    if hasattr(group_input_011_1.outputs[82], 'name'):
        group_input_011_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_011_1.outputs[82], 'show_expanded'):
        group_input_011_1.outputs[82].show_expanded = False
    if hasattr(group_input_011_1.outputs[83], 'default_value'):
        group_input_011_1.outputs[83].default_value = 0.0
    if hasattr(group_input_011_1.outputs[83], 'display_shape'):
        group_input_011_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[83], 'enabled'):
        group_input_011_1.outputs[83].enabled = True
    if hasattr(group_input_011_1.outputs[83], 'hide'):
        group_input_011_1.outputs[83].hide = True
    if hasattr(group_input_011_1.outputs[83], 'hide_value'):
        group_input_011_1.outputs[83].hide_value = False
    if hasattr(group_input_011_1.outputs[83], 'name'):
        group_input_011_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_011_1.outputs[83], 'show_expanded'):
        group_input_011_1.outputs[83].show_expanded = False
    if hasattr(group_input_011_1.outputs[84], 'default_value'):
        group_input_011_1.outputs[84].default_value = 0.0
    if hasattr(group_input_011_1.outputs[84], 'display_shape'):
        group_input_011_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[84], 'enabled'):
        group_input_011_1.outputs[84].enabled = True
    if hasattr(group_input_011_1.outputs[84], 'hide'):
        group_input_011_1.outputs[84].hide = True
    if hasattr(group_input_011_1.outputs[84], 'hide_value'):
        group_input_011_1.outputs[84].hide_value = False
    if hasattr(group_input_011_1.outputs[84], 'name'):
        group_input_011_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_011_1.outputs[84], 'show_expanded'):
        group_input_011_1.outputs[84].show_expanded = False
    if hasattr(group_input_011_1.outputs[85], 'default_value'):
        group_input_011_1.outputs[85].default_value = 0.0
    if hasattr(group_input_011_1.outputs[85], 'display_shape'):
        group_input_011_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[85], 'enabled'):
        group_input_011_1.outputs[85].enabled = True
    if hasattr(group_input_011_1.outputs[85], 'hide'):
        group_input_011_1.outputs[85].hide = True
    if hasattr(group_input_011_1.outputs[85], 'hide_value'):
        group_input_011_1.outputs[85].hide_value = False
    if hasattr(group_input_011_1.outputs[85], 'name'):
        group_input_011_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_011_1.outputs[85], 'show_expanded'):
        group_input_011_1.outputs[85].show_expanded = False
    if hasattr(group_input_011_1.outputs[86], 'default_value'):
        group_input_011_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_011_1.outputs[86], 'display_shape'):
        group_input_011_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[86], 'enabled'):
        group_input_011_1.outputs[86].enabled = True
    if hasattr(group_input_011_1.outputs[86], 'hide'):
        group_input_011_1.outputs[86].hide = True
    if hasattr(group_input_011_1.outputs[86], 'hide_value'):
        group_input_011_1.outputs[86].hide_value = False
    if hasattr(group_input_011_1.outputs[86], 'name'):
        group_input_011_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_011_1.outputs[86], 'show_expanded'):
        group_input_011_1.outputs[86].show_expanded = False
    if hasattr(group_input_011_1.outputs[87], 'default_value'):
        group_input_011_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_011_1.outputs[87], 'display_shape'):
        group_input_011_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[87], 'enabled'):
        group_input_011_1.outputs[87].enabled = True
    if hasattr(group_input_011_1.outputs[87], 'hide'):
        group_input_011_1.outputs[87].hide = True
    if hasattr(group_input_011_1.outputs[87], 'hide_value'):
        group_input_011_1.outputs[87].hide_value = False
    if hasattr(group_input_011_1.outputs[87], 'name'):
        group_input_011_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_011_1.outputs[87], 'show_expanded'):
        group_input_011_1.outputs[87].show_expanded = False
    if hasattr(group_input_011_1.outputs[88], 'default_value'):
        group_input_011_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_011_1.outputs[88], 'display_shape'):
        group_input_011_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[88], 'enabled'):
        group_input_011_1.outputs[88].enabled = True
    if hasattr(group_input_011_1.outputs[88], 'hide'):
        group_input_011_1.outputs[88].hide = True
    if hasattr(group_input_011_1.outputs[88], 'hide_value'):
        group_input_011_1.outputs[88].hide_value = False
    if hasattr(group_input_011_1.outputs[88], 'name'):
        group_input_011_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_011_1.outputs[88], 'show_expanded'):
        group_input_011_1.outputs[88].show_expanded = False
    if hasattr(group_input_011_1.outputs[89], 'default_value'):
        group_input_011_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_011_1.outputs[89], 'display_shape'):
        group_input_011_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[89], 'enabled'):
        group_input_011_1.outputs[89].enabled = True
    if hasattr(group_input_011_1.outputs[89], 'hide'):
        group_input_011_1.outputs[89].hide = True
    if hasattr(group_input_011_1.outputs[89], 'hide_value'):
        group_input_011_1.outputs[89].hide_value = False
    if hasattr(group_input_011_1.outputs[89], 'name'):
        group_input_011_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_011_1.outputs[89], 'show_expanded'):
        group_input_011_1.outputs[89].show_expanded = False
    if hasattr(group_input_011_1.outputs[90], 'default_value'):
        group_input_011_1.outputs[90].default_value = 0.0
    if hasattr(group_input_011_1.outputs[90], 'display_shape'):
        group_input_011_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[90], 'enabled'):
        group_input_011_1.outputs[90].enabled = True
    if hasattr(group_input_011_1.outputs[90], 'hide'):
        group_input_011_1.outputs[90].hide = True
    if hasattr(group_input_011_1.outputs[90], 'hide_value'):
        group_input_011_1.outputs[90].hide_value = False
    if hasattr(group_input_011_1.outputs[90], 'name'):
        group_input_011_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_011_1.outputs[90], 'show_expanded'):
        group_input_011_1.outputs[90].show_expanded = False
    if hasattr(group_input_011_1.outputs[91], 'default_value'):
        group_input_011_1.outputs[91].default_value = 0.0
    if hasattr(group_input_011_1.outputs[91], 'display_shape'):
        group_input_011_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[91], 'enabled'):
        group_input_011_1.outputs[91].enabled = True
    if hasattr(group_input_011_1.outputs[91], 'hide'):
        group_input_011_1.outputs[91].hide = True
    if hasattr(group_input_011_1.outputs[91], 'hide_value'):
        group_input_011_1.outputs[91].hide_value = False
    if hasattr(group_input_011_1.outputs[91], 'name'):
        group_input_011_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_011_1.outputs[91], 'show_expanded'):
        group_input_011_1.outputs[91].show_expanded = False
    if hasattr(group_input_011_1.outputs[92], 'default_value'):
        group_input_011_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_011_1.outputs[92], 'display_shape'):
        group_input_011_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[92], 'enabled'):
        group_input_011_1.outputs[92].enabled = True
    if hasattr(group_input_011_1.outputs[92], 'hide'):
        group_input_011_1.outputs[92].hide = True
    if hasattr(group_input_011_1.outputs[92], 'hide_value'):
        group_input_011_1.outputs[92].hide_value = False
    if hasattr(group_input_011_1.outputs[92], 'name'):
        group_input_011_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_011_1.outputs[92], 'show_expanded'):
        group_input_011_1.outputs[92].show_expanded = False
    if hasattr(group_input_011_1.outputs[93], 'default_value'):
        group_input_011_1.outputs[93].default_value = 0.0
    if hasattr(group_input_011_1.outputs[93], 'display_shape'):
        group_input_011_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[93], 'enabled'):
        group_input_011_1.outputs[93].enabled = True
    if hasattr(group_input_011_1.outputs[93], 'hide'):
        group_input_011_1.outputs[93].hide = True
    if hasattr(group_input_011_1.outputs[93], 'hide_value'):
        group_input_011_1.outputs[93].hide_value = False
    if hasattr(group_input_011_1.outputs[93], 'name'):
        group_input_011_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_011_1.outputs[93], 'show_expanded'):
        group_input_011_1.outputs[93].show_expanded = False
    if hasattr(group_input_011_1.outputs[94], 'default_value'):
        group_input_011_1.outputs[94].default_value = 0.0
    if hasattr(group_input_011_1.outputs[94], 'display_shape'):
        group_input_011_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[94], 'enabled'):
        group_input_011_1.outputs[94].enabled = True
    if hasattr(group_input_011_1.outputs[94], 'hide'):
        group_input_011_1.outputs[94].hide = True
    if hasattr(group_input_011_1.outputs[94], 'hide_value'):
        group_input_011_1.outputs[94].hide_value = False
    if hasattr(group_input_011_1.outputs[94], 'name'):
        group_input_011_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_011_1.outputs[94], 'show_expanded'):
        group_input_011_1.outputs[94].show_expanded = False
    if hasattr(group_input_011_1.outputs[95], 'default_value'):
        group_input_011_1.outputs[95].default_value = 0.0
    if hasattr(group_input_011_1.outputs[95], 'display_shape'):
        group_input_011_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[95], 'enabled'):
        group_input_011_1.outputs[95].enabled = True
    if hasattr(group_input_011_1.outputs[95], 'hide'):
        group_input_011_1.outputs[95].hide = True
    if hasattr(group_input_011_1.outputs[95], 'hide_value'):
        group_input_011_1.outputs[95].hide_value = False
    if hasattr(group_input_011_1.outputs[95], 'name'):
        group_input_011_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_011_1.outputs[95], 'show_expanded'):
        group_input_011_1.outputs[95].show_expanded = False
    if hasattr(group_input_011_1.outputs[96], 'default_value'):
        group_input_011_1.outputs[96].default_value = 0.0
    if hasattr(group_input_011_1.outputs[96], 'display_shape'):
        group_input_011_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[96], 'enabled'):
        group_input_011_1.outputs[96].enabled = True
    if hasattr(group_input_011_1.outputs[96], 'hide'):
        group_input_011_1.outputs[96].hide = True
    if hasattr(group_input_011_1.outputs[96], 'hide_value'):
        group_input_011_1.outputs[96].hide_value = False
    if hasattr(group_input_011_1.outputs[96], 'name'):
        group_input_011_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_011_1.outputs[96], 'show_expanded'):
        group_input_011_1.outputs[96].show_expanded = False
    if hasattr(group_input_011_1.outputs[97], 'default_value'):
        group_input_011_1.outputs[97].default_value = 0.0
    if hasattr(group_input_011_1.outputs[97], 'display_shape'):
        group_input_011_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[97], 'enabled'):
        group_input_011_1.outputs[97].enabled = True
    if hasattr(group_input_011_1.outputs[97], 'hide'):
        group_input_011_1.outputs[97].hide = True
    if hasattr(group_input_011_1.outputs[97], 'hide_value'):
        group_input_011_1.outputs[97].hide_value = False
    if hasattr(group_input_011_1.outputs[97], 'name'):
        group_input_011_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_011_1.outputs[97], 'show_expanded'):
        group_input_011_1.outputs[97].show_expanded = False
    if hasattr(group_input_011_1.outputs[98], 'default_value'):
        group_input_011_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_011_1.outputs[98], 'display_shape'):
        group_input_011_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[98], 'enabled'):
        group_input_011_1.outputs[98].enabled = True
    if hasattr(group_input_011_1.outputs[98], 'hide'):
        group_input_011_1.outputs[98].hide = True
    if hasattr(group_input_011_1.outputs[98], 'hide_value'):
        group_input_011_1.outputs[98].hide_value = False
    if hasattr(group_input_011_1.outputs[98], 'name'):
        group_input_011_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_011_1.outputs[98], 'show_expanded'):
        group_input_011_1.outputs[98].show_expanded = False
    if hasattr(group_input_011_1.outputs[99], 'default_value'):
        group_input_011_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_011_1.outputs[99], 'display_shape'):
        group_input_011_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[99], 'enabled'):
        group_input_011_1.outputs[99].enabled = True
    if hasattr(group_input_011_1.outputs[99], 'hide'):
        group_input_011_1.outputs[99].hide = True
    if hasattr(group_input_011_1.outputs[99], 'hide_value'):
        group_input_011_1.outputs[99].hide_value = False
    if hasattr(group_input_011_1.outputs[99], 'name'):
        group_input_011_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_011_1.outputs[99], 'show_expanded'):
        group_input_011_1.outputs[99].show_expanded = False
    if hasattr(group_input_011_1.outputs[100], 'default_value'):
        group_input_011_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_011_1.outputs[100], 'display_shape'):
        group_input_011_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[100], 'enabled'):
        group_input_011_1.outputs[100].enabled = True
    if hasattr(group_input_011_1.outputs[100], 'hide'):
        group_input_011_1.outputs[100].hide = True
    if hasattr(group_input_011_1.outputs[100], 'hide_value'):
        group_input_011_1.outputs[100].hide_value = False
    if hasattr(group_input_011_1.outputs[100], 'name'):
        group_input_011_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_011_1.outputs[100], 'show_expanded'):
        group_input_011_1.outputs[100].show_expanded = False
    if hasattr(group_input_011_1.outputs[101], 'default_value'):
        group_input_011_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_011_1.outputs[101], 'display_shape'):
        group_input_011_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_011_1.outputs[101], 'enabled'):
        group_input_011_1.outputs[101].enabled = True
    if hasattr(group_input_011_1.outputs[101], 'hide'):
        group_input_011_1.outputs[101].hide = True
    if hasattr(group_input_011_1.outputs[101], 'hide_value'):
        group_input_011_1.outputs[101].hide_value = False
    if hasattr(group_input_011_1.outputs[101], 'name'):
        group_input_011_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_011_1.outputs[101], 'show_expanded'):
        group_input_011_1.outputs[101].show_expanded = False

    group_input_013_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_013_1, 'color'):
        group_input_013_1.color = (0.11927573382854462, 0.11927573382854462, 0.11927573382854462)
    if hasattr(group_input_013_1, 'hide'):
        group_input_013_1.hide = False
    if hasattr(group_input_013_1, 'label'):
        group_input_013_1.label = 'Dust'
    if hasattr(group_input_013_1, 'location'):
        group_input_013_1.location = (-2060.0, 1180.0)
    if hasattr(group_input_013_1, 'mute'):
        group_input_013_1.mute = False
    if hasattr(group_input_013_1, 'name'):
        group_input_013_1.name = 'Group Input.013'
    if hasattr(group_input_013_1, 'use_custom_color'):
        group_input_013_1.use_custom_color = True
    if hasattr(group_input_013_1, 'width'):
        group_input_013_1.width = 179.714111328125
    if hasattr(group_input_013_1.outputs[0], 'default_value'):
        group_input_013_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[0], 'display_shape'):
        group_input_013_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[0], 'enabled'):
        group_input_013_1.outputs[0].enabled = True
    if hasattr(group_input_013_1.outputs[0], 'hide'):
        group_input_013_1.outputs[0].hide = True
    if hasattr(group_input_013_1.outputs[0], 'hide_value'):
        group_input_013_1.outputs[0].hide_value = False
    if hasattr(group_input_013_1.outputs[0], 'name'):
        group_input_013_1.outputs[0].name = 'ASG'
    if hasattr(group_input_013_1.outputs[0], 'show_expanded'):
        group_input_013_1.outputs[0].show_expanded = False
    if hasattr(group_input_013_1.outputs[1], 'default_value'):
        group_input_013_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[1], 'display_shape'):
        group_input_013_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[1], 'enabled'):
        group_input_013_1.outputs[1].enabled = True
    if hasattr(group_input_013_1.outputs[1], 'hide'):
        group_input_013_1.outputs[1].hide = True
    if hasattr(group_input_013_1.outputs[1], 'hide_value'):
        group_input_013_1.outputs[1].hide_value = False
    if hasattr(group_input_013_1.outputs[1], 'name'):
        group_input_013_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_013_1.outputs[1], 'show_expanded'):
        group_input_013_1.outputs[1].show_expanded = False
    if hasattr(group_input_013_1.outputs[2], 'default_value'):
        group_input_013_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[2], 'display_shape'):
        group_input_013_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[2], 'enabled'):
        group_input_013_1.outputs[2].enabled = True
    if hasattr(group_input_013_1.outputs[2], 'hide'):
        group_input_013_1.outputs[2].hide = True
    if hasattr(group_input_013_1.outputs[2], 'hide_value'):
        group_input_013_1.outputs[2].hide_value = False
    if hasattr(group_input_013_1.outputs[2], 'name'):
        group_input_013_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_013_1.outputs[2], 'show_expanded'):
        group_input_013_1.outputs[2].show_expanded = False
    if hasattr(group_input_013_1.outputs[3], 'default_value'):
        group_input_013_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[3], 'display_shape'):
        group_input_013_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[3], 'enabled'):
        group_input_013_1.outputs[3].enabled = True
    if hasattr(group_input_013_1.outputs[3], 'hide'):
        group_input_013_1.outputs[3].hide = True
    if hasattr(group_input_013_1.outputs[3], 'hide_value'):
        group_input_013_1.outputs[3].hide_value = False
    if hasattr(group_input_013_1.outputs[3], 'name'):
        group_input_013_1.outputs[3].name = 'Normal'
    if hasattr(group_input_013_1.outputs[3], 'show_expanded'):
        group_input_013_1.outputs[3].show_expanded = False
    if hasattr(group_input_013_1.outputs[4], 'default_value'):
        group_input_013_1.outputs[4].default_value = 0.0
    if hasattr(group_input_013_1.outputs[4], 'display_shape'):
        group_input_013_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[4], 'enabled'):
        group_input_013_1.outputs[4].enabled = True
    if hasattr(group_input_013_1.outputs[4], 'hide'):
        group_input_013_1.outputs[4].hide = True
    if hasattr(group_input_013_1.outputs[4], 'hide_value'):
        group_input_013_1.outputs[4].hide_value = False
    if hasattr(group_input_013_1.outputs[4], 'name'):
        group_input_013_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_013_1.outputs[4], 'show_expanded'):
        group_input_013_1.outputs[4].show_expanded = False
    if hasattr(group_input_013_1.outputs[5], 'default_value'):
        group_input_013_1.outputs[5].default_value = 1.0
    if hasattr(group_input_013_1.outputs[5], 'display_shape'):
        group_input_013_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[5], 'enabled'):
        group_input_013_1.outputs[5].enabled = True
    if hasattr(group_input_013_1.outputs[5], 'hide'):
        group_input_013_1.outputs[5].hide = True
    if hasattr(group_input_013_1.outputs[5], 'hide_value'):
        group_input_013_1.outputs[5].hide_value = False
    if hasattr(group_input_013_1.outputs[5], 'name'):
        group_input_013_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_013_1.outputs[5], 'show_expanded'):
        group_input_013_1.outputs[5].show_expanded = False
    if hasattr(group_input_013_1.outputs[6], 'default_value'):
        group_input_013_1.outputs[6].default_value = 0.0
    if hasattr(group_input_013_1.outputs[6], 'display_shape'):
        group_input_013_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[6], 'enabled'):
        group_input_013_1.outputs[6].enabled = True
    if hasattr(group_input_013_1.outputs[6], 'hide'):
        group_input_013_1.outputs[6].hide = True
    if hasattr(group_input_013_1.outputs[6], 'hide_value'):
        group_input_013_1.outputs[6].hide_value = False
    if hasattr(group_input_013_1.outputs[6], 'name'):
        group_input_013_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_013_1.outputs[6], 'show_expanded'):
        group_input_013_1.outputs[6].show_expanded = False
    if hasattr(group_input_013_1.outputs[7], 'default_value'):
        group_input_013_1.outputs[7].default_value = 0.0
    if hasattr(group_input_013_1.outputs[7], 'display_shape'):
        group_input_013_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[7], 'enabled'):
        group_input_013_1.outputs[7].enabled = True
    if hasattr(group_input_013_1.outputs[7], 'hide'):
        group_input_013_1.outputs[7].hide = True
    if hasattr(group_input_013_1.outputs[7], 'hide_value'):
        group_input_013_1.outputs[7].hide_value = False
    if hasattr(group_input_013_1.outputs[7], 'name'):
        group_input_013_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_013_1.outputs[7], 'show_expanded'):
        group_input_013_1.outputs[7].show_expanded = False
    if hasattr(group_input_013_1.outputs[8], 'default_value'):
        group_input_013_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[8], 'display_shape'):
        group_input_013_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[8], 'enabled'):
        group_input_013_1.outputs[8].enabled = True
    if hasattr(group_input_013_1.outputs[8], 'hide'):
        group_input_013_1.outputs[8].hide = True
    if hasattr(group_input_013_1.outputs[8], 'hide_value'):
        group_input_013_1.outputs[8].hide_value = False
    if hasattr(group_input_013_1.outputs[8], 'name'):
        group_input_013_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_013_1.outputs[8], 'show_expanded'):
        group_input_013_1.outputs[8].show_expanded = False
    if hasattr(group_input_013_1.outputs[9], 'default_value'):
        group_input_013_1.outputs[9].default_value = 0.0
    if hasattr(group_input_013_1.outputs[9], 'display_shape'):
        group_input_013_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[9], 'enabled'):
        group_input_013_1.outputs[9].enabled = True
    if hasattr(group_input_013_1.outputs[9], 'hide'):
        group_input_013_1.outputs[9].hide = True
    if hasattr(group_input_013_1.outputs[9], 'hide_value'):
        group_input_013_1.outputs[9].hide_value = False
    if hasattr(group_input_013_1.outputs[9], 'name'):
        group_input_013_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_013_1.outputs[9], 'show_expanded'):
        group_input_013_1.outputs[9].show_expanded = False
    if hasattr(group_input_013_1.outputs[10], 'default_value'):
        group_input_013_1.outputs[10].default_value = 0.0
    if hasattr(group_input_013_1.outputs[10], 'display_shape'):
        group_input_013_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[10], 'enabled'):
        group_input_013_1.outputs[10].enabled = True
    if hasattr(group_input_013_1.outputs[10], 'hide'):
        group_input_013_1.outputs[10].hide = True
    if hasattr(group_input_013_1.outputs[10], 'hide_value'):
        group_input_013_1.outputs[10].hide_value = False
    if hasattr(group_input_013_1.outputs[10], 'name'):
        group_input_013_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_013_1.outputs[10], 'show_expanded'):
        group_input_013_1.outputs[10].show_expanded = False
    if hasattr(group_input_013_1.outputs[11], 'default_value'):
        group_input_013_1.outputs[11].default_value = 0.0
    if hasattr(group_input_013_1.outputs[11], 'display_shape'):
        group_input_013_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[11], 'enabled'):
        group_input_013_1.outputs[11].enabled = True
    if hasattr(group_input_013_1.outputs[11], 'hide'):
        group_input_013_1.outputs[11].hide = True
    if hasattr(group_input_013_1.outputs[11], 'hide_value'):
        group_input_013_1.outputs[11].hide_value = False
    if hasattr(group_input_013_1.outputs[11], 'name'):
        group_input_013_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_013_1.outputs[11], 'show_expanded'):
        group_input_013_1.outputs[11].show_expanded = False
    if hasattr(group_input_013_1.outputs[12], 'default_value'):
        group_input_013_1.outputs[12].default_value = 0.0
    if hasattr(group_input_013_1.outputs[12], 'display_shape'):
        group_input_013_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[12], 'enabled'):
        group_input_013_1.outputs[12].enabled = True
    if hasattr(group_input_013_1.outputs[12], 'hide'):
        group_input_013_1.outputs[12].hide = True
    if hasattr(group_input_013_1.outputs[12], 'hide_value'):
        group_input_013_1.outputs[12].hide_value = False
    if hasattr(group_input_013_1.outputs[12], 'name'):
        group_input_013_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_013_1.outputs[12], 'show_expanded'):
        group_input_013_1.outputs[12].show_expanded = False
    if hasattr(group_input_013_1.outputs[13], 'default_value'):
        group_input_013_1.outputs[13].default_value = 0.0
    if hasattr(group_input_013_1.outputs[13], 'display_shape'):
        group_input_013_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[13], 'enabled'):
        group_input_013_1.outputs[13].enabled = True
    if hasattr(group_input_013_1.outputs[13], 'hide'):
        group_input_013_1.outputs[13].hide = True
    if hasattr(group_input_013_1.outputs[13], 'hide_value'):
        group_input_013_1.outputs[13].hide_value = False
    if hasattr(group_input_013_1.outputs[13], 'name'):
        group_input_013_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_013_1.outputs[13], 'show_expanded'):
        group_input_013_1.outputs[13].show_expanded = False
    if hasattr(group_input_013_1.outputs[14], 'default_value'):
        group_input_013_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_013_1.outputs[14], 'display_shape'):
        group_input_013_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[14], 'enabled'):
        group_input_013_1.outputs[14].enabled = True
    if hasattr(group_input_013_1.outputs[14], 'hide'):
        group_input_013_1.outputs[14].hide = True
    if hasattr(group_input_013_1.outputs[14], 'hide_value'):
        group_input_013_1.outputs[14].hide_value = False
    if hasattr(group_input_013_1.outputs[14], 'name'):
        group_input_013_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_013_1.outputs[14], 'show_expanded'):
        group_input_013_1.outputs[14].show_expanded = False
    if hasattr(group_input_013_1.outputs[15], 'default_value'):
        group_input_013_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_013_1.outputs[15], 'display_shape'):
        group_input_013_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[15], 'enabled'):
        group_input_013_1.outputs[15].enabled = True
    if hasattr(group_input_013_1.outputs[15], 'hide'):
        group_input_013_1.outputs[15].hide = True
    if hasattr(group_input_013_1.outputs[15], 'hide_value'):
        group_input_013_1.outputs[15].hide_value = False
    if hasattr(group_input_013_1.outputs[15], 'name'):
        group_input_013_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_013_1.outputs[15], 'show_expanded'):
        group_input_013_1.outputs[15].show_expanded = False
    if hasattr(group_input_013_1.outputs[16], 'default_value'):
        group_input_013_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_013_1.outputs[16], 'display_shape'):
        group_input_013_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[16], 'enabled'):
        group_input_013_1.outputs[16].enabled = True
    if hasattr(group_input_013_1.outputs[16], 'hide'):
        group_input_013_1.outputs[16].hide = True
    if hasattr(group_input_013_1.outputs[16], 'hide_value'):
        group_input_013_1.outputs[16].hide_value = False
    if hasattr(group_input_013_1.outputs[16], 'name'):
        group_input_013_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_013_1.outputs[16], 'show_expanded'):
        group_input_013_1.outputs[16].show_expanded = False
    if hasattr(group_input_013_1.outputs[17], 'default_value'):
        group_input_013_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_013_1.outputs[17], 'display_shape'):
        group_input_013_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[17], 'enabled'):
        group_input_013_1.outputs[17].enabled = True
    if hasattr(group_input_013_1.outputs[17], 'hide'):
        group_input_013_1.outputs[17].hide = True
    if hasattr(group_input_013_1.outputs[17], 'hide_value'):
        group_input_013_1.outputs[17].hide_value = False
    if hasattr(group_input_013_1.outputs[17], 'name'):
        group_input_013_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_013_1.outputs[17], 'show_expanded'):
        group_input_013_1.outputs[17].show_expanded = False
    if hasattr(group_input_013_1.outputs[18], 'default_value'):
        group_input_013_1.outputs[18].default_value = 0.0
    if hasattr(group_input_013_1.outputs[18], 'display_shape'):
        group_input_013_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[18], 'enabled'):
        group_input_013_1.outputs[18].enabled = True
    if hasattr(group_input_013_1.outputs[18], 'hide'):
        group_input_013_1.outputs[18].hide = True
    if hasattr(group_input_013_1.outputs[18], 'hide_value'):
        group_input_013_1.outputs[18].hide_value = False
    if hasattr(group_input_013_1.outputs[18], 'name'):
        group_input_013_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_013_1.outputs[18], 'show_expanded'):
        group_input_013_1.outputs[18].show_expanded = False
    if hasattr(group_input_013_1.outputs[19], 'default_value'):
        group_input_013_1.outputs[19].default_value = 0.0
    if hasattr(group_input_013_1.outputs[19], 'display_shape'):
        group_input_013_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[19], 'enabled'):
        group_input_013_1.outputs[19].enabled = True
    if hasattr(group_input_013_1.outputs[19], 'hide'):
        group_input_013_1.outputs[19].hide = True
    if hasattr(group_input_013_1.outputs[19], 'hide_value'):
        group_input_013_1.outputs[19].hide_value = False
    if hasattr(group_input_013_1.outputs[19], 'name'):
        group_input_013_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_013_1.outputs[19], 'show_expanded'):
        group_input_013_1.outputs[19].show_expanded = False
    if hasattr(group_input_013_1.outputs[20], 'default_value'):
        group_input_013_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[20], 'display_shape'):
        group_input_013_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[20], 'enabled'):
        group_input_013_1.outputs[20].enabled = True
    if hasattr(group_input_013_1.outputs[20], 'hide'):
        group_input_013_1.outputs[20].hide = True
    if hasattr(group_input_013_1.outputs[20], 'hide_value'):
        group_input_013_1.outputs[20].hide_value = False
    if hasattr(group_input_013_1.outputs[20], 'name'):
        group_input_013_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_013_1.outputs[20], 'show_expanded'):
        group_input_013_1.outputs[20].show_expanded = False
    if hasattr(group_input_013_1.outputs[21], 'default_value'):
        group_input_013_1.outputs[21].default_value = 0.0
    if hasattr(group_input_013_1.outputs[21], 'display_shape'):
        group_input_013_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[21], 'enabled'):
        group_input_013_1.outputs[21].enabled = True
    if hasattr(group_input_013_1.outputs[21], 'hide'):
        group_input_013_1.outputs[21].hide = True
    if hasattr(group_input_013_1.outputs[21], 'hide_value'):
        group_input_013_1.outputs[21].hide_value = False
    if hasattr(group_input_013_1.outputs[21], 'name'):
        group_input_013_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_013_1.outputs[21], 'show_expanded'):
        group_input_013_1.outputs[21].show_expanded = False
    if hasattr(group_input_013_1.outputs[22], 'default_value'):
        group_input_013_1.outputs[22].default_value = 0.0
    if hasattr(group_input_013_1.outputs[22], 'display_shape'):
        group_input_013_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[22], 'enabled'):
        group_input_013_1.outputs[22].enabled = True
    if hasattr(group_input_013_1.outputs[22], 'hide'):
        group_input_013_1.outputs[22].hide = True
    if hasattr(group_input_013_1.outputs[22], 'hide_value'):
        group_input_013_1.outputs[22].hide_value = False
    if hasattr(group_input_013_1.outputs[22], 'name'):
        group_input_013_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_013_1.outputs[22], 'show_expanded'):
        group_input_013_1.outputs[22].show_expanded = False
    if hasattr(group_input_013_1.outputs[23], 'default_value'):
        group_input_013_1.outputs[23].default_value = 0.0
    if hasattr(group_input_013_1.outputs[23], 'display_shape'):
        group_input_013_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[23], 'enabled'):
        group_input_013_1.outputs[23].enabled = True
    if hasattr(group_input_013_1.outputs[23], 'hide'):
        group_input_013_1.outputs[23].hide = True
    if hasattr(group_input_013_1.outputs[23], 'hide_value'):
        group_input_013_1.outputs[23].hide_value = False
    if hasattr(group_input_013_1.outputs[23], 'name'):
        group_input_013_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_013_1.outputs[23], 'show_expanded'):
        group_input_013_1.outputs[23].show_expanded = False
    if hasattr(group_input_013_1.outputs[24], 'default_value'):
        group_input_013_1.outputs[24].default_value = 0.0
    if hasattr(group_input_013_1.outputs[24], 'display_shape'):
        group_input_013_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[24], 'enabled'):
        group_input_013_1.outputs[24].enabled = True
    if hasattr(group_input_013_1.outputs[24], 'hide'):
        group_input_013_1.outputs[24].hide = True
    if hasattr(group_input_013_1.outputs[24], 'hide_value'):
        group_input_013_1.outputs[24].hide_value = False
    if hasattr(group_input_013_1.outputs[24], 'name'):
        group_input_013_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_013_1.outputs[24], 'show_expanded'):
        group_input_013_1.outputs[24].show_expanded = False
    if hasattr(group_input_013_1.outputs[25], 'default_value'):
        group_input_013_1.outputs[25].default_value = 0.0
    if hasattr(group_input_013_1.outputs[25], 'display_shape'):
        group_input_013_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[25], 'enabled'):
        group_input_013_1.outputs[25].enabled = True
    if hasattr(group_input_013_1.outputs[25], 'hide'):
        group_input_013_1.outputs[25].hide = True
    if hasattr(group_input_013_1.outputs[25], 'hide_value'):
        group_input_013_1.outputs[25].hide_value = False
    if hasattr(group_input_013_1.outputs[25], 'name'):
        group_input_013_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_013_1.outputs[25], 'show_expanded'):
        group_input_013_1.outputs[25].show_expanded = False
    if hasattr(group_input_013_1.outputs[26], 'default_value'):
        group_input_013_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_013_1.outputs[26], 'display_shape'):
        group_input_013_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[26], 'enabled'):
        group_input_013_1.outputs[26].enabled = True
    if hasattr(group_input_013_1.outputs[26], 'hide'):
        group_input_013_1.outputs[26].hide = True
    if hasattr(group_input_013_1.outputs[26], 'hide_value'):
        group_input_013_1.outputs[26].hide_value = False
    if hasattr(group_input_013_1.outputs[26], 'name'):
        group_input_013_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_013_1.outputs[26], 'show_expanded'):
        group_input_013_1.outputs[26].show_expanded = False
    if hasattr(group_input_013_1.outputs[27], 'default_value'):
        group_input_013_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_013_1.outputs[27], 'display_shape'):
        group_input_013_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[27], 'enabled'):
        group_input_013_1.outputs[27].enabled = True
    if hasattr(group_input_013_1.outputs[27], 'hide'):
        group_input_013_1.outputs[27].hide = True
    if hasattr(group_input_013_1.outputs[27], 'hide_value'):
        group_input_013_1.outputs[27].hide_value = False
    if hasattr(group_input_013_1.outputs[27], 'name'):
        group_input_013_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_013_1.outputs[27], 'show_expanded'):
        group_input_013_1.outputs[27].show_expanded = False
    if hasattr(group_input_013_1.outputs[28], 'default_value'):
        group_input_013_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_013_1.outputs[28], 'display_shape'):
        group_input_013_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[28], 'enabled'):
        group_input_013_1.outputs[28].enabled = True
    if hasattr(group_input_013_1.outputs[28], 'hide'):
        group_input_013_1.outputs[28].hide = True
    if hasattr(group_input_013_1.outputs[28], 'hide_value'):
        group_input_013_1.outputs[28].hide_value = False
    if hasattr(group_input_013_1.outputs[28], 'name'):
        group_input_013_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_013_1.outputs[28], 'show_expanded'):
        group_input_013_1.outputs[28].show_expanded = False
    if hasattr(group_input_013_1.outputs[29], 'default_value'):
        group_input_013_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_013_1.outputs[29], 'display_shape'):
        group_input_013_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[29], 'enabled'):
        group_input_013_1.outputs[29].enabled = True
    if hasattr(group_input_013_1.outputs[29], 'hide'):
        group_input_013_1.outputs[29].hide = True
    if hasattr(group_input_013_1.outputs[29], 'hide_value'):
        group_input_013_1.outputs[29].hide_value = False
    if hasattr(group_input_013_1.outputs[29], 'name'):
        group_input_013_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_013_1.outputs[29], 'show_expanded'):
        group_input_013_1.outputs[29].show_expanded = False
    if hasattr(group_input_013_1.outputs[30], 'default_value'):
        group_input_013_1.outputs[30].default_value = 0.0
    if hasattr(group_input_013_1.outputs[30], 'display_shape'):
        group_input_013_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[30], 'enabled'):
        group_input_013_1.outputs[30].enabled = True
    if hasattr(group_input_013_1.outputs[30], 'hide'):
        group_input_013_1.outputs[30].hide = True
    if hasattr(group_input_013_1.outputs[30], 'hide_value'):
        group_input_013_1.outputs[30].hide_value = False
    if hasattr(group_input_013_1.outputs[30], 'name'):
        group_input_013_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_013_1.outputs[30], 'show_expanded'):
        group_input_013_1.outputs[30].show_expanded = False
    if hasattr(group_input_013_1.outputs[31], 'default_value'):
        group_input_013_1.outputs[31].default_value = 0.0
    if hasattr(group_input_013_1.outputs[31], 'display_shape'):
        group_input_013_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[31], 'enabled'):
        group_input_013_1.outputs[31].enabled = True
    if hasattr(group_input_013_1.outputs[31], 'hide'):
        group_input_013_1.outputs[31].hide = True
    if hasattr(group_input_013_1.outputs[31], 'hide_value'):
        group_input_013_1.outputs[31].hide_value = False
    if hasattr(group_input_013_1.outputs[31], 'name'):
        group_input_013_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_013_1.outputs[31], 'show_expanded'):
        group_input_013_1.outputs[31].show_expanded = False
    if hasattr(group_input_013_1.outputs[32], 'default_value'):
        group_input_013_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[32], 'display_shape'):
        group_input_013_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[32], 'enabled'):
        group_input_013_1.outputs[32].enabled = True
    if hasattr(group_input_013_1.outputs[32], 'hide'):
        group_input_013_1.outputs[32].hide = True
    if hasattr(group_input_013_1.outputs[32], 'hide_value'):
        group_input_013_1.outputs[32].hide_value = False
    if hasattr(group_input_013_1.outputs[32], 'name'):
        group_input_013_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_013_1.outputs[32], 'show_expanded'):
        group_input_013_1.outputs[32].show_expanded = False
    if hasattr(group_input_013_1.outputs[33], 'default_value'):
        group_input_013_1.outputs[33].default_value = 0.0
    if hasattr(group_input_013_1.outputs[33], 'display_shape'):
        group_input_013_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[33], 'enabled'):
        group_input_013_1.outputs[33].enabled = True
    if hasattr(group_input_013_1.outputs[33], 'hide'):
        group_input_013_1.outputs[33].hide = True
    if hasattr(group_input_013_1.outputs[33], 'hide_value'):
        group_input_013_1.outputs[33].hide_value = False
    if hasattr(group_input_013_1.outputs[33], 'name'):
        group_input_013_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_013_1.outputs[33], 'show_expanded'):
        group_input_013_1.outputs[33].show_expanded = False
    if hasattr(group_input_013_1.outputs[34], 'default_value'):
        group_input_013_1.outputs[34].default_value = 0.0
    if hasattr(group_input_013_1.outputs[34], 'display_shape'):
        group_input_013_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[34], 'enabled'):
        group_input_013_1.outputs[34].enabled = True
    if hasattr(group_input_013_1.outputs[34], 'hide'):
        group_input_013_1.outputs[34].hide = True
    if hasattr(group_input_013_1.outputs[34], 'hide_value'):
        group_input_013_1.outputs[34].hide_value = False
    if hasattr(group_input_013_1.outputs[34], 'name'):
        group_input_013_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_013_1.outputs[34], 'show_expanded'):
        group_input_013_1.outputs[34].show_expanded = False
    if hasattr(group_input_013_1.outputs[35], 'default_value'):
        group_input_013_1.outputs[35].default_value = 0.0
    if hasattr(group_input_013_1.outputs[35], 'display_shape'):
        group_input_013_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[35], 'enabled'):
        group_input_013_1.outputs[35].enabled = True
    if hasattr(group_input_013_1.outputs[35], 'hide'):
        group_input_013_1.outputs[35].hide = True
    if hasattr(group_input_013_1.outputs[35], 'hide_value'):
        group_input_013_1.outputs[35].hide_value = False
    if hasattr(group_input_013_1.outputs[35], 'name'):
        group_input_013_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_013_1.outputs[35], 'show_expanded'):
        group_input_013_1.outputs[35].show_expanded = False
    if hasattr(group_input_013_1.outputs[36], 'default_value'):
        group_input_013_1.outputs[36].default_value = 0.0
    if hasattr(group_input_013_1.outputs[36], 'display_shape'):
        group_input_013_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[36], 'enabled'):
        group_input_013_1.outputs[36].enabled = True
    if hasattr(group_input_013_1.outputs[36], 'hide'):
        group_input_013_1.outputs[36].hide = True
    if hasattr(group_input_013_1.outputs[36], 'hide_value'):
        group_input_013_1.outputs[36].hide_value = False
    if hasattr(group_input_013_1.outputs[36], 'name'):
        group_input_013_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_013_1.outputs[36], 'show_expanded'):
        group_input_013_1.outputs[36].show_expanded = False
    if hasattr(group_input_013_1.outputs[37], 'default_value'):
        group_input_013_1.outputs[37].default_value = 0.0
    if hasattr(group_input_013_1.outputs[37], 'display_shape'):
        group_input_013_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[37], 'enabled'):
        group_input_013_1.outputs[37].enabled = True
    if hasattr(group_input_013_1.outputs[37], 'hide'):
        group_input_013_1.outputs[37].hide = True
    if hasattr(group_input_013_1.outputs[37], 'hide_value'):
        group_input_013_1.outputs[37].hide_value = False
    if hasattr(group_input_013_1.outputs[37], 'name'):
        group_input_013_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_013_1.outputs[37], 'show_expanded'):
        group_input_013_1.outputs[37].show_expanded = False
    if hasattr(group_input_013_1.outputs[38], 'default_value'):
        group_input_013_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_013_1.outputs[38], 'display_shape'):
        group_input_013_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[38], 'enabled'):
        group_input_013_1.outputs[38].enabled = True
    if hasattr(group_input_013_1.outputs[38], 'hide'):
        group_input_013_1.outputs[38].hide = True
    if hasattr(group_input_013_1.outputs[38], 'hide_value'):
        group_input_013_1.outputs[38].hide_value = False
    if hasattr(group_input_013_1.outputs[38], 'name'):
        group_input_013_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_013_1.outputs[38], 'show_expanded'):
        group_input_013_1.outputs[38].show_expanded = False
    if hasattr(group_input_013_1.outputs[39], 'default_value'):
        group_input_013_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_013_1.outputs[39], 'display_shape'):
        group_input_013_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[39], 'enabled'):
        group_input_013_1.outputs[39].enabled = True
    if hasattr(group_input_013_1.outputs[39], 'hide'):
        group_input_013_1.outputs[39].hide = True
    if hasattr(group_input_013_1.outputs[39], 'hide_value'):
        group_input_013_1.outputs[39].hide_value = False
    if hasattr(group_input_013_1.outputs[39], 'name'):
        group_input_013_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_013_1.outputs[39], 'show_expanded'):
        group_input_013_1.outputs[39].show_expanded = False
    if hasattr(group_input_013_1.outputs[40], 'default_value'):
        group_input_013_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_013_1.outputs[40], 'display_shape'):
        group_input_013_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[40], 'enabled'):
        group_input_013_1.outputs[40].enabled = True
    if hasattr(group_input_013_1.outputs[40], 'hide'):
        group_input_013_1.outputs[40].hide = True
    if hasattr(group_input_013_1.outputs[40], 'hide_value'):
        group_input_013_1.outputs[40].hide_value = False
    if hasattr(group_input_013_1.outputs[40], 'name'):
        group_input_013_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_013_1.outputs[40], 'show_expanded'):
        group_input_013_1.outputs[40].show_expanded = False
    if hasattr(group_input_013_1.outputs[41], 'default_value'):
        group_input_013_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_013_1.outputs[41], 'display_shape'):
        group_input_013_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[41], 'enabled'):
        group_input_013_1.outputs[41].enabled = True
    if hasattr(group_input_013_1.outputs[41], 'hide'):
        group_input_013_1.outputs[41].hide = True
    if hasattr(group_input_013_1.outputs[41], 'hide_value'):
        group_input_013_1.outputs[41].hide_value = False
    if hasattr(group_input_013_1.outputs[41], 'name'):
        group_input_013_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_013_1.outputs[41], 'show_expanded'):
        group_input_013_1.outputs[41].show_expanded = False
    if hasattr(group_input_013_1.outputs[42], 'default_value'):
        group_input_013_1.outputs[42].default_value = 0.0
    if hasattr(group_input_013_1.outputs[42], 'display_shape'):
        group_input_013_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[42], 'enabled'):
        group_input_013_1.outputs[42].enabled = True
    if hasattr(group_input_013_1.outputs[42], 'hide'):
        group_input_013_1.outputs[42].hide = True
    if hasattr(group_input_013_1.outputs[42], 'hide_value'):
        group_input_013_1.outputs[42].hide_value = False
    if hasattr(group_input_013_1.outputs[42], 'name'):
        group_input_013_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_013_1.outputs[42], 'show_expanded'):
        group_input_013_1.outputs[42].show_expanded = False
    if hasattr(group_input_013_1.outputs[43], 'default_value'):
        group_input_013_1.outputs[43].default_value = 0.0
    if hasattr(group_input_013_1.outputs[43], 'display_shape'):
        group_input_013_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[43], 'enabled'):
        group_input_013_1.outputs[43].enabled = True
    if hasattr(group_input_013_1.outputs[43], 'hide'):
        group_input_013_1.outputs[43].hide = True
    if hasattr(group_input_013_1.outputs[43], 'hide_value'):
        group_input_013_1.outputs[43].hide_value = False
    if hasattr(group_input_013_1.outputs[43], 'name'):
        group_input_013_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_013_1.outputs[43], 'show_expanded'):
        group_input_013_1.outputs[43].show_expanded = False
    if hasattr(group_input_013_1.outputs[44], 'default_value'):
        group_input_013_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[44], 'display_shape'):
        group_input_013_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[44], 'enabled'):
        group_input_013_1.outputs[44].enabled = True
    if hasattr(group_input_013_1.outputs[44], 'hide'):
        group_input_013_1.outputs[44].hide = True
    if hasattr(group_input_013_1.outputs[44], 'hide_value'):
        group_input_013_1.outputs[44].hide_value = False
    if hasattr(group_input_013_1.outputs[44], 'name'):
        group_input_013_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_013_1.outputs[44], 'show_expanded'):
        group_input_013_1.outputs[44].show_expanded = False
    if hasattr(group_input_013_1.outputs[45], 'default_value'):
        group_input_013_1.outputs[45].default_value = 0.0
    if hasattr(group_input_013_1.outputs[45], 'display_shape'):
        group_input_013_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[45], 'enabled'):
        group_input_013_1.outputs[45].enabled = True
    if hasattr(group_input_013_1.outputs[45], 'hide'):
        group_input_013_1.outputs[45].hide = True
    if hasattr(group_input_013_1.outputs[45], 'hide_value'):
        group_input_013_1.outputs[45].hide_value = False
    if hasattr(group_input_013_1.outputs[45], 'name'):
        group_input_013_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_013_1.outputs[45], 'show_expanded'):
        group_input_013_1.outputs[45].show_expanded = False
    if hasattr(group_input_013_1.outputs[46], 'default_value'):
        group_input_013_1.outputs[46].default_value = 0.0
    if hasattr(group_input_013_1.outputs[46], 'display_shape'):
        group_input_013_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[46], 'enabled'):
        group_input_013_1.outputs[46].enabled = True
    if hasattr(group_input_013_1.outputs[46], 'hide'):
        group_input_013_1.outputs[46].hide = True
    if hasattr(group_input_013_1.outputs[46], 'hide_value'):
        group_input_013_1.outputs[46].hide_value = False
    if hasattr(group_input_013_1.outputs[46], 'name'):
        group_input_013_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_013_1.outputs[46], 'show_expanded'):
        group_input_013_1.outputs[46].show_expanded = False
    if hasattr(group_input_013_1.outputs[47], 'default_value'):
        group_input_013_1.outputs[47].default_value = 0.0
    if hasattr(group_input_013_1.outputs[47], 'display_shape'):
        group_input_013_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[47], 'enabled'):
        group_input_013_1.outputs[47].enabled = True
    if hasattr(group_input_013_1.outputs[47], 'hide'):
        group_input_013_1.outputs[47].hide = True
    if hasattr(group_input_013_1.outputs[47], 'hide_value'):
        group_input_013_1.outputs[47].hide_value = False
    if hasattr(group_input_013_1.outputs[47], 'name'):
        group_input_013_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_013_1.outputs[47], 'show_expanded'):
        group_input_013_1.outputs[47].show_expanded = False
    if hasattr(group_input_013_1.outputs[48], 'default_value'):
        group_input_013_1.outputs[48].default_value = 0.0
    if hasattr(group_input_013_1.outputs[48], 'display_shape'):
        group_input_013_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[48], 'enabled'):
        group_input_013_1.outputs[48].enabled = True
    if hasattr(group_input_013_1.outputs[48], 'hide'):
        group_input_013_1.outputs[48].hide = True
    if hasattr(group_input_013_1.outputs[48], 'hide_value'):
        group_input_013_1.outputs[48].hide_value = False
    if hasattr(group_input_013_1.outputs[48], 'name'):
        group_input_013_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_013_1.outputs[48], 'show_expanded'):
        group_input_013_1.outputs[48].show_expanded = False
    if hasattr(group_input_013_1.outputs[49], 'default_value'):
        group_input_013_1.outputs[49].default_value = 0.0
    if hasattr(group_input_013_1.outputs[49], 'display_shape'):
        group_input_013_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[49], 'enabled'):
        group_input_013_1.outputs[49].enabled = True
    if hasattr(group_input_013_1.outputs[49], 'hide'):
        group_input_013_1.outputs[49].hide = True
    if hasattr(group_input_013_1.outputs[49], 'hide_value'):
        group_input_013_1.outputs[49].hide_value = False
    if hasattr(group_input_013_1.outputs[49], 'name'):
        group_input_013_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_013_1.outputs[49], 'show_expanded'):
        group_input_013_1.outputs[49].show_expanded = False
    if hasattr(group_input_013_1.outputs[50], 'default_value'):
        group_input_013_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_013_1.outputs[50], 'display_shape'):
        group_input_013_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[50], 'enabled'):
        group_input_013_1.outputs[50].enabled = True
    if hasattr(group_input_013_1.outputs[50], 'hide'):
        group_input_013_1.outputs[50].hide = True
    if hasattr(group_input_013_1.outputs[50], 'hide_value'):
        group_input_013_1.outputs[50].hide_value = False
    if hasattr(group_input_013_1.outputs[50], 'name'):
        group_input_013_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_013_1.outputs[50], 'show_expanded'):
        group_input_013_1.outputs[50].show_expanded = False
    if hasattr(group_input_013_1.outputs[51], 'default_value'):
        group_input_013_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_013_1.outputs[51], 'display_shape'):
        group_input_013_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[51], 'enabled'):
        group_input_013_1.outputs[51].enabled = True
    if hasattr(group_input_013_1.outputs[51], 'hide'):
        group_input_013_1.outputs[51].hide = True
    if hasattr(group_input_013_1.outputs[51], 'hide_value'):
        group_input_013_1.outputs[51].hide_value = False
    if hasattr(group_input_013_1.outputs[51], 'name'):
        group_input_013_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_013_1.outputs[51], 'show_expanded'):
        group_input_013_1.outputs[51].show_expanded = False
    if hasattr(group_input_013_1.outputs[52], 'default_value'):
        group_input_013_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_013_1.outputs[52], 'display_shape'):
        group_input_013_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[52], 'enabled'):
        group_input_013_1.outputs[52].enabled = True
    if hasattr(group_input_013_1.outputs[52], 'hide'):
        group_input_013_1.outputs[52].hide = True
    if hasattr(group_input_013_1.outputs[52], 'hide_value'):
        group_input_013_1.outputs[52].hide_value = False
    if hasattr(group_input_013_1.outputs[52], 'name'):
        group_input_013_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_013_1.outputs[52], 'show_expanded'):
        group_input_013_1.outputs[52].show_expanded = False
    if hasattr(group_input_013_1.outputs[53], 'default_value'):
        group_input_013_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_013_1.outputs[53], 'display_shape'):
        group_input_013_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[53], 'enabled'):
        group_input_013_1.outputs[53].enabled = True
    if hasattr(group_input_013_1.outputs[53], 'hide'):
        group_input_013_1.outputs[53].hide = True
    if hasattr(group_input_013_1.outputs[53], 'hide_value'):
        group_input_013_1.outputs[53].hide_value = False
    if hasattr(group_input_013_1.outputs[53], 'name'):
        group_input_013_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_013_1.outputs[53], 'show_expanded'):
        group_input_013_1.outputs[53].show_expanded = False
    if hasattr(group_input_013_1.outputs[54], 'default_value'):
        group_input_013_1.outputs[54].default_value = 0.0
    if hasattr(group_input_013_1.outputs[54], 'display_shape'):
        group_input_013_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[54], 'enabled'):
        group_input_013_1.outputs[54].enabled = True
    if hasattr(group_input_013_1.outputs[54], 'hide'):
        group_input_013_1.outputs[54].hide = True
    if hasattr(group_input_013_1.outputs[54], 'hide_value'):
        group_input_013_1.outputs[54].hide_value = False
    if hasattr(group_input_013_1.outputs[54], 'name'):
        group_input_013_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_013_1.outputs[54], 'show_expanded'):
        group_input_013_1.outputs[54].show_expanded = False
    if hasattr(group_input_013_1.outputs[55], 'default_value'):
        group_input_013_1.outputs[55].default_value = 0.0
    if hasattr(group_input_013_1.outputs[55], 'display_shape'):
        group_input_013_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[55], 'enabled'):
        group_input_013_1.outputs[55].enabled = True
    if hasattr(group_input_013_1.outputs[55], 'hide'):
        group_input_013_1.outputs[55].hide = True
    if hasattr(group_input_013_1.outputs[55], 'hide_value'):
        group_input_013_1.outputs[55].hide_value = False
    if hasattr(group_input_013_1.outputs[55], 'name'):
        group_input_013_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_013_1.outputs[55], 'show_expanded'):
        group_input_013_1.outputs[55].show_expanded = False
    if hasattr(group_input_013_1.outputs[56], 'default_value'):
        group_input_013_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[56], 'display_shape'):
        group_input_013_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[56], 'enabled'):
        group_input_013_1.outputs[56].enabled = True
    if hasattr(group_input_013_1.outputs[56], 'hide'):
        group_input_013_1.outputs[56].hide = True
    if hasattr(group_input_013_1.outputs[56], 'hide_value'):
        group_input_013_1.outputs[56].hide_value = False
    if hasattr(group_input_013_1.outputs[56], 'name'):
        group_input_013_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_013_1.outputs[56], 'show_expanded'):
        group_input_013_1.outputs[56].show_expanded = False
    if hasattr(group_input_013_1.outputs[57], 'default_value'):
        group_input_013_1.outputs[57].default_value = 0.0
    if hasattr(group_input_013_1.outputs[57], 'display_shape'):
        group_input_013_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[57], 'enabled'):
        group_input_013_1.outputs[57].enabled = True
    if hasattr(group_input_013_1.outputs[57], 'hide'):
        group_input_013_1.outputs[57].hide = True
    if hasattr(group_input_013_1.outputs[57], 'hide_value'):
        group_input_013_1.outputs[57].hide_value = False
    if hasattr(group_input_013_1.outputs[57], 'name'):
        group_input_013_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_013_1.outputs[57], 'show_expanded'):
        group_input_013_1.outputs[57].show_expanded = False
    if hasattr(group_input_013_1.outputs[58], 'default_value'):
        group_input_013_1.outputs[58].default_value = 0.0
    if hasattr(group_input_013_1.outputs[58], 'display_shape'):
        group_input_013_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[58], 'enabled'):
        group_input_013_1.outputs[58].enabled = True
    if hasattr(group_input_013_1.outputs[58], 'hide'):
        group_input_013_1.outputs[58].hide = True
    if hasattr(group_input_013_1.outputs[58], 'hide_value'):
        group_input_013_1.outputs[58].hide_value = False
    if hasattr(group_input_013_1.outputs[58], 'name'):
        group_input_013_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_013_1.outputs[58], 'show_expanded'):
        group_input_013_1.outputs[58].show_expanded = False
    if hasattr(group_input_013_1.outputs[59], 'default_value'):
        group_input_013_1.outputs[59].default_value = 0.0
    if hasattr(group_input_013_1.outputs[59], 'display_shape'):
        group_input_013_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[59], 'enabled'):
        group_input_013_1.outputs[59].enabled = True
    if hasattr(group_input_013_1.outputs[59], 'hide'):
        group_input_013_1.outputs[59].hide = True
    if hasattr(group_input_013_1.outputs[59], 'hide_value'):
        group_input_013_1.outputs[59].hide_value = False
    if hasattr(group_input_013_1.outputs[59], 'name'):
        group_input_013_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_013_1.outputs[59], 'show_expanded'):
        group_input_013_1.outputs[59].show_expanded = False
    if hasattr(group_input_013_1.outputs[60], 'default_value'):
        group_input_013_1.outputs[60].default_value = 0.0
    if hasattr(group_input_013_1.outputs[60], 'display_shape'):
        group_input_013_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[60], 'enabled'):
        group_input_013_1.outputs[60].enabled = True
    if hasattr(group_input_013_1.outputs[60], 'hide'):
        group_input_013_1.outputs[60].hide = True
    if hasattr(group_input_013_1.outputs[60], 'hide_value'):
        group_input_013_1.outputs[60].hide_value = False
    if hasattr(group_input_013_1.outputs[60], 'name'):
        group_input_013_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_013_1.outputs[60], 'show_expanded'):
        group_input_013_1.outputs[60].show_expanded = False
    if hasattr(group_input_013_1.outputs[61], 'default_value'):
        group_input_013_1.outputs[61].default_value = 0.0
    if hasattr(group_input_013_1.outputs[61], 'display_shape'):
        group_input_013_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[61], 'enabled'):
        group_input_013_1.outputs[61].enabled = True
    if hasattr(group_input_013_1.outputs[61], 'hide'):
        group_input_013_1.outputs[61].hide = True
    if hasattr(group_input_013_1.outputs[61], 'hide_value'):
        group_input_013_1.outputs[61].hide_value = False
    if hasattr(group_input_013_1.outputs[61], 'name'):
        group_input_013_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_013_1.outputs[61], 'show_expanded'):
        group_input_013_1.outputs[61].show_expanded = False
    if hasattr(group_input_013_1.outputs[62], 'default_value'):
        group_input_013_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_013_1.outputs[62], 'display_shape'):
        group_input_013_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[62], 'enabled'):
        group_input_013_1.outputs[62].enabled = True
    if hasattr(group_input_013_1.outputs[62], 'hide'):
        group_input_013_1.outputs[62].hide = True
    if hasattr(group_input_013_1.outputs[62], 'hide_value'):
        group_input_013_1.outputs[62].hide_value = False
    if hasattr(group_input_013_1.outputs[62], 'name'):
        group_input_013_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_013_1.outputs[62], 'show_expanded'):
        group_input_013_1.outputs[62].show_expanded = False
    if hasattr(group_input_013_1.outputs[63], 'default_value'):
        group_input_013_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_013_1.outputs[63], 'display_shape'):
        group_input_013_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[63], 'enabled'):
        group_input_013_1.outputs[63].enabled = True
    if hasattr(group_input_013_1.outputs[63], 'hide'):
        group_input_013_1.outputs[63].hide = True
    if hasattr(group_input_013_1.outputs[63], 'hide_value'):
        group_input_013_1.outputs[63].hide_value = False
    if hasattr(group_input_013_1.outputs[63], 'name'):
        group_input_013_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_013_1.outputs[63], 'show_expanded'):
        group_input_013_1.outputs[63].show_expanded = False
    if hasattr(group_input_013_1.outputs[64], 'default_value'):
        group_input_013_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_013_1.outputs[64], 'display_shape'):
        group_input_013_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[64], 'enabled'):
        group_input_013_1.outputs[64].enabled = True
    if hasattr(group_input_013_1.outputs[64], 'hide'):
        group_input_013_1.outputs[64].hide = True
    if hasattr(group_input_013_1.outputs[64], 'hide_value'):
        group_input_013_1.outputs[64].hide_value = False
    if hasattr(group_input_013_1.outputs[64], 'name'):
        group_input_013_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_013_1.outputs[64], 'show_expanded'):
        group_input_013_1.outputs[64].show_expanded = False
    if hasattr(group_input_013_1.outputs[65], 'default_value'):
        group_input_013_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_013_1.outputs[65], 'display_shape'):
        group_input_013_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[65], 'enabled'):
        group_input_013_1.outputs[65].enabled = True
    if hasattr(group_input_013_1.outputs[65], 'hide'):
        group_input_013_1.outputs[65].hide = True
    if hasattr(group_input_013_1.outputs[65], 'hide_value'):
        group_input_013_1.outputs[65].hide_value = False
    if hasattr(group_input_013_1.outputs[65], 'name'):
        group_input_013_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_013_1.outputs[65], 'show_expanded'):
        group_input_013_1.outputs[65].show_expanded = False
    if hasattr(group_input_013_1.outputs[66], 'default_value'):
        group_input_013_1.outputs[66].default_value = 0.0
    if hasattr(group_input_013_1.outputs[66], 'display_shape'):
        group_input_013_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[66], 'enabled'):
        group_input_013_1.outputs[66].enabled = True
    if hasattr(group_input_013_1.outputs[66], 'hide'):
        group_input_013_1.outputs[66].hide = True
    if hasattr(group_input_013_1.outputs[66], 'hide_value'):
        group_input_013_1.outputs[66].hide_value = False
    if hasattr(group_input_013_1.outputs[66], 'name'):
        group_input_013_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_013_1.outputs[66], 'show_expanded'):
        group_input_013_1.outputs[66].show_expanded = False
    if hasattr(group_input_013_1.outputs[67], 'default_value'):
        group_input_013_1.outputs[67].default_value = 0.0
    if hasattr(group_input_013_1.outputs[67], 'display_shape'):
        group_input_013_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[67], 'enabled'):
        group_input_013_1.outputs[67].enabled = True
    if hasattr(group_input_013_1.outputs[67], 'hide'):
        group_input_013_1.outputs[67].hide = True
    if hasattr(group_input_013_1.outputs[67], 'hide_value'):
        group_input_013_1.outputs[67].hide_value = False
    if hasattr(group_input_013_1.outputs[67], 'name'):
        group_input_013_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_013_1.outputs[67], 'show_expanded'):
        group_input_013_1.outputs[67].show_expanded = False
    if hasattr(group_input_013_1.outputs[68], 'default_value'):
        group_input_013_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[68], 'display_shape'):
        group_input_013_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[68], 'enabled'):
        group_input_013_1.outputs[68].enabled = True
    if hasattr(group_input_013_1.outputs[68], 'hide'):
        group_input_013_1.outputs[68].hide = True
    if hasattr(group_input_013_1.outputs[68], 'hide_value'):
        group_input_013_1.outputs[68].hide_value = False
    if hasattr(group_input_013_1.outputs[68], 'name'):
        group_input_013_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_013_1.outputs[68], 'show_expanded'):
        group_input_013_1.outputs[68].show_expanded = False
    if hasattr(group_input_013_1.outputs[69], 'default_value'):
        group_input_013_1.outputs[69].default_value = 0.0
    if hasattr(group_input_013_1.outputs[69], 'display_shape'):
        group_input_013_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[69], 'enabled'):
        group_input_013_1.outputs[69].enabled = True
    if hasattr(group_input_013_1.outputs[69], 'hide'):
        group_input_013_1.outputs[69].hide = True
    if hasattr(group_input_013_1.outputs[69], 'hide_value'):
        group_input_013_1.outputs[69].hide_value = False
    if hasattr(group_input_013_1.outputs[69], 'name'):
        group_input_013_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_013_1.outputs[69], 'show_expanded'):
        group_input_013_1.outputs[69].show_expanded = False
    if hasattr(group_input_013_1.outputs[70], 'default_value'):
        group_input_013_1.outputs[70].default_value = 0.0
    if hasattr(group_input_013_1.outputs[70], 'display_shape'):
        group_input_013_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[70], 'enabled'):
        group_input_013_1.outputs[70].enabled = True
    if hasattr(group_input_013_1.outputs[70], 'hide'):
        group_input_013_1.outputs[70].hide = True
    if hasattr(group_input_013_1.outputs[70], 'hide_value'):
        group_input_013_1.outputs[70].hide_value = False
    if hasattr(group_input_013_1.outputs[70], 'name'):
        group_input_013_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_013_1.outputs[70], 'show_expanded'):
        group_input_013_1.outputs[70].show_expanded = False
    if hasattr(group_input_013_1.outputs[71], 'default_value'):
        group_input_013_1.outputs[71].default_value = 0.0
    if hasattr(group_input_013_1.outputs[71], 'display_shape'):
        group_input_013_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[71], 'enabled'):
        group_input_013_1.outputs[71].enabled = True
    if hasattr(group_input_013_1.outputs[71], 'hide'):
        group_input_013_1.outputs[71].hide = True
    if hasattr(group_input_013_1.outputs[71], 'hide_value'):
        group_input_013_1.outputs[71].hide_value = False
    if hasattr(group_input_013_1.outputs[71], 'name'):
        group_input_013_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_013_1.outputs[71], 'show_expanded'):
        group_input_013_1.outputs[71].show_expanded = False
    if hasattr(group_input_013_1.outputs[72], 'default_value'):
        group_input_013_1.outputs[72].default_value = 0.0
    if hasattr(group_input_013_1.outputs[72], 'display_shape'):
        group_input_013_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[72], 'enabled'):
        group_input_013_1.outputs[72].enabled = True
    if hasattr(group_input_013_1.outputs[72], 'hide'):
        group_input_013_1.outputs[72].hide = True
    if hasattr(group_input_013_1.outputs[72], 'hide_value'):
        group_input_013_1.outputs[72].hide_value = False
    if hasattr(group_input_013_1.outputs[72], 'name'):
        group_input_013_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_013_1.outputs[72], 'show_expanded'):
        group_input_013_1.outputs[72].show_expanded = False
    if hasattr(group_input_013_1.outputs[73], 'default_value'):
        group_input_013_1.outputs[73].default_value = 0.0
    if hasattr(group_input_013_1.outputs[73], 'display_shape'):
        group_input_013_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[73], 'enabled'):
        group_input_013_1.outputs[73].enabled = True
    if hasattr(group_input_013_1.outputs[73], 'hide'):
        group_input_013_1.outputs[73].hide = True
    if hasattr(group_input_013_1.outputs[73], 'hide_value'):
        group_input_013_1.outputs[73].hide_value = False
    if hasattr(group_input_013_1.outputs[73], 'name'):
        group_input_013_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_013_1.outputs[73], 'show_expanded'):
        group_input_013_1.outputs[73].show_expanded = False
    if hasattr(group_input_013_1.outputs[74], 'default_value'):
        group_input_013_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_013_1.outputs[74], 'display_shape'):
        group_input_013_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[74], 'enabled'):
        group_input_013_1.outputs[74].enabled = True
    if hasattr(group_input_013_1.outputs[74], 'hide'):
        group_input_013_1.outputs[74].hide = True
    if hasattr(group_input_013_1.outputs[74], 'hide_value'):
        group_input_013_1.outputs[74].hide_value = False
    if hasattr(group_input_013_1.outputs[74], 'name'):
        group_input_013_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_013_1.outputs[74], 'show_expanded'):
        group_input_013_1.outputs[74].show_expanded = False
    if hasattr(group_input_013_1.outputs[75], 'default_value'):
        group_input_013_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_013_1.outputs[75], 'display_shape'):
        group_input_013_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[75], 'enabled'):
        group_input_013_1.outputs[75].enabled = True
    if hasattr(group_input_013_1.outputs[75], 'hide'):
        group_input_013_1.outputs[75].hide = True
    if hasattr(group_input_013_1.outputs[75], 'hide_value'):
        group_input_013_1.outputs[75].hide_value = False
    if hasattr(group_input_013_1.outputs[75], 'name'):
        group_input_013_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_013_1.outputs[75], 'show_expanded'):
        group_input_013_1.outputs[75].show_expanded = False
    if hasattr(group_input_013_1.outputs[76], 'default_value'):
        group_input_013_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_013_1.outputs[76], 'display_shape'):
        group_input_013_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[76], 'enabled'):
        group_input_013_1.outputs[76].enabled = True
    if hasattr(group_input_013_1.outputs[76], 'hide'):
        group_input_013_1.outputs[76].hide = True
    if hasattr(group_input_013_1.outputs[76], 'hide_value'):
        group_input_013_1.outputs[76].hide_value = False
    if hasattr(group_input_013_1.outputs[76], 'name'):
        group_input_013_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_013_1.outputs[76], 'show_expanded'):
        group_input_013_1.outputs[76].show_expanded = False
    if hasattr(group_input_013_1.outputs[77], 'default_value'):
        group_input_013_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_013_1.outputs[77], 'display_shape'):
        group_input_013_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[77], 'enabled'):
        group_input_013_1.outputs[77].enabled = True
    if hasattr(group_input_013_1.outputs[77], 'hide'):
        group_input_013_1.outputs[77].hide = True
    if hasattr(group_input_013_1.outputs[77], 'hide_value'):
        group_input_013_1.outputs[77].hide_value = False
    if hasattr(group_input_013_1.outputs[77], 'name'):
        group_input_013_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_013_1.outputs[77], 'show_expanded'):
        group_input_013_1.outputs[77].show_expanded = False
    if hasattr(group_input_013_1.outputs[78], 'default_value'):
        group_input_013_1.outputs[78].default_value = 0.0
    if hasattr(group_input_013_1.outputs[78], 'display_shape'):
        group_input_013_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[78], 'enabled'):
        group_input_013_1.outputs[78].enabled = True
    if hasattr(group_input_013_1.outputs[78], 'hide'):
        group_input_013_1.outputs[78].hide = True
    if hasattr(group_input_013_1.outputs[78], 'hide_value'):
        group_input_013_1.outputs[78].hide_value = False
    if hasattr(group_input_013_1.outputs[78], 'name'):
        group_input_013_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_013_1.outputs[78], 'show_expanded'):
        group_input_013_1.outputs[78].show_expanded = False
    if hasattr(group_input_013_1.outputs[79], 'default_value'):
        group_input_013_1.outputs[79].default_value = 0.0
    if hasattr(group_input_013_1.outputs[79], 'display_shape'):
        group_input_013_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[79], 'enabled'):
        group_input_013_1.outputs[79].enabled = True
    if hasattr(group_input_013_1.outputs[79], 'hide'):
        group_input_013_1.outputs[79].hide = True
    if hasattr(group_input_013_1.outputs[79], 'hide_value'):
        group_input_013_1.outputs[79].hide_value = False
    if hasattr(group_input_013_1.outputs[79], 'name'):
        group_input_013_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_013_1.outputs[79], 'show_expanded'):
        group_input_013_1.outputs[79].show_expanded = False
    if hasattr(group_input_013_1.outputs[80], 'default_value'):
        group_input_013_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[80], 'display_shape'):
        group_input_013_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[80], 'enabled'):
        group_input_013_1.outputs[80].enabled = True
    if hasattr(group_input_013_1.outputs[80], 'hide'):
        group_input_013_1.outputs[80].hide = True
    if hasattr(group_input_013_1.outputs[80], 'hide_value'):
        group_input_013_1.outputs[80].hide_value = False
    if hasattr(group_input_013_1.outputs[80], 'name'):
        group_input_013_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_013_1.outputs[80], 'show_expanded'):
        group_input_013_1.outputs[80].show_expanded = False
    if hasattr(group_input_013_1.outputs[81], 'default_value'):
        group_input_013_1.outputs[81].default_value = 0.0
    if hasattr(group_input_013_1.outputs[81], 'display_shape'):
        group_input_013_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[81], 'enabled'):
        group_input_013_1.outputs[81].enabled = True
    if hasattr(group_input_013_1.outputs[81], 'hide'):
        group_input_013_1.outputs[81].hide = True
    if hasattr(group_input_013_1.outputs[81], 'hide_value'):
        group_input_013_1.outputs[81].hide_value = False
    if hasattr(group_input_013_1.outputs[81], 'name'):
        group_input_013_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_013_1.outputs[81], 'show_expanded'):
        group_input_013_1.outputs[81].show_expanded = False
    if hasattr(group_input_013_1.outputs[82], 'default_value'):
        group_input_013_1.outputs[82].default_value = 0.0
    if hasattr(group_input_013_1.outputs[82], 'display_shape'):
        group_input_013_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[82], 'enabled'):
        group_input_013_1.outputs[82].enabled = True
    if hasattr(group_input_013_1.outputs[82], 'hide'):
        group_input_013_1.outputs[82].hide = True
    if hasattr(group_input_013_1.outputs[82], 'hide_value'):
        group_input_013_1.outputs[82].hide_value = False
    if hasattr(group_input_013_1.outputs[82], 'name'):
        group_input_013_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_013_1.outputs[82], 'show_expanded'):
        group_input_013_1.outputs[82].show_expanded = False
    if hasattr(group_input_013_1.outputs[83], 'default_value'):
        group_input_013_1.outputs[83].default_value = 0.0
    if hasattr(group_input_013_1.outputs[83], 'display_shape'):
        group_input_013_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[83], 'enabled'):
        group_input_013_1.outputs[83].enabled = True
    if hasattr(group_input_013_1.outputs[83], 'hide'):
        group_input_013_1.outputs[83].hide = True
    if hasattr(group_input_013_1.outputs[83], 'hide_value'):
        group_input_013_1.outputs[83].hide_value = False
    if hasattr(group_input_013_1.outputs[83], 'name'):
        group_input_013_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_013_1.outputs[83], 'show_expanded'):
        group_input_013_1.outputs[83].show_expanded = False
    if hasattr(group_input_013_1.outputs[84], 'default_value'):
        group_input_013_1.outputs[84].default_value = 0.0
    if hasattr(group_input_013_1.outputs[84], 'display_shape'):
        group_input_013_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[84], 'enabled'):
        group_input_013_1.outputs[84].enabled = True
    if hasattr(group_input_013_1.outputs[84], 'hide'):
        group_input_013_1.outputs[84].hide = True
    if hasattr(group_input_013_1.outputs[84], 'hide_value'):
        group_input_013_1.outputs[84].hide_value = False
    if hasattr(group_input_013_1.outputs[84], 'name'):
        group_input_013_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_013_1.outputs[84], 'show_expanded'):
        group_input_013_1.outputs[84].show_expanded = False
    if hasattr(group_input_013_1.outputs[85], 'default_value'):
        group_input_013_1.outputs[85].default_value = 0.0
    if hasattr(group_input_013_1.outputs[85], 'display_shape'):
        group_input_013_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[85], 'enabled'):
        group_input_013_1.outputs[85].enabled = True
    if hasattr(group_input_013_1.outputs[85], 'hide'):
        group_input_013_1.outputs[85].hide = True
    if hasattr(group_input_013_1.outputs[85], 'hide_value'):
        group_input_013_1.outputs[85].hide_value = False
    if hasattr(group_input_013_1.outputs[85], 'name'):
        group_input_013_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_013_1.outputs[85], 'show_expanded'):
        group_input_013_1.outputs[85].show_expanded = False
    if hasattr(group_input_013_1.outputs[86], 'default_value'):
        group_input_013_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_013_1.outputs[86], 'display_shape'):
        group_input_013_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[86], 'enabled'):
        group_input_013_1.outputs[86].enabled = True
    if hasattr(group_input_013_1.outputs[86], 'hide'):
        group_input_013_1.outputs[86].hide = True
    if hasattr(group_input_013_1.outputs[86], 'hide_value'):
        group_input_013_1.outputs[86].hide_value = False
    if hasattr(group_input_013_1.outputs[86], 'name'):
        group_input_013_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_013_1.outputs[86], 'show_expanded'):
        group_input_013_1.outputs[86].show_expanded = False
    if hasattr(group_input_013_1.outputs[87], 'default_value'):
        group_input_013_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_013_1.outputs[87], 'display_shape'):
        group_input_013_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[87], 'enabled'):
        group_input_013_1.outputs[87].enabled = True
    if hasattr(group_input_013_1.outputs[87], 'hide'):
        group_input_013_1.outputs[87].hide = True
    if hasattr(group_input_013_1.outputs[87], 'hide_value'):
        group_input_013_1.outputs[87].hide_value = False
    if hasattr(group_input_013_1.outputs[87], 'name'):
        group_input_013_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_013_1.outputs[87], 'show_expanded'):
        group_input_013_1.outputs[87].show_expanded = False
    if hasattr(group_input_013_1.outputs[88], 'default_value'):
        group_input_013_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_013_1.outputs[88], 'display_shape'):
        group_input_013_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[88], 'enabled'):
        group_input_013_1.outputs[88].enabled = True
    if hasattr(group_input_013_1.outputs[88], 'hide'):
        group_input_013_1.outputs[88].hide = True
    if hasattr(group_input_013_1.outputs[88], 'hide_value'):
        group_input_013_1.outputs[88].hide_value = False
    if hasattr(group_input_013_1.outputs[88], 'name'):
        group_input_013_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_013_1.outputs[88], 'show_expanded'):
        group_input_013_1.outputs[88].show_expanded = False
    if hasattr(group_input_013_1.outputs[89], 'default_value'):
        group_input_013_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_013_1.outputs[89], 'display_shape'):
        group_input_013_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[89], 'enabled'):
        group_input_013_1.outputs[89].enabled = True
    if hasattr(group_input_013_1.outputs[89], 'hide'):
        group_input_013_1.outputs[89].hide = True
    if hasattr(group_input_013_1.outputs[89], 'hide_value'):
        group_input_013_1.outputs[89].hide_value = False
    if hasattr(group_input_013_1.outputs[89], 'name'):
        group_input_013_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_013_1.outputs[89], 'show_expanded'):
        group_input_013_1.outputs[89].show_expanded = False
    if hasattr(group_input_013_1.outputs[90], 'default_value'):
        group_input_013_1.outputs[90].default_value = 0.0
    if hasattr(group_input_013_1.outputs[90], 'display_shape'):
        group_input_013_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[90], 'enabled'):
        group_input_013_1.outputs[90].enabled = True
    if hasattr(group_input_013_1.outputs[90], 'hide'):
        group_input_013_1.outputs[90].hide = False
    if hasattr(group_input_013_1.outputs[90], 'hide_value'):
        group_input_013_1.outputs[90].hide_value = False
    if hasattr(group_input_013_1.outputs[90], 'name'):
        group_input_013_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_013_1.outputs[90], 'show_expanded'):
        group_input_013_1.outputs[90].show_expanded = False
    if hasattr(group_input_013_1.outputs[91], 'default_value'):
        group_input_013_1.outputs[91].default_value = 0.0
    if hasattr(group_input_013_1.outputs[91], 'display_shape'):
        group_input_013_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[91], 'enabled'):
        group_input_013_1.outputs[91].enabled = True
    if hasattr(group_input_013_1.outputs[91], 'hide'):
        group_input_013_1.outputs[91].hide = True
    if hasattr(group_input_013_1.outputs[91], 'hide_value'):
        group_input_013_1.outputs[91].hide_value = False
    if hasattr(group_input_013_1.outputs[91], 'name'):
        group_input_013_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_013_1.outputs[91], 'show_expanded'):
        group_input_013_1.outputs[91].show_expanded = False
    if hasattr(group_input_013_1.outputs[92], 'default_value'):
        group_input_013_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_013_1.outputs[92], 'display_shape'):
        group_input_013_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[92], 'enabled'):
        group_input_013_1.outputs[92].enabled = True
    if hasattr(group_input_013_1.outputs[92], 'hide'):
        group_input_013_1.outputs[92].hide = True
    if hasattr(group_input_013_1.outputs[92], 'hide_value'):
        group_input_013_1.outputs[92].hide_value = False
    if hasattr(group_input_013_1.outputs[92], 'name'):
        group_input_013_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_013_1.outputs[92], 'show_expanded'):
        group_input_013_1.outputs[92].show_expanded = False
    if hasattr(group_input_013_1.outputs[93], 'default_value'):
        group_input_013_1.outputs[93].default_value = 0.0
    if hasattr(group_input_013_1.outputs[93], 'display_shape'):
        group_input_013_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[93], 'enabled'):
        group_input_013_1.outputs[93].enabled = True
    if hasattr(group_input_013_1.outputs[93], 'hide'):
        group_input_013_1.outputs[93].hide = True
    if hasattr(group_input_013_1.outputs[93], 'hide_value'):
        group_input_013_1.outputs[93].hide_value = False
    if hasattr(group_input_013_1.outputs[93], 'name'):
        group_input_013_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_013_1.outputs[93], 'show_expanded'):
        group_input_013_1.outputs[93].show_expanded = False
    if hasattr(group_input_013_1.outputs[94], 'default_value'):
        group_input_013_1.outputs[94].default_value = 0.0
    if hasattr(group_input_013_1.outputs[94], 'display_shape'):
        group_input_013_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[94], 'enabled'):
        group_input_013_1.outputs[94].enabled = True
    if hasattr(group_input_013_1.outputs[94], 'hide'):
        group_input_013_1.outputs[94].hide = True
    if hasattr(group_input_013_1.outputs[94], 'hide_value'):
        group_input_013_1.outputs[94].hide_value = False
    if hasattr(group_input_013_1.outputs[94], 'name'):
        group_input_013_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_013_1.outputs[94], 'show_expanded'):
        group_input_013_1.outputs[94].show_expanded = False
    if hasattr(group_input_013_1.outputs[95], 'default_value'):
        group_input_013_1.outputs[95].default_value = 0.0
    if hasattr(group_input_013_1.outputs[95], 'display_shape'):
        group_input_013_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[95], 'enabled'):
        group_input_013_1.outputs[95].enabled = True
    if hasattr(group_input_013_1.outputs[95], 'hide'):
        group_input_013_1.outputs[95].hide = True
    if hasattr(group_input_013_1.outputs[95], 'hide_value'):
        group_input_013_1.outputs[95].hide_value = False
    if hasattr(group_input_013_1.outputs[95], 'name'):
        group_input_013_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_013_1.outputs[95], 'show_expanded'):
        group_input_013_1.outputs[95].show_expanded = False
    if hasattr(group_input_013_1.outputs[96], 'default_value'):
        group_input_013_1.outputs[96].default_value = 0.0
    if hasattr(group_input_013_1.outputs[96], 'display_shape'):
        group_input_013_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[96], 'enabled'):
        group_input_013_1.outputs[96].enabled = True
    if hasattr(group_input_013_1.outputs[96], 'hide'):
        group_input_013_1.outputs[96].hide = True
    if hasattr(group_input_013_1.outputs[96], 'hide_value'):
        group_input_013_1.outputs[96].hide_value = False
    if hasattr(group_input_013_1.outputs[96], 'name'):
        group_input_013_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_013_1.outputs[96], 'show_expanded'):
        group_input_013_1.outputs[96].show_expanded = False
    if hasattr(group_input_013_1.outputs[97], 'default_value'):
        group_input_013_1.outputs[97].default_value = 0.0
    if hasattr(group_input_013_1.outputs[97], 'display_shape'):
        group_input_013_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[97], 'enabled'):
        group_input_013_1.outputs[97].enabled = True
    if hasattr(group_input_013_1.outputs[97], 'hide'):
        group_input_013_1.outputs[97].hide = True
    if hasattr(group_input_013_1.outputs[97], 'hide_value'):
        group_input_013_1.outputs[97].hide_value = False
    if hasattr(group_input_013_1.outputs[97], 'name'):
        group_input_013_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_013_1.outputs[97], 'show_expanded'):
        group_input_013_1.outputs[97].show_expanded = False
    if hasattr(group_input_013_1.outputs[98], 'default_value'):
        group_input_013_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_013_1.outputs[98], 'display_shape'):
        group_input_013_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[98], 'enabled'):
        group_input_013_1.outputs[98].enabled = True
    if hasattr(group_input_013_1.outputs[98], 'hide'):
        group_input_013_1.outputs[98].hide = False
    if hasattr(group_input_013_1.outputs[98], 'hide_value'):
        group_input_013_1.outputs[98].hide_value = False
    if hasattr(group_input_013_1.outputs[98], 'name'):
        group_input_013_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_013_1.outputs[98], 'show_expanded'):
        group_input_013_1.outputs[98].show_expanded = False
    if hasattr(group_input_013_1.outputs[99], 'default_value'):
        group_input_013_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_013_1.outputs[99], 'display_shape'):
        group_input_013_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[99], 'enabled'):
        group_input_013_1.outputs[99].enabled = True
    if hasattr(group_input_013_1.outputs[99], 'hide'):
        group_input_013_1.outputs[99].hide = False
    if hasattr(group_input_013_1.outputs[99], 'hide_value'):
        group_input_013_1.outputs[99].hide_value = False
    if hasattr(group_input_013_1.outputs[99], 'name'):
        group_input_013_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_013_1.outputs[99], 'show_expanded'):
        group_input_013_1.outputs[99].show_expanded = False
    if hasattr(group_input_013_1.outputs[100], 'default_value'):
        group_input_013_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_013_1.outputs[100], 'display_shape'):
        group_input_013_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[100], 'enabled'):
        group_input_013_1.outputs[100].enabled = True
    if hasattr(group_input_013_1.outputs[100], 'hide'):
        group_input_013_1.outputs[100].hide = False
    if hasattr(group_input_013_1.outputs[100], 'hide_value'):
        group_input_013_1.outputs[100].hide_value = False
    if hasattr(group_input_013_1.outputs[100], 'name'):
        group_input_013_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_013_1.outputs[100], 'show_expanded'):
        group_input_013_1.outputs[100].show_expanded = False
    if hasattr(group_input_013_1.outputs[101], 'default_value'):
        group_input_013_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_013_1.outputs[101], 'display_shape'):
        group_input_013_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_013_1.outputs[101], 'enabled'):
        group_input_013_1.outputs[101].enabled = True
    if hasattr(group_input_013_1.outputs[101], 'hide'):
        group_input_013_1.outputs[101].hide = True
    if hasattr(group_input_013_1.outputs[101], 'hide_value'):
        group_input_013_1.outputs[101].hide_value = False
    if hasattr(group_input_013_1.outputs[101], 'name'):
        group_input_013_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_013_1.outputs[101], 'show_expanded'):
        group_input_013_1.outputs[101].show_expanded = False

    group_input_014_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_014_1, 'color'):
        group_input_014_1.color = (0.2265840768814087, 0.14695684611797333, 0.09751491248607635)
    if hasattr(group_input_014_1, 'hide'):
        group_input_014_1.hide = False
    if hasattr(group_input_014_1, 'label'):
        group_input_014_1.label = 'Grime'
    if hasattr(group_input_014_1, 'location'):
        group_input_014_1.location = (-2060.0, 1000.0)
    if hasattr(group_input_014_1, 'mute'):
        group_input_014_1.mute = False
    if hasattr(group_input_014_1, 'name'):
        group_input_014_1.name = 'Group Input.014'
    if hasattr(group_input_014_1, 'use_custom_color'):
        group_input_014_1.use_custom_color = True
    if hasattr(group_input_014_1, 'width'):
        group_input_014_1.width = 179.714111328125
    if hasattr(group_input_014_1.outputs[0], 'default_value'):
        group_input_014_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[0], 'display_shape'):
        group_input_014_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[0], 'enabled'):
        group_input_014_1.outputs[0].enabled = True
    if hasattr(group_input_014_1.outputs[0], 'hide'):
        group_input_014_1.outputs[0].hide = True
    if hasattr(group_input_014_1.outputs[0], 'hide_value'):
        group_input_014_1.outputs[0].hide_value = False
    if hasattr(group_input_014_1.outputs[0], 'name'):
        group_input_014_1.outputs[0].name = 'ASG'
    if hasattr(group_input_014_1.outputs[0], 'show_expanded'):
        group_input_014_1.outputs[0].show_expanded = False
    if hasattr(group_input_014_1.outputs[1], 'default_value'):
        group_input_014_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[1], 'display_shape'):
        group_input_014_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[1], 'enabled'):
        group_input_014_1.outputs[1].enabled = True
    if hasattr(group_input_014_1.outputs[1], 'hide'):
        group_input_014_1.outputs[1].hide = True
    if hasattr(group_input_014_1.outputs[1], 'hide_value'):
        group_input_014_1.outputs[1].hide_value = False
    if hasattr(group_input_014_1.outputs[1], 'name'):
        group_input_014_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_014_1.outputs[1], 'show_expanded'):
        group_input_014_1.outputs[1].show_expanded = False
    if hasattr(group_input_014_1.outputs[2], 'default_value'):
        group_input_014_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[2], 'display_shape'):
        group_input_014_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[2], 'enabled'):
        group_input_014_1.outputs[2].enabled = True
    if hasattr(group_input_014_1.outputs[2], 'hide'):
        group_input_014_1.outputs[2].hide = True
    if hasattr(group_input_014_1.outputs[2], 'hide_value'):
        group_input_014_1.outputs[2].hide_value = False
    if hasattr(group_input_014_1.outputs[2], 'name'):
        group_input_014_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_014_1.outputs[2], 'show_expanded'):
        group_input_014_1.outputs[2].show_expanded = False
    if hasattr(group_input_014_1.outputs[3], 'default_value'):
        group_input_014_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[3], 'display_shape'):
        group_input_014_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[3], 'enabled'):
        group_input_014_1.outputs[3].enabled = True
    if hasattr(group_input_014_1.outputs[3], 'hide'):
        group_input_014_1.outputs[3].hide = True
    if hasattr(group_input_014_1.outputs[3], 'hide_value'):
        group_input_014_1.outputs[3].hide_value = False
    if hasattr(group_input_014_1.outputs[3], 'name'):
        group_input_014_1.outputs[3].name = 'Normal'
    if hasattr(group_input_014_1.outputs[3], 'show_expanded'):
        group_input_014_1.outputs[3].show_expanded = False
    if hasattr(group_input_014_1.outputs[4], 'default_value'):
        group_input_014_1.outputs[4].default_value = 0.0
    if hasattr(group_input_014_1.outputs[4], 'display_shape'):
        group_input_014_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[4], 'enabled'):
        group_input_014_1.outputs[4].enabled = True
    if hasattr(group_input_014_1.outputs[4], 'hide'):
        group_input_014_1.outputs[4].hide = True
    if hasattr(group_input_014_1.outputs[4], 'hide_value'):
        group_input_014_1.outputs[4].hide_value = False
    if hasattr(group_input_014_1.outputs[4], 'name'):
        group_input_014_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_014_1.outputs[4], 'show_expanded'):
        group_input_014_1.outputs[4].show_expanded = False
    if hasattr(group_input_014_1.outputs[5], 'default_value'):
        group_input_014_1.outputs[5].default_value = 1.0
    if hasattr(group_input_014_1.outputs[5], 'display_shape'):
        group_input_014_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[5], 'enabled'):
        group_input_014_1.outputs[5].enabled = True
    if hasattr(group_input_014_1.outputs[5], 'hide'):
        group_input_014_1.outputs[5].hide = True
    if hasattr(group_input_014_1.outputs[5], 'hide_value'):
        group_input_014_1.outputs[5].hide_value = False
    if hasattr(group_input_014_1.outputs[5], 'name'):
        group_input_014_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_014_1.outputs[5], 'show_expanded'):
        group_input_014_1.outputs[5].show_expanded = False
    if hasattr(group_input_014_1.outputs[6], 'default_value'):
        group_input_014_1.outputs[6].default_value = 0.0
    if hasattr(group_input_014_1.outputs[6], 'display_shape'):
        group_input_014_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[6], 'enabled'):
        group_input_014_1.outputs[6].enabled = True
    if hasattr(group_input_014_1.outputs[6], 'hide'):
        group_input_014_1.outputs[6].hide = True
    if hasattr(group_input_014_1.outputs[6], 'hide_value'):
        group_input_014_1.outputs[6].hide_value = False
    if hasattr(group_input_014_1.outputs[6], 'name'):
        group_input_014_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_014_1.outputs[6], 'show_expanded'):
        group_input_014_1.outputs[6].show_expanded = False
    if hasattr(group_input_014_1.outputs[7], 'default_value'):
        group_input_014_1.outputs[7].default_value = 0.0
    if hasattr(group_input_014_1.outputs[7], 'display_shape'):
        group_input_014_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[7], 'enabled'):
        group_input_014_1.outputs[7].enabled = True
    if hasattr(group_input_014_1.outputs[7], 'hide'):
        group_input_014_1.outputs[7].hide = True
    if hasattr(group_input_014_1.outputs[7], 'hide_value'):
        group_input_014_1.outputs[7].hide_value = False
    if hasattr(group_input_014_1.outputs[7], 'name'):
        group_input_014_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_014_1.outputs[7], 'show_expanded'):
        group_input_014_1.outputs[7].show_expanded = False
    if hasattr(group_input_014_1.outputs[8], 'default_value'):
        group_input_014_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[8], 'display_shape'):
        group_input_014_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[8], 'enabled'):
        group_input_014_1.outputs[8].enabled = True
    if hasattr(group_input_014_1.outputs[8], 'hide'):
        group_input_014_1.outputs[8].hide = True
    if hasattr(group_input_014_1.outputs[8], 'hide_value'):
        group_input_014_1.outputs[8].hide_value = False
    if hasattr(group_input_014_1.outputs[8], 'name'):
        group_input_014_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_014_1.outputs[8], 'show_expanded'):
        group_input_014_1.outputs[8].show_expanded = False
    if hasattr(group_input_014_1.outputs[9], 'default_value'):
        group_input_014_1.outputs[9].default_value = 0.0
    if hasattr(group_input_014_1.outputs[9], 'display_shape'):
        group_input_014_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[9], 'enabled'):
        group_input_014_1.outputs[9].enabled = True
    if hasattr(group_input_014_1.outputs[9], 'hide'):
        group_input_014_1.outputs[9].hide = True
    if hasattr(group_input_014_1.outputs[9], 'hide_value'):
        group_input_014_1.outputs[9].hide_value = False
    if hasattr(group_input_014_1.outputs[9], 'name'):
        group_input_014_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_014_1.outputs[9], 'show_expanded'):
        group_input_014_1.outputs[9].show_expanded = False
    if hasattr(group_input_014_1.outputs[10], 'default_value'):
        group_input_014_1.outputs[10].default_value = 0.0
    if hasattr(group_input_014_1.outputs[10], 'display_shape'):
        group_input_014_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[10], 'enabled'):
        group_input_014_1.outputs[10].enabled = True
    if hasattr(group_input_014_1.outputs[10], 'hide'):
        group_input_014_1.outputs[10].hide = True
    if hasattr(group_input_014_1.outputs[10], 'hide_value'):
        group_input_014_1.outputs[10].hide_value = False
    if hasattr(group_input_014_1.outputs[10], 'name'):
        group_input_014_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_014_1.outputs[10], 'show_expanded'):
        group_input_014_1.outputs[10].show_expanded = False
    if hasattr(group_input_014_1.outputs[11], 'default_value'):
        group_input_014_1.outputs[11].default_value = 0.0
    if hasattr(group_input_014_1.outputs[11], 'display_shape'):
        group_input_014_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[11], 'enabled'):
        group_input_014_1.outputs[11].enabled = True
    if hasattr(group_input_014_1.outputs[11], 'hide'):
        group_input_014_1.outputs[11].hide = True
    if hasattr(group_input_014_1.outputs[11], 'hide_value'):
        group_input_014_1.outputs[11].hide_value = False
    if hasattr(group_input_014_1.outputs[11], 'name'):
        group_input_014_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_014_1.outputs[11], 'show_expanded'):
        group_input_014_1.outputs[11].show_expanded = False
    if hasattr(group_input_014_1.outputs[12], 'default_value'):
        group_input_014_1.outputs[12].default_value = 0.0
    if hasattr(group_input_014_1.outputs[12], 'display_shape'):
        group_input_014_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[12], 'enabled'):
        group_input_014_1.outputs[12].enabled = True
    if hasattr(group_input_014_1.outputs[12], 'hide'):
        group_input_014_1.outputs[12].hide = True
    if hasattr(group_input_014_1.outputs[12], 'hide_value'):
        group_input_014_1.outputs[12].hide_value = False
    if hasattr(group_input_014_1.outputs[12], 'name'):
        group_input_014_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_014_1.outputs[12], 'show_expanded'):
        group_input_014_1.outputs[12].show_expanded = False
    if hasattr(group_input_014_1.outputs[13], 'default_value'):
        group_input_014_1.outputs[13].default_value = 0.0
    if hasattr(group_input_014_1.outputs[13], 'display_shape'):
        group_input_014_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[13], 'enabled'):
        group_input_014_1.outputs[13].enabled = True
    if hasattr(group_input_014_1.outputs[13], 'hide'):
        group_input_014_1.outputs[13].hide = True
    if hasattr(group_input_014_1.outputs[13], 'hide_value'):
        group_input_014_1.outputs[13].hide_value = False
    if hasattr(group_input_014_1.outputs[13], 'name'):
        group_input_014_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_014_1.outputs[13], 'show_expanded'):
        group_input_014_1.outputs[13].show_expanded = False
    if hasattr(group_input_014_1.outputs[14], 'default_value'):
        group_input_014_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_014_1.outputs[14], 'display_shape'):
        group_input_014_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[14], 'enabled'):
        group_input_014_1.outputs[14].enabled = True
    if hasattr(group_input_014_1.outputs[14], 'hide'):
        group_input_014_1.outputs[14].hide = True
    if hasattr(group_input_014_1.outputs[14], 'hide_value'):
        group_input_014_1.outputs[14].hide_value = False
    if hasattr(group_input_014_1.outputs[14], 'name'):
        group_input_014_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_014_1.outputs[14], 'show_expanded'):
        group_input_014_1.outputs[14].show_expanded = False
    if hasattr(group_input_014_1.outputs[15], 'default_value'):
        group_input_014_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_014_1.outputs[15], 'display_shape'):
        group_input_014_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[15], 'enabled'):
        group_input_014_1.outputs[15].enabled = True
    if hasattr(group_input_014_1.outputs[15], 'hide'):
        group_input_014_1.outputs[15].hide = True
    if hasattr(group_input_014_1.outputs[15], 'hide_value'):
        group_input_014_1.outputs[15].hide_value = False
    if hasattr(group_input_014_1.outputs[15], 'name'):
        group_input_014_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_014_1.outputs[15], 'show_expanded'):
        group_input_014_1.outputs[15].show_expanded = False
    if hasattr(group_input_014_1.outputs[16], 'default_value'):
        group_input_014_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_014_1.outputs[16], 'display_shape'):
        group_input_014_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[16], 'enabled'):
        group_input_014_1.outputs[16].enabled = True
    if hasattr(group_input_014_1.outputs[16], 'hide'):
        group_input_014_1.outputs[16].hide = True
    if hasattr(group_input_014_1.outputs[16], 'hide_value'):
        group_input_014_1.outputs[16].hide_value = False
    if hasattr(group_input_014_1.outputs[16], 'name'):
        group_input_014_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_014_1.outputs[16], 'show_expanded'):
        group_input_014_1.outputs[16].show_expanded = False
    if hasattr(group_input_014_1.outputs[17], 'default_value'):
        group_input_014_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_014_1.outputs[17], 'display_shape'):
        group_input_014_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[17], 'enabled'):
        group_input_014_1.outputs[17].enabled = True
    if hasattr(group_input_014_1.outputs[17], 'hide'):
        group_input_014_1.outputs[17].hide = True
    if hasattr(group_input_014_1.outputs[17], 'hide_value'):
        group_input_014_1.outputs[17].hide_value = False
    if hasattr(group_input_014_1.outputs[17], 'name'):
        group_input_014_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_014_1.outputs[17], 'show_expanded'):
        group_input_014_1.outputs[17].show_expanded = False
    if hasattr(group_input_014_1.outputs[18], 'default_value'):
        group_input_014_1.outputs[18].default_value = 0.0
    if hasattr(group_input_014_1.outputs[18], 'display_shape'):
        group_input_014_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[18], 'enabled'):
        group_input_014_1.outputs[18].enabled = True
    if hasattr(group_input_014_1.outputs[18], 'hide'):
        group_input_014_1.outputs[18].hide = True
    if hasattr(group_input_014_1.outputs[18], 'hide_value'):
        group_input_014_1.outputs[18].hide_value = False
    if hasattr(group_input_014_1.outputs[18], 'name'):
        group_input_014_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_014_1.outputs[18], 'show_expanded'):
        group_input_014_1.outputs[18].show_expanded = False
    if hasattr(group_input_014_1.outputs[19], 'default_value'):
        group_input_014_1.outputs[19].default_value = 0.0
    if hasattr(group_input_014_1.outputs[19], 'display_shape'):
        group_input_014_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[19], 'enabled'):
        group_input_014_1.outputs[19].enabled = True
    if hasattr(group_input_014_1.outputs[19], 'hide'):
        group_input_014_1.outputs[19].hide = True
    if hasattr(group_input_014_1.outputs[19], 'hide_value'):
        group_input_014_1.outputs[19].hide_value = False
    if hasattr(group_input_014_1.outputs[19], 'name'):
        group_input_014_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_014_1.outputs[19], 'show_expanded'):
        group_input_014_1.outputs[19].show_expanded = False
    if hasattr(group_input_014_1.outputs[20], 'default_value'):
        group_input_014_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[20], 'display_shape'):
        group_input_014_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[20], 'enabled'):
        group_input_014_1.outputs[20].enabled = True
    if hasattr(group_input_014_1.outputs[20], 'hide'):
        group_input_014_1.outputs[20].hide = True
    if hasattr(group_input_014_1.outputs[20], 'hide_value'):
        group_input_014_1.outputs[20].hide_value = False
    if hasattr(group_input_014_1.outputs[20], 'name'):
        group_input_014_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_014_1.outputs[20], 'show_expanded'):
        group_input_014_1.outputs[20].show_expanded = False
    if hasattr(group_input_014_1.outputs[21], 'default_value'):
        group_input_014_1.outputs[21].default_value = 0.0
    if hasattr(group_input_014_1.outputs[21], 'display_shape'):
        group_input_014_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[21], 'enabled'):
        group_input_014_1.outputs[21].enabled = True
    if hasattr(group_input_014_1.outputs[21], 'hide'):
        group_input_014_1.outputs[21].hide = True
    if hasattr(group_input_014_1.outputs[21], 'hide_value'):
        group_input_014_1.outputs[21].hide_value = False
    if hasattr(group_input_014_1.outputs[21], 'name'):
        group_input_014_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_014_1.outputs[21], 'show_expanded'):
        group_input_014_1.outputs[21].show_expanded = False
    if hasattr(group_input_014_1.outputs[22], 'default_value'):
        group_input_014_1.outputs[22].default_value = 0.0
    if hasattr(group_input_014_1.outputs[22], 'display_shape'):
        group_input_014_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[22], 'enabled'):
        group_input_014_1.outputs[22].enabled = True
    if hasattr(group_input_014_1.outputs[22], 'hide'):
        group_input_014_1.outputs[22].hide = True
    if hasattr(group_input_014_1.outputs[22], 'hide_value'):
        group_input_014_1.outputs[22].hide_value = False
    if hasattr(group_input_014_1.outputs[22], 'name'):
        group_input_014_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_014_1.outputs[22], 'show_expanded'):
        group_input_014_1.outputs[22].show_expanded = False
    if hasattr(group_input_014_1.outputs[23], 'default_value'):
        group_input_014_1.outputs[23].default_value = 0.0
    if hasattr(group_input_014_1.outputs[23], 'display_shape'):
        group_input_014_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[23], 'enabled'):
        group_input_014_1.outputs[23].enabled = True
    if hasattr(group_input_014_1.outputs[23], 'hide'):
        group_input_014_1.outputs[23].hide = True
    if hasattr(group_input_014_1.outputs[23], 'hide_value'):
        group_input_014_1.outputs[23].hide_value = False
    if hasattr(group_input_014_1.outputs[23], 'name'):
        group_input_014_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_014_1.outputs[23], 'show_expanded'):
        group_input_014_1.outputs[23].show_expanded = False
    if hasattr(group_input_014_1.outputs[24], 'default_value'):
        group_input_014_1.outputs[24].default_value = 0.0
    if hasattr(group_input_014_1.outputs[24], 'display_shape'):
        group_input_014_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[24], 'enabled'):
        group_input_014_1.outputs[24].enabled = True
    if hasattr(group_input_014_1.outputs[24], 'hide'):
        group_input_014_1.outputs[24].hide = True
    if hasattr(group_input_014_1.outputs[24], 'hide_value'):
        group_input_014_1.outputs[24].hide_value = False
    if hasattr(group_input_014_1.outputs[24], 'name'):
        group_input_014_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_014_1.outputs[24], 'show_expanded'):
        group_input_014_1.outputs[24].show_expanded = False
    if hasattr(group_input_014_1.outputs[25], 'default_value'):
        group_input_014_1.outputs[25].default_value = 0.0
    if hasattr(group_input_014_1.outputs[25], 'display_shape'):
        group_input_014_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[25], 'enabled'):
        group_input_014_1.outputs[25].enabled = True
    if hasattr(group_input_014_1.outputs[25], 'hide'):
        group_input_014_1.outputs[25].hide = True
    if hasattr(group_input_014_1.outputs[25], 'hide_value'):
        group_input_014_1.outputs[25].hide_value = False
    if hasattr(group_input_014_1.outputs[25], 'name'):
        group_input_014_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_014_1.outputs[25], 'show_expanded'):
        group_input_014_1.outputs[25].show_expanded = False
    if hasattr(group_input_014_1.outputs[26], 'default_value'):
        group_input_014_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_014_1.outputs[26], 'display_shape'):
        group_input_014_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[26], 'enabled'):
        group_input_014_1.outputs[26].enabled = True
    if hasattr(group_input_014_1.outputs[26], 'hide'):
        group_input_014_1.outputs[26].hide = True
    if hasattr(group_input_014_1.outputs[26], 'hide_value'):
        group_input_014_1.outputs[26].hide_value = False
    if hasattr(group_input_014_1.outputs[26], 'name'):
        group_input_014_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_014_1.outputs[26], 'show_expanded'):
        group_input_014_1.outputs[26].show_expanded = False
    if hasattr(group_input_014_1.outputs[27], 'default_value'):
        group_input_014_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_014_1.outputs[27], 'display_shape'):
        group_input_014_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[27], 'enabled'):
        group_input_014_1.outputs[27].enabled = True
    if hasattr(group_input_014_1.outputs[27], 'hide'):
        group_input_014_1.outputs[27].hide = True
    if hasattr(group_input_014_1.outputs[27], 'hide_value'):
        group_input_014_1.outputs[27].hide_value = False
    if hasattr(group_input_014_1.outputs[27], 'name'):
        group_input_014_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_014_1.outputs[27], 'show_expanded'):
        group_input_014_1.outputs[27].show_expanded = False
    if hasattr(group_input_014_1.outputs[28], 'default_value'):
        group_input_014_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_014_1.outputs[28], 'display_shape'):
        group_input_014_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[28], 'enabled'):
        group_input_014_1.outputs[28].enabled = True
    if hasattr(group_input_014_1.outputs[28], 'hide'):
        group_input_014_1.outputs[28].hide = True
    if hasattr(group_input_014_1.outputs[28], 'hide_value'):
        group_input_014_1.outputs[28].hide_value = False
    if hasattr(group_input_014_1.outputs[28], 'name'):
        group_input_014_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_014_1.outputs[28], 'show_expanded'):
        group_input_014_1.outputs[28].show_expanded = False
    if hasattr(group_input_014_1.outputs[29], 'default_value'):
        group_input_014_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_014_1.outputs[29], 'display_shape'):
        group_input_014_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[29], 'enabled'):
        group_input_014_1.outputs[29].enabled = True
    if hasattr(group_input_014_1.outputs[29], 'hide'):
        group_input_014_1.outputs[29].hide = True
    if hasattr(group_input_014_1.outputs[29], 'hide_value'):
        group_input_014_1.outputs[29].hide_value = False
    if hasattr(group_input_014_1.outputs[29], 'name'):
        group_input_014_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_014_1.outputs[29], 'show_expanded'):
        group_input_014_1.outputs[29].show_expanded = False
    if hasattr(group_input_014_1.outputs[30], 'default_value'):
        group_input_014_1.outputs[30].default_value = 0.0
    if hasattr(group_input_014_1.outputs[30], 'display_shape'):
        group_input_014_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[30], 'enabled'):
        group_input_014_1.outputs[30].enabled = True
    if hasattr(group_input_014_1.outputs[30], 'hide'):
        group_input_014_1.outputs[30].hide = True
    if hasattr(group_input_014_1.outputs[30], 'hide_value'):
        group_input_014_1.outputs[30].hide_value = False
    if hasattr(group_input_014_1.outputs[30], 'name'):
        group_input_014_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_014_1.outputs[30], 'show_expanded'):
        group_input_014_1.outputs[30].show_expanded = False
    if hasattr(group_input_014_1.outputs[31], 'default_value'):
        group_input_014_1.outputs[31].default_value = 0.0
    if hasattr(group_input_014_1.outputs[31], 'display_shape'):
        group_input_014_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[31], 'enabled'):
        group_input_014_1.outputs[31].enabled = True
    if hasattr(group_input_014_1.outputs[31], 'hide'):
        group_input_014_1.outputs[31].hide = True
    if hasattr(group_input_014_1.outputs[31], 'hide_value'):
        group_input_014_1.outputs[31].hide_value = False
    if hasattr(group_input_014_1.outputs[31], 'name'):
        group_input_014_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_014_1.outputs[31], 'show_expanded'):
        group_input_014_1.outputs[31].show_expanded = False
    if hasattr(group_input_014_1.outputs[32], 'default_value'):
        group_input_014_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[32], 'display_shape'):
        group_input_014_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[32], 'enabled'):
        group_input_014_1.outputs[32].enabled = True
    if hasattr(group_input_014_1.outputs[32], 'hide'):
        group_input_014_1.outputs[32].hide = True
    if hasattr(group_input_014_1.outputs[32], 'hide_value'):
        group_input_014_1.outputs[32].hide_value = False
    if hasattr(group_input_014_1.outputs[32], 'name'):
        group_input_014_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_014_1.outputs[32], 'show_expanded'):
        group_input_014_1.outputs[32].show_expanded = False
    if hasattr(group_input_014_1.outputs[33], 'default_value'):
        group_input_014_1.outputs[33].default_value = 0.0
    if hasattr(group_input_014_1.outputs[33], 'display_shape'):
        group_input_014_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[33], 'enabled'):
        group_input_014_1.outputs[33].enabled = True
    if hasattr(group_input_014_1.outputs[33], 'hide'):
        group_input_014_1.outputs[33].hide = True
    if hasattr(group_input_014_1.outputs[33], 'hide_value'):
        group_input_014_1.outputs[33].hide_value = False
    if hasattr(group_input_014_1.outputs[33], 'name'):
        group_input_014_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_014_1.outputs[33], 'show_expanded'):
        group_input_014_1.outputs[33].show_expanded = False
    if hasattr(group_input_014_1.outputs[34], 'default_value'):
        group_input_014_1.outputs[34].default_value = 0.0
    if hasattr(group_input_014_1.outputs[34], 'display_shape'):
        group_input_014_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[34], 'enabled'):
        group_input_014_1.outputs[34].enabled = True
    if hasattr(group_input_014_1.outputs[34], 'hide'):
        group_input_014_1.outputs[34].hide = True
    if hasattr(group_input_014_1.outputs[34], 'hide_value'):
        group_input_014_1.outputs[34].hide_value = False
    if hasattr(group_input_014_1.outputs[34], 'name'):
        group_input_014_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_014_1.outputs[34], 'show_expanded'):
        group_input_014_1.outputs[34].show_expanded = False
    if hasattr(group_input_014_1.outputs[35], 'default_value'):
        group_input_014_1.outputs[35].default_value = 0.0
    if hasattr(group_input_014_1.outputs[35], 'display_shape'):
        group_input_014_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[35], 'enabled'):
        group_input_014_1.outputs[35].enabled = True
    if hasattr(group_input_014_1.outputs[35], 'hide'):
        group_input_014_1.outputs[35].hide = True
    if hasattr(group_input_014_1.outputs[35], 'hide_value'):
        group_input_014_1.outputs[35].hide_value = False
    if hasattr(group_input_014_1.outputs[35], 'name'):
        group_input_014_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_014_1.outputs[35], 'show_expanded'):
        group_input_014_1.outputs[35].show_expanded = False
    if hasattr(group_input_014_1.outputs[36], 'default_value'):
        group_input_014_1.outputs[36].default_value = 0.0
    if hasattr(group_input_014_1.outputs[36], 'display_shape'):
        group_input_014_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[36], 'enabled'):
        group_input_014_1.outputs[36].enabled = True
    if hasattr(group_input_014_1.outputs[36], 'hide'):
        group_input_014_1.outputs[36].hide = True
    if hasattr(group_input_014_1.outputs[36], 'hide_value'):
        group_input_014_1.outputs[36].hide_value = False
    if hasattr(group_input_014_1.outputs[36], 'name'):
        group_input_014_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_014_1.outputs[36], 'show_expanded'):
        group_input_014_1.outputs[36].show_expanded = False
    if hasattr(group_input_014_1.outputs[37], 'default_value'):
        group_input_014_1.outputs[37].default_value = 0.0
    if hasattr(group_input_014_1.outputs[37], 'display_shape'):
        group_input_014_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[37], 'enabled'):
        group_input_014_1.outputs[37].enabled = True
    if hasattr(group_input_014_1.outputs[37], 'hide'):
        group_input_014_1.outputs[37].hide = True
    if hasattr(group_input_014_1.outputs[37], 'hide_value'):
        group_input_014_1.outputs[37].hide_value = False
    if hasattr(group_input_014_1.outputs[37], 'name'):
        group_input_014_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_014_1.outputs[37], 'show_expanded'):
        group_input_014_1.outputs[37].show_expanded = False
    if hasattr(group_input_014_1.outputs[38], 'default_value'):
        group_input_014_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_014_1.outputs[38], 'display_shape'):
        group_input_014_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[38], 'enabled'):
        group_input_014_1.outputs[38].enabled = True
    if hasattr(group_input_014_1.outputs[38], 'hide'):
        group_input_014_1.outputs[38].hide = True
    if hasattr(group_input_014_1.outputs[38], 'hide_value'):
        group_input_014_1.outputs[38].hide_value = False
    if hasattr(group_input_014_1.outputs[38], 'name'):
        group_input_014_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_014_1.outputs[38], 'show_expanded'):
        group_input_014_1.outputs[38].show_expanded = False
    if hasattr(group_input_014_1.outputs[39], 'default_value'):
        group_input_014_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_014_1.outputs[39], 'display_shape'):
        group_input_014_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[39], 'enabled'):
        group_input_014_1.outputs[39].enabled = True
    if hasattr(group_input_014_1.outputs[39], 'hide'):
        group_input_014_1.outputs[39].hide = True
    if hasattr(group_input_014_1.outputs[39], 'hide_value'):
        group_input_014_1.outputs[39].hide_value = False
    if hasattr(group_input_014_1.outputs[39], 'name'):
        group_input_014_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_014_1.outputs[39], 'show_expanded'):
        group_input_014_1.outputs[39].show_expanded = False
    if hasattr(group_input_014_1.outputs[40], 'default_value'):
        group_input_014_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_014_1.outputs[40], 'display_shape'):
        group_input_014_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[40], 'enabled'):
        group_input_014_1.outputs[40].enabled = True
    if hasattr(group_input_014_1.outputs[40], 'hide'):
        group_input_014_1.outputs[40].hide = True
    if hasattr(group_input_014_1.outputs[40], 'hide_value'):
        group_input_014_1.outputs[40].hide_value = False
    if hasattr(group_input_014_1.outputs[40], 'name'):
        group_input_014_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_014_1.outputs[40], 'show_expanded'):
        group_input_014_1.outputs[40].show_expanded = False
    if hasattr(group_input_014_1.outputs[41], 'default_value'):
        group_input_014_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_014_1.outputs[41], 'display_shape'):
        group_input_014_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[41], 'enabled'):
        group_input_014_1.outputs[41].enabled = True
    if hasattr(group_input_014_1.outputs[41], 'hide'):
        group_input_014_1.outputs[41].hide = True
    if hasattr(group_input_014_1.outputs[41], 'hide_value'):
        group_input_014_1.outputs[41].hide_value = False
    if hasattr(group_input_014_1.outputs[41], 'name'):
        group_input_014_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_014_1.outputs[41], 'show_expanded'):
        group_input_014_1.outputs[41].show_expanded = False
    if hasattr(group_input_014_1.outputs[42], 'default_value'):
        group_input_014_1.outputs[42].default_value = 0.0
    if hasattr(group_input_014_1.outputs[42], 'display_shape'):
        group_input_014_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[42], 'enabled'):
        group_input_014_1.outputs[42].enabled = True
    if hasattr(group_input_014_1.outputs[42], 'hide'):
        group_input_014_1.outputs[42].hide = True
    if hasattr(group_input_014_1.outputs[42], 'hide_value'):
        group_input_014_1.outputs[42].hide_value = False
    if hasattr(group_input_014_1.outputs[42], 'name'):
        group_input_014_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_014_1.outputs[42], 'show_expanded'):
        group_input_014_1.outputs[42].show_expanded = False
    if hasattr(group_input_014_1.outputs[43], 'default_value'):
        group_input_014_1.outputs[43].default_value = 0.0
    if hasattr(group_input_014_1.outputs[43], 'display_shape'):
        group_input_014_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[43], 'enabled'):
        group_input_014_1.outputs[43].enabled = True
    if hasattr(group_input_014_1.outputs[43], 'hide'):
        group_input_014_1.outputs[43].hide = True
    if hasattr(group_input_014_1.outputs[43], 'hide_value'):
        group_input_014_1.outputs[43].hide_value = False
    if hasattr(group_input_014_1.outputs[43], 'name'):
        group_input_014_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_014_1.outputs[43], 'show_expanded'):
        group_input_014_1.outputs[43].show_expanded = False
    if hasattr(group_input_014_1.outputs[44], 'default_value'):
        group_input_014_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[44], 'display_shape'):
        group_input_014_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[44], 'enabled'):
        group_input_014_1.outputs[44].enabled = True
    if hasattr(group_input_014_1.outputs[44], 'hide'):
        group_input_014_1.outputs[44].hide = True
    if hasattr(group_input_014_1.outputs[44], 'hide_value'):
        group_input_014_1.outputs[44].hide_value = False
    if hasattr(group_input_014_1.outputs[44], 'name'):
        group_input_014_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_014_1.outputs[44], 'show_expanded'):
        group_input_014_1.outputs[44].show_expanded = False
    if hasattr(group_input_014_1.outputs[45], 'default_value'):
        group_input_014_1.outputs[45].default_value = 0.0
    if hasattr(group_input_014_1.outputs[45], 'display_shape'):
        group_input_014_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[45], 'enabled'):
        group_input_014_1.outputs[45].enabled = True
    if hasattr(group_input_014_1.outputs[45], 'hide'):
        group_input_014_1.outputs[45].hide = True
    if hasattr(group_input_014_1.outputs[45], 'hide_value'):
        group_input_014_1.outputs[45].hide_value = False
    if hasattr(group_input_014_1.outputs[45], 'name'):
        group_input_014_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_014_1.outputs[45], 'show_expanded'):
        group_input_014_1.outputs[45].show_expanded = False
    if hasattr(group_input_014_1.outputs[46], 'default_value'):
        group_input_014_1.outputs[46].default_value = 0.0
    if hasattr(group_input_014_1.outputs[46], 'display_shape'):
        group_input_014_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[46], 'enabled'):
        group_input_014_1.outputs[46].enabled = True
    if hasattr(group_input_014_1.outputs[46], 'hide'):
        group_input_014_1.outputs[46].hide = True
    if hasattr(group_input_014_1.outputs[46], 'hide_value'):
        group_input_014_1.outputs[46].hide_value = False
    if hasattr(group_input_014_1.outputs[46], 'name'):
        group_input_014_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_014_1.outputs[46], 'show_expanded'):
        group_input_014_1.outputs[46].show_expanded = False
    if hasattr(group_input_014_1.outputs[47], 'default_value'):
        group_input_014_1.outputs[47].default_value = 0.0
    if hasattr(group_input_014_1.outputs[47], 'display_shape'):
        group_input_014_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[47], 'enabled'):
        group_input_014_1.outputs[47].enabled = True
    if hasattr(group_input_014_1.outputs[47], 'hide'):
        group_input_014_1.outputs[47].hide = True
    if hasattr(group_input_014_1.outputs[47], 'hide_value'):
        group_input_014_1.outputs[47].hide_value = False
    if hasattr(group_input_014_1.outputs[47], 'name'):
        group_input_014_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_014_1.outputs[47], 'show_expanded'):
        group_input_014_1.outputs[47].show_expanded = False
    if hasattr(group_input_014_1.outputs[48], 'default_value'):
        group_input_014_1.outputs[48].default_value = 0.0
    if hasattr(group_input_014_1.outputs[48], 'display_shape'):
        group_input_014_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[48], 'enabled'):
        group_input_014_1.outputs[48].enabled = True
    if hasattr(group_input_014_1.outputs[48], 'hide'):
        group_input_014_1.outputs[48].hide = True
    if hasattr(group_input_014_1.outputs[48], 'hide_value'):
        group_input_014_1.outputs[48].hide_value = False
    if hasattr(group_input_014_1.outputs[48], 'name'):
        group_input_014_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_014_1.outputs[48], 'show_expanded'):
        group_input_014_1.outputs[48].show_expanded = False
    if hasattr(group_input_014_1.outputs[49], 'default_value'):
        group_input_014_1.outputs[49].default_value = 0.0
    if hasattr(group_input_014_1.outputs[49], 'display_shape'):
        group_input_014_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[49], 'enabled'):
        group_input_014_1.outputs[49].enabled = True
    if hasattr(group_input_014_1.outputs[49], 'hide'):
        group_input_014_1.outputs[49].hide = True
    if hasattr(group_input_014_1.outputs[49], 'hide_value'):
        group_input_014_1.outputs[49].hide_value = False
    if hasattr(group_input_014_1.outputs[49], 'name'):
        group_input_014_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_014_1.outputs[49], 'show_expanded'):
        group_input_014_1.outputs[49].show_expanded = False
    if hasattr(group_input_014_1.outputs[50], 'default_value'):
        group_input_014_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_014_1.outputs[50], 'display_shape'):
        group_input_014_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[50], 'enabled'):
        group_input_014_1.outputs[50].enabled = True
    if hasattr(group_input_014_1.outputs[50], 'hide'):
        group_input_014_1.outputs[50].hide = True
    if hasattr(group_input_014_1.outputs[50], 'hide_value'):
        group_input_014_1.outputs[50].hide_value = False
    if hasattr(group_input_014_1.outputs[50], 'name'):
        group_input_014_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_014_1.outputs[50], 'show_expanded'):
        group_input_014_1.outputs[50].show_expanded = False
    if hasattr(group_input_014_1.outputs[51], 'default_value'):
        group_input_014_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_014_1.outputs[51], 'display_shape'):
        group_input_014_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[51], 'enabled'):
        group_input_014_1.outputs[51].enabled = True
    if hasattr(group_input_014_1.outputs[51], 'hide'):
        group_input_014_1.outputs[51].hide = True
    if hasattr(group_input_014_1.outputs[51], 'hide_value'):
        group_input_014_1.outputs[51].hide_value = False
    if hasattr(group_input_014_1.outputs[51], 'name'):
        group_input_014_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_014_1.outputs[51], 'show_expanded'):
        group_input_014_1.outputs[51].show_expanded = False
    if hasattr(group_input_014_1.outputs[52], 'default_value'):
        group_input_014_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_014_1.outputs[52], 'display_shape'):
        group_input_014_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[52], 'enabled'):
        group_input_014_1.outputs[52].enabled = True
    if hasattr(group_input_014_1.outputs[52], 'hide'):
        group_input_014_1.outputs[52].hide = True
    if hasattr(group_input_014_1.outputs[52], 'hide_value'):
        group_input_014_1.outputs[52].hide_value = False
    if hasattr(group_input_014_1.outputs[52], 'name'):
        group_input_014_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_014_1.outputs[52], 'show_expanded'):
        group_input_014_1.outputs[52].show_expanded = False
    if hasattr(group_input_014_1.outputs[53], 'default_value'):
        group_input_014_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_014_1.outputs[53], 'display_shape'):
        group_input_014_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[53], 'enabled'):
        group_input_014_1.outputs[53].enabled = True
    if hasattr(group_input_014_1.outputs[53], 'hide'):
        group_input_014_1.outputs[53].hide = True
    if hasattr(group_input_014_1.outputs[53], 'hide_value'):
        group_input_014_1.outputs[53].hide_value = False
    if hasattr(group_input_014_1.outputs[53], 'name'):
        group_input_014_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_014_1.outputs[53], 'show_expanded'):
        group_input_014_1.outputs[53].show_expanded = False
    if hasattr(group_input_014_1.outputs[54], 'default_value'):
        group_input_014_1.outputs[54].default_value = 0.0
    if hasattr(group_input_014_1.outputs[54], 'display_shape'):
        group_input_014_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[54], 'enabled'):
        group_input_014_1.outputs[54].enabled = True
    if hasattr(group_input_014_1.outputs[54], 'hide'):
        group_input_014_1.outputs[54].hide = True
    if hasattr(group_input_014_1.outputs[54], 'hide_value'):
        group_input_014_1.outputs[54].hide_value = False
    if hasattr(group_input_014_1.outputs[54], 'name'):
        group_input_014_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_014_1.outputs[54], 'show_expanded'):
        group_input_014_1.outputs[54].show_expanded = False
    if hasattr(group_input_014_1.outputs[55], 'default_value'):
        group_input_014_1.outputs[55].default_value = 0.0
    if hasattr(group_input_014_1.outputs[55], 'display_shape'):
        group_input_014_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[55], 'enabled'):
        group_input_014_1.outputs[55].enabled = True
    if hasattr(group_input_014_1.outputs[55], 'hide'):
        group_input_014_1.outputs[55].hide = True
    if hasattr(group_input_014_1.outputs[55], 'hide_value'):
        group_input_014_1.outputs[55].hide_value = False
    if hasattr(group_input_014_1.outputs[55], 'name'):
        group_input_014_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_014_1.outputs[55], 'show_expanded'):
        group_input_014_1.outputs[55].show_expanded = False
    if hasattr(group_input_014_1.outputs[56], 'default_value'):
        group_input_014_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[56], 'display_shape'):
        group_input_014_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[56], 'enabled'):
        group_input_014_1.outputs[56].enabled = True
    if hasattr(group_input_014_1.outputs[56], 'hide'):
        group_input_014_1.outputs[56].hide = True
    if hasattr(group_input_014_1.outputs[56], 'hide_value'):
        group_input_014_1.outputs[56].hide_value = False
    if hasattr(group_input_014_1.outputs[56], 'name'):
        group_input_014_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_014_1.outputs[56], 'show_expanded'):
        group_input_014_1.outputs[56].show_expanded = False
    if hasattr(group_input_014_1.outputs[57], 'default_value'):
        group_input_014_1.outputs[57].default_value = 0.0
    if hasattr(group_input_014_1.outputs[57], 'display_shape'):
        group_input_014_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[57], 'enabled'):
        group_input_014_1.outputs[57].enabled = True
    if hasattr(group_input_014_1.outputs[57], 'hide'):
        group_input_014_1.outputs[57].hide = True
    if hasattr(group_input_014_1.outputs[57], 'hide_value'):
        group_input_014_1.outputs[57].hide_value = False
    if hasattr(group_input_014_1.outputs[57], 'name'):
        group_input_014_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_014_1.outputs[57], 'show_expanded'):
        group_input_014_1.outputs[57].show_expanded = False
    if hasattr(group_input_014_1.outputs[58], 'default_value'):
        group_input_014_1.outputs[58].default_value = 0.0
    if hasattr(group_input_014_1.outputs[58], 'display_shape'):
        group_input_014_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[58], 'enabled'):
        group_input_014_1.outputs[58].enabled = True
    if hasattr(group_input_014_1.outputs[58], 'hide'):
        group_input_014_1.outputs[58].hide = True
    if hasattr(group_input_014_1.outputs[58], 'hide_value'):
        group_input_014_1.outputs[58].hide_value = False
    if hasattr(group_input_014_1.outputs[58], 'name'):
        group_input_014_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_014_1.outputs[58], 'show_expanded'):
        group_input_014_1.outputs[58].show_expanded = False
    if hasattr(group_input_014_1.outputs[59], 'default_value'):
        group_input_014_1.outputs[59].default_value = 0.0
    if hasattr(group_input_014_1.outputs[59], 'display_shape'):
        group_input_014_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[59], 'enabled'):
        group_input_014_1.outputs[59].enabled = True
    if hasattr(group_input_014_1.outputs[59], 'hide'):
        group_input_014_1.outputs[59].hide = True
    if hasattr(group_input_014_1.outputs[59], 'hide_value'):
        group_input_014_1.outputs[59].hide_value = False
    if hasattr(group_input_014_1.outputs[59], 'name'):
        group_input_014_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_014_1.outputs[59], 'show_expanded'):
        group_input_014_1.outputs[59].show_expanded = False
    if hasattr(group_input_014_1.outputs[60], 'default_value'):
        group_input_014_1.outputs[60].default_value = 0.0
    if hasattr(group_input_014_1.outputs[60], 'display_shape'):
        group_input_014_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[60], 'enabled'):
        group_input_014_1.outputs[60].enabled = True
    if hasattr(group_input_014_1.outputs[60], 'hide'):
        group_input_014_1.outputs[60].hide = True
    if hasattr(group_input_014_1.outputs[60], 'hide_value'):
        group_input_014_1.outputs[60].hide_value = False
    if hasattr(group_input_014_1.outputs[60], 'name'):
        group_input_014_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_014_1.outputs[60], 'show_expanded'):
        group_input_014_1.outputs[60].show_expanded = False
    if hasattr(group_input_014_1.outputs[61], 'default_value'):
        group_input_014_1.outputs[61].default_value = 0.0
    if hasattr(group_input_014_1.outputs[61], 'display_shape'):
        group_input_014_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[61], 'enabled'):
        group_input_014_1.outputs[61].enabled = True
    if hasattr(group_input_014_1.outputs[61], 'hide'):
        group_input_014_1.outputs[61].hide = True
    if hasattr(group_input_014_1.outputs[61], 'hide_value'):
        group_input_014_1.outputs[61].hide_value = False
    if hasattr(group_input_014_1.outputs[61], 'name'):
        group_input_014_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_014_1.outputs[61], 'show_expanded'):
        group_input_014_1.outputs[61].show_expanded = False
    if hasattr(group_input_014_1.outputs[62], 'default_value'):
        group_input_014_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_014_1.outputs[62], 'display_shape'):
        group_input_014_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[62], 'enabled'):
        group_input_014_1.outputs[62].enabled = True
    if hasattr(group_input_014_1.outputs[62], 'hide'):
        group_input_014_1.outputs[62].hide = True
    if hasattr(group_input_014_1.outputs[62], 'hide_value'):
        group_input_014_1.outputs[62].hide_value = False
    if hasattr(group_input_014_1.outputs[62], 'name'):
        group_input_014_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_014_1.outputs[62], 'show_expanded'):
        group_input_014_1.outputs[62].show_expanded = False
    if hasattr(group_input_014_1.outputs[63], 'default_value'):
        group_input_014_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_014_1.outputs[63], 'display_shape'):
        group_input_014_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[63], 'enabled'):
        group_input_014_1.outputs[63].enabled = True
    if hasattr(group_input_014_1.outputs[63], 'hide'):
        group_input_014_1.outputs[63].hide = True
    if hasattr(group_input_014_1.outputs[63], 'hide_value'):
        group_input_014_1.outputs[63].hide_value = False
    if hasattr(group_input_014_1.outputs[63], 'name'):
        group_input_014_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_014_1.outputs[63], 'show_expanded'):
        group_input_014_1.outputs[63].show_expanded = False
    if hasattr(group_input_014_1.outputs[64], 'default_value'):
        group_input_014_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_014_1.outputs[64], 'display_shape'):
        group_input_014_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[64], 'enabled'):
        group_input_014_1.outputs[64].enabled = True
    if hasattr(group_input_014_1.outputs[64], 'hide'):
        group_input_014_1.outputs[64].hide = True
    if hasattr(group_input_014_1.outputs[64], 'hide_value'):
        group_input_014_1.outputs[64].hide_value = False
    if hasattr(group_input_014_1.outputs[64], 'name'):
        group_input_014_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_014_1.outputs[64], 'show_expanded'):
        group_input_014_1.outputs[64].show_expanded = False
    if hasattr(group_input_014_1.outputs[65], 'default_value'):
        group_input_014_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_014_1.outputs[65], 'display_shape'):
        group_input_014_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[65], 'enabled'):
        group_input_014_1.outputs[65].enabled = True
    if hasattr(group_input_014_1.outputs[65], 'hide'):
        group_input_014_1.outputs[65].hide = True
    if hasattr(group_input_014_1.outputs[65], 'hide_value'):
        group_input_014_1.outputs[65].hide_value = False
    if hasattr(group_input_014_1.outputs[65], 'name'):
        group_input_014_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_014_1.outputs[65], 'show_expanded'):
        group_input_014_1.outputs[65].show_expanded = False
    if hasattr(group_input_014_1.outputs[66], 'default_value'):
        group_input_014_1.outputs[66].default_value = 0.0
    if hasattr(group_input_014_1.outputs[66], 'display_shape'):
        group_input_014_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[66], 'enabled'):
        group_input_014_1.outputs[66].enabled = True
    if hasattr(group_input_014_1.outputs[66], 'hide'):
        group_input_014_1.outputs[66].hide = True
    if hasattr(group_input_014_1.outputs[66], 'hide_value'):
        group_input_014_1.outputs[66].hide_value = False
    if hasattr(group_input_014_1.outputs[66], 'name'):
        group_input_014_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_014_1.outputs[66], 'show_expanded'):
        group_input_014_1.outputs[66].show_expanded = False
    if hasattr(group_input_014_1.outputs[67], 'default_value'):
        group_input_014_1.outputs[67].default_value = 0.0
    if hasattr(group_input_014_1.outputs[67], 'display_shape'):
        group_input_014_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[67], 'enabled'):
        group_input_014_1.outputs[67].enabled = True
    if hasattr(group_input_014_1.outputs[67], 'hide'):
        group_input_014_1.outputs[67].hide = True
    if hasattr(group_input_014_1.outputs[67], 'hide_value'):
        group_input_014_1.outputs[67].hide_value = False
    if hasattr(group_input_014_1.outputs[67], 'name'):
        group_input_014_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_014_1.outputs[67], 'show_expanded'):
        group_input_014_1.outputs[67].show_expanded = False
    if hasattr(group_input_014_1.outputs[68], 'default_value'):
        group_input_014_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[68], 'display_shape'):
        group_input_014_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[68], 'enabled'):
        group_input_014_1.outputs[68].enabled = True
    if hasattr(group_input_014_1.outputs[68], 'hide'):
        group_input_014_1.outputs[68].hide = True
    if hasattr(group_input_014_1.outputs[68], 'hide_value'):
        group_input_014_1.outputs[68].hide_value = False
    if hasattr(group_input_014_1.outputs[68], 'name'):
        group_input_014_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_014_1.outputs[68], 'show_expanded'):
        group_input_014_1.outputs[68].show_expanded = False
    if hasattr(group_input_014_1.outputs[69], 'default_value'):
        group_input_014_1.outputs[69].default_value = 0.0
    if hasattr(group_input_014_1.outputs[69], 'display_shape'):
        group_input_014_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[69], 'enabled'):
        group_input_014_1.outputs[69].enabled = True
    if hasattr(group_input_014_1.outputs[69], 'hide'):
        group_input_014_1.outputs[69].hide = True
    if hasattr(group_input_014_1.outputs[69], 'hide_value'):
        group_input_014_1.outputs[69].hide_value = False
    if hasattr(group_input_014_1.outputs[69], 'name'):
        group_input_014_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_014_1.outputs[69], 'show_expanded'):
        group_input_014_1.outputs[69].show_expanded = False
    if hasattr(group_input_014_1.outputs[70], 'default_value'):
        group_input_014_1.outputs[70].default_value = 0.0
    if hasattr(group_input_014_1.outputs[70], 'display_shape'):
        group_input_014_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[70], 'enabled'):
        group_input_014_1.outputs[70].enabled = True
    if hasattr(group_input_014_1.outputs[70], 'hide'):
        group_input_014_1.outputs[70].hide = True
    if hasattr(group_input_014_1.outputs[70], 'hide_value'):
        group_input_014_1.outputs[70].hide_value = False
    if hasattr(group_input_014_1.outputs[70], 'name'):
        group_input_014_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_014_1.outputs[70], 'show_expanded'):
        group_input_014_1.outputs[70].show_expanded = False
    if hasattr(group_input_014_1.outputs[71], 'default_value'):
        group_input_014_1.outputs[71].default_value = 0.0
    if hasattr(group_input_014_1.outputs[71], 'display_shape'):
        group_input_014_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[71], 'enabled'):
        group_input_014_1.outputs[71].enabled = True
    if hasattr(group_input_014_1.outputs[71], 'hide'):
        group_input_014_1.outputs[71].hide = True
    if hasattr(group_input_014_1.outputs[71], 'hide_value'):
        group_input_014_1.outputs[71].hide_value = False
    if hasattr(group_input_014_1.outputs[71], 'name'):
        group_input_014_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_014_1.outputs[71], 'show_expanded'):
        group_input_014_1.outputs[71].show_expanded = False
    if hasattr(group_input_014_1.outputs[72], 'default_value'):
        group_input_014_1.outputs[72].default_value = 0.0
    if hasattr(group_input_014_1.outputs[72], 'display_shape'):
        group_input_014_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[72], 'enabled'):
        group_input_014_1.outputs[72].enabled = True
    if hasattr(group_input_014_1.outputs[72], 'hide'):
        group_input_014_1.outputs[72].hide = True
    if hasattr(group_input_014_1.outputs[72], 'hide_value'):
        group_input_014_1.outputs[72].hide_value = False
    if hasattr(group_input_014_1.outputs[72], 'name'):
        group_input_014_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_014_1.outputs[72], 'show_expanded'):
        group_input_014_1.outputs[72].show_expanded = False
    if hasattr(group_input_014_1.outputs[73], 'default_value'):
        group_input_014_1.outputs[73].default_value = 0.0
    if hasattr(group_input_014_1.outputs[73], 'display_shape'):
        group_input_014_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[73], 'enabled'):
        group_input_014_1.outputs[73].enabled = True
    if hasattr(group_input_014_1.outputs[73], 'hide'):
        group_input_014_1.outputs[73].hide = True
    if hasattr(group_input_014_1.outputs[73], 'hide_value'):
        group_input_014_1.outputs[73].hide_value = False
    if hasattr(group_input_014_1.outputs[73], 'name'):
        group_input_014_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_014_1.outputs[73], 'show_expanded'):
        group_input_014_1.outputs[73].show_expanded = False
    if hasattr(group_input_014_1.outputs[74], 'default_value'):
        group_input_014_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_014_1.outputs[74], 'display_shape'):
        group_input_014_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[74], 'enabled'):
        group_input_014_1.outputs[74].enabled = True
    if hasattr(group_input_014_1.outputs[74], 'hide'):
        group_input_014_1.outputs[74].hide = True
    if hasattr(group_input_014_1.outputs[74], 'hide_value'):
        group_input_014_1.outputs[74].hide_value = False
    if hasattr(group_input_014_1.outputs[74], 'name'):
        group_input_014_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_014_1.outputs[74], 'show_expanded'):
        group_input_014_1.outputs[74].show_expanded = False
    if hasattr(group_input_014_1.outputs[75], 'default_value'):
        group_input_014_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_014_1.outputs[75], 'display_shape'):
        group_input_014_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[75], 'enabled'):
        group_input_014_1.outputs[75].enabled = True
    if hasattr(group_input_014_1.outputs[75], 'hide'):
        group_input_014_1.outputs[75].hide = True
    if hasattr(group_input_014_1.outputs[75], 'hide_value'):
        group_input_014_1.outputs[75].hide_value = False
    if hasattr(group_input_014_1.outputs[75], 'name'):
        group_input_014_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_014_1.outputs[75], 'show_expanded'):
        group_input_014_1.outputs[75].show_expanded = False
    if hasattr(group_input_014_1.outputs[76], 'default_value'):
        group_input_014_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_014_1.outputs[76], 'display_shape'):
        group_input_014_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[76], 'enabled'):
        group_input_014_1.outputs[76].enabled = True
    if hasattr(group_input_014_1.outputs[76], 'hide'):
        group_input_014_1.outputs[76].hide = True
    if hasattr(group_input_014_1.outputs[76], 'hide_value'):
        group_input_014_1.outputs[76].hide_value = False
    if hasattr(group_input_014_1.outputs[76], 'name'):
        group_input_014_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_014_1.outputs[76], 'show_expanded'):
        group_input_014_1.outputs[76].show_expanded = False
    if hasattr(group_input_014_1.outputs[77], 'default_value'):
        group_input_014_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_014_1.outputs[77], 'display_shape'):
        group_input_014_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[77], 'enabled'):
        group_input_014_1.outputs[77].enabled = True
    if hasattr(group_input_014_1.outputs[77], 'hide'):
        group_input_014_1.outputs[77].hide = True
    if hasattr(group_input_014_1.outputs[77], 'hide_value'):
        group_input_014_1.outputs[77].hide_value = False
    if hasattr(group_input_014_1.outputs[77], 'name'):
        group_input_014_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_014_1.outputs[77], 'show_expanded'):
        group_input_014_1.outputs[77].show_expanded = False
    if hasattr(group_input_014_1.outputs[78], 'default_value'):
        group_input_014_1.outputs[78].default_value = 0.0
    if hasattr(group_input_014_1.outputs[78], 'display_shape'):
        group_input_014_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[78], 'enabled'):
        group_input_014_1.outputs[78].enabled = True
    if hasattr(group_input_014_1.outputs[78], 'hide'):
        group_input_014_1.outputs[78].hide = False
    if hasattr(group_input_014_1.outputs[78], 'hide_value'):
        group_input_014_1.outputs[78].hide_value = False
    if hasattr(group_input_014_1.outputs[78], 'name'):
        group_input_014_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_014_1.outputs[78], 'show_expanded'):
        group_input_014_1.outputs[78].show_expanded = False
    if hasattr(group_input_014_1.outputs[79], 'default_value'):
        group_input_014_1.outputs[79].default_value = 0.0
    if hasattr(group_input_014_1.outputs[79], 'display_shape'):
        group_input_014_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[79], 'enabled'):
        group_input_014_1.outputs[79].enabled = True
    if hasattr(group_input_014_1.outputs[79], 'hide'):
        group_input_014_1.outputs[79].hide = True
    if hasattr(group_input_014_1.outputs[79], 'hide_value'):
        group_input_014_1.outputs[79].hide_value = False
    if hasattr(group_input_014_1.outputs[79], 'name'):
        group_input_014_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_014_1.outputs[79], 'show_expanded'):
        group_input_014_1.outputs[79].show_expanded = False
    if hasattr(group_input_014_1.outputs[80], 'default_value'):
        group_input_014_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[80], 'display_shape'):
        group_input_014_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[80], 'enabled'):
        group_input_014_1.outputs[80].enabled = True
    if hasattr(group_input_014_1.outputs[80], 'hide'):
        group_input_014_1.outputs[80].hide = True
    if hasattr(group_input_014_1.outputs[80], 'hide_value'):
        group_input_014_1.outputs[80].hide_value = False
    if hasattr(group_input_014_1.outputs[80], 'name'):
        group_input_014_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_014_1.outputs[80], 'show_expanded'):
        group_input_014_1.outputs[80].show_expanded = False
    if hasattr(group_input_014_1.outputs[81], 'default_value'):
        group_input_014_1.outputs[81].default_value = 0.0
    if hasattr(group_input_014_1.outputs[81], 'display_shape'):
        group_input_014_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[81], 'enabled'):
        group_input_014_1.outputs[81].enabled = True
    if hasattr(group_input_014_1.outputs[81], 'hide'):
        group_input_014_1.outputs[81].hide = True
    if hasattr(group_input_014_1.outputs[81], 'hide_value'):
        group_input_014_1.outputs[81].hide_value = False
    if hasattr(group_input_014_1.outputs[81], 'name'):
        group_input_014_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_014_1.outputs[81], 'show_expanded'):
        group_input_014_1.outputs[81].show_expanded = False
    if hasattr(group_input_014_1.outputs[82], 'default_value'):
        group_input_014_1.outputs[82].default_value = 0.0
    if hasattr(group_input_014_1.outputs[82], 'display_shape'):
        group_input_014_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[82], 'enabled'):
        group_input_014_1.outputs[82].enabled = True
    if hasattr(group_input_014_1.outputs[82], 'hide'):
        group_input_014_1.outputs[82].hide = True
    if hasattr(group_input_014_1.outputs[82], 'hide_value'):
        group_input_014_1.outputs[82].hide_value = False
    if hasattr(group_input_014_1.outputs[82], 'name'):
        group_input_014_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_014_1.outputs[82], 'show_expanded'):
        group_input_014_1.outputs[82].show_expanded = False
    if hasattr(group_input_014_1.outputs[83], 'default_value'):
        group_input_014_1.outputs[83].default_value = 0.0
    if hasattr(group_input_014_1.outputs[83], 'display_shape'):
        group_input_014_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[83], 'enabled'):
        group_input_014_1.outputs[83].enabled = True
    if hasattr(group_input_014_1.outputs[83], 'hide'):
        group_input_014_1.outputs[83].hide = True
    if hasattr(group_input_014_1.outputs[83], 'hide_value'):
        group_input_014_1.outputs[83].hide_value = False
    if hasattr(group_input_014_1.outputs[83], 'name'):
        group_input_014_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_014_1.outputs[83], 'show_expanded'):
        group_input_014_1.outputs[83].show_expanded = False
    if hasattr(group_input_014_1.outputs[84], 'default_value'):
        group_input_014_1.outputs[84].default_value = 0.0
    if hasattr(group_input_014_1.outputs[84], 'display_shape'):
        group_input_014_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[84], 'enabled'):
        group_input_014_1.outputs[84].enabled = True
    if hasattr(group_input_014_1.outputs[84], 'hide'):
        group_input_014_1.outputs[84].hide = True
    if hasattr(group_input_014_1.outputs[84], 'hide_value'):
        group_input_014_1.outputs[84].hide_value = False
    if hasattr(group_input_014_1.outputs[84], 'name'):
        group_input_014_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_014_1.outputs[84], 'show_expanded'):
        group_input_014_1.outputs[84].show_expanded = False
    if hasattr(group_input_014_1.outputs[85], 'default_value'):
        group_input_014_1.outputs[85].default_value = 0.0
    if hasattr(group_input_014_1.outputs[85], 'display_shape'):
        group_input_014_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[85], 'enabled'):
        group_input_014_1.outputs[85].enabled = True
    if hasattr(group_input_014_1.outputs[85], 'hide'):
        group_input_014_1.outputs[85].hide = True
    if hasattr(group_input_014_1.outputs[85], 'hide_value'):
        group_input_014_1.outputs[85].hide_value = False
    if hasattr(group_input_014_1.outputs[85], 'name'):
        group_input_014_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_014_1.outputs[85], 'show_expanded'):
        group_input_014_1.outputs[85].show_expanded = False
    if hasattr(group_input_014_1.outputs[86], 'default_value'):
        group_input_014_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_014_1.outputs[86], 'display_shape'):
        group_input_014_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[86], 'enabled'):
        group_input_014_1.outputs[86].enabled = True
    if hasattr(group_input_014_1.outputs[86], 'hide'):
        group_input_014_1.outputs[86].hide = False
    if hasattr(group_input_014_1.outputs[86], 'hide_value'):
        group_input_014_1.outputs[86].hide_value = False
    if hasattr(group_input_014_1.outputs[86], 'name'):
        group_input_014_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_014_1.outputs[86], 'show_expanded'):
        group_input_014_1.outputs[86].show_expanded = False
    if hasattr(group_input_014_1.outputs[87], 'default_value'):
        group_input_014_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_014_1.outputs[87], 'display_shape'):
        group_input_014_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[87], 'enabled'):
        group_input_014_1.outputs[87].enabled = True
    if hasattr(group_input_014_1.outputs[87], 'hide'):
        group_input_014_1.outputs[87].hide = False
    if hasattr(group_input_014_1.outputs[87], 'hide_value'):
        group_input_014_1.outputs[87].hide_value = False
    if hasattr(group_input_014_1.outputs[87], 'name'):
        group_input_014_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_014_1.outputs[87], 'show_expanded'):
        group_input_014_1.outputs[87].show_expanded = False
    if hasattr(group_input_014_1.outputs[88], 'default_value'):
        group_input_014_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_014_1.outputs[88], 'display_shape'):
        group_input_014_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[88], 'enabled'):
        group_input_014_1.outputs[88].enabled = True
    if hasattr(group_input_014_1.outputs[88], 'hide'):
        group_input_014_1.outputs[88].hide = False
    if hasattr(group_input_014_1.outputs[88], 'hide_value'):
        group_input_014_1.outputs[88].hide_value = False
    if hasattr(group_input_014_1.outputs[88], 'name'):
        group_input_014_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_014_1.outputs[88], 'show_expanded'):
        group_input_014_1.outputs[88].show_expanded = False
    if hasattr(group_input_014_1.outputs[89], 'default_value'):
        group_input_014_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_014_1.outputs[89], 'display_shape'):
        group_input_014_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[89], 'enabled'):
        group_input_014_1.outputs[89].enabled = True
    if hasattr(group_input_014_1.outputs[89], 'hide'):
        group_input_014_1.outputs[89].hide = True
    if hasattr(group_input_014_1.outputs[89], 'hide_value'):
        group_input_014_1.outputs[89].hide_value = False
    if hasattr(group_input_014_1.outputs[89], 'name'):
        group_input_014_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_014_1.outputs[89], 'show_expanded'):
        group_input_014_1.outputs[89].show_expanded = False
    if hasattr(group_input_014_1.outputs[90], 'default_value'):
        group_input_014_1.outputs[90].default_value = 0.0
    if hasattr(group_input_014_1.outputs[90], 'display_shape'):
        group_input_014_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[90], 'enabled'):
        group_input_014_1.outputs[90].enabled = True
    if hasattr(group_input_014_1.outputs[90], 'hide'):
        group_input_014_1.outputs[90].hide = True
    if hasattr(group_input_014_1.outputs[90], 'hide_value'):
        group_input_014_1.outputs[90].hide_value = False
    if hasattr(group_input_014_1.outputs[90], 'name'):
        group_input_014_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_014_1.outputs[90], 'show_expanded'):
        group_input_014_1.outputs[90].show_expanded = False
    if hasattr(group_input_014_1.outputs[91], 'default_value'):
        group_input_014_1.outputs[91].default_value = 0.0
    if hasattr(group_input_014_1.outputs[91], 'display_shape'):
        group_input_014_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[91], 'enabled'):
        group_input_014_1.outputs[91].enabled = True
    if hasattr(group_input_014_1.outputs[91], 'hide'):
        group_input_014_1.outputs[91].hide = True
    if hasattr(group_input_014_1.outputs[91], 'hide_value'):
        group_input_014_1.outputs[91].hide_value = False
    if hasattr(group_input_014_1.outputs[91], 'name'):
        group_input_014_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_014_1.outputs[91], 'show_expanded'):
        group_input_014_1.outputs[91].show_expanded = False
    if hasattr(group_input_014_1.outputs[92], 'default_value'):
        group_input_014_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_014_1.outputs[92], 'display_shape'):
        group_input_014_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[92], 'enabled'):
        group_input_014_1.outputs[92].enabled = True
    if hasattr(group_input_014_1.outputs[92], 'hide'):
        group_input_014_1.outputs[92].hide = True
    if hasattr(group_input_014_1.outputs[92], 'hide_value'):
        group_input_014_1.outputs[92].hide_value = False
    if hasattr(group_input_014_1.outputs[92], 'name'):
        group_input_014_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_014_1.outputs[92], 'show_expanded'):
        group_input_014_1.outputs[92].show_expanded = False
    if hasattr(group_input_014_1.outputs[93], 'default_value'):
        group_input_014_1.outputs[93].default_value = 0.0
    if hasattr(group_input_014_1.outputs[93], 'display_shape'):
        group_input_014_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[93], 'enabled'):
        group_input_014_1.outputs[93].enabled = True
    if hasattr(group_input_014_1.outputs[93], 'hide'):
        group_input_014_1.outputs[93].hide = True
    if hasattr(group_input_014_1.outputs[93], 'hide_value'):
        group_input_014_1.outputs[93].hide_value = False
    if hasattr(group_input_014_1.outputs[93], 'name'):
        group_input_014_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_014_1.outputs[93], 'show_expanded'):
        group_input_014_1.outputs[93].show_expanded = False
    if hasattr(group_input_014_1.outputs[94], 'default_value'):
        group_input_014_1.outputs[94].default_value = 0.0
    if hasattr(group_input_014_1.outputs[94], 'display_shape'):
        group_input_014_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[94], 'enabled'):
        group_input_014_1.outputs[94].enabled = True
    if hasattr(group_input_014_1.outputs[94], 'hide'):
        group_input_014_1.outputs[94].hide = True
    if hasattr(group_input_014_1.outputs[94], 'hide_value'):
        group_input_014_1.outputs[94].hide_value = False
    if hasattr(group_input_014_1.outputs[94], 'name'):
        group_input_014_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_014_1.outputs[94], 'show_expanded'):
        group_input_014_1.outputs[94].show_expanded = False
    if hasattr(group_input_014_1.outputs[95], 'default_value'):
        group_input_014_1.outputs[95].default_value = 0.0
    if hasattr(group_input_014_1.outputs[95], 'display_shape'):
        group_input_014_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[95], 'enabled'):
        group_input_014_1.outputs[95].enabled = True
    if hasattr(group_input_014_1.outputs[95], 'hide'):
        group_input_014_1.outputs[95].hide = True
    if hasattr(group_input_014_1.outputs[95], 'hide_value'):
        group_input_014_1.outputs[95].hide_value = False
    if hasattr(group_input_014_1.outputs[95], 'name'):
        group_input_014_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_014_1.outputs[95], 'show_expanded'):
        group_input_014_1.outputs[95].show_expanded = False
    if hasattr(group_input_014_1.outputs[96], 'default_value'):
        group_input_014_1.outputs[96].default_value = 0.0
    if hasattr(group_input_014_1.outputs[96], 'display_shape'):
        group_input_014_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[96], 'enabled'):
        group_input_014_1.outputs[96].enabled = True
    if hasattr(group_input_014_1.outputs[96], 'hide'):
        group_input_014_1.outputs[96].hide = True
    if hasattr(group_input_014_1.outputs[96], 'hide_value'):
        group_input_014_1.outputs[96].hide_value = False
    if hasattr(group_input_014_1.outputs[96], 'name'):
        group_input_014_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_014_1.outputs[96], 'show_expanded'):
        group_input_014_1.outputs[96].show_expanded = False
    if hasattr(group_input_014_1.outputs[97], 'default_value'):
        group_input_014_1.outputs[97].default_value = 0.0
    if hasattr(group_input_014_1.outputs[97], 'display_shape'):
        group_input_014_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[97], 'enabled'):
        group_input_014_1.outputs[97].enabled = True
    if hasattr(group_input_014_1.outputs[97], 'hide'):
        group_input_014_1.outputs[97].hide = True
    if hasattr(group_input_014_1.outputs[97], 'hide_value'):
        group_input_014_1.outputs[97].hide_value = False
    if hasattr(group_input_014_1.outputs[97], 'name'):
        group_input_014_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_014_1.outputs[97], 'show_expanded'):
        group_input_014_1.outputs[97].show_expanded = False
    if hasattr(group_input_014_1.outputs[98], 'default_value'):
        group_input_014_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_014_1.outputs[98], 'display_shape'):
        group_input_014_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[98], 'enabled'):
        group_input_014_1.outputs[98].enabled = True
    if hasattr(group_input_014_1.outputs[98], 'hide'):
        group_input_014_1.outputs[98].hide = True
    if hasattr(group_input_014_1.outputs[98], 'hide_value'):
        group_input_014_1.outputs[98].hide_value = False
    if hasattr(group_input_014_1.outputs[98], 'name'):
        group_input_014_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_014_1.outputs[98], 'show_expanded'):
        group_input_014_1.outputs[98].show_expanded = False
    if hasattr(group_input_014_1.outputs[99], 'default_value'):
        group_input_014_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_014_1.outputs[99], 'display_shape'):
        group_input_014_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[99], 'enabled'):
        group_input_014_1.outputs[99].enabled = True
    if hasattr(group_input_014_1.outputs[99], 'hide'):
        group_input_014_1.outputs[99].hide = True
    if hasattr(group_input_014_1.outputs[99], 'hide_value'):
        group_input_014_1.outputs[99].hide_value = False
    if hasattr(group_input_014_1.outputs[99], 'name'):
        group_input_014_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_014_1.outputs[99], 'show_expanded'):
        group_input_014_1.outputs[99].show_expanded = False
    if hasattr(group_input_014_1.outputs[100], 'default_value'):
        group_input_014_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_014_1.outputs[100], 'display_shape'):
        group_input_014_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[100], 'enabled'):
        group_input_014_1.outputs[100].enabled = True
    if hasattr(group_input_014_1.outputs[100], 'hide'):
        group_input_014_1.outputs[100].hide = True
    if hasattr(group_input_014_1.outputs[100], 'hide_value'):
        group_input_014_1.outputs[100].hide_value = False
    if hasattr(group_input_014_1.outputs[100], 'name'):
        group_input_014_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_014_1.outputs[100], 'show_expanded'):
        group_input_014_1.outputs[100].show_expanded = False
    if hasattr(group_input_014_1.outputs[101], 'default_value'):
        group_input_014_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_014_1.outputs[101], 'display_shape'):
        group_input_014_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_014_1.outputs[101], 'enabled'):
        group_input_014_1.outputs[101].enabled = True
    if hasattr(group_input_014_1.outputs[101], 'hide'):
        group_input_014_1.outputs[101].hide = True
    if hasattr(group_input_014_1.outputs[101], 'hide_value'):
        group_input_014_1.outputs[101].hide_value = False
    if hasattr(group_input_014_1.outputs[101], 'name'):
        group_input_014_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_014_1.outputs[101], 'show_expanded'):
        group_input_014_1.outputs[101].show_expanded = False

    group_input_004_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_004_1, 'color'):
        group_input_004_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_004_1, 'hide'):
        group_input_004_1.hide = False
    if hasattr(group_input_004_1, 'location'):
        group_input_004_1.location = (-2120.0, 380.00006103515625)
    if hasattr(group_input_004_1, 'mute'):
        group_input_004_1.mute = False
    if hasattr(group_input_004_1, 'name'):
        group_input_004_1.name = 'Group Input.004'
    if hasattr(group_input_004_1, 'use_custom_color'):
        group_input_004_1.use_custom_color = False
    if hasattr(group_input_004_1, 'width'):
        group_input_004_1.width = 200.9415283203125
    if hasattr(group_input_004_1.outputs[0], 'default_value'):
        group_input_004_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[0], 'display_shape'):
        group_input_004_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[0], 'enabled'):
        group_input_004_1.outputs[0].enabled = True
    if hasattr(group_input_004_1.outputs[0], 'hide'):
        group_input_004_1.outputs[0].hide = False
    if hasattr(group_input_004_1.outputs[0], 'hide_value'):
        group_input_004_1.outputs[0].hide_value = False
    if hasattr(group_input_004_1.outputs[0], 'name'):
        group_input_004_1.outputs[0].name = 'ASG'
    if hasattr(group_input_004_1.outputs[0], 'show_expanded'):
        group_input_004_1.outputs[0].show_expanded = False
    if hasattr(group_input_004_1.outputs[1], 'default_value'):
        group_input_004_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[1], 'display_shape'):
        group_input_004_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[1], 'enabled'):
        group_input_004_1.outputs[1].enabled = True
    if hasattr(group_input_004_1.outputs[1], 'hide'):
        group_input_004_1.outputs[1].hide = False
    if hasattr(group_input_004_1.outputs[1], 'hide_value'):
        group_input_004_1.outputs[1].hide_value = False
    if hasattr(group_input_004_1.outputs[1], 'name'):
        group_input_004_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_004_1.outputs[1], 'show_expanded'):
        group_input_004_1.outputs[1].show_expanded = False
    if hasattr(group_input_004_1.outputs[2], 'default_value'):
        group_input_004_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[2], 'display_shape'):
        group_input_004_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[2], 'enabled'):
        group_input_004_1.outputs[2].enabled = True
    if hasattr(group_input_004_1.outputs[2], 'hide'):
        group_input_004_1.outputs[2].hide = False
    if hasattr(group_input_004_1.outputs[2], 'hide_value'):
        group_input_004_1.outputs[2].hide_value = False
    if hasattr(group_input_004_1.outputs[2], 'name'):
        group_input_004_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_004_1.outputs[2], 'show_expanded'):
        group_input_004_1.outputs[2].show_expanded = False
    if hasattr(group_input_004_1.outputs[3], 'default_value'):
        group_input_004_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[3], 'display_shape'):
        group_input_004_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[3], 'enabled'):
        group_input_004_1.outputs[3].enabled = True
    if hasattr(group_input_004_1.outputs[3], 'hide'):
        group_input_004_1.outputs[3].hide = True
    if hasattr(group_input_004_1.outputs[3], 'hide_value'):
        group_input_004_1.outputs[3].hide_value = False
    if hasattr(group_input_004_1.outputs[3], 'name'):
        group_input_004_1.outputs[3].name = 'Normal'
    if hasattr(group_input_004_1.outputs[3], 'show_expanded'):
        group_input_004_1.outputs[3].show_expanded = False
    if hasattr(group_input_004_1.outputs[4], 'default_value'):
        group_input_004_1.outputs[4].default_value = 0.0
    if hasattr(group_input_004_1.outputs[4], 'display_shape'):
        group_input_004_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[4], 'enabled'):
        group_input_004_1.outputs[4].enabled = True
    if hasattr(group_input_004_1.outputs[4], 'hide'):
        group_input_004_1.outputs[4].hide = True
    if hasattr(group_input_004_1.outputs[4], 'hide_value'):
        group_input_004_1.outputs[4].hide_value = False
    if hasattr(group_input_004_1.outputs[4], 'name'):
        group_input_004_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_004_1.outputs[4], 'show_expanded'):
        group_input_004_1.outputs[4].show_expanded = False
    if hasattr(group_input_004_1.outputs[5], 'default_value'):
        group_input_004_1.outputs[5].default_value = 1.0
    if hasattr(group_input_004_1.outputs[5], 'display_shape'):
        group_input_004_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[5], 'enabled'):
        group_input_004_1.outputs[5].enabled = True
    if hasattr(group_input_004_1.outputs[5], 'hide'):
        group_input_004_1.outputs[5].hide = True
    if hasattr(group_input_004_1.outputs[5], 'hide_value'):
        group_input_004_1.outputs[5].hide_value = False
    if hasattr(group_input_004_1.outputs[5], 'name'):
        group_input_004_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_004_1.outputs[5], 'show_expanded'):
        group_input_004_1.outputs[5].show_expanded = False
    if hasattr(group_input_004_1.outputs[6], 'default_value'):
        group_input_004_1.outputs[6].default_value = 0.0
    if hasattr(group_input_004_1.outputs[6], 'display_shape'):
        group_input_004_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[6], 'enabled'):
        group_input_004_1.outputs[6].enabled = True
    if hasattr(group_input_004_1.outputs[6], 'hide'):
        group_input_004_1.outputs[6].hide = True
    if hasattr(group_input_004_1.outputs[6], 'hide_value'):
        group_input_004_1.outputs[6].hide_value = False
    if hasattr(group_input_004_1.outputs[6], 'name'):
        group_input_004_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_004_1.outputs[6], 'show_expanded'):
        group_input_004_1.outputs[6].show_expanded = False
    if hasattr(group_input_004_1.outputs[7], 'default_value'):
        group_input_004_1.outputs[7].default_value = 0.0
    if hasattr(group_input_004_1.outputs[7], 'display_shape'):
        group_input_004_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[7], 'enabled'):
        group_input_004_1.outputs[7].enabled = True
    if hasattr(group_input_004_1.outputs[7], 'hide'):
        group_input_004_1.outputs[7].hide = True
    if hasattr(group_input_004_1.outputs[7], 'hide_value'):
        group_input_004_1.outputs[7].hide_value = False
    if hasattr(group_input_004_1.outputs[7], 'name'):
        group_input_004_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_004_1.outputs[7], 'show_expanded'):
        group_input_004_1.outputs[7].show_expanded = False
    if hasattr(group_input_004_1.outputs[8], 'default_value'):
        group_input_004_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[8], 'display_shape'):
        group_input_004_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[8], 'enabled'):
        group_input_004_1.outputs[8].enabled = True
    if hasattr(group_input_004_1.outputs[8], 'hide'):
        group_input_004_1.outputs[8].hide = True
    if hasattr(group_input_004_1.outputs[8], 'hide_value'):
        group_input_004_1.outputs[8].hide_value = False
    if hasattr(group_input_004_1.outputs[8], 'name'):
        group_input_004_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_004_1.outputs[8], 'show_expanded'):
        group_input_004_1.outputs[8].show_expanded = False
    if hasattr(group_input_004_1.outputs[9], 'default_value'):
        group_input_004_1.outputs[9].default_value = 0.0
    if hasattr(group_input_004_1.outputs[9], 'display_shape'):
        group_input_004_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[9], 'enabled'):
        group_input_004_1.outputs[9].enabled = True
    if hasattr(group_input_004_1.outputs[9], 'hide'):
        group_input_004_1.outputs[9].hide = True
    if hasattr(group_input_004_1.outputs[9], 'hide_value'):
        group_input_004_1.outputs[9].hide_value = False
    if hasattr(group_input_004_1.outputs[9], 'name'):
        group_input_004_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_004_1.outputs[9], 'show_expanded'):
        group_input_004_1.outputs[9].show_expanded = False
    if hasattr(group_input_004_1.outputs[10], 'default_value'):
        group_input_004_1.outputs[10].default_value = 0.0
    if hasattr(group_input_004_1.outputs[10], 'display_shape'):
        group_input_004_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[10], 'enabled'):
        group_input_004_1.outputs[10].enabled = True
    if hasattr(group_input_004_1.outputs[10], 'hide'):
        group_input_004_1.outputs[10].hide = False
    if hasattr(group_input_004_1.outputs[10], 'hide_value'):
        group_input_004_1.outputs[10].hide_value = False
    if hasattr(group_input_004_1.outputs[10], 'name'):
        group_input_004_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_004_1.outputs[10], 'show_expanded'):
        group_input_004_1.outputs[10].show_expanded = False
    if hasattr(group_input_004_1.outputs[11], 'default_value'):
        group_input_004_1.outputs[11].default_value = 0.0
    if hasattr(group_input_004_1.outputs[11], 'display_shape'):
        group_input_004_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[11], 'enabled'):
        group_input_004_1.outputs[11].enabled = True
    if hasattr(group_input_004_1.outputs[11], 'hide'):
        group_input_004_1.outputs[11].hide = True
    if hasattr(group_input_004_1.outputs[11], 'hide_value'):
        group_input_004_1.outputs[11].hide_value = False
    if hasattr(group_input_004_1.outputs[11], 'name'):
        group_input_004_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_004_1.outputs[11], 'show_expanded'):
        group_input_004_1.outputs[11].show_expanded = False
    if hasattr(group_input_004_1.outputs[12], 'default_value'):
        group_input_004_1.outputs[12].default_value = 0.0
    if hasattr(group_input_004_1.outputs[12], 'display_shape'):
        group_input_004_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[12], 'enabled'):
        group_input_004_1.outputs[12].enabled = True
    if hasattr(group_input_004_1.outputs[12], 'hide'):
        group_input_004_1.outputs[12].hide = True
    if hasattr(group_input_004_1.outputs[12], 'hide_value'):
        group_input_004_1.outputs[12].hide_value = False
    if hasattr(group_input_004_1.outputs[12], 'name'):
        group_input_004_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_004_1.outputs[12], 'show_expanded'):
        group_input_004_1.outputs[12].show_expanded = False
    if hasattr(group_input_004_1.outputs[13], 'default_value'):
        group_input_004_1.outputs[13].default_value = 0.0
    if hasattr(group_input_004_1.outputs[13], 'display_shape'):
        group_input_004_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[13], 'enabled'):
        group_input_004_1.outputs[13].enabled = True
    if hasattr(group_input_004_1.outputs[13], 'hide'):
        group_input_004_1.outputs[13].hide = True
    if hasattr(group_input_004_1.outputs[13], 'hide_value'):
        group_input_004_1.outputs[13].hide_value = False
    if hasattr(group_input_004_1.outputs[13], 'name'):
        group_input_004_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_004_1.outputs[13], 'show_expanded'):
        group_input_004_1.outputs[13].show_expanded = False
    if hasattr(group_input_004_1.outputs[14], 'default_value'):
        group_input_004_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_004_1.outputs[14], 'display_shape'):
        group_input_004_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[14], 'enabled'):
        group_input_004_1.outputs[14].enabled = True
    if hasattr(group_input_004_1.outputs[14], 'hide'):
        group_input_004_1.outputs[14].hide = True
    if hasattr(group_input_004_1.outputs[14], 'hide_value'):
        group_input_004_1.outputs[14].hide_value = False
    if hasattr(group_input_004_1.outputs[14], 'name'):
        group_input_004_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_004_1.outputs[14], 'show_expanded'):
        group_input_004_1.outputs[14].show_expanded = False
    if hasattr(group_input_004_1.outputs[15], 'default_value'):
        group_input_004_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_004_1.outputs[15], 'display_shape'):
        group_input_004_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[15], 'enabled'):
        group_input_004_1.outputs[15].enabled = True
    if hasattr(group_input_004_1.outputs[15], 'hide'):
        group_input_004_1.outputs[15].hide = True
    if hasattr(group_input_004_1.outputs[15], 'hide_value'):
        group_input_004_1.outputs[15].hide_value = False
    if hasattr(group_input_004_1.outputs[15], 'name'):
        group_input_004_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_004_1.outputs[15], 'show_expanded'):
        group_input_004_1.outputs[15].show_expanded = False
    if hasattr(group_input_004_1.outputs[16], 'default_value'):
        group_input_004_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_004_1.outputs[16], 'display_shape'):
        group_input_004_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[16], 'enabled'):
        group_input_004_1.outputs[16].enabled = True
    if hasattr(group_input_004_1.outputs[16], 'hide'):
        group_input_004_1.outputs[16].hide = True
    if hasattr(group_input_004_1.outputs[16], 'hide_value'):
        group_input_004_1.outputs[16].hide_value = False
    if hasattr(group_input_004_1.outputs[16], 'name'):
        group_input_004_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_004_1.outputs[16], 'show_expanded'):
        group_input_004_1.outputs[16].show_expanded = False
    if hasattr(group_input_004_1.outputs[17], 'default_value'):
        group_input_004_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_004_1.outputs[17], 'display_shape'):
        group_input_004_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[17], 'enabled'):
        group_input_004_1.outputs[17].enabled = True
    if hasattr(group_input_004_1.outputs[17], 'hide'):
        group_input_004_1.outputs[17].hide = True
    if hasattr(group_input_004_1.outputs[17], 'hide_value'):
        group_input_004_1.outputs[17].hide_value = False
    if hasattr(group_input_004_1.outputs[17], 'name'):
        group_input_004_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_004_1.outputs[17], 'show_expanded'):
        group_input_004_1.outputs[17].show_expanded = False
    if hasattr(group_input_004_1.outputs[18], 'default_value'):
        group_input_004_1.outputs[18].default_value = 0.0
    if hasattr(group_input_004_1.outputs[18], 'display_shape'):
        group_input_004_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[18], 'enabled'):
        group_input_004_1.outputs[18].enabled = True
    if hasattr(group_input_004_1.outputs[18], 'hide'):
        group_input_004_1.outputs[18].hide = True
    if hasattr(group_input_004_1.outputs[18], 'hide_value'):
        group_input_004_1.outputs[18].hide_value = False
    if hasattr(group_input_004_1.outputs[18], 'name'):
        group_input_004_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_004_1.outputs[18], 'show_expanded'):
        group_input_004_1.outputs[18].show_expanded = False
    if hasattr(group_input_004_1.outputs[19], 'default_value'):
        group_input_004_1.outputs[19].default_value = 0.0
    if hasattr(group_input_004_1.outputs[19], 'display_shape'):
        group_input_004_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[19], 'enabled'):
        group_input_004_1.outputs[19].enabled = True
    if hasattr(group_input_004_1.outputs[19], 'hide'):
        group_input_004_1.outputs[19].hide = True
    if hasattr(group_input_004_1.outputs[19], 'hide_value'):
        group_input_004_1.outputs[19].hide_value = False
    if hasattr(group_input_004_1.outputs[19], 'name'):
        group_input_004_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_004_1.outputs[19], 'show_expanded'):
        group_input_004_1.outputs[19].show_expanded = False
    if hasattr(group_input_004_1.outputs[20], 'default_value'):
        group_input_004_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[20], 'display_shape'):
        group_input_004_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[20], 'enabled'):
        group_input_004_1.outputs[20].enabled = True
    if hasattr(group_input_004_1.outputs[20], 'hide'):
        group_input_004_1.outputs[20].hide = True
    if hasattr(group_input_004_1.outputs[20], 'hide_value'):
        group_input_004_1.outputs[20].hide_value = False
    if hasattr(group_input_004_1.outputs[20], 'name'):
        group_input_004_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_004_1.outputs[20], 'show_expanded'):
        group_input_004_1.outputs[20].show_expanded = False
    if hasattr(group_input_004_1.outputs[21], 'default_value'):
        group_input_004_1.outputs[21].default_value = 0.0
    if hasattr(group_input_004_1.outputs[21], 'display_shape'):
        group_input_004_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[21], 'enabled'):
        group_input_004_1.outputs[21].enabled = True
    if hasattr(group_input_004_1.outputs[21], 'hide'):
        group_input_004_1.outputs[21].hide = True
    if hasattr(group_input_004_1.outputs[21], 'hide_value'):
        group_input_004_1.outputs[21].hide_value = False
    if hasattr(group_input_004_1.outputs[21], 'name'):
        group_input_004_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_004_1.outputs[21], 'show_expanded'):
        group_input_004_1.outputs[21].show_expanded = False
    if hasattr(group_input_004_1.outputs[22], 'default_value'):
        group_input_004_1.outputs[22].default_value = 0.0
    if hasattr(group_input_004_1.outputs[22], 'display_shape'):
        group_input_004_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[22], 'enabled'):
        group_input_004_1.outputs[22].enabled = True
    if hasattr(group_input_004_1.outputs[22], 'hide'):
        group_input_004_1.outputs[22].hide = False
    if hasattr(group_input_004_1.outputs[22], 'hide_value'):
        group_input_004_1.outputs[22].hide_value = False
    if hasattr(group_input_004_1.outputs[22], 'name'):
        group_input_004_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_004_1.outputs[22], 'show_expanded'):
        group_input_004_1.outputs[22].show_expanded = False
    if hasattr(group_input_004_1.outputs[23], 'default_value'):
        group_input_004_1.outputs[23].default_value = 0.0
    if hasattr(group_input_004_1.outputs[23], 'display_shape'):
        group_input_004_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[23], 'enabled'):
        group_input_004_1.outputs[23].enabled = True
    if hasattr(group_input_004_1.outputs[23], 'hide'):
        group_input_004_1.outputs[23].hide = True
    if hasattr(group_input_004_1.outputs[23], 'hide_value'):
        group_input_004_1.outputs[23].hide_value = False
    if hasattr(group_input_004_1.outputs[23], 'name'):
        group_input_004_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_004_1.outputs[23], 'show_expanded'):
        group_input_004_1.outputs[23].show_expanded = False
    if hasattr(group_input_004_1.outputs[24], 'default_value'):
        group_input_004_1.outputs[24].default_value = 0.0
    if hasattr(group_input_004_1.outputs[24], 'display_shape'):
        group_input_004_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[24], 'enabled'):
        group_input_004_1.outputs[24].enabled = True
    if hasattr(group_input_004_1.outputs[24], 'hide'):
        group_input_004_1.outputs[24].hide = True
    if hasattr(group_input_004_1.outputs[24], 'hide_value'):
        group_input_004_1.outputs[24].hide_value = False
    if hasattr(group_input_004_1.outputs[24], 'name'):
        group_input_004_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_004_1.outputs[24], 'show_expanded'):
        group_input_004_1.outputs[24].show_expanded = False
    if hasattr(group_input_004_1.outputs[25], 'default_value'):
        group_input_004_1.outputs[25].default_value = 0.0
    if hasattr(group_input_004_1.outputs[25], 'display_shape'):
        group_input_004_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[25], 'enabled'):
        group_input_004_1.outputs[25].enabled = True
    if hasattr(group_input_004_1.outputs[25], 'hide'):
        group_input_004_1.outputs[25].hide = True
    if hasattr(group_input_004_1.outputs[25], 'hide_value'):
        group_input_004_1.outputs[25].hide_value = False
    if hasattr(group_input_004_1.outputs[25], 'name'):
        group_input_004_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_004_1.outputs[25], 'show_expanded'):
        group_input_004_1.outputs[25].show_expanded = False
    if hasattr(group_input_004_1.outputs[26], 'default_value'):
        group_input_004_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_004_1.outputs[26], 'display_shape'):
        group_input_004_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[26], 'enabled'):
        group_input_004_1.outputs[26].enabled = True
    if hasattr(group_input_004_1.outputs[26], 'hide'):
        group_input_004_1.outputs[26].hide = True
    if hasattr(group_input_004_1.outputs[26], 'hide_value'):
        group_input_004_1.outputs[26].hide_value = False
    if hasattr(group_input_004_1.outputs[26], 'name'):
        group_input_004_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_004_1.outputs[26], 'show_expanded'):
        group_input_004_1.outputs[26].show_expanded = False
    if hasattr(group_input_004_1.outputs[27], 'default_value'):
        group_input_004_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_004_1.outputs[27], 'display_shape'):
        group_input_004_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[27], 'enabled'):
        group_input_004_1.outputs[27].enabled = True
    if hasattr(group_input_004_1.outputs[27], 'hide'):
        group_input_004_1.outputs[27].hide = True
    if hasattr(group_input_004_1.outputs[27], 'hide_value'):
        group_input_004_1.outputs[27].hide_value = False
    if hasattr(group_input_004_1.outputs[27], 'name'):
        group_input_004_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_004_1.outputs[27], 'show_expanded'):
        group_input_004_1.outputs[27].show_expanded = False
    if hasattr(group_input_004_1.outputs[28], 'default_value'):
        group_input_004_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_004_1.outputs[28], 'display_shape'):
        group_input_004_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[28], 'enabled'):
        group_input_004_1.outputs[28].enabled = True
    if hasattr(group_input_004_1.outputs[28], 'hide'):
        group_input_004_1.outputs[28].hide = True
    if hasattr(group_input_004_1.outputs[28], 'hide_value'):
        group_input_004_1.outputs[28].hide_value = False
    if hasattr(group_input_004_1.outputs[28], 'name'):
        group_input_004_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_004_1.outputs[28], 'show_expanded'):
        group_input_004_1.outputs[28].show_expanded = False
    if hasattr(group_input_004_1.outputs[29], 'default_value'):
        group_input_004_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_004_1.outputs[29], 'display_shape'):
        group_input_004_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[29], 'enabled'):
        group_input_004_1.outputs[29].enabled = True
    if hasattr(group_input_004_1.outputs[29], 'hide'):
        group_input_004_1.outputs[29].hide = True
    if hasattr(group_input_004_1.outputs[29], 'hide_value'):
        group_input_004_1.outputs[29].hide_value = False
    if hasattr(group_input_004_1.outputs[29], 'name'):
        group_input_004_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_004_1.outputs[29], 'show_expanded'):
        group_input_004_1.outputs[29].show_expanded = False
    if hasattr(group_input_004_1.outputs[30], 'default_value'):
        group_input_004_1.outputs[30].default_value = 0.0
    if hasattr(group_input_004_1.outputs[30], 'display_shape'):
        group_input_004_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[30], 'enabled'):
        group_input_004_1.outputs[30].enabled = True
    if hasattr(group_input_004_1.outputs[30], 'hide'):
        group_input_004_1.outputs[30].hide = True
    if hasattr(group_input_004_1.outputs[30], 'hide_value'):
        group_input_004_1.outputs[30].hide_value = False
    if hasattr(group_input_004_1.outputs[30], 'name'):
        group_input_004_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_004_1.outputs[30], 'show_expanded'):
        group_input_004_1.outputs[30].show_expanded = False
    if hasattr(group_input_004_1.outputs[31], 'default_value'):
        group_input_004_1.outputs[31].default_value = 0.0
    if hasattr(group_input_004_1.outputs[31], 'display_shape'):
        group_input_004_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[31], 'enabled'):
        group_input_004_1.outputs[31].enabled = True
    if hasattr(group_input_004_1.outputs[31], 'hide'):
        group_input_004_1.outputs[31].hide = True
    if hasattr(group_input_004_1.outputs[31], 'hide_value'):
        group_input_004_1.outputs[31].hide_value = False
    if hasattr(group_input_004_1.outputs[31], 'name'):
        group_input_004_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_004_1.outputs[31], 'show_expanded'):
        group_input_004_1.outputs[31].show_expanded = False
    if hasattr(group_input_004_1.outputs[32], 'default_value'):
        group_input_004_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[32], 'display_shape'):
        group_input_004_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[32], 'enabled'):
        group_input_004_1.outputs[32].enabled = True
    if hasattr(group_input_004_1.outputs[32], 'hide'):
        group_input_004_1.outputs[32].hide = True
    if hasattr(group_input_004_1.outputs[32], 'hide_value'):
        group_input_004_1.outputs[32].hide_value = False
    if hasattr(group_input_004_1.outputs[32], 'name'):
        group_input_004_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_004_1.outputs[32], 'show_expanded'):
        group_input_004_1.outputs[32].show_expanded = False
    if hasattr(group_input_004_1.outputs[33], 'default_value'):
        group_input_004_1.outputs[33].default_value = 0.0
    if hasattr(group_input_004_1.outputs[33], 'display_shape'):
        group_input_004_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[33], 'enabled'):
        group_input_004_1.outputs[33].enabled = True
    if hasattr(group_input_004_1.outputs[33], 'hide'):
        group_input_004_1.outputs[33].hide = True
    if hasattr(group_input_004_1.outputs[33], 'hide_value'):
        group_input_004_1.outputs[33].hide_value = False
    if hasattr(group_input_004_1.outputs[33], 'name'):
        group_input_004_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_004_1.outputs[33], 'show_expanded'):
        group_input_004_1.outputs[33].show_expanded = False
    if hasattr(group_input_004_1.outputs[34], 'default_value'):
        group_input_004_1.outputs[34].default_value = 0.0
    if hasattr(group_input_004_1.outputs[34], 'display_shape'):
        group_input_004_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[34], 'enabled'):
        group_input_004_1.outputs[34].enabled = True
    if hasattr(group_input_004_1.outputs[34], 'hide'):
        group_input_004_1.outputs[34].hide = False
    if hasattr(group_input_004_1.outputs[34], 'hide_value'):
        group_input_004_1.outputs[34].hide_value = False
    if hasattr(group_input_004_1.outputs[34], 'name'):
        group_input_004_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_004_1.outputs[34], 'show_expanded'):
        group_input_004_1.outputs[34].show_expanded = False
    if hasattr(group_input_004_1.outputs[35], 'default_value'):
        group_input_004_1.outputs[35].default_value = 0.0
    if hasattr(group_input_004_1.outputs[35], 'display_shape'):
        group_input_004_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[35], 'enabled'):
        group_input_004_1.outputs[35].enabled = True
    if hasattr(group_input_004_1.outputs[35], 'hide'):
        group_input_004_1.outputs[35].hide = True
    if hasattr(group_input_004_1.outputs[35], 'hide_value'):
        group_input_004_1.outputs[35].hide_value = False
    if hasattr(group_input_004_1.outputs[35], 'name'):
        group_input_004_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_004_1.outputs[35], 'show_expanded'):
        group_input_004_1.outputs[35].show_expanded = False
    if hasattr(group_input_004_1.outputs[36], 'default_value'):
        group_input_004_1.outputs[36].default_value = 0.0
    if hasattr(group_input_004_1.outputs[36], 'display_shape'):
        group_input_004_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[36], 'enabled'):
        group_input_004_1.outputs[36].enabled = True
    if hasattr(group_input_004_1.outputs[36], 'hide'):
        group_input_004_1.outputs[36].hide = True
    if hasattr(group_input_004_1.outputs[36], 'hide_value'):
        group_input_004_1.outputs[36].hide_value = False
    if hasattr(group_input_004_1.outputs[36], 'name'):
        group_input_004_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_004_1.outputs[36], 'show_expanded'):
        group_input_004_1.outputs[36].show_expanded = False
    if hasattr(group_input_004_1.outputs[37], 'default_value'):
        group_input_004_1.outputs[37].default_value = 0.0
    if hasattr(group_input_004_1.outputs[37], 'display_shape'):
        group_input_004_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[37], 'enabled'):
        group_input_004_1.outputs[37].enabled = True
    if hasattr(group_input_004_1.outputs[37], 'hide'):
        group_input_004_1.outputs[37].hide = True
    if hasattr(group_input_004_1.outputs[37], 'hide_value'):
        group_input_004_1.outputs[37].hide_value = False
    if hasattr(group_input_004_1.outputs[37], 'name'):
        group_input_004_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_004_1.outputs[37], 'show_expanded'):
        group_input_004_1.outputs[37].show_expanded = False
    if hasattr(group_input_004_1.outputs[38], 'default_value'):
        group_input_004_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_004_1.outputs[38], 'display_shape'):
        group_input_004_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[38], 'enabled'):
        group_input_004_1.outputs[38].enabled = True
    if hasattr(group_input_004_1.outputs[38], 'hide'):
        group_input_004_1.outputs[38].hide = True
    if hasattr(group_input_004_1.outputs[38], 'hide_value'):
        group_input_004_1.outputs[38].hide_value = False
    if hasattr(group_input_004_1.outputs[38], 'name'):
        group_input_004_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_004_1.outputs[38], 'show_expanded'):
        group_input_004_1.outputs[38].show_expanded = False
    if hasattr(group_input_004_1.outputs[39], 'default_value'):
        group_input_004_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_004_1.outputs[39], 'display_shape'):
        group_input_004_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[39], 'enabled'):
        group_input_004_1.outputs[39].enabled = True
    if hasattr(group_input_004_1.outputs[39], 'hide'):
        group_input_004_1.outputs[39].hide = True
    if hasattr(group_input_004_1.outputs[39], 'hide_value'):
        group_input_004_1.outputs[39].hide_value = False
    if hasattr(group_input_004_1.outputs[39], 'name'):
        group_input_004_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_004_1.outputs[39], 'show_expanded'):
        group_input_004_1.outputs[39].show_expanded = False
    if hasattr(group_input_004_1.outputs[40], 'default_value'):
        group_input_004_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_004_1.outputs[40], 'display_shape'):
        group_input_004_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[40], 'enabled'):
        group_input_004_1.outputs[40].enabled = True
    if hasattr(group_input_004_1.outputs[40], 'hide'):
        group_input_004_1.outputs[40].hide = True
    if hasattr(group_input_004_1.outputs[40], 'hide_value'):
        group_input_004_1.outputs[40].hide_value = False
    if hasattr(group_input_004_1.outputs[40], 'name'):
        group_input_004_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_004_1.outputs[40], 'show_expanded'):
        group_input_004_1.outputs[40].show_expanded = False
    if hasattr(group_input_004_1.outputs[41], 'default_value'):
        group_input_004_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_004_1.outputs[41], 'display_shape'):
        group_input_004_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[41], 'enabled'):
        group_input_004_1.outputs[41].enabled = True
    if hasattr(group_input_004_1.outputs[41], 'hide'):
        group_input_004_1.outputs[41].hide = True
    if hasattr(group_input_004_1.outputs[41], 'hide_value'):
        group_input_004_1.outputs[41].hide_value = False
    if hasattr(group_input_004_1.outputs[41], 'name'):
        group_input_004_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_004_1.outputs[41], 'show_expanded'):
        group_input_004_1.outputs[41].show_expanded = False
    if hasattr(group_input_004_1.outputs[42], 'default_value'):
        group_input_004_1.outputs[42].default_value = 0.0
    if hasattr(group_input_004_1.outputs[42], 'display_shape'):
        group_input_004_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[42], 'enabled'):
        group_input_004_1.outputs[42].enabled = True
    if hasattr(group_input_004_1.outputs[42], 'hide'):
        group_input_004_1.outputs[42].hide = True
    if hasattr(group_input_004_1.outputs[42], 'hide_value'):
        group_input_004_1.outputs[42].hide_value = False
    if hasattr(group_input_004_1.outputs[42], 'name'):
        group_input_004_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_004_1.outputs[42], 'show_expanded'):
        group_input_004_1.outputs[42].show_expanded = False
    if hasattr(group_input_004_1.outputs[43], 'default_value'):
        group_input_004_1.outputs[43].default_value = 0.0
    if hasattr(group_input_004_1.outputs[43], 'display_shape'):
        group_input_004_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[43], 'enabled'):
        group_input_004_1.outputs[43].enabled = True
    if hasattr(group_input_004_1.outputs[43], 'hide'):
        group_input_004_1.outputs[43].hide = True
    if hasattr(group_input_004_1.outputs[43], 'hide_value'):
        group_input_004_1.outputs[43].hide_value = False
    if hasattr(group_input_004_1.outputs[43], 'name'):
        group_input_004_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_004_1.outputs[43], 'show_expanded'):
        group_input_004_1.outputs[43].show_expanded = False
    if hasattr(group_input_004_1.outputs[44], 'default_value'):
        group_input_004_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[44], 'display_shape'):
        group_input_004_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[44], 'enabled'):
        group_input_004_1.outputs[44].enabled = True
    if hasattr(group_input_004_1.outputs[44], 'hide'):
        group_input_004_1.outputs[44].hide = True
    if hasattr(group_input_004_1.outputs[44], 'hide_value'):
        group_input_004_1.outputs[44].hide_value = False
    if hasattr(group_input_004_1.outputs[44], 'name'):
        group_input_004_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_004_1.outputs[44], 'show_expanded'):
        group_input_004_1.outputs[44].show_expanded = False
    if hasattr(group_input_004_1.outputs[45], 'default_value'):
        group_input_004_1.outputs[45].default_value = 0.0
    if hasattr(group_input_004_1.outputs[45], 'display_shape'):
        group_input_004_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[45], 'enabled'):
        group_input_004_1.outputs[45].enabled = True
    if hasattr(group_input_004_1.outputs[45], 'hide'):
        group_input_004_1.outputs[45].hide = True
    if hasattr(group_input_004_1.outputs[45], 'hide_value'):
        group_input_004_1.outputs[45].hide_value = False
    if hasattr(group_input_004_1.outputs[45], 'name'):
        group_input_004_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_004_1.outputs[45], 'show_expanded'):
        group_input_004_1.outputs[45].show_expanded = False
    if hasattr(group_input_004_1.outputs[46], 'default_value'):
        group_input_004_1.outputs[46].default_value = 0.0
    if hasattr(group_input_004_1.outputs[46], 'display_shape'):
        group_input_004_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[46], 'enabled'):
        group_input_004_1.outputs[46].enabled = True
    if hasattr(group_input_004_1.outputs[46], 'hide'):
        group_input_004_1.outputs[46].hide = False
    if hasattr(group_input_004_1.outputs[46], 'hide_value'):
        group_input_004_1.outputs[46].hide_value = False
    if hasattr(group_input_004_1.outputs[46], 'name'):
        group_input_004_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_004_1.outputs[46], 'show_expanded'):
        group_input_004_1.outputs[46].show_expanded = False
    if hasattr(group_input_004_1.outputs[47], 'default_value'):
        group_input_004_1.outputs[47].default_value = 0.0
    if hasattr(group_input_004_1.outputs[47], 'display_shape'):
        group_input_004_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[47], 'enabled'):
        group_input_004_1.outputs[47].enabled = True
    if hasattr(group_input_004_1.outputs[47], 'hide'):
        group_input_004_1.outputs[47].hide = True
    if hasattr(group_input_004_1.outputs[47], 'hide_value'):
        group_input_004_1.outputs[47].hide_value = False
    if hasattr(group_input_004_1.outputs[47], 'name'):
        group_input_004_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_004_1.outputs[47], 'show_expanded'):
        group_input_004_1.outputs[47].show_expanded = False
    if hasattr(group_input_004_1.outputs[48], 'default_value'):
        group_input_004_1.outputs[48].default_value = 0.0
    if hasattr(group_input_004_1.outputs[48], 'display_shape'):
        group_input_004_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[48], 'enabled'):
        group_input_004_1.outputs[48].enabled = True
    if hasattr(group_input_004_1.outputs[48], 'hide'):
        group_input_004_1.outputs[48].hide = True
    if hasattr(group_input_004_1.outputs[48], 'hide_value'):
        group_input_004_1.outputs[48].hide_value = False
    if hasattr(group_input_004_1.outputs[48], 'name'):
        group_input_004_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_004_1.outputs[48], 'show_expanded'):
        group_input_004_1.outputs[48].show_expanded = False
    if hasattr(group_input_004_1.outputs[49], 'default_value'):
        group_input_004_1.outputs[49].default_value = 0.0
    if hasattr(group_input_004_1.outputs[49], 'display_shape'):
        group_input_004_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[49], 'enabled'):
        group_input_004_1.outputs[49].enabled = True
    if hasattr(group_input_004_1.outputs[49], 'hide'):
        group_input_004_1.outputs[49].hide = True
    if hasattr(group_input_004_1.outputs[49], 'hide_value'):
        group_input_004_1.outputs[49].hide_value = False
    if hasattr(group_input_004_1.outputs[49], 'name'):
        group_input_004_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_004_1.outputs[49], 'show_expanded'):
        group_input_004_1.outputs[49].show_expanded = False
    if hasattr(group_input_004_1.outputs[50], 'default_value'):
        group_input_004_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_004_1.outputs[50], 'display_shape'):
        group_input_004_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[50], 'enabled'):
        group_input_004_1.outputs[50].enabled = True
    if hasattr(group_input_004_1.outputs[50], 'hide'):
        group_input_004_1.outputs[50].hide = True
    if hasattr(group_input_004_1.outputs[50], 'hide_value'):
        group_input_004_1.outputs[50].hide_value = False
    if hasattr(group_input_004_1.outputs[50], 'name'):
        group_input_004_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_004_1.outputs[50], 'show_expanded'):
        group_input_004_1.outputs[50].show_expanded = False
    if hasattr(group_input_004_1.outputs[51], 'default_value'):
        group_input_004_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_004_1.outputs[51], 'display_shape'):
        group_input_004_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[51], 'enabled'):
        group_input_004_1.outputs[51].enabled = True
    if hasattr(group_input_004_1.outputs[51], 'hide'):
        group_input_004_1.outputs[51].hide = True
    if hasattr(group_input_004_1.outputs[51], 'hide_value'):
        group_input_004_1.outputs[51].hide_value = False
    if hasattr(group_input_004_1.outputs[51], 'name'):
        group_input_004_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_004_1.outputs[51], 'show_expanded'):
        group_input_004_1.outputs[51].show_expanded = False
    if hasattr(group_input_004_1.outputs[52], 'default_value'):
        group_input_004_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_004_1.outputs[52], 'display_shape'):
        group_input_004_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[52], 'enabled'):
        group_input_004_1.outputs[52].enabled = True
    if hasattr(group_input_004_1.outputs[52], 'hide'):
        group_input_004_1.outputs[52].hide = True
    if hasattr(group_input_004_1.outputs[52], 'hide_value'):
        group_input_004_1.outputs[52].hide_value = False
    if hasattr(group_input_004_1.outputs[52], 'name'):
        group_input_004_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_004_1.outputs[52], 'show_expanded'):
        group_input_004_1.outputs[52].show_expanded = False
    if hasattr(group_input_004_1.outputs[53], 'default_value'):
        group_input_004_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_004_1.outputs[53], 'display_shape'):
        group_input_004_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[53], 'enabled'):
        group_input_004_1.outputs[53].enabled = True
    if hasattr(group_input_004_1.outputs[53], 'hide'):
        group_input_004_1.outputs[53].hide = True
    if hasattr(group_input_004_1.outputs[53], 'hide_value'):
        group_input_004_1.outputs[53].hide_value = False
    if hasattr(group_input_004_1.outputs[53], 'name'):
        group_input_004_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_004_1.outputs[53], 'show_expanded'):
        group_input_004_1.outputs[53].show_expanded = False
    if hasattr(group_input_004_1.outputs[54], 'default_value'):
        group_input_004_1.outputs[54].default_value = 0.0
    if hasattr(group_input_004_1.outputs[54], 'display_shape'):
        group_input_004_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[54], 'enabled'):
        group_input_004_1.outputs[54].enabled = True
    if hasattr(group_input_004_1.outputs[54], 'hide'):
        group_input_004_1.outputs[54].hide = True
    if hasattr(group_input_004_1.outputs[54], 'hide_value'):
        group_input_004_1.outputs[54].hide_value = False
    if hasattr(group_input_004_1.outputs[54], 'name'):
        group_input_004_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_004_1.outputs[54], 'show_expanded'):
        group_input_004_1.outputs[54].show_expanded = False
    if hasattr(group_input_004_1.outputs[55], 'default_value'):
        group_input_004_1.outputs[55].default_value = 0.0
    if hasattr(group_input_004_1.outputs[55], 'display_shape'):
        group_input_004_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[55], 'enabled'):
        group_input_004_1.outputs[55].enabled = True
    if hasattr(group_input_004_1.outputs[55], 'hide'):
        group_input_004_1.outputs[55].hide = True
    if hasattr(group_input_004_1.outputs[55], 'hide_value'):
        group_input_004_1.outputs[55].hide_value = False
    if hasattr(group_input_004_1.outputs[55], 'name'):
        group_input_004_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_004_1.outputs[55], 'show_expanded'):
        group_input_004_1.outputs[55].show_expanded = False
    if hasattr(group_input_004_1.outputs[56], 'default_value'):
        group_input_004_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[56], 'display_shape'):
        group_input_004_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[56], 'enabled'):
        group_input_004_1.outputs[56].enabled = True
    if hasattr(group_input_004_1.outputs[56], 'hide'):
        group_input_004_1.outputs[56].hide = True
    if hasattr(group_input_004_1.outputs[56], 'hide_value'):
        group_input_004_1.outputs[56].hide_value = False
    if hasattr(group_input_004_1.outputs[56], 'name'):
        group_input_004_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_004_1.outputs[56], 'show_expanded'):
        group_input_004_1.outputs[56].show_expanded = False
    if hasattr(group_input_004_1.outputs[57], 'default_value'):
        group_input_004_1.outputs[57].default_value = 0.0
    if hasattr(group_input_004_1.outputs[57], 'display_shape'):
        group_input_004_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[57], 'enabled'):
        group_input_004_1.outputs[57].enabled = True
    if hasattr(group_input_004_1.outputs[57], 'hide'):
        group_input_004_1.outputs[57].hide = True
    if hasattr(group_input_004_1.outputs[57], 'hide_value'):
        group_input_004_1.outputs[57].hide_value = False
    if hasattr(group_input_004_1.outputs[57], 'name'):
        group_input_004_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_004_1.outputs[57], 'show_expanded'):
        group_input_004_1.outputs[57].show_expanded = False
    if hasattr(group_input_004_1.outputs[58], 'default_value'):
        group_input_004_1.outputs[58].default_value = 0.0
    if hasattr(group_input_004_1.outputs[58], 'display_shape'):
        group_input_004_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[58], 'enabled'):
        group_input_004_1.outputs[58].enabled = True
    if hasattr(group_input_004_1.outputs[58], 'hide'):
        group_input_004_1.outputs[58].hide = False
    if hasattr(group_input_004_1.outputs[58], 'hide_value'):
        group_input_004_1.outputs[58].hide_value = False
    if hasattr(group_input_004_1.outputs[58], 'name'):
        group_input_004_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_004_1.outputs[58], 'show_expanded'):
        group_input_004_1.outputs[58].show_expanded = False
    if hasattr(group_input_004_1.outputs[59], 'default_value'):
        group_input_004_1.outputs[59].default_value = 0.0
    if hasattr(group_input_004_1.outputs[59], 'display_shape'):
        group_input_004_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[59], 'enabled'):
        group_input_004_1.outputs[59].enabled = True
    if hasattr(group_input_004_1.outputs[59], 'hide'):
        group_input_004_1.outputs[59].hide = True
    if hasattr(group_input_004_1.outputs[59], 'hide_value'):
        group_input_004_1.outputs[59].hide_value = False
    if hasattr(group_input_004_1.outputs[59], 'name'):
        group_input_004_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_004_1.outputs[59], 'show_expanded'):
        group_input_004_1.outputs[59].show_expanded = False
    if hasattr(group_input_004_1.outputs[60], 'default_value'):
        group_input_004_1.outputs[60].default_value = 0.0
    if hasattr(group_input_004_1.outputs[60], 'display_shape'):
        group_input_004_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[60], 'enabled'):
        group_input_004_1.outputs[60].enabled = True
    if hasattr(group_input_004_1.outputs[60], 'hide'):
        group_input_004_1.outputs[60].hide = True
    if hasattr(group_input_004_1.outputs[60], 'hide_value'):
        group_input_004_1.outputs[60].hide_value = False
    if hasattr(group_input_004_1.outputs[60], 'name'):
        group_input_004_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_004_1.outputs[60], 'show_expanded'):
        group_input_004_1.outputs[60].show_expanded = False
    if hasattr(group_input_004_1.outputs[61], 'default_value'):
        group_input_004_1.outputs[61].default_value = 0.0
    if hasattr(group_input_004_1.outputs[61], 'display_shape'):
        group_input_004_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[61], 'enabled'):
        group_input_004_1.outputs[61].enabled = True
    if hasattr(group_input_004_1.outputs[61], 'hide'):
        group_input_004_1.outputs[61].hide = True
    if hasattr(group_input_004_1.outputs[61], 'hide_value'):
        group_input_004_1.outputs[61].hide_value = False
    if hasattr(group_input_004_1.outputs[61], 'name'):
        group_input_004_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_004_1.outputs[61], 'show_expanded'):
        group_input_004_1.outputs[61].show_expanded = False
    if hasattr(group_input_004_1.outputs[62], 'default_value'):
        group_input_004_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_004_1.outputs[62], 'display_shape'):
        group_input_004_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[62], 'enabled'):
        group_input_004_1.outputs[62].enabled = True
    if hasattr(group_input_004_1.outputs[62], 'hide'):
        group_input_004_1.outputs[62].hide = True
    if hasattr(group_input_004_1.outputs[62], 'hide_value'):
        group_input_004_1.outputs[62].hide_value = False
    if hasattr(group_input_004_1.outputs[62], 'name'):
        group_input_004_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_004_1.outputs[62], 'show_expanded'):
        group_input_004_1.outputs[62].show_expanded = False
    if hasattr(group_input_004_1.outputs[63], 'default_value'):
        group_input_004_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_004_1.outputs[63], 'display_shape'):
        group_input_004_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[63], 'enabled'):
        group_input_004_1.outputs[63].enabled = True
    if hasattr(group_input_004_1.outputs[63], 'hide'):
        group_input_004_1.outputs[63].hide = True
    if hasattr(group_input_004_1.outputs[63], 'hide_value'):
        group_input_004_1.outputs[63].hide_value = False
    if hasattr(group_input_004_1.outputs[63], 'name'):
        group_input_004_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_004_1.outputs[63], 'show_expanded'):
        group_input_004_1.outputs[63].show_expanded = False
    if hasattr(group_input_004_1.outputs[64], 'default_value'):
        group_input_004_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_004_1.outputs[64], 'display_shape'):
        group_input_004_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[64], 'enabled'):
        group_input_004_1.outputs[64].enabled = True
    if hasattr(group_input_004_1.outputs[64], 'hide'):
        group_input_004_1.outputs[64].hide = True
    if hasattr(group_input_004_1.outputs[64], 'hide_value'):
        group_input_004_1.outputs[64].hide_value = False
    if hasattr(group_input_004_1.outputs[64], 'name'):
        group_input_004_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_004_1.outputs[64], 'show_expanded'):
        group_input_004_1.outputs[64].show_expanded = False
    if hasattr(group_input_004_1.outputs[65], 'default_value'):
        group_input_004_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_004_1.outputs[65], 'display_shape'):
        group_input_004_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[65], 'enabled'):
        group_input_004_1.outputs[65].enabled = True
    if hasattr(group_input_004_1.outputs[65], 'hide'):
        group_input_004_1.outputs[65].hide = True
    if hasattr(group_input_004_1.outputs[65], 'hide_value'):
        group_input_004_1.outputs[65].hide_value = False
    if hasattr(group_input_004_1.outputs[65], 'name'):
        group_input_004_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_004_1.outputs[65], 'show_expanded'):
        group_input_004_1.outputs[65].show_expanded = False
    if hasattr(group_input_004_1.outputs[66], 'default_value'):
        group_input_004_1.outputs[66].default_value = 0.0
    if hasattr(group_input_004_1.outputs[66], 'display_shape'):
        group_input_004_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[66], 'enabled'):
        group_input_004_1.outputs[66].enabled = True
    if hasattr(group_input_004_1.outputs[66], 'hide'):
        group_input_004_1.outputs[66].hide = True
    if hasattr(group_input_004_1.outputs[66], 'hide_value'):
        group_input_004_1.outputs[66].hide_value = False
    if hasattr(group_input_004_1.outputs[66], 'name'):
        group_input_004_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_004_1.outputs[66], 'show_expanded'):
        group_input_004_1.outputs[66].show_expanded = False
    if hasattr(group_input_004_1.outputs[67], 'default_value'):
        group_input_004_1.outputs[67].default_value = 0.0
    if hasattr(group_input_004_1.outputs[67], 'display_shape'):
        group_input_004_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[67], 'enabled'):
        group_input_004_1.outputs[67].enabled = True
    if hasattr(group_input_004_1.outputs[67], 'hide'):
        group_input_004_1.outputs[67].hide = True
    if hasattr(group_input_004_1.outputs[67], 'hide_value'):
        group_input_004_1.outputs[67].hide_value = False
    if hasattr(group_input_004_1.outputs[67], 'name'):
        group_input_004_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_004_1.outputs[67], 'show_expanded'):
        group_input_004_1.outputs[67].show_expanded = False
    if hasattr(group_input_004_1.outputs[68], 'default_value'):
        group_input_004_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[68], 'display_shape'):
        group_input_004_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[68], 'enabled'):
        group_input_004_1.outputs[68].enabled = True
    if hasattr(group_input_004_1.outputs[68], 'hide'):
        group_input_004_1.outputs[68].hide = True
    if hasattr(group_input_004_1.outputs[68], 'hide_value'):
        group_input_004_1.outputs[68].hide_value = False
    if hasattr(group_input_004_1.outputs[68], 'name'):
        group_input_004_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_004_1.outputs[68], 'show_expanded'):
        group_input_004_1.outputs[68].show_expanded = False
    if hasattr(group_input_004_1.outputs[69], 'default_value'):
        group_input_004_1.outputs[69].default_value = 0.0
    if hasattr(group_input_004_1.outputs[69], 'display_shape'):
        group_input_004_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[69], 'enabled'):
        group_input_004_1.outputs[69].enabled = True
    if hasattr(group_input_004_1.outputs[69], 'hide'):
        group_input_004_1.outputs[69].hide = True
    if hasattr(group_input_004_1.outputs[69], 'hide_value'):
        group_input_004_1.outputs[69].hide_value = False
    if hasattr(group_input_004_1.outputs[69], 'name'):
        group_input_004_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_004_1.outputs[69], 'show_expanded'):
        group_input_004_1.outputs[69].show_expanded = False
    if hasattr(group_input_004_1.outputs[70], 'default_value'):
        group_input_004_1.outputs[70].default_value = 0.0
    if hasattr(group_input_004_1.outputs[70], 'display_shape'):
        group_input_004_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[70], 'enabled'):
        group_input_004_1.outputs[70].enabled = True
    if hasattr(group_input_004_1.outputs[70], 'hide'):
        group_input_004_1.outputs[70].hide = False
    if hasattr(group_input_004_1.outputs[70], 'hide_value'):
        group_input_004_1.outputs[70].hide_value = False
    if hasattr(group_input_004_1.outputs[70], 'name'):
        group_input_004_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_004_1.outputs[70], 'show_expanded'):
        group_input_004_1.outputs[70].show_expanded = False
    if hasattr(group_input_004_1.outputs[71], 'default_value'):
        group_input_004_1.outputs[71].default_value = 0.0
    if hasattr(group_input_004_1.outputs[71], 'display_shape'):
        group_input_004_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[71], 'enabled'):
        group_input_004_1.outputs[71].enabled = True
    if hasattr(group_input_004_1.outputs[71], 'hide'):
        group_input_004_1.outputs[71].hide = True
    if hasattr(group_input_004_1.outputs[71], 'hide_value'):
        group_input_004_1.outputs[71].hide_value = False
    if hasattr(group_input_004_1.outputs[71], 'name'):
        group_input_004_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_004_1.outputs[71], 'show_expanded'):
        group_input_004_1.outputs[71].show_expanded = False
    if hasattr(group_input_004_1.outputs[72], 'default_value'):
        group_input_004_1.outputs[72].default_value = 0.0
    if hasattr(group_input_004_1.outputs[72], 'display_shape'):
        group_input_004_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[72], 'enabled'):
        group_input_004_1.outputs[72].enabled = True
    if hasattr(group_input_004_1.outputs[72], 'hide'):
        group_input_004_1.outputs[72].hide = True
    if hasattr(group_input_004_1.outputs[72], 'hide_value'):
        group_input_004_1.outputs[72].hide_value = False
    if hasattr(group_input_004_1.outputs[72], 'name'):
        group_input_004_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_004_1.outputs[72], 'show_expanded'):
        group_input_004_1.outputs[72].show_expanded = False
    if hasattr(group_input_004_1.outputs[73], 'default_value'):
        group_input_004_1.outputs[73].default_value = 0.0
    if hasattr(group_input_004_1.outputs[73], 'display_shape'):
        group_input_004_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[73], 'enabled'):
        group_input_004_1.outputs[73].enabled = True
    if hasattr(group_input_004_1.outputs[73], 'hide'):
        group_input_004_1.outputs[73].hide = True
    if hasattr(group_input_004_1.outputs[73], 'hide_value'):
        group_input_004_1.outputs[73].hide_value = False
    if hasattr(group_input_004_1.outputs[73], 'name'):
        group_input_004_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_004_1.outputs[73], 'show_expanded'):
        group_input_004_1.outputs[73].show_expanded = False
    if hasattr(group_input_004_1.outputs[74], 'default_value'):
        group_input_004_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_004_1.outputs[74], 'display_shape'):
        group_input_004_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[74], 'enabled'):
        group_input_004_1.outputs[74].enabled = True
    if hasattr(group_input_004_1.outputs[74], 'hide'):
        group_input_004_1.outputs[74].hide = True
    if hasattr(group_input_004_1.outputs[74], 'hide_value'):
        group_input_004_1.outputs[74].hide_value = False
    if hasattr(group_input_004_1.outputs[74], 'name'):
        group_input_004_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_004_1.outputs[74], 'show_expanded'):
        group_input_004_1.outputs[74].show_expanded = False
    if hasattr(group_input_004_1.outputs[75], 'default_value'):
        group_input_004_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_004_1.outputs[75], 'display_shape'):
        group_input_004_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[75], 'enabled'):
        group_input_004_1.outputs[75].enabled = True
    if hasattr(group_input_004_1.outputs[75], 'hide'):
        group_input_004_1.outputs[75].hide = True
    if hasattr(group_input_004_1.outputs[75], 'hide_value'):
        group_input_004_1.outputs[75].hide_value = False
    if hasattr(group_input_004_1.outputs[75], 'name'):
        group_input_004_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_004_1.outputs[75], 'show_expanded'):
        group_input_004_1.outputs[75].show_expanded = False
    if hasattr(group_input_004_1.outputs[76], 'default_value'):
        group_input_004_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_004_1.outputs[76], 'display_shape'):
        group_input_004_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[76], 'enabled'):
        group_input_004_1.outputs[76].enabled = True
    if hasattr(group_input_004_1.outputs[76], 'hide'):
        group_input_004_1.outputs[76].hide = True
    if hasattr(group_input_004_1.outputs[76], 'hide_value'):
        group_input_004_1.outputs[76].hide_value = False
    if hasattr(group_input_004_1.outputs[76], 'name'):
        group_input_004_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_004_1.outputs[76], 'show_expanded'):
        group_input_004_1.outputs[76].show_expanded = False
    if hasattr(group_input_004_1.outputs[77], 'default_value'):
        group_input_004_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_004_1.outputs[77], 'display_shape'):
        group_input_004_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[77], 'enabled'):
        group_input_004_1.outputs[77].enabled = True
    if hasattr(group_input_004_1.outputs[77], 'hide'):
        group_input_004_1.outputs[77].hide = True
    if hasattr(group_input_004_1.outputs[77], 'hide_value'):
        group_input_004_1.outputs[77].hide_value = False
    if hasattr(group_input_004_1.outputs[77], 'name'):
        group_input_004_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_004_1.outputs[77], 'show_expanded'):
        group_input_004_1.outputs[77].show_expanded = False
    if hasattr(group_input_004_1.outputs[78], 'default_value'):
        group_input_004_1.outputs[78].default_value = 0.0
    if hasattr(group_input_004_1.outputs[78], 'display_shape'):
        group_input_004_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[78], 'enabled'):
        group_input_004_1.outputs[78].enabled = True
    if hasattr(group_input_004_1.outputs[78], 'hide'):
        group_input_004_1.outputs[78].hide = True
    if hasattr(group_input_004_1.outputs[78], 'hide_value'):
        group_input_004_1.outputs[78].hide_value = False
    if hasattr(group_input_004_1.outputs[78], 'name'):
        group_input_004_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_004_1.outputs[78], 'show_expanded'):
        group_input_004_1.outputs[78].show_expanded = False
    if hasattr(group_input_004_1.outputs[79], 'default_value'):
        group_input_004_1.outputs[79].default_value = 0.0
    if hasattr(group_input_004_1.outputs[79], 'display_shape'):
        group_input_004_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[79], 'enabled'):
        group_input_004_1.outputs[79].enabled = True
    if hasattr(group_input_004_1.outputs[79], 'hide'):
        group_input_004_1.outputs[79].hide = True
    if hasattr(group_input_004_1.outputs[79], 'hide_value'):
        group_input_004_1.outputs[79].hide_value = False
    if hasattr(group_input_004_1.outputs[79], 'name'):
        group_input_004_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_004_1.outputs[79], 'show_expanded'):
        group_input_004_1.outputs[79].show_expanded = False
    if hasattr(group_input_004_1.outputs[80], 'default_value'):
        group_input_004_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[80], 'display_shape'):
        group_input_004_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[80], 'enabled'):
        group_input_004_1.outputs[80].enabled = True
    if hasattr(group_input_004_1.outputs[80], 'hide'):
        group_input_004_1.outputs[80].hide = True
    if hasattr(group_input_004_1.outputs[80], 'hide_value'):
        group_input_004_1.outputs[80].hide_value = False
    if hasattr(group_input_004_1.outputs[80], 'name'):
        group_input_004_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_004_1.outputs[80], 'show_expanded'):
        group_input_004_1.outputs[80].show_expanded = False
    if hasattr(group_input_004_1.outputs[81], 'default_value'):
        group_input_004_1.outputs[81].default_value = 0.0
    if hasattr(group_input_004_1.outputs[81], 'display_shape'):
        group_input_004_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[81], 'enabled'):
        group_input_004_1.outputs[81].enabled = True
    if hasattr(group_input_004_1.outputs[81], 'hide'):
        group_input_004_1.outputs[81].hide = True
    if hasattr(group_input_004_1.outputs[81], 'hide_value'):
        group_input_004_1.outputs[81].hide_value = False
    if hasattr(group_input_004_1.outputs[81], 'name'):
        group_input_004_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_004_1.outputs[81], 'show_expanded'):
        group_input_004_1.outputs[81].show_expanded = False
    if hasattr(group_input_004_1.outputs[82], 'default_value'):
        group_input_004_1.outputs[82].default_value = 0.0
    if hasattr(group_input_004_1.outputs[82], 'display_shape'):
        group_input_004_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[82], 'enabled'):
        group_input_004_1.outputs[82].enabled = True
    if hasattr(group_input_004_1.outputs[82], 'hide'):
        group_input_004_1.outputs[82].hide = False
    if hasattr(group_input_004_1.outputs[82], 'hide_value'):
        group_input_004_1.outputs[82].hide_value = False
    if hasattr(group_input_004_1.outputs[82], 'name'):
        group_input_004_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_004_1.outputs[82], 'show_expanded'):
        group_input_004_1.outputs[82].show_expanded = False
    if hasattr(group_input_004_1.outputs[83], 'default_value'):
        group_input_004_1.outputs[83].default_value = 0.0
    if hasattr(group_input_004_1.outputs[83], 'display_shape'):
        group_input_004_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[83], 'enabled'):
        group_input_004_1.outputs[83].enabled = True
    if hasattr(group_input_004_1.outputs[83], 'hide'):
        group_input_004_1.outputs[83].hide = True
    if hasattr(group_input_004_1.outputs[83], 'hide_value'):
        group_input_004_1.outputs[83].hide_value = False
    if hasattr(group_input_004_1.outputs[83], 'name'):
        group_input_004_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_004_1.outputs[83], 'show_expanded'):
        group_input_004_1.outputs[83].show_expanded = False
    if hasattr(group_input_004_1.outputs[84], 'default_value'):
        group_input_004_1.outputs[84].default_value = 0.0
    if hasattr(group_input_004_1.outputs[84], 'display_shape'):
        group_input_004_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[84], 'enabled'):
        group_input_004_1.outputs[84].enabled = True
    if hasattr(group_input_004_1.outputs[84], 'hide'):
        group_input_004_1.outputs[84].hide = True
    if hasattr(group_input_004_1.outputs[84], 'hide_value'):
        group_input_004_1.outputs[84].hide_value = False
    if hasattr(group_input_004_1.outputs[84], 'name'):
        group_input_004_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_004_1.outputs[84], 'show_expanded'):
        group_input_004_1.outputs[84].show_expanded = False
    if hasattr(group_input_004_1.outputs[85], 'default_value'):
        group_input_004_1.outputs[85].default_value = 0.0
    if hasattr(group_input_004_1.outputs[85], 'display_shape'):
        group_input_004_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[85], 'enabled'):
        group_input_004_1.outputs[85].enabled = True
    if hasattr(group_input_004_1.outputs[85], 'hide'):
        group_input_004_1.outputs[85].hide = True
    if hasattr(group_input_004_1.outputs[85], 'hide_value'):
        group_input_004_1.outputs[85].hide_value = False
    if hasattr(group_input_004_1.outputs[85], 'name'):
        group_input_004_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_004_1.outputs[85], 'show_expanded'):
        group_input_004_1.outputs[85].show_expanded = False
    if hasattr(group_input_004_1.outputs[86], 'default_value'):
        group_input_004_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_004_1.outputs[86], 'display_shape'):
        group_input_004_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[86], 'enabled'):
        group_input_004_1.outputs[86].enabled = True
    if hasattr(group_input_004_1.outputs[86], 'hide'):
        group_input_004_1.outputs[86].hide = True
    if hasattr(group_input_004_1.outputs[86], 'hide_value'):
        group_input_004_1.outputs[86].hide_value = False
    if hasattr(group_input_004_1.outputs[86], 'name'):
        group_input_004_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_004_1.outputs[86], 'show_expanded'):
        group_input_004_1.outputs[86].show_expanded = False
    if hasattr(group_input_004_1.outputs[87], 'default_value'):
        group_input_004_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_004_1.outputs[87], 'display_shape'):
        group_input_004_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[87], 'enabled'):
        group_input_004_1.outputs[87].enabled = True
    if hasattr(group_input_004_1.outputs[87], 'hide'):
        group_input_004_1.outputs[87].hide = True
    if hasattr(group_input_004_1.outputs[87], 'hide_value'):
        group_input_004_1.outputs[87].hide_value = False
    if hasattr(group_input_004_1.outputs[87], 'name'):
        group_input_004_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_004_1.outputs[87], 'show_expanded'):
        group_input_004_1.outputs[87].show_expanded = False
    if hasattr(group_input_004_1.outputs[88], 'default_value'):
        group_input_004_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_004_1.outputs[88], 'display_shape'):
        group_input_004_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[88], 'enabled'):
        group_input_004_1.outputs[88].enabled = True
    if hasattr(group_input_004_1.outputs[88], 'hide'):
        group_input_004_1.outputs[88].hide = True
    if hasattr(group_input_004_1.outputs[88], 'hide_value'):
        group_input_004_1.outputs[88].hide_value = False
    if hasattr(group_input_004_1.outputs[88], 'name'):
        group_input_004_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_004_1.outputs[88], 'show_expanded'):
        group_input_004_1.outputs[88].show_expanded = False
    if hasattr(group_input_004_1.outputs[89], 'default_value'):
        group_input_004_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_004_1.outputs[89], 'display_shape'):
        group_input_004_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[89], 'enabled'):
        group_input_004_1.outputs[89].enabled = True
    if hasattr(group_input_004_1.outputs[89], 'hide'):
        group_input_004_1.outputs[89].hide = True
    if hasattr(group_input_004_1.outputs[89], 'hide_value'):
        group_input_004_1.outputs[89].hide_value = False
    if hasattr(group_input_004_1.outputs[89], 'name'):
        group_input_004_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_004_1.outputs[89], 'show_expanded'):
        group_input_004_1.outputs[89].show_expanded = False
    if hasattr(group_input_004_1.outputs[90], 'default_value'):
        group_input_004_1.outputs[90].default_value = 0.0
    if hasattr(group_input_004_1.outputs[90], 'display_shape'):
        group_input_004_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[90], 'enabled'):
        group_input_004_1.outputs[90].enabled = True
    if hasattr(group_input_004_1.outputs[90], 'hide'):
        group_input_004_1.outputs[90].hide = True
    if hasattr(group_input_004_1.outputs[90], 'hide_value'):
        group_input_004_1.outputs[90].hide_value = False
    if hasattr(group_input_004_1.outputs[90], 'name'):
        group_input_004_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_004_1.outputs[90], 'show_expanded'):
        group_input_004_1.outputs[90].show_expanded = False
    if hasattr(group_input_004_1.outputs[91], 'default_value'):
        group_input_004_1.outputs[91].default_value = 0.0
    if hasattr(group_input_004_1.outputs[91], 'display_shape'):
        group_input_004_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[91], 'enabled'):
        group_input_004_1.outputs[91].enabled = True
    if hasattr(group_input_004_1.outputs[91], 'hide'):
        group_input_004_1.outputs[91].hide = True
    if hasattr(group_input_004_1.outputs[91], 'hide_value'):
        group_input_004_1.outputs[91].hide_value = False
    if hasattr(group_input_004_1.outputs[91], 'name'):
        group_input_004_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_004_1.outputs[91], 'show_expanded'):
        group_input_004_1.outputs[91].show_expanded = False
    if hasattr(group_input_004_1.outputs[92], 'default_value'):
        group_input_004_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_004_1.outputs[92], 'display_shape'):
        group_input_004_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[92], 'enabled'):
        group_input_004_1.outputs[92].enabled = True
    if hasattr(group_input_004_1.outputs[92], 'hide'):
        group_input_004_1.outputs[92].hide = True
    if hasattr(group_input_004_1.outputs[92], 'hide_value'):
        group_input_004_1.outputs[92].hide_value = False
    if hasattr(group_input_004_1.outputs[92], 'name'):
        group_input_004_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_004_1.outputs[92], 'show_expanded'):
        group_input_004_1.outputs[92].show_expanded = False
    if hasattr(group_input_004_1.outputs[93], 'default_value'):
        group_input_004_1.outputs[93].default_value = 0.0
    if hasattr(group_input_004_1.outputs[93], 'display_shape'):
        group_input_004_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[93], 'enabled'):
        group_input_004_1.outputs[93].enabled = True
    if hasattr(group_input_004_1.outputs[93], 'hide'):
        group_input_004_1.outputs[93].hide = True
    if hasattr(group_input_004_1.outputs[93], 'hide_value'):
        group_input_004_1.outputs[93].hide_value = False
    if hasattr(group_input_004_1.outputs[93], 'name'):
        group_input_004_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_004_1.outputs[93], 'show_expanded'):
        group_input_004_1.outputs[93].show_expanded = False
    if hasattr(group_input_004_1.outputs[94], 'default_value'):
        group_input_004_1.outputs[94].default_value = 0.0
    if hasattr(group_input_004_1.outputs[94], 'display_shape'):
        group_input_004_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[94], 'enabled'):
        group_input_004_1.outputs[94].enabled = True
    if hasattr(group_input_004_1.outputs[94], 'hide'):
        group_input_004_1.outputs[94].hide = False
    if hasattr(group_input_004_1.outputs[94], 'hide_value'):
        group_input_004_1.outputs[94].hide_value = False
    if hasattr(group_input_004_1.outputs[94], 'name'):
        group_input_004_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_004_1.outputs[94], 'show_expanded'):
        group_input_004_1.outputs[94].show_expanded = False
    if hasattr(group_input_004_1.outputs[95], 'default_value'):
        group_input_004_1.outputs[95].default_value = 0.0
    if hasattr(group_input_004_1.outputs[95], 'display_shape'):
        group_input_004_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[95], 'enabled'):
        group_input_004_1.outputs[95].enabled = True
    if hasattr(group_input_004_1.outputs[95], 'hide'):
        group_input_004_1.outputs[95].hide = True
    if hasattr(group_input_004_1.outputs[95], 'hide_value'):
        group_input_004_1.outputs[95].hide_value = False
    if hasattr(group_input_004_1.outputs[95], 'name'):
        group_input_004_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_004_1.outputs[95], 'show_expanded'):
        group_input_004_1.outputs[95].show_expanded = False
    if hasattr(group_input_004_1.outputs[96], 'default_value'):
        group_input_004_1.outputs[96].default_value = 0.0
    if hasattr(group_input_004_1.outputs[96], 'display_shape'):
        group_input_004_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[96], 'enabled'):
        group_input_004_1.outputs[96].enabled = True
    if hasattr(group_input_004_1.outputs[96], 'hide'):
        group_input_004_1.outputs[96].hide = True
    if hasattr(group_input_004_1.outputs[96], 'hide_value'):
        group_input_004_1.outputs[96].hide_value = False
    if hasattr(group_input_004_1.outputs[96], 'name'):
        group_input_004_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_004_1.outputs[96], 'show_expanded'):
        group_input_004_1.outputs[96].show_expanded = False
    if hasattr(group_input_004_1.outputs[97], 'default_value'):
        group_input_004_1.outputs[97].default_value = 0.0
    if hasattr(group_input_004_1.outputs[97], 'display_shape'):
        group_input_004_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[97], 'enabled'):
        group_input_004_1.outputs[97].enabled = True
    if hasattr(group_input_004_1.outputs[97], 'hide'):
        group_input_004_1.outputs[97].hide = True
    if hasattr(group_input_004_1.outputs[97], 'hide_value'):
        group_input_004_1.outputs[97].hide_value = False
    if hasattr(group_input_004_1.outputs[97], 'name'):
        group_input_004_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_004_1.outputs[97], 'show_expanded'):
        group_input_004_1.outputs[97].show_expanded = False
    if hasattr(group_input_004_1.outputs[98], 'default_value'):
        group_input_004_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_004_1.outputs[98], 'display_shape'):
        group_input_004_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[98], 'enabled'):
        group_input_004_1.outputs[98].enabled = True
    if hasattr(group_input_004_1.outputs[98], 'hide'):
        group_input_004_1.outputs[98].hide = True
    if hasattr(group_input_004_1.outputs[98], 'hide_value'):
        group_input_004_1.outputs[98].hide_value = False
    if hasattr(group_input_004_1.outputs[98], 'name'):
        group_input_004_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_004_1.outputs[98], 'show_expanded'):
        group_input_004_1.outputs[98].show_expanded = False
    if hasattr(group_input_004_1.outputs[99], 'default_value'):
        group_input_004_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_004_1.outputs[99], 'display_shape'):
        group_input_004_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[99], 'enabled'):
        group_input_004_1.outputs[99].enabled = True
    if hasattr(group_input_004_1.outputs[99], 'hide'):
        group_input_004_1.outputs[99].hide = True
    if hasattr(group_input_004_1.outputs[99], 'hide_value'):
        group_input_004_1.outputs[99].hide_value = False
    if hasattr(group_input_004_1.outputs[99], 'name'):
        group_input_004_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_004_1.outputs[99], 'show_expanded'):
        group_input_004_1.outputs[99].show_expanded = False
    if hasattr(group_input_004_1.outputs[100], 'default_value'):
        group_input_004_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_004_1.outputs[100], 'display_shape'):
        group_input_004_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[100], 'enabled'):
        group_input_004_1.outputs[100].enabled = True
    if hasattr(group_input_004_1.outputs[100], 'hide'):
        group_input_004_1.outputs[100].hide = True
    if hasattr(group_input_004_1.outputs[100], 'hide_value'):
        group_input_004_1.outputs[100].hide_value = False
    if hasattr(group_input_004_1.outputs[100], 'name'):
        group_input_004_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_004_1.outputs[100], 'show_expanded'):
        group_input_004_1.outputs[100].show_expanded = False
    if hasattr(group_input_004_1.outputs[101], 'default_value'):
        group_input_004_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_004_1.outputs[101], 'display_shape'):
        group_input_004_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_004_1.outputs[101], 'enabled'):
        group_input_004_1.outputs[101].enabled = True
    if hasattr(group_input_004_1.outputs[101], 'hide'):
        group_input_004_1.outputs[101].hide = True
    if hasattr(group_input_004_1.outputs[101], 'hide_value'):
        group_input_004_1.outputs[101].hide_value = False
    if hasattr(group_input_004_1.outputs[101], 'name'):
        group_input_004_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_004_1.outputs[101], 'show_expanded'):
        group_input_004_1.outputs[101].show_expanded = False

    group_input_006_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_006_1, 'color'):
        group_input_006_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_006_1, 'hide'):
        group_input_006_1.hide = False
    if hasattr(group_input_006_1, 'location'):
        group_input_006_1.location = (-2120.0, -320.0)
    if hasattr(group_input_006_1, 'mute'):
        group_input_006_1.mute = False
    if hasattr(group_input_006_1, 'name'):
        group_input_006_1.name = 'Group Input.006'
    if hasattr(group_input_006_1, 'use_custom_color'):
        group_input_006_1.use_custom_color = False
    if hasattr(group_input_006_1, 'width'):
        group_input_006_1.width = 200.9415283203125
    if hasattr(group_input_006_1.outputs[0], 'default_value'):
        group_input_006_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[0], 'display_shape'):
        group_input_006_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[0], 'enabled'):
        group_input_006_1.outputs[0].enabled = True
    if hasattr(group_input_006_1.outputs[0], 'hide'):
        group_input_006_1.outputs[0].hide = False
    if hasattr(group_input_006_1.outputs[0], 'hide_value'):
        group_input_006_1.outputs[0].hide_value = False
    if hasattr(group_input_006_1.outputs[0], 'name'):
        group_input_006_1.outputs[0].name = 'ASG'
    if hasattr(group_input_006_1.outputs[0], 'show_expanded'):
        group_input_006_1.outputs[0].show_expanded = False
    if hasattr(group_input_006_1.outputs[1], 'default_value'):
        group_input_006_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[1], 'display_shape'):
        group_input_006_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[1], 'enabled'):
        group_input_006_1.outputs[1].enabled = True
    if hasattr(group_input_006_1.outputs[1], 'hide'):
        group_input_006_1.outputs[1].hide = False
    if hasattr(group_input_006_1.outputs[1], 'hide_value'):
        group_input_006_1.outputs[1].hide_value = False
    if hasattr(group_input_006_1.outputs[1], 'name'):
        group_input_006_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_006_1.outputs[1], 'show_expanded'):
        group_input_006_1.outputs[1].show_expanded = False
    if hasattr(group_input_006_1.outputs[2], 'default_value'):
        group_input_006_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[2], 'display_shape'):
        group_input_006_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[2], 'enabled'):
        group_input_006_1.outputs[2].enabled = True
    if hasattr(group_input_006_1.outputs[2], 'hide'):
        group_input_006_1.outputs[2].hide = False
    if hasattr(group_input_006_1.outputs[2], 'hide_value'):
        group_input_006_1.outputs[2].hide_value = False
    if hasattr(group_input_006_1.outputs[2], 'name'):
        group_input_006_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_006_1.outputs[2], 'show_expanded'):
        group_input_006_1.outputs[2].show_expanded = False
    if hasattr(group_input_006_1.outputs[3], 'default_value'):
        group_input_006_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[3], 'display_shape'):
        group_input_006_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[3], 'enabled'):
        group_input_006_1.outputs[3].enabled = True
    if hasattr(group_input_006_1.outputs[3], 'hide'):
        group_input_006_1.outputs[3].hide = True
    if hasattr(group_input_006_1.outputs[3], 'hide_value'):
        group_input_006_1.outputs[3].hide_value = False
    if hasattr(group_input_006_1.outputs[3], 'name'):
        group_input_006_1.outputs[3].name = 'Normal'
    if hasattr(group_input_006_1.outputs[3], 'show_expanded'):
        group_input_006_1.outputs[3].show_expanded = False
    if hasattr(group_input_006_1.outputs[4], 'default_value'):
        group_input_006_1.outputs[4].default_value = 0.0
    if hasattr(group_input_006_1.outputs[4], 'display_shape'):
        group_input_006_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[4], 'enabled'):
        group_input_006_1.outputs[4].enabled = True
    if hasattr(group_input_006_1.outputs[4], 'hide'):
        group_input_006_1.outputs[4].hide = True
    if hasattr(group_input_006_1.outputs[4], 'hide_value'):
        group_input_006_1.outputs[4].hide_value = False
    if hasattr(group_input_006_1.outputs[4], 'name'):
        group_input_006_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_006_1.outputs[4], 'show_expanded'):
        group_input_006_1.outputs[4].show_expanded = False
    if hasattr(group_input_006_1.outputs[5], 'default_value'):
        group_input_006_1.outputs[5].default_value = 1.0
    if hasattr(group_input_006_1.outputs[5], 'display_shape'):
        group_input_006_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[5], 'enabled'):
        group_input_006_1.outputs[5].enabled = True
    if hasattr(group_input_006_1.outputs[5], 'hide'):
        group_input_006_1.outputs[5].hide = True
    if hasattr(group_input_006_1.outputs[5], 'hide_value'):
        group_input_006_1.outputs[5].hide_value = False
    if hasattr(group_input_006_1.outputs[5], 'name'):
        group_input_006_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_006_1.outputs[5], 'show_expanded'):
        group_input_006_1.outputs[5].show_expanded = False
    if hasattr(group_input_006_1.outputs[6], 'default_value'):
        group_input_006_1.outputs[6].default_value = 0.0
    if hasattr(group_input_006_1.outputs[6], 'display_shape'):
        group_input_006_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[6], 'enabled'):
        group_input_006_1.outputs[6].enabled = True
    if hasattr(group_input_006_1.outputs[6], 'hide'):
        group_input_006_1.outputs[6].hide = True
    if hasattr(group_input_006_1.outputs[6], 'hide_value'):
        group_input_006_1.outputs[6].hide_value = False
    if hasattr(group_input_006_1.outputs[6], 'name'):
        group_input_006_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_006_1.outputs[6], 'show_expanded'):
        group_input_006_1.outputs[6].show_expanded = False
    if hasattr(group_input_006_1.outputs[7], 'default_value'):
        group_input_006_1.outputs[7].default_value = 0.0
    if hasattr(group_input_006_1.outputs[7], 'display_shape'):
        group_input_006_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[7], 'enabled'):
        group_input_006_1.outputs[7].enabled = True
    if hasattr(group_input_006_1.outputs[7], 'hide'):
        group_input_006_1.outputs[7].hide = True
    if hasattr(group_input_006_1.outputs[7], 'hide_value'):
        group_input_006_1.outputs[7].hide_value = False
    if hasattr(group_input_006_1.outputs[7], 'name'):
        group_input_006_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_006_1.outputs[7], 'show_expanded'):
        group_input_006_1.outputs[7].show_expanded = False
    if hasattr(group_input_006_1.outputs[8], 'default_value'):
        group_input_006_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[8], 'display_shape'):
        group_input_006_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[8], 'enabled'):
        group_input_006_1.outputs[8].enabled = True
    if hasattr(group_input_006_1.outputs[8], 'hide'):
        group_input_006_1.outputs[8].hide = True
    if hasattr(group_input_006_1.outputs[8], 'hide_value'):
        group_input_006_1.outputs[8].hide_value = False
    if hasattr(group_input_006_1.outputs[8], 'name'):
        group_input_006_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_006_1.outputs[8], 'show_expanded'):
        group_input_006_1.outputs[8].show_expanded = False
    if hasattr(group_input_006_1.outputs[9], 'default_value'):
        group_input_006_1.outputs[9].default_value = 0.0
    if hasattr(group_input_006_1.outputs[9], 'display_shape'):
        group_input_006_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[9], 'enabled'):
        group_input_006_1.outputs[9].enabled = True
    if hasattr(group_input_006_1.outputs[9], 'hide'):
        group_input_006_1.outputs[9].hide = True
    if hasattr(group_input_006_1.outputs[9], 'hide_value'):
        group_input_006_1.outputs[9].hide_value = False
    if hasattr(group_input_006_1.outputs[9], 'name'):
        group_input_006_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_006_1.outputs[9], 'show_expanded'):
        group_input_006_1.outputs[9].show_expanded = False
    if hasattr(group_input_006_1.outputs[10], 'default_value'):
        group_input_006_1.outputs[10].default_value = 0.0
    if hasattr(group_input_006_1.outputs[10], 'display_shape'):
        group_input_006_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[10], 'enabled'):
        group_input_006_1.outputs[10].enabled = True
    if hasattr(group_input_006_1.outputs[10], 'hide'):
        group_input_006_1.outputs[10].hide = True
    if hasattr(group_input_006_1.outputs[10], 'hide_value'):
        group_input_006_1.outputs[10].hide_value = False
    if hasattr(group_input_006_1.outputs[10], 'name'):
        group_input_006_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_006_1.outputs[10], 'show_expanded'):
        group_input_006_1.outputs[10].show_expanded = False
    if hasattr(group_input_006_1.outputs[11], 'default_value'):
        group_input_006_1.outputs[11].default_value = 0.0
    if hasattr(group_input_006_1.outputs[11], 'display_shape'):
        group_input_006_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[11], 'enabled'):
        group_input_006_1.outputs[11].enabled = True
    if hasattr(group_input_006_1.outputs[11], 'hide'):
        group_input_006_1.outputs[11].hide = False
    if hasattr(group_input_006_1.outputs[11], 'hide_value'):
        group_input_006_1.outputs[11].hide_value = False
    if hasattr(group_input_006_1.outputs[11], 'name'):
        group_input_006_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_006_1.outputs[11], 'show_expanded'):
        group_input_006_1.outputs[11].show_expanded = False
    if hasattr(group_input_006_1.outputs[12], 'default_value'):
        group_input_006_1.outputs[12].default_value = 0.0
    if hasattr(group_input_006_1.outputs[12], 'display_shape'):
        group_input_006_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[12], 'enabled'):
        group_input_006_1.outputs[12].enabled = True
    if hasattr(group_input_006_1.outputs[12], 'hide'):
        group_input_006_1.outputs[12].hide = True
    if hasattr(group_input_006_1.outputs[12], 'hide_value'):
        group_input_006_1.outputs[12].hide_value = False
    if hasattr(group_input_006_1.outputs[12], 'name'):
        group_input_006_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_006_1.outputs[12], 'show_expanded'):
        group_input_006_1.outputs[12].show_expanded = False
    if hasattr(group_input_006_1.outputs[13], 'default_value'):
        group_input_006_1.outputs[13].default_value = 0.0
    if hasattr(group_input_006_1.outputs[13], 'display_shape'):
        group_input_006_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[13], 'enabled'):
        group_input_006_1.outputs[13].enabled = True
    if hasattr(group_input_006_1.outputs[13], 'hide'):
        group_input_006_1.outputs[13].hide = True
    if hasattr(group_input_006_1.outputs[13], 'hide_value'):
        group_input_006_1.outputs[13].hide_value = False
    if hasattr(group_input_006_1.outputs[13], 'name'):
        group_input_006_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_006_1.outputs[13], 'show_expanded'):
        group_input_006_1.outputs[13].show_expanded = False
    if hasattr(group_input_006_1.outputs[14], 'default_value'):
        group_input_006_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_006_1.outputs[14], 'display_shape'):
        group_input_006_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[14], 'enabled'):
        group_input_006_1.outputs[14].enabled = True
    if hasattr(group_input_006_1.outputs[14], 'hide'):
        group_input_006_1.outputs[14].hide = True
    if hasattr(group_input_006_1.outputs[14], 'hide_value'):
        group_input_006_1.outputs[14].hide_value = False
    if hasattr(group_input_006_1.outputs[14], 'name'):
        group_input_006_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_006_1.outputs[14], 'show_expanded'):
        group_input_006_1.outputs[14].show_expanded = False
    if hasattr(group_input_006_1.outputs[15], 'default_value'):
        group_input_006_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_006_1.outputs[15], 'display_shape'):
        group_input_006_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[15], 'enabled'):
        group_input_006_1.outputs[15].enabled = True
    if hasattr(group_input_006_1.outputs[15], 'hide'):
        group_input_006_1.outputs[15].hide = True
    if hasattr(group_input_006_1.outputs[15], 'hide_value'):
        group_input_006_1.outputs[15].hide_value = False
    if hasattr(group_input_006_1.outputs[15], 'name'):
        group_input_006_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_006_1.outputs[15], 'show_expanded'):
        group_input_006_1.outputs[15].show_expanded = False
    if hasattr(group_input_006_1.outputs[16], 'default_value'):
        group_input_006_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_006_1.outputs[16], 'display_shape'):
        group_input_006_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[16], 'enabled'):
        group_input_006_1.outputs[16].enabled = True
    if hasattr(group_input_006_1.outputs[16], 'hide'):
        group_input_006_1.outputs[16].hide = True
    if hasattr(group_input_006_1.outputs[16], 'hide_value'):
        group_input_006_1.outputs[16].hide_value = False
    if hasattr(group_input_006_1.outputs[16], 'name'):
        group_input_006_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_006_1.outputs[16], 'show_expanded'):
        group_input_006_1.outputs[16].show_expanded = False
    if hasattr(group_input_006_1.outputs[17], 'default_value'):
        group_input_006_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_006_1.outputs[17], 'display_shape'):
        group_input_006_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[17], 'enabled'):
        group_input_006_1.outputs[17].enabled = True
    if hasattr(group_input_006_1.outputs[17], 'hide'):
        group_input_006_1.outputs[17].hide = True
    if hasattr(group_input_006_1.outputs[17], 'hide_value'):
        group_input_006_1.outputs[17].hide_value = False
    if hasattr(group_input_006_1.outputs[17], 'name'):
        group_input_006_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_006_1.outputs[17], 'show_expanded'):
        group_input_006_1.outputs[17].show_expanded = False
    if hasattr(group_input_006_1.outputs[18], 'default_value'):
        group_input_006_1.outputs[18].default_value = 0.0
    if hasattr(group_input_006_1.outputs[18], 'display_shape'):
        group_input_006_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[18], 'enabled'):
        group_input_006_1.outputs[18].enabled = True
    if hasattr(group_input_006_1.outputs[18], 'hide'):
        group_input_006_1.outputs[18].hide = True
    if hasattr(group_input_006_1.outputs[18], 'hide_value'):
        group_input_006_1.outputs[18].hide_value = False
    if hasattr(group_input_006_1.outputs[18], 'name'):
        group_input_006_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_006_1.outputs[18], 'show_expanded'):
        group_input_006_1.outputs[18].show_expanded = False
    if hasattr(group_input_006_1.outputs[19], 'default_value'):
        group_input_006_1.outputs[19].default_value = 0.0
    if hasattr(group_input_006_1.outputs[19], 'display_shape'):
        group_input_006_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[19], 'enabled'):
        group_input_006_1.outputs[19].enabled = True
    if hasattr(group_input_006_1.outputs[19], 'hide'):
        group_input_006_1.outputs[19].hide = True
    if hasattr(group_input_006_1.outputs[19], 'hide_value'):
        group_input_006_1.outputs[19].hide_value = False
    if hasattr(group_input_006_1.outputs[19], 'name'):
        group_input_006_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_006_1.outputs[19], 'show_expanded'):
        group_input_006_1.outputs[19].show_expanded = False
    if hasattr(group_input_006_1.outputs[20], 'default_value'):
        group_input_006_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[20], 'display_shape'):
        group_input_006_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[20], 'enabled'):
        group_input_006_1.outputs[20].enabled = True
    if hasattr(group_input_006_1.outputs[20], 'hide'):
        group_input_006_1.outputs[20].hide = True
    if hasattr(group_input_006_1.outputs[20], 'hide_value'):
        group_input_006_1.outputs[20].hide_value = False
    if hasattr(group_input_006_1.outputs[20], 'name'):
        group_input_006_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_006_1.outputs[20], 'show_expanded'):
        group_input_006_1.outputs[20].show_expanded = False
    if hasattr(group_input_006_1.outputs[21], 'default_value'):
        group_input_006_1.outputs[21].default_value = 0.0
    if hasattr(group_input_006_1.outputs[21], 'display_shape'):
        group_input_006_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[21], 'enabled'):
        group_input_006_1.outputs[21].enabled = True
    if hasattr(group_input_006_1.outputs[21], 'hide'):
        group_input_006_1.outputs[21].hide = True
    if hasattr(group_input_006_1.outputs[21], 'hide_value'):
        group_input_006_1.outputs[21].hide_value = False
    if hasattr(group_input_006_1.outputs[21], 'name'):
        group_input_006_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_006_1.outputs[21], 'show_expanded'):
        group_input_006_1.outputs[21].show_expanded = False
    if hasattr(group_input_006_1.outputs[22], 'default_value'):
        group_input_006_1.outputs[22].default_value = 0.0
    if hasattr(group_input_006_1.outputs[22], 'display_shape'):
        group_input_006_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[22], 'enabled'):
        group_input_006_1.outputs[22].enabled = True
    if hasattr(group_input_006_1.outputs[22], 'hide'):
        group_input_006_1.outputs[22].hide = True
    if hasattr(group_input_006_1.outputs[22], 'hide_value'):
        group_input_006_1.outputs[22].hide_value = False
    if hasattr(group_input_006_1.outputs[22], 'name'):
        group_input_006_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_006_1.outputs[22], 'show_expanded'):
        group_input_006_1.outputs[22].show_expanded = False
    if hasattr(group_input_006_1.outputs[23], 'default_value'):
        group_input_006_1.outputs[23].default_value = 0.0
    if hasattr(group_input_006_1.outputs[23], 'display_shape'):
        group_input_006_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[23], 'enabled'):
        group_input_006_1.outputs[23].enabled = True
    if hasattr(group_input_006_1.outputs[23], 'hide'):
        group_input_006_1.outputs[23].hide = False
    if hasattr(group_input_006_1.outputs[23], 'hide_value'):
        group_input_006_1.outputs[23].hide_value = False
    if hasattr(group_input_006_1.outputs[23], 'name'):
        group_input_006_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_006_1.outputs[23], 'show_expanded'):
        group_input_006_1.outputs[23].show_expanded = False
    if hasattr(group_input_006_1.outputs[24], 'default_value'):
        group_input_006_1.outputs[24].default_value = 0.0
    if hasattr(group_input_006_1.outputs[24], 'display_shape'):
        group_input_006_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[24], 'enabled'):
        group_input_006_1.outputs[24].enabled = True
    if hasattr(group_input_006_1.outputs[24], 'hide'):
        group_input_006_1.outputs[24].hide = True
    if hasattr(group_input_006_1.outputs[24], 'hide_value'):
        group_input_006_1.outputs[24].hide_value = False
    if hasattr(group_input_006_1.outputs[24], 'name'):
        group_input_006_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_006_1.outputs[24], 'show_expanded'):
        group_input_006_1.outputs[24].show_expanded = False
    if hasattr(group_input_006_1.outputs[25], 'default_value'):
        group_input_006_1.outputs[25].default_value = 0.0
    if hasattr(group_input_006_1.outputs[25], 'display_shape'):
        group_input_006_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[25], 'enabled'):
        group_input_006_1.outputs[25].enabled = True
    if hasattr(group_input_006_1.outputs[25], 'hide'):
        group_input_006_1.outputs[25].hide = True
    if hasattr(group_input_006_1.outputs[25], 'hide_value'):
        group_input_006_1.outputs[25].hide_value = False
    if hasattr(group_input_006_1.outputs[25], 'name'):
        group_input_006_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_006_1.outputs[25], 'show_expanded'):
        group_input_006_1.outputs[25].show_expanded = False
    if hasattr(group_input_006_1.outputs[26], 'default_value'):
        group_input_006_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_006_1.outputs[26], 'display_shape'):
        group_input_006_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[26], 'enabled'):
        group_input_006_1.outputs[26].enabled = True
    if hasattr(group_input_006_1.outputs[26], 'hide'):
        group_input_006_1.outputs[26].hide = True
    if hasattr(group_input_006_1.outputs[26], 'hide_value'):
        group_input_006_1.outputs[26].hide_value = False
    if hasattr(group_input_006_1.outputs[26], 'name'):
        group_input_006_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_006_1.outputs[26], 'show_expanded'):
        group_input_006_1.outputs[26].show_expanded = False
    if hasattr(group_input_006_1.outputs[27], 'default_value'):
        group_input_006_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_006_1.outputs[27], 'display_shape'):
        group_input_006_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[27], 'enabled'):
        group_input_006_1.outputs[27].enabled = True
    if hasattr(group_input_006_1.outputs[27], 'hide'):
        group_input_006_1.outputs[27].hide = True
    if hasattr(group_input_006_1.outputs[27], 'hide_value'):
        group_input_006_1.outputs[27].hide_value = False
    if hasattr(group_input_006_1.outputs[27], 'name'):
        group_input_006_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_006_1.outputs[27], 'show_expanded'):
        group_input_006_1.outputs[27].show_expanded = False
    if hasattr(group_input_006_1.outputs[28], 'default_value'):
        group_input_006_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_006_1.outputs[28], 'display_shape'):
        group_input_006_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[28], 'enabled'):
        group_input_006_1.outputs[28].enabled = True
    if hasattr(group_input_006_1.outputs[28], 'hide'):
        group_input_006_1.outputs[28].hide = True
    if hasattr(group_input_006_1.outputs[28], 'hide_value'):
        group_input_006_1.outputs[28].hide_value = False
    if hasattr(group_input_006_1.outputs[28], 'name'):
        group_input_006_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_006_1.outputs[28], 'show_expanded'):
        group_input_006_1.outputs[28].show_expanded = False
    if hasattr(group_input_006_1.outputs[29], 'default_value'):
        group_input_006_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_006_1.outputs[29], 'display_shape'):
        group_input_006_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[29], 'enabled'):
        group_input_006_1.outputs[29].enabled = True
    if hasattr(group_input_006_1.outputs[29], 'hide'):
        group_input_006_1.outputs[29].hide = True
    if hasattr(group_input_006_1.outputs[29], 'hide_value'):
        group_input_006_1.outputs[29].hide_value = False
    if hasattr(group_input_006_1.outputs[29], 'name'):
        group_input_006_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_006_1.outputs[29], 'show_expanded'):
        group_input_006_1.outputs[29].show_expanded = False
    if hasattr(group_input_006_1.outputs[30], 'default_value'):
        group_input_006_1.outputs[30].default_value = 0.0
    if hasattr(group_input_006_1.outputs[30], 'display_shape'):
        group_input_006_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[30], 'enabled'):
        group_input_006_1.outputs[30].enabled = True
    if hasattr(group_input_006_1.outputs[30], 'hide'):
        group_input_006_1.outputs[30].hide = True
    if hasattr(group_input_006_1.outputs[30], 'hide_value'):
        group_input_006_1.outputs[30].hide_value = False
    if hasattr(group_input_006_1.outputs[30], 'name'):
        group_input_006_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_006_1.outputs[30], 'show_expanded'):
        group_input_006_1.outputs[30].show_expanded = False
    if hasattr(group_input_006_1.outputs[31], 'default_value'):
        group_input_006_1.outputs[31].default_value = 0.0
    if hasattr(group_input_006_1.outputs[31], 'display_shape'):
        group_input_006_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[31], 'enabled'):
        group_input_006_1.outputs[31].enabled = True
    if hasattr(group_input_006_1.outputs[31], 'hide'):
        group_input_006_1.outputs[31].hide = True
    if hasattr(group_input_006_1.outputs[31], 'hide_value'):
        group_input_006_1.outputs[31].hide_value = False
    if hasattr(group_input_006_1.outputs[31], 'name'):
        group_input_006_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_006_1.outputs[31], 'show_expanded'):
        group_input_006_1.outputs[31].show_expanded = False
    if hasattr(group_input_006_1.outputs[32], 'default_value'):
        group_input_006_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[32], 'display_shape'):
        group_input_006_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[32], 'enabled'):
        group_input_006_1.outputs[32].enabled = True
    if hasattr(group_input_006_1.outputs[32], 'hide'):
        group_input_006_1.outputs[32].hide = True
    if hasattr(group_input_006_1.outputs[32], 'hide_value'):
        group_input_006_1.outputs[32].hide_value = False
    if hasattr(group_input_006_1.outputs[32], 'name'):
        group_input_006_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_006_1.outputs[32], 'show_expanded'):
        group_input_006_1.outputs[32].show_expanded = False
    if hasattr(group_input_006_1.outputs[33], 'default_value'):
        group_input_006_1.outputs[33].default_value = 0.0
    if hasattr(group_input_006_1.outputs[33], 'display_shape'):
        group_input_006_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[33], 'enabled'):
        group_input_006_1.outputs[33].enabled = True
    if hasattr(group_input_006_1.outputs[33], 'hide'):
        group_input_006_1.outputs[33].hide = True
    if hasattr(group_input_006_1.outputs[33], 'hide_value'):
        group_input_006_1.outputs[33].hide_value = False
    if hasattr(group_input_006_1.outputs[33], 'name'):
        group_input_006_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_006_1.outputs[33], 'show_expanded'):
        group_input_006_1.outputs[33].show_expanded = False
    if hasattr(group_input_006_1.outputs[34], 'default_value'):
        group_input_006_1.outputs[34].default_value = 0.0
    if hasattr(group_input_006_1.outputs[34], 'display_shape'):
        group_input_006_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[34], 'enabled'):
        group_input_006_1.outputs[34].enabled = True
    if hasattr(group_input_006_1.outputs[34], 'hide'):
        group_input_006_1.outputs[34].hide = True
    if hasattr(group_input_006_1.outputs[34], 'hide_value'):
        group_input_006_1.outputs[34].hide_value = False
    if hasattr(group_input_006_1.outputs[34], 'name'):
        group_input_006_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_006_1.outputs[34], 'show_expanded'):
        group_input_006_1.outputs[34].show_expanded = False
    if hasattr(group_input_006_1.outputs[35], 'default_value'):
        group_input_006_1.outputs[35].default_value = 0.0
    if hasattr(group_input_006_1.outputs[35], 'display_shape'):
        group_input_006_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[35], 'enabled'):
        group_input_006_1.outputs[35].enabled = True
    if hasattr(group_input_006_1.outputs[35], 'hide'):
        group_input_006_1.outputs[35].hide = False
    if hasattr(group_input_006_1.outputs[35], 'hide_value'):
        group_input_006_1.outputs[35].hide_value = False
    if hasattr(group_input_006_1.outputs[35], 'name'):
        group_input_006_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_006_1.outputs[35], 'show_expanded'):
        group_input_006_1.outputs[35].show_expanded = False
    if hasattr(group_input_006_1.outputs[36], 'default_value'):
        group_input_006_1.outputs[36].default_value = 0.0
    if hasattr(group_input_006_1.outputs[36], 'display_shape'):
        group_input_006_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[36], 'enabled'):
        group_input_006_1.outputs[36].enabled = True
    if hasattr(group_input_006_1.outputs[36], 'hide'):
        group_input_006_1.outputs[36].hide = True
    if hasattr(group_input_006_1.outputs[36], 'hide_value'):
        group_input_006_1.outputs[36].hide_value = False
    if hasattr(group_input_006_1.outputs[36], 'name'):
        group_input_006_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_006_1.outputs[36], 'show_expanded'):
        group_input_006_1.outputs[36].show_expanded = False
    if hasattr(group_input_006_1.outputs[37], 'default_value'):
        group_input_006_1.outputs[37].default_value = 0.0
    if hasattr(group_input_006_1.outputs[37], 'display_shape'):
        group_input_006_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[37], 'enabled'):
        group_input_006_1.outputs[37].enabled = True
    if hasattr(group_input_006_1.outputs[37], 'hide'):
        group_input_006_1.outputs[37].hide = True
    if hasattr(group_input_006_1.outputs[37], 'hide_value'):
        group_input_006_1.outputs[37].hide_value = False
    if hasattr(group_input_006_1.outputs[37], 'name'):
        group_input_006_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_006_1.outputs[37], 'show_expanded'):
        group_input_006_1.outputs[37].show_expanded = False
    if hasattr(group_input_006_1.outputs[38], 'default_value'):
        group_input_006_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_006_1.outputs[38], 'display_shape'):
        group_input_006_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[38], 'enabled'):
        group_input_006_1.outputs[38].enabled = True
    if hasattr(group_input_006_1.outputs[38], 'hide'):
        group_input_006_1.outputs[38].hide = True
    if hasattr(group_input_006_1.outputs[38], 'hide_value'):
        group_input_006_1.outputs[38].hide_value = False
    if hasattr(group_input_006_1.outputs[38], 'name'):
        group_input_006_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_006_1.outputs[38], 'show_expanded'):
        group_input_006_1.outputs[38].show_expanded = False
    if hasattr(group_input_006_1.outputs[39], 'default_value'):
        group_input_006_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_006_1.outputs[39], 'display_shape'):
        group_input_006_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[39], 'enabled'):
        group_input_006_1.outputs[39].enabled = True
    if hasattr(group_input_006_1.outputs[39], 'hide'):
        group_input_006_1.outputs[39].hide = True
    if hasattr(group_input_006_1.outputs[39], 'hide_value'):
        group_input_006_1.outputs[39].hide_value = False
    if hasattr(group_input_006_1.outputs[39], 'name'):
        group_input_006_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_006_1.outputs[39], 'show_expanded'):
        group_input_006_1.outputs[39].show_expanded = False
    if hasattr(group_input_006_1.outputs[40], 'default_value'):
        group_input_006_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_006_1.outputs[40], 'display_shape'):
        group_input_006_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[40], 'enabled'):
        group_input_006_1.outputs[40].enabled = True
    if hasattr(group_input_006_1.outputs[40], 'hide'):
        group_input_006_1.outputs[40].hide = True
    if hasattr(group_input_006_1.outputs[40], 'hide_value'):
        group_input_006_1.outputs[40].hide_value = False
    if hasattr(group_input_006_1.outputs[40], 'name'):
        group_input_006_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_006_1.outputs[40], 'show_expanded'):
        group_input_006_1.outputs[40].show_expanded = False
    if hasattr(group_input_006_1.outputs[41], 'default_value'):
        group_input_006_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_006_1.outputs[41], 'display_shape'):
        group_input_006_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[41], 'enabled'):
        group_input_006_1.outputs[41].enabled = True
    if hasattr(group_input_006_1.outputs[41], 'hide'):
        group_input_006_1.outputs[41].hide = True
    if hasattr(group_input_006_1.outputs[41], 'hide_value'):
        group_input_006_1.outputs[41].hide_value = False
    if hasattr(group_input_006_1.outputs[41], 'name'):
        group_input_006_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_006_1.outputs[41], 'show_expanded'):
        group_input_006_1.outputs[41].show_expanded = False
    if hasattr(group_input_006_1.outputs[42], 'default_value'):
        group_input_006_1.outputs[42].default_value = 0.0
    if hasattr(group_input_006_1.outputs[42], 'display_shape'):
        group_input_006_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[42], 'enabled'):
        group_input_006_1.outputs[42].enabled = True
    if hasattr(group_input_006_1.outputs[42], 'hide'):
        group_input_006_1.outputs[42].hide = True
    if hasattr(group_input_006_1.outputs[42], 'hide_value'):
        group_input_006_1.outputs[42].hide_value = False
    if hasattr(group_input_006_1.outputs[42], 'name'):
        group_input_006_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_006_1.outputs[42], 'show_expanded'):
        group_input_006_1.outputs[42].show_expanded = False
    if hasattr(group_input_006_1.outputs[43], 'default_value'):
        group_input_006_1.outputs[43].default_value = 0.0
    if hasattr(group_input_006_1.outputs[43], 'display_shape'):
        group_input_006_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[43], 'enabled'):
        group_input_006_1.outputs[43].enabled = True
    if hasattr(group_input_006_1.outputs[43], 'hide'):
        group_input_006_1.outputs[43].hide = True
    if hasattr(group_input_006_1.outputs[43], 'hide_value'):
        group_input_006_1.outputs[43].hide_value = False
    if hasattr(group_input_006_1.outputs[43], 'name'):
        group_input_006_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_006_1.outputs[43], 'show_expanded'):
        group_input_006_1.outputs[43].show_expanded = False
    if hasattr(group_input_006_1.outputs[44], 'default_value'):
        group_input_006_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[44], 'display_shape'):
        group_input_006_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[44], 'enabled'):
        group_input_006_1.outputs[44].enabled = True
    if hasattr(group_input_006_1.outputs[44], 'hide'):
        group_input_006_1.outputs[44].hide = True
    if hasattr(group_input_006_1.outputs[44], 'hide_value'):
        group_input_006_1.outputs[44].hide_value = False
    if hasattr(group_input_006_1.outputs[44], 'name'):
        group_input_006_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_006_1.outputs[44], 'show_expanded'):
        group_input_006_1.outputs[44].show_expanded = False
    if hasattr(group_input_006_1.outputs[45], 'default_value'):
        group_input_006_1.outputs[45].default_value = 0.0
    if hasattr(group_input_006_1.outputs[45], 'display_shape'):
        group_input_006_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[45], 'enabled'):
        group_input_006_1.outputs[45].enabled = True
    if hasattr(group_input_006_1.outputs[45], 'hide'):
        group_input_006_1.outputs[45].hide = True
    if hasattr(group_input_006_1.outputs[45], 'hide_value'):
        group_input_006_1.outputs[45].hide_value = False
    if hasattr(group_input_006_1.outputs[45], 'name'):
        group_input_006_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_006_1.outputs[45], 'show_expanded'):
        group_input_006_1.outputs[45].show_expanded = False
    if hasattr(group_input_006_1.outputs[46], 'default_value'):
        group_input_006_1.outputs[46].default_value = 0.0
    if hasattr(group_input_006_1.outputs[46], 'display_shape'):
        group_input_006_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[46], 'enabled'):
        group_input_006_1.outputs[46].enabled = True
    if hasattr(group_input_006_1.outputs[46], 'hide'):
        group_input_006_1.outputs[46].hide = True
    if hasattr(group_input_006_1.outputs[46], 'hide_value'):
        group_input_006_1.outputs[46].hide_value = False
    if hasattr(group_input_006_1.outputs[46], 'name'):
        group_input_006_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_006_1.outputs[46], 'show_expanded'):
        group_input_006_1.outputs[46].show_expanded = False
    if hasattr(group_input_006_1.outputs[47], 'default_value'):
        group_input_006_1.outputs[47].default_value = 0.0
    if hasattr(group_input_006_1.outputs[47], 'display_shape'):
        group_input_006_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[47], 'enabled'):
        group_input_006_1.outputs[47].enabled = True
    if hasattr(group_input_006_1.outputs[47], 'hide'):
        group_input_006_1.outputs[47].hide = False
    if hasattr(group_input_006_1.outputs[47], 'hide_value'):
        group_input_006_1.outputs[47].hide_value = False
    if hasattr(group_input_006_1.outputs[47], 'name'):
        group_input_006_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_006_1.outputs[47], 'show_expanded'):
        group_input_006_1.outputs[47].show_expanded = False
    if hasattr(group_input_006_1.outputs[48], 'default_value'):
        group_input_006_1.outputs[48].default_value = 0.0
    if hasattr(group_input_006_1.outputs[48], 'display_shape'):
        group_input_006_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[48], 'enabled'):
        group_input_006_1.outputs[48].enabled = True
    if hasattr(group_input_006_1.outputs[48], 'hide'):
        group_input_006_1.outputs[48].hide = True
    if hasattr(group_input_006_1.outputs[48], 'hide_value'):
        group_input_006_1.outputs[48].hide_value = False
    if hasattr(group_input_006_1.outputs[48], 'name'):
        group_input_006_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_006_1.outputs[48], 'show_expanded'):
        group_input_006_1.outputs[48].show_expanded = False
    if hasattr(group_input_006_1.outputs[49], 'default_value'):
        group_input_006_1.outputs[49].default_value = 0.0
    if hasattr(group_input_006_1.outputs[49], 'display_shape'):
        group_input_006_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[49], 'enabled'):
        group_input_006_1.outputs[49].enabled = True
    if hasattr(group_input_006_1.outputs[49], 'hide'):
        group_input_006_1.outputs[49].hide = True
    if hasattr(group_input_006_1.outputs[49], 'hide_value'):
        group_input_006_1.outputs[49].hide_value = False
    if hasattr(group_input_006_1.outputs[49], 'name'):
        group_input_006_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_006_1.outputs[49], 'show_expanded'):
        group_input_006_1.outputs[49].show_expanded = False
    if hasattr(group_input_006_1.outputs[50], 'default_value'):
        group_input_006_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_006_1.outputs[50], 'display_shape'):
        group_input_006_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[50], 'enabled'):
        group_input_006_1.outputs[50].enabled = True
    if hasattr(group_input_006_1.outputs[50], 'hide'):
        group_input_006_1.outputs[50].hide = True
    if hasattr(group_input_006_1.outputs[50], 'hide_value'):
        group_input_006_1.outputs[50].hide_value = False
    if hasattr(group_input_006_1.outputs[50], 'name'):
        group_input_006_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_006_1.outputs[50], 'show_expanded'):
        group_input_006_1.outputs[50].show_expanded = False
    if hasattr(group_input_006_1.outputs[51], 'default_value'):
        group_input_006_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_006_1.outputs[51], 'display_shape'):
        group_input_006_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[51], 'enabled'):
        group_input_006_1.outputs[51].enabled = True
    if hasattr(group_input_006_1.outputs[51], 'hide'):
        group_input_006_1.outputs[51].hide = True
    if hasattr(group_input_006_1.outputs[51], 'hide_value'):
        group_input_006_1.outputs[51].hide_value = False
    if hasattr(group_input_006_1.outputs[51], 'name'):
        group_input_006_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_006_1.outputs[51], 'show_expanded'):
        group_input_006_1.outputs[51].show_expanded = False
    if hasattr(group_input_006_1.outputs[52], 'default_value'):
        group_input_006_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_006_1.outputs[52], 'display_shape'):
        group_input_006_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[52], 'enabled'):
        group_input_006_1.outputs[52].enabled = True
    if hasattr(group_input_006_1.outputs[52], 'hide'):
        group_input_006_1.outputs[52].hide = True
    if hasattr(group_input_006_1.outputs[52], 'hide_value'):
        group_input_006_1.outputs[52].hide_value = False
    if hasattr(group_input_006_1.outputs[52], 'name'):
        group_input_006_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_006_1.outputs[52], 'show_expanded'):
        group_input_006_1.outputs[52].show_expanded = False
    if hasattr(group_input_006_1.outputs[53], 'default_value'):
        group_input_006_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_006_1.outputs[53], 'display_shape'):
        group_input_006_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[53], 'enabled'):
        group_input_006_1.outputs[53].enabled = True
    if hasattr(group_input_006_1.outputs[53], 'hide'):
        group_input_006_1.outputs[53].hide = True
    if hasattr(group_input_006_1.outputs[53], 'hide_value'):
        group_input_006_1.outputs[53].hide_value = False
    if hasattr(group_input_006_1.outputs[53], 'name'):
        group_input_006_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_006_1.outputs[53], 'show_expanded'):
        group_input_006_1.outputs[53].show_expanded = False
    if hasattr(group_input_006_1.outputs[54], 'default_value'):
        group_input_006_1.outputs[54].default_value = 0.0
    if hasattr(group_input_006_1.outputs[54], 'display_shape'):
        group_input_006_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[54], 'enabled'):
        group_input_006_1.outputs[54].enabled = True
    if hasattr(group_input_006_1.outputs[54], 'hide'):
        group_input_006_1.outputs[54].hide = True
    if hasattr(group_input_006_1.outputs[54], 'hide_value'):
        group_input_006_1.outputs[54].hide_value = False
    if hasattr(group_input_006_1.outputs[54], 'name'):
        group_input_006_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_006_1.outputs[54], 'show_expanded'):
        group_input_006_1.outputs[54].show_expanded = False
    if hasattr(group_input_006_1.outputs[55], 'default_value'):
        group_input_006_1.outputs[55].default_value = 0.0
    if hasattr(group_input_006_1.outputs[55], 'display_shape'):
        group_input_006_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[55], 'enabled'):
        group_input_006_1.outputs[55].enabled = True
    if hasattr(group_input_006_1.outputs[55], 'hide'):
        group_input_006_1.outputs[55].hide = True
    if hasattr(group_input_006_1.outputs[55], 'hide_value'):
        group_input_006_1.outputs[55].hide_value = False
    if hasattr(group_input_006_1.outputs[55], 'name'):
        group_input_006_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_006_1.outputs[55], 'show_expanded'):
        group_input_006_1.outputs[55].show_expanded = False
    if hasattr(group_input_006_1.outputs[56], 'default_value'):
        group_input_006_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[56], 'display_shape'):
        group_input_006_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[56], 'enabled'):
        group_input_006_1.outputs[56].enabled = True
    if hasattr(group_input_006_1.outputs[56], 'hide'):
        group_input_006_1.outputs[56].hide = True
    if hasattr(group_input_006_1.outputs[56], 'hide_value'):
        group_input_006_1.outputs[56].hide_value = False
    if hasattr(group_input_006_1.outputs[56], 'name'):
        group_input_006_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_006_1.outputs[56], 'show_expanded'):
        group_input_006_1.outputs[56].show_expanded = False
    if hasattr(group_input_006_1.outputs[57], 'default_value'):
        group_input_006_1.outputs[57].default_value = 0.0
    if hasattr(group_input_006_1.outputs[57], 'display_shape'):
        group_input_006_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[57], 'enabled'):
        group_input_006_1.outputs[57].enabled = True
    if hasattr(group_input_006_1.outputs[57], 'hide'):
        group_input_006_1.outputs[57].hide = True
    if hasattr(group_input_006_1.outputs[57], 'hide_value'):
        group_input_006_1.outputs[57].hide_value = False
    if hasattr(group_input_006_1.outputs[57], 'name'):
        group_input_006_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_006_1.outputs[57], 'show_expanded'):
        group_input_006_1.outputs[57].show_expanded = False
    if hasattr(group_input_006_1.outputs[58], 'default_value'):
        group_input_006_1.outputs[58].default_value = 0.0
    if hasattr(group_input_006_1.outputs[58], 'display_shape'):
        group_input_006_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[58], 'enabled'):
        group_input_006_1.outputs[58].enabled = True
    if hasattr(group_input_006_1.outputs[58], 'hide'):
        group_input_006_1.outputs[58].hide = True
    if hasattr(group_input_006_1.outputs[58], 'hide_value'):
        group_input_006_1.outputs[58].hide_value = False
    if hasattr(group_input_006_1.outputs[58], 'name'):
        group_input_006_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_006_1.outputs[58], 'show_expanded'):
        group_input_006_1.outputs[58].show_expanded = False
    if hasattr(group_input_006_1.outputs[59], 'default_value'):
        group_input_006_1.outputs[59].default_value = 0.0
    if hasattr(group_input_006_1.outputs[59], 'display_shape'):
        group_input_006_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[59], 'enabled'):
        group_input_006_1.outputs[59].enabled = True
    if hasattr(group_input_006_1.outputs[59], 'hide'):
        group_input_006_1.outputs[59].hide = False
    if hasattr(group_input_006_1.outputs[59], 'hide_value'):
        group_input_006_1.outputs[59].hide_value = False
    if hasattr(group_input_006_1.outputs[59], 'name'):
        group_input_006_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_006_1.outputs[59], 'show_expanded'):
        group_input_006_1.outputs[59].show_expanded = False
    if hasattr(group_input_006_1.outputs[60], 'default_value'):
        group_input_006_1.outputs[60].default_value = 0.0
    if hasattr(group_input_006_1.outputs[60], 'display_shape'):
        group_input_006_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[60], 'enabled'):
        group_input_006_1.outputs[60].enabled = True
    if hasattr(group_input_006_1.outputs[60], 'hide'):
        group_input_006_1.outputs[60].hide = True
    if hasattr(group_input_006_1.outputs[60], 'hide_value'):
        group_input_006_1.outputs[60].hide_value = False
    if hasattr(group_input_006_1.outputs[60], 'name'):
        group_input_006_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_006_1.outputs[60], 'show_expanded'):
        group_input_006_1.outputs[60].show_expanded = False
    if hasattr(group_input_006_1.outputs[61], 'default_value'):
        group_input_006_1.outputs[61].default_value = 0.0
    if hasattr(group_input_006_1.outputs[61], 'display_shape'):
        group_input_006_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[61], 'enabled'):
        group_input_006_1.outputs[61].enabled = True
    if hasattr(group_input_006_1.outputs[61], 'hide'):
        group_input_006_1.outputs[61].hide = True
    if hasattr(group_input_006_1.outputs[61], 'hide_value'):
        group_input_006_1.outputs[61].hide_value = False
    if hasattr(group_input_006_1.outputs[61], 'name'):
        group_input_006_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_006_1.outputs[61], 'show_expanded'):
        group_input_006_1.outputs[61].show_expanded = False
    if hasattr(group_input_006_1.outputs[62], 'default_value'):
        group_input_006_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_006_1.outputs[62], 'display_shape'):
        group_input_006_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[62], 'enabled'):
        group_input_006_1.outputs[62].enabled = True
    if hasattr(group_input_006_1.outputs[62], 'hide'):
        group_input_006_1.outputs[62].hide = True
    if hasattr(group_input_006_1.outputs[62], 'hide_value'):
        group_input_006_1.outputs[62].hide_value = False
    if hasattr(group_input_006_1.outputs[62], 'name'):
        group_input_006_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_006_1.outputs[62], 'show_expanded'):
        group_input_006_1.outputs[62].show_expanded = False
    if hasattr(group_input_006_1.outputs[63], 'default_value'):
        group_input_006_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_006_1.outputs[63], 'display_shape'):
        group_input_006_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[63], 'enabled'):
        group_input_006_1.outputs[63].enabled = True
    if hasattr(group_input_006_1.outputs[63], 'hide'):
        group_input_006_1.outputs[63].hide = True
    if hasattr(group_input_006_1.outputs[63], 'hide_value'):
        group_input_006_1.outputs[63].hide_value = False
    if hasattr(group_input_006_1.outputs[63], 'name'):
        group_input_006_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_006_1.outputs[63], 'show_expanded'):
        group_input_006_1.outputs[63].show_expanded = False
    if hasattr(group_input_006_1.outputs[64], 'default_value'):
        group_input_006_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_006_1.outputs[64], 'display_shape'):
        group_input_006_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[64], 'enabled'):
        group_input_006_1.outputs[64].enabled = True
    if hasattr(group_input_006_1.outputs[64], 'hide'):
        group_input_006_1.outputs[64].hide = True
    if hasattr(group_input_006_1.outputs[64], 'hide_value'):
        group_input_006_1.outputs[64].hide_value = False
    if hasattr(group_input_006_1.outputs[64], 'name'):
        group_input_006_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_006_1.outputs[64], 'show_expanded'):
        group_input_006_1.outputs[64].show_expanded = False
    if hasattr(group_input_006_1.outputs[65], 'default_value'):
        group_input_006_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_006_1.outputs[65], 'display_shape'):
        group_input_006_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[65], 'enabled'):
        group_input_006_1.outputs[65].enabled = True
    if hasattr(group_input_006_1.outputs[65], 'hide'):
        group_input_006_1.outputs[65].hide = True
    if hasattr(group_input_006_1.outputs[65], 'hide_value'):
        group_input_006_1.outputs[65].hide_value = False
    if hasattr(group_input_006_1.outputs[65], 'name'):
        group_input_006_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_006_1.outputs[65], 'show_expanded'):
        group_input_006_1.outputs[65].show_expanded = False
    if hasattr(group_input_006_1.outputs[66], 'default_value'):
        group_input_006_1.outputs[66].default_value = 0.0
    if hasattr(group_input_006_1.outputs[66], 'display_shape'):
        group_input_006_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[66], 'enabled'):
        group_input_006_1.outputs[66].enabled = True
    if hasattr(group_input_006_1.outputs[66], 'hide'):
        group_input_006_1.outputs[66].hide = True
    if hasattr(group_input_006_1.outputs[66], 'hide_value'):
        group_input_006_1.outputs[66].hide_value = False
    if hasattr(group_input_006_1.outputs[66], 'name'):
        group_input_006_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_006_1.outputs[66], 'show_expanded'):
        group_input_006_1.outputs[66].show_expanded = False
    if hasattr(group_input_006_1.outputs[67], 'default_value'):
        group_input_006_1.outputs[67].default_value = 0.0
    if hasattr(group_input_006_1.outputs[67], 'display_shape'):
        group_input_006_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[67], 'enabled'):
        group_input_006_1.outputs[67].enabled = True
    if hasattr(group_input_006_1.outputs[67], 'hide'):
        group_input_006_1.outputs[67].hide = True
    if hasattr(group_input_006_1.outputs[67], 'hide_value'):
        group_input_006_1.outputs[67].hide_value = False
    if hasattr(group_input_006_1.outputs[67], 'name'):
        group_input_006_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_006_1.outputs[67], 'show_expanded'):
        group_input_006_1.outputs[67].show_expanded = False
    if hasattr(group_input_006_1.outputs[68], 'default_value'):
        group_input_006_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[68], 'display_shape'):
        group_input_006_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[68], 'enabled'):
        group_input_006_1.outputs[68].enabled = True
    if hasattr(group_input_006_1.outputs[68], 'hide'):
        group_input_006_1.outputs[68].hide = True
    if hasattr(group_input_006_1.outputs[68], 'hide_value'):
        group_input_006_1.outputs[68].hide_value = False
    if hasattr(group_input_006_1.outputs[68], 'name'):
        group_input_006_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_006_1.outputs[68], 'show_expanded'):
        group_input_006_1.outputs[68].show_expanded = False
    if hasattr(group_input_006_1.outputs[69], 'default_value'):
        group_input_006_1.outputs[69].default_value = 0.0
    if hasattr(group_input_006_1.outputs[69], 'display_shape'):
        group_input_006_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[69], 'enabled'):
        group_input_006_1.outputs[69].enabled = True
    if hasattr(group_input_006_1.outputs[69], 'hide'):
        group_input_006_1.outputs[69].hide = True
    if hasattr(group_input_006_1.outputs[69], 'hide_value'):
        group_input_006_1.outputs[69].hide_value = False
    if hasattr(group_input_006_1.outputs[69], 'name'):
        group_input_006_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_006_1.outputs[69], 'show_expanded'):
        group_input_006_1.outputs[69].show_expanded = False
    if hasattr(group_input_006_1.outputs[70], 'default_value'):
        group_input_006_1.outputs[70].default_value = 0.0
    if hasattr(group_input_006_1.outputs[70], 'display_shape'):
        group_input_006_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[70], 'enabled'):
        group_input_006_1.outputs[70].enabled = True
    if hasattr(group_input_006_1.outputs[70], 'hide'):
        group_input_006_1.outputs[70].hide = True
    if hasattr(group_input_006_1.outputs[70], 'hide_value'):
        group_input_006_1.outputs[70].hide_value = False
    if hasattr(group_input_006_1.outputs[70], 'name'):
        group_input_006_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_006_1.outputs[70], 'show_expanded'):
        group_input_006_1.outputs[70].show_expanded = False
    if hasattr(group_input_006_1.outputs[71], 'default_value'):
        group_input_006_1.outputs[71].default_value = 0.0
    if hasattr(group_input_006_1.outputs[71], 'display_shape'):
        group_input_006_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[71], 'enabled'):
        group_input_006_1.outputs[71].enabled = True
    if hasattr(group_input_006_1.outputs[71], 'hide'):
        group_input_006_1.outputs[71].hide = False
    if hasattr(group_input_006_1.outputs[71], 'hide_value'):
        group_input_006_1.outputs[71].hide_value = False
    if hasattr(group_input_006_1.outputs[71], 'name'):
        group_input_006_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_006_1.outputs[71], 'show_expanded'):
        group_input_006_1.outputs[71].show_expanded = False
    if hasattr(group_input_006_1.outputs[72], 'default_value'):
        group_input_006_1.outputs[72].default_value = 0.0
    if hasattr(group_input_006_1.outputs[72], 'display_shape'):
        group_input_006_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[72], 'enabled'):
        group_input_006_1.outputs[72].enabled = True
    if hasattr(group_input_006_1.outputs[72], 'hide'):
        group_input_006_1.outputs[72].hide = True
    if hasattr(group_input_006_1.outputs[72], 'hide_value'):
        group_input_006_1.outputs[72].hide_value = False
    if hasattr(group_input_006_1.outputs[72], 'name'):
        group_input_006_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_006_1.outputs[72], 'show_expanded'):
        group_input_006_1.outputs[72].show_expanded = False
    if hasattr(group_input_006_1.outputs[73], 'default_value'):
        group_input_006_1.outputs[73].default_value = 0.0
    if hasattr(group_input_006_1.outputs[73], 'display_shape'):
        group_input_006_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[73], 'enabled'):
        group_input_006_1.outputs[73].enabled = True
    if hasattr(group_input_006_1.outputs[73], 'hide'):
        group_input_006_1.outputs[73].hide = True
    if hasattr(group_input_006_1.outputs[73], 'hide_value'):
        group_input_006_1.outputs[73].hide_value = False
    if hasattr(group_input_006_1.outputs[73], 'name'):
        group_input_006_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_006_1.outputs[73], 'show_expanded'):
        group_input_006_1.outputs[73].show_expanded = False
    if hasattr(group_input_006_1.outputs[74], 'default_value'):
        group_input_006_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_006_1.outputs[74], 'display_shape'):
        group_input_006_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[74], 'enabled'):
        group_input_006_1.outputs[74].enabled = True
    if hasattr(group_input_006_1.outputs[74], 'hide'):
        group_input_006_1.outputs[74].hide = True
    if hasattr(group_input_006_1.outputs[74], 'hide_value'):
        group_input_006_1.outputs[74].hide_value = False
    if hasattr(group_input_006_1.outputs[74], 'name'):
        group_input_006_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_006_1.outputs[74], 'show_expanded'):
        group_input_006_1.outputs[74].show_expanded = False
    if hasattr(group_input_006_1.outputs[75], 'default_value'):
        group_input_006_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_006_1.outputs[75], 'display_shape'):
        group_input_006_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[75], 'enabled'):
        group_input_006_1.outputs[75].enabled = True
    if hasattr(group_input_006_1.outputs[75], 'hide'):
        group_input_006_1.outputs[75].hide = True
    if hasattr(group_input_006_1.outputs[75], 'hide_value'):
        group_input_006_1.outputs[75].hide_value = False
    if hasattr(group_input_006_1.outputs[75], 'name'):
        group_input_006_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_006_1.outputs[75], 'show_expanded'):
        group_input_006_1.outputs[75].show_expanded = False
    if hasattr(group_input_006_1.outputs[76], 'default_value'):
        group_input_006_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_006_1.outputs[76], 'display_shape'):
        group_input_006_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[76], 'enabled'):
        group_input_006_1.outputs[76].enabled = True
    if hasattr(group_input_006_1.outputs[76], 'hide'):
        group_input_006_1.outputs[76].hide = True
    if hasattr(group_input_006_1.outputs[76], 'hide_value'):
        group_input_006_1.outputs[76].hide_value = False
    if hasattr(group_input_006_1.outputs[76], 'name'):
        group_input_006_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_006_1.outputs[76], 'show_expanded'):
        group_input_006_1.outputs[76].show_expanded = False
    if hasattr(group_input_006_1.outputs[77], 'default_value'):
        group_input_006_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_006_1.outputs[77], 'display_shape'):
        group_input_006_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[77], 'enabled'):
        group_input_006_1.outputs[77].enabled = True
    if hasattr(group_input_006_1.outputs[77], 'hide'):
        group_input_006_1.outputs[77].hide = True
    if hasattr(group_input_006_1.outputs[77], 'hide_value'):
        group_input_006_1.outputs[77].hide_value = False
    if hasattr(group_input_006_1.outputs[77], 'name'):
        group_input_006_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_006_1.outputs[77], 'show_expanded'):
        group_input_006_1.outputs[77].show_expanded = False
    if hasattr(group_input_006_1.outputs[78], 'default_value'):
        group_input_006_1.outputs[78].default_value = 0.0
    if hasattr(group_input_006_1.outputs[78], 'display_shape'):
        group_input_006_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[78], 'enabled'):
        group_input_006_1.outputs[78].enabled = True
    if hasattr(group_input_006_1.outputs[78], 'hide'):
        group_input_006_1.outputs[78].hide = True
    if hasattr(group_input_006_1.outputs[78], 'hide_value'):
        group_input_006_1.outputs[78].hide_value = False
    if hasattr(group_input_006_1.outputs[78], 'name'):
        group_input_006_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_006_1.outputs[78], 'show_expanded'):
        group_input_006_1.outputs[78].show_expanded = False
    if hasattr(group_input_006_1.outputs[79], 'default_value'):
        group_input_006_1.outputs[79].default_value = 0.0
    if hasattr(group_input_006_1.outputs[79], 'display_shape'):
        group_input_006_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[79], 'enabled'):
        group_input_006_1.outputs[79].enabled = True
    if hasattr(group_input_006_1.outputs[79], 'hide'):
        group_input_006_1.outputs[79].hide = True
    if hasattr(group_input_006_1.outputs[79], 'hide_value'):
        group_input_006_1.outputs[79].hide_value = False
    if hasattr(group_input_006_1.outputs[79], 'name'):
        group_input_006_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_006_1.outputs[79], 'show_expanded'):
        group_input_006_1.outputs[79].show_expanded = False
    if hasattr(group_input_006_1.outputs[80], 'default_value'):
        group_input_006_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[80], 'display_shape'):
        group_input_006_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[80], 'enabled'):
        group_input_006_1.outputs[80].enabled = True
    if hasattr(group_input_006_1.outputs[80], 'hide'):
        group_input_006_1.outputs[80].hide = True
    if hasattr(group_input_006_1.outputs[80], 'hide_value'):
        group_input_006_1.outputs[80].hide_value = False
    if hasattr(group_input_006_1.outputs[80], 'name'):
        group_input_006_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_006_1.outputs[80], 'show_expanded'):
        group_input_006_1.outputs[80].show_expanded = False
    if hasattr(group_input_006_1.outputs[81], 'default_value'):
        group_input_006_1.outputs[81].default_value = 0.0
    if hasattr(group_input_006_1.outputs[81], 'display_shape'):
        group_input_006_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[81], 'enabled'):
        group_input_006_1.outputs[81].enabled = True
    if hasattr(group_input_006_1.outputs[81], 'hide'):
        group_input_006_1.outputs[81].hide = True
    if hasattr(group_input_006_1.outputs[81], 'hide_value'):
        group_input_006_1.outputs[81].hide_value = False
    if hasattr(group_input_006_1.outputs[81], 'name'):
        group_input_006_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_006_1.outputs[81], 'show_expanded'):
        group_input_006_1.outputs[81].show_expanded = False
    if hasattr(group_input_006_1.outputs[82], 'default_value'):
        group_input_006_1.outputs[82].default_value = 0.0
    if hasattr(group_input_006_1.outputs[82], 'display_shape'):
        group_input_006_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[82], 'enabled'):
        group_input_006_1.outputs[82].enabled = True
    if hasattr(group_input_006_1.outputs[82], 'hide'):
        group_input_006_1.outputs[82].hide = True
    if hasattr(group_input_006_1.outputs[82], 'hide_value'):
        group_input_006_1.outputs[82].hide_value = False
    if hasattr(group_input_006_1.outputs[82], 'name'):
        group_input_006_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_006_1.outputs[82], 'show_expanded'):
        group_input_006_1.outputs[82].show_expanded = False
    if hasattr(group_input_006_1.outputs[83], 'default_value'):
        group_input_006_1.outputs[83].default_value = 0.0
    if hasattr(group_input_006_1.outputs[83], 'display_shape'):
        group_input_006_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[83], 'enabled'):
        group_input_006_1.outputs[83].enabled = True
    if hasattr(group_input_006_1.outputs[83], 'hide'):
        group_input_006_1.outputs[83].hide = False
    if hasattr(group_input_006_1.outputs[83], 'hide_value'):
        group_input_006_1.outputs[83].hide_value = False
    if hasattr(group_input_006_1.outputs[83], 'name'):
        group_input_006_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_006_1.outputs[83], 'show_expanded'):
        group_input_006_1.outputs[83].show_expanded = False
    if hasattr(group_input_006_1.outputs[84], 'default_value'):
        group_input_006_1.outputs[84].default_value = 0.0
    if hasattr(group_input_006_1.outputs[84], 'display_shape'):
        group_input_006_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[84], 'enabled'):
        group_input_006_1.outputs[84].enabled = True
    if hasattr(group_input_006_1.outputs[84], 'hide'):
        group_input_006_1.outputs[84].hide = True
    if hasattr(group_input_006_1.outputs[84], 'hide_value'):
        group_input_006_1.outputs[84].hide_value = False
    if hasattr(group_input_006_1.outputs[84], 'name'):
        group_input_006_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_006_1.outputs[84], 'show_expanded'):
        group_input_006_1.outputs[84].show_expanded = False
    if hasattr(group_input_006_1.outputs[85], 'default_value'):
        group_input_006_1.outputs[85].default_value = 0.0
    if hasattr(group_input_006_1.outputs[85], 'display_shape'):
        group_input_006_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[85], 'enabled'):
        group_input_006_1.outputs[85].enabled = True
    if hasattr(group_input_006_1.outputs[85], 'hide'):
        group_input_006_1.outputs[85].hide = True
    if hasattr(group_input_006_1.outputs[85], 'hide_value'):
        group_input_006_1.outputs[85].hide_value = False
    if hasattr(group_input_006_1.outputs[85], 'name'):
        group_input_006_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_006_1.outputs[85], 'show_expanded'):
        group_input_006_1.outputs[85].show_expanded = False
    if hasattr(group_input_006_1.outputs[86], 'default_value'):
        group_input_006_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_006_1.outputs[86], 'display_shape'):
        group_input_006_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[86], 'enabled'):
        group_input_006_1.outputs[86].enabled = True
    if hasattr(group_input_006_1.outputs[86], 'hide'):
        group_input_006_1.outputs[86].hide = True
    if hasattr(group_input_006_1.outputs[86], 'hide_value'):
        group_input_006_1.outputs[86].hide_value = False
    if hasattr(group_input_006_1.outputs[86], 'name'):
        group_input_006_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_006_1.outputs[86], 'show_expanded'):
        group_input_006_1.outputs[86].show_expanded = False
    if hasattr(group_input_006_1.outputs[87], 'default_value'):
        group_input_006_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_006_1.outputs[87], 'display_shape'):
        group_input_006_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[87], 'enabled'):
        group_input_006_1.outputs[87].enabled = True
    if hasattr(group_input_006_1.outputs[87], 'hide'):
        group_input_006_1.outputs[87].hide = True
    if hasattr(group_input_006_1.outputs[87], 'hide_value'):
        group_input_006_1.outputs[87].hide_value = False
    if hasattr(group_input_006_1.outputs[87], 'name'):
        group_input_006_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_006_1.outputs[87], 'show_expanded'):
        group_input_006_1.outputs[87].show_expanded = False
    if hasattr(group_input_006_1.outputs[88], 'default_value'):
        group_input_006_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_006_1.outputs[88], 'display_shape'):
        group_input_006_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[88], 'enabled'):
        group_input_006_1.outputs[88].enabled = True
    if hasattr(group_input_006_1.outputs[88], 'hide'):
        group_input_006_1.outputs[88].hide = True
    if hasattr(group_input_006_1.outputs[88], 'hide_value'):
        group_input_006_1.outputs[88].hide_value = False
    if hasattr(group_input_006_1.outputs[88], 'name'):
        group_input_006_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_006_1.outputs[88], 'show_expanded'):
        group_input_006_1.outputs[88].show_expanded = False
    if hasattr(group_input_006_1.outputs[89], 'default_value'):
        group_input_006_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_006_1.outputs[89], 'display_shape'):
        group_input_006_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[89], 'enabled'):
        group_input_006_1.outputs[89].enabled = True
    if hasattr(group_input_006_1.outputs[89], 'hide'):
        group_input_006_1.outputs[89].hide = True
    if hasattr(group_input_006_1.outputs[89], 'hide_value'):
        group_input_006_1.outputs[89].hide_value = False
    if hasattr(group_input_006_1.outputs[89], 'name'):
        group_input_006_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_006_1.outputs[89], 'show_expanded'):
        group_input_006_1.outputs[89].show_expanded = False
    if hasattr(group_input_006_1.outputs[90], 'default_value'):
        group_input_006_1.outputs[90].default_value = 0.0
    if hasattr(group_input_006_1.outputs[90], 'display_shape'):
        group_input_006_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[90], 'enabled'):
        group_input_006_1.outputs[90].enabled = True
    if hasattr(group_input_006_1.outputs[90], 'hide'):
        group_input_006_1.outputs[90].hide = True
    if hasattr(group_input_006_1.outputs[90], 'hide_value'):
        group_input_006_1.outputs[90].hide_value = False
    if hasattr(group_input_006_1.outputs[90], 'name'):
        group_input_006_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_006_1.outputs[90], 'show_expanded'):
        group_input_006_1.outputs[90].show_expanded = False
    if hasattr(group_input_006_1.outputs[91], 'default_value'):
        group_input_006_1.outputs[91].default_value = 0.0
    if hasattr(group_input_006_1.outputs[91], 'display_shape'):
        group_input_006_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[91], 'enabled'):
        group_input_006_1.outputs[91].enabled = True
    if hasattr(group_input_006_1.outputs[91], 'hide'):
        group_input_006_1.outputs[91].hide = True
    if hasattr(group_input_006_1.outputs[91], 'hide_value'):
        group_input_006_1.outputs[91].hide_value = False
    if hasattr(group_input_006_1.outputs[91], 'name'):
        group_input_006_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_006_1.outputs[91], 'show_expanded'):
        group_input_006_1.outputs[91].show_expanded = False
    if hasattr(group_input_006_1.outputs[92], 'default_value'):
        group_input_006_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_006_1.outputs[92], 'display_shape'):
        group_input_006_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[92], 'enabled'):
        group_input_006_1.outputs[92].enabled = True
    if hasattr(group_input_006_1.outputs[92], 'hide'):
        group_input_006_1.outputs[92].hide = True
    if hasattr(group_input_006_1.outputs[92], 'hide_value'):
        group_input_006_1.outputs[92].hide_value = False
    if hasattr(group_input_006_1.outputs[92], 'name'):
        group_input_006_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_006_1.outputs[92], 'show_expanded'):
        group_input_006_1.outputs[92].show_expanded = False
    if hasattr(group_input_006_1.outputs[93], 'default_value'):
        group_input_006_1.outputs[93].default_value = 0.0
    if hasattr(group_input_006_1.outputs[93], 'display_shape'):
        group_input_006_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[93], 'enabled'):
        group_input_006_1.outputs[93].enabled = True
    if hasattr(group_input_006_1.outputs[93], 'hide'):
        group_input_006_1.outputs[93].hide = True
    if hasattr(group_input_006_1.outputs[93], 'hide_value'):
        group_input_006_1.outputs[93].hide_value = False
    if hasattr(group_input_006_1.outputs[93], 'name'):
        group_input_006_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_006_1.outputs[93], 'show_expanded'):
        group_input_006_1.outputs[93].show_expanded = False
    if hasattr(group_input_006_1.outputs[94], 'default_value'):
        group_input_006_1.outputs[94].default_value = 0.0
    if hasattr(group_input_006_1.outputs[94], 'display_shape'):
        group_input_006_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[94], 'enabled'):
        group_input_006_1.outputs[94].enabled = True
    if hasattr(group_input_006_1.outputs[94], 'hide'):
        group_input_006_1.outputs[94].hide = True
    if hasattr(group_input_006_1.outputs[94], 'hide_value'):
        group_input_006_1.outputs[94].hide_value = False
    if hasattr(group_input_006_1.outputs[94], 'name'):
        group_input_006_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_006_1.outputs[94], 'show_expanded'):
        group_input_006_1.outputs[94].show_expanded = False
    if hasattr(group_input_006_1.outputs[95], 'default_value'):
        group_input_006_1.outputs[95].default_value = 0.0
    if hasattr(group_input_006_1.outputs[95], 'display_shape'):
        group_input_006_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[95], 'enabled'):
        group_input_006_1.outputs[95].enabled = True
    if hasattr(group_input_006_1.outputs[95], 'hide'):
        group_input_006_1.outputs[95].hide = False
    if hasattr(group_input_006_1.outputs[95], 'hide_value'):
        group_input_006_1.outputs[95].hide_value = False
    if hasattr(group_input_006_1.outputs[95], 'name'):
        group_input_006_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_006_1.outputs[95], 'show_expanded'):
        group_input_006_1.outputs[95].show_expanded = False
    if hasattr(group_input_006_1.outputs[96], 'default_value'):
        group_input_006_1.outputs[96].default_value = 0.0
    if hasattr(group_input_006_1.outputs[96], 'display_shape'):
        group_input_006_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[96], 'enabled'):
        group_input_006_1.outputs[96].enabled = True
    if hasattr(group_input_006_1.outputs[96], 'hide'):
        group_input_006_1.outputs[96].hide = True
    if hasattr(group_input_006_1.outputs[96], 'hide_value'):
        group_input_006_1.outputs[96].hide_value = False
    if hasattr(group_input_006_1.outputs[96], 'name'):
        group_input_006_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_006_1.outputs[96], 'show_expanded'):
        group_input_006_1.outputs[96].show_expanded = False
    if hasattr(group_input_006_1.outputs[97], 'default_value'):
        group_input_006_1.outputs[97].default_value = 0.0
    if hasattr(group_input_006_1.outputs[97], 'display_shape'):
        group_input_006_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[97], 'enabled'):
        group_input_006_1.outputs[97].enabled = True
    if hasattr(group_input_006_1.outputs[97], 'hide'):
        group_input_006_1.outputs[97].hide = True
    if hasattr(group_input_006_1.outputs[97], 'hide_value'):
        group_input_006_1.outputs[97].hide_value = False
    if hasattr(group_input_006_1.outputs[97], 'name'):
        group_input_006_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_006_1.outputs[97], 'show_expanded'):
        group_input_006_1.outputs[97].show_expanded = False
    if hasattr(group_input_006_1.outputs[98], 'default_value'):
        group_input_006_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_006_1.outputs[98], 'display_shape'):
        group_input_006_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[98], 'enabled'):
        group_input_006_1.outputs[98].enabled = True
    if hasattr(group_input_006_1.outputs[98], 'hide'):
        group_input_006_1.outputs[98].hide = True
    if hasattr(group_input_006_1.outputs[98], 'hide_value'):
        group_input_006_1.outputs[98].hide_value = False
    if hasattr(group_input_006_1.outputs[98], 'name'):
        group_input_006_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_006_1.outputs[98], 'show_expanded'):
        group_input_006_1.outputs[98].show_expanded = False
    if hasattr(group_input_006_1.outputs[99], 'default_value'):
        group_input_006_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_006_1.outputs[99], 'display_shape'):
        group_input_006_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[99], 'enabled'):
        group_input_006_1.outputs[99].enabled = True
    if hasattr(group_input_006_1.outputs[99], 'hide'):
        group_input_006_1.outputs[99].hide = True
    if hasattr(group_input_006_1.outputs[99], 'hide_value'):
        group_input_006_1.outputs[99].hide_value = False
    if hasattr(group_input_006_1.outputs[99], 'name'):
        group_input_006_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_006_1.outputs[99], 'show_expanded'):
        group_input_006_1.outputs[99].show_expanded = False
    if hasattr(group_input_006_1.outputs[100], 'default_value'):
        group_input_006_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_006_1.outputs[100], 'display_shape'):
        group_input_006_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[100], 'enabled'):
        group_input_006_1.outputs[100].enabled = True
    if hasattr(group_input_006_1.outputs[100], 'hide'):
        group_input_006_1.outputs[100].hide = True
    if hasattr(group_input_006_1.outputs[100], 'hide_value'):
        group_input_006_1.outputs[100].hide_value = False
    if hasattr(group_input_006_1.outputs[100], 'name'):
        group_input_006_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_006_1.outputs[100], 'show_expanded'):
        group_input_006_1.outputs[100].show_expanded = False
    if hasattr(group_input_006_1.outputs[101], 'default_value'):
        group_input_006_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_006_1.outputs[101], 'display_shape'):
        group_input_006_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_006_1.outputs[101], 'enabled'):
        group_input_006_1.outputs[101].enabled = True
    if hasattr(group_input_006_1.outputs[101], 'hide'):
        group_input_006_1.outputs[101].hide = True
    if hasattr(group_input_006_1.outputs[101], 'hide_value'):
        group_input_006_1.outputs[101].hide_value = False
    if hasattr(group_input_006_1.outputs[101], 'name'):
        group_input_006_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_006_1.outputs[101], 'show_expanded'):
        group_input_006_1.outputs[101].show_expanded = False

    group_input_019_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_019_1, 'color'):
        group_input_019_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_019_1, 'hide'):
        group_input_019_1.hide = False
    if hasattr(group_input_019_1, 'location'):
        group_input_019_1.location = (-2120.0, 20.0)
    if hasattr(group_input_019_1, 'mute'):
        group_input_019_1.mute = False
    if hasattr(group_input_019_1, 'name'):
        group_input_019_1.name = 'Group Input.019'
    if hasattr(group_input_019_1, 'use_custom_color'):
        group_input_019_1.use_custom_color = False
    if hasattr(group_input_019_1, 'width'):
        group_input_019_1.width = 200.9415283203125
    if hasattr(group_input_019_1.outputs[0], 'default_value'):
        group_input_019_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[0], 'display_shape'):
        group_input_019_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[0], 'enabled'):
        group_input_019_1.outputs[0].enabled = True
    if hasattr(group_input_019_1.outputs[0], 'hide'):
        group_input_019_1.outputs[0].hide = False
    if hasattr(group_input_019_1.outputs[0], 'hide_value'):
        group_input_019_1.outputs[0].hide_value = False
    if hasattr(group_input_019_1.outputs[0], 'name'):
        group_input_019_1.outputs[0].name = 'ASG'
    if hasattr(group_input_019_1.outputs[0], 'show_expanded'):
        group_input_019_1.outputs[0].show_expanded = False
    if hasattr(group_input_019_1.outputs[1], 'default_value'):
        group_input_019_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[1], 'display_shape'):
        group_input_019_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[1], 'enabled'):
        group_input_019_1.outputs[1].enabled = True
    if hasattr(group_input_019_1.outputs[1], 'hide'):
        group_input_019_1.outputs[1].hide = False
    if hasattr(group_input_019_1.outputs[1], 'hide_value'):
        group_input_019_1.outputs[1].hide_value = False
    if hasattr(group_input_019_1.outputs[1], 'name'):
        group_input_019_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_019_1.outputs[1], 'show_expanded'):
        group_input_019_1.outputs[1].show_expanded = False
    if hasattr(group_input_019_1.outputs[2], 'default_value'):
        group_input_019_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[2], 'display_shape'):
        group_input_019_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[2], 'enabled'):
        group_input_019_1.outputs[2].enabled = True
    if hasattr(group_input_019_1.outputs[2], 'hide'):
        group_input_019_1.outputs[2].hide = False
    if hasattr(group_input_019_1.outputs[2], 'hide_value'):
        group_input_019_1.outputs[2].hide_value = False
    if hasattr(group_input_019_1.outputs[2], 'name'):
        group_input_019_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_019_1.outputs[2], 'show_expanded'):
        group_input_019_1.outputs[2].show_expanded = False
    if hasattr(group_input_019_1.outputs[3], 'default_value'):
        group_input_019_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[3], 'display_shape'):
        group_input_019_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[3], 'enabled'):
        group_input_019_1.outputs[3].enabled = True
    if hasattr(group_input_019_1.outputs[3], 'hide'):
        group_input_019_1.outputs[3].hide = True
    if hasattr(group_input_019_1.outputs[3], 'hide_value'):
        group_input_019_1.outputs[3].hide_value = False
    if hasattr(group_input_019_1.outputs[3], 'name'):
        group_input_019_1.outputs[3].name = 'Normal'
    if hasattr(group_input_019_1.outputs[3], 'show_expanded'):
        group_input_019_1.outputs[3].show_expanded = False
    if hasattr(group_input_019_1.outputs[4], 'default_value'):
        group_input_019_1.outputs[4].default_value = 0.0
    if hasattr(group_input_019_1.outputs[4], 'display_shape'):
        group_input_019_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[4], 'enabled'):
        group_input_019_1.outputs[4].enabled = True
    if hasattr(group_input_019_1.outputs[4], 'hide'):
        group_input_019_1.outputs[4].hide = True
    if hasattr(group_input_019_1.outputs[4], 'hide_value'):
        group_input_019_1.outputs[4].hide_value = False
    if hasattr(group_input_019_1.outputs[4], 'name'):
        group_input_019_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_019_1.outputs[4], 'show_expanded'):
        group_input_019_1.outputs[4].show_expanded = False
    if hasattr(group_input_019_1.outputs[5], 'default_value'):
        group_input_019_1.outputs[5].default_value = 1.0
    if hasattr(group_input_019_1.outputs[5], 'display_shape'):
        group_input_019_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[5], 'enabled'):
        group_input_019_1.outputs[5].enabled = True
    if hasattr(group_input_019_1.outputs[5], 'hide'):
        group_input_019_1.outputs[5].hide = True
    if hasattr(group_input_019_1.outputs[5], 'hide_value'):
        group_input_019_1.outputs[5].hide_value = False
    if hasattr(group_input_019_1.outputs[5], 'name'):
        group_input_019_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_019_1.outputs[5], 'show_expanded'):
        group_input_019_1.outputs[5].show_expanded = False
    if hasattr(group_input_019_1.outputs[6], 'default_value'):
        group_input_019_1.outputs[6].default_value = 0.0
    if hasattr(group_input_019_1.outputs[6], 'display_shape'):
        group_input_019_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[6], 'enabled'):
        group_input_019_1.outputs[6].enabled = True
    if hasattr(group_input_019_1.outputs[6], 'hide'):
        group_input_019_1.outputs[6].hide = True
    if hasattr(group_input_019_1.outputs[6], 'hide_value'):
        group_input_019_1.outputs[6].hide_value = False
    if hasattr(group_input_019_1.outputs[6], 'name'):
        group_input_019_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_019_1.outputs[6], 'show_expanded'):
        group_input_019_1.outputs[6].show_expanded = False
    if hasattr(group_input_019_1.outputs[7], 'default_value'):
        group_input_019_1.outputs[7].default_value = 0.0
    if hasattr(group_input_019_1.outputs[7], 'display_shape'):
        group_input_019_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[7], 'enabled'):
        group_input_019_1.outputs[7].enabled = True
    if hasattr(group_input_019_1.outputs[7], 'hide'):
        group_input_019_1.outputs[7].hide = True
    if hasattr(group_input_019_1.outputs[7], 'hide_value'):
        group_input_019_1.outputs[7].hide_value = False
    if hasattr(group_input_019_1.outputs[7], 'name'):
        group_input_019_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_019_1.outputs[7], 'show_expanded'):
        group_input_019_1.outputs[7].show_expanded = False
    if hasattr(group_input_019_1.outputs[8], 'default_value'):
        group_input_019_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[8], 'display_shape'):
        group_input_019_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[8], 'enabled'):
        group_input_019_1.outputs[8].enabled = True
    if hasattr(group_input_019_1.outputs[8], 'hide'):
        group_input_019_1.outputs[8].hide = True
    if hasattr(group_input_019_1.outputs[8], 'hide_value'):
        group_input_019_1.outputs[8].hide_value = False
    if hasattr(group_input_019_1.outputs[8], 'name'):
        group_input_019_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_019_1.outputs[8], 'show_expanded'):
        group_input_019_1.outputs[8].show_expanded = False
    if hasattr(group_input_019_1.outputs[9], 'default_value'):
        group_input_019_1.outputs[9].default_value = 0.0
    if hasattr(group_input_019_1.outputs[9], 'display_shape'):
        group_input_019_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[9], 'enabled'):
        group_input_019_1.outputs[9].enabled = True
    if hasattr(group_input_019_1.outputs[9], 'hide'):
        group_input_019_1.outputs[9].hide = False
    if hasattr(group_input_019_1.outputs[9], 'hide_value'):
        group_input_019_1.outputs[9].hide_value = False
    if hasattr(group_input_019_1.outputs[9], 'name'):
        group_input_019_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_019_1.outputs[9], 'show_expanded'):
        group_input_019_1.outputs[9].show_expanded = False
    if hasattr(group_input_019_1.outputs[10], 'default_value'):
        group_input_019_1.outputs[10].default_value = 0.0
    if hasattr(group_input_019_1.outputs[10], 'display_shape'):
        group_input_019_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[10], 'enabled'):
        group_input_019_1.outputs[10].enabled = True
    if hasattr(group_input_019_1.outputs[10], 'hide'):
        group_input_019_1.outputs[10].hide = True
    if hasattr(group_input_019_1.outputs[10], 'hide_value'):
        group_input_019_1.outputs[10].hide_value = False
    if hasattr(group_input_019_1.outputs[10], 'name'):
        group_input_019_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_019_1.outputs[10], 'show_expanded'):
        group_input_019_1.outputs[10].show_expanded = False
    if hasattr(group_input_019_1.outputs[11], 'default_value'):
        group_input_019_1.outputs[11].default_value = 0.0
    if hasattr(group_input_019_1.outputs[11], 'display_shape'):
        group_input_019_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[11], 'enabled'):
        group_input_019_1.outputs[11].enabled = True
    if hasattr(group_input_019_1.outputs[11], 'hide'):
        group_input_019_1.outputs[11].hide = True
    if hasattr(group_input_019_1.outputs[11], 'hide_value'):
        group_input_019_1.outputs[11].hide_value = False
    if hasattr(group_input_019_1.outputs[11], 'name'):
        group_input_019_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_019_1.outputs[11], 'show_expanded'):
        group_input_019_1.outputs[11].show_expanded = False
    if hasattr(group_input_019_1.outputs[12], 'default_value'):
        group_input_019_1.outputs[12].default_value = 0.0
    if hasattr(group_input_019_1.outputs[12], 'display_shape'):
        group_input_019_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[12], 'enabled'):
        group_input_019_1.outputs[12].enabled = True
    if hasattr(group_input_019_1.outputs[12], 'hide'):
        group_input_019_1.outputs[12].hide = True
    if hasattr(group_input_019_1.outputs[12], 'hide_value'):
        group_input_019_1.outputs[12].hide_value = False
    if hasattr(group_input_019_1.outputs[12], 'name'):
        group_input_019_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_019_1.outputs[12], 'show_expanded'):
        group_input_019_1.outputs[12].show_expanded = False
    if hasattr(group_input_019_1.outputs[13], 'default_value'):
        group_input_019_1.outputs[13].default_value = 0.0
    if hasattr(group_input_019_1.outputs[13], 'display_shape'):
        group_input_019_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[13], 'enabled'):
        group_input_019_1.outputs[13].enabled = True
    if hasattr(group_input_019_1.outputs[13], 'hide'):
        group_input_019_1.outputs[13].hide = True
    if hasattr(group_input_019_1.outputs[13], 'hide_value'):
        group_input_019_1.outputs[13].hide_value = False
    if hasattr(group_input_019_1.outputs[13], 'name'):
        group_input_019_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_019_1.outputs[13], 'show_expanded'):
        group_input_019_1.outputs[13].show_expanded = False
    if hasattr(group_input_019_1.outputs[14], 'default_value'):
        group_input_019_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_019_1.outputs[14], 'display_shape'):
        group_input_019_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[14], 'enabled'):
        group_input_019_1.outputs[14].enabled = True
    if hasattr(group_input_019_1.outputs[14], 'hide'):
        group_input_019_1.outputs[14].hide = True
    if hasattr(group_input_019_1.outputs[14], 'hide_value'):
        group_input_019_1.outputs[14].hide_value = False
    if hasattr(group_input_019_1.outputs[14], 'name'):
        group_input_019_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_019_1.outputs[14], 'show_expanded'):
        group_input_019_1.outputs[14].show_expanded = False
    if hasattr(group_input_019_1.outputs[15], 'default_value'):
        group_input_019_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_019_1.outputs[15], 'display_shape'):
        group_input_019_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[15], 'enabled'):
        group_input_019_1.outputs[15].enabled = True
    if hasattr(group_input_019_1.outputs[15], 'hide'):
        group_input_019_1.outputs[15].hide = True
    if hasattr(group_input_019_1.outputs[15], 'hide_value'):
        group_input_019_1.outputs[15].hide_value = False
    if hasattr(group_input_019_1.outputs[15], 'name'):
        group_input_019_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_019_1.outputs[15], 'show_expanded'):
        group_input_019_1.outputs[15].show_expanded = False
    if hasattr(group_input_019_1.outputs[16], 'default_value'):
        group_input_019_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_019_1.outputs[16], 'display_shape'):
        group_input_019_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[16], 'enabled'):
        group_input_019_1.outputs[16].enabled = True
    if hasattr(group_input_019_1.outputs[16], 'hide'):
        group_input_019_1.outputs[16].hide = True
    if hasattr(group_input_019_1.outputs[16], 'hide_value'):
        group_input_019_1.outputs[16].hide_value = False
    if hasattr(group_input_019_1.outputs[16], 'name'):
        group_input_019_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_019_1.outputs[16], 'show_expanded'):
        group_input_019_1.outputs[16].show_expanded = False
    if hasattr(group_input_019_1.outputs[17], 'default_value'):
        group_input_019_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_019_1.outputs[17], 'display_shape'):
        group_input_019_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[17], 'enabled'):
        group_input_019_1.outputs[17].enabled = True
    if hasattr(group_input_019_1.outputs[17], 'hide'):
        group_input_019_1.outputs[17].hide = True
    if hasattr(group_input_019_1.outputs[17], 'hide_value'):
        group_input_019_1.outputs[17].hide_value = False
    if hasattr(group_input_019_1.outputs[17], 'name'):
        group_input_019_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_019_1.outputs[17], 'show_expanded'):
        group_input_019_1.outputs[17].show_expanded = False
    if hasattr(group_input_019_1.outputs[18], 'default_value'):
        group_input_019_1.outputs[18].default_value = 0.0
    if hasattr(group_input_019_1.outputs[18], 'display_shape'):
        group_input_019_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[18], 'enabled'):
        group_input_019_1.outputs[18].enabled = True
    if hasattr(group_input_019_1.outputs[18], 'hide'):
        group_input_019_1.outputs[18].hide = True
    if hasattr(group_input_019_1.outputs[18], 'hide_value'):
        group_input_019_1.outputs[18].hide_value = False
    if hasattr(group_input_019_1.outputs[18], 'name'):
        group_input_019_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_019_1.outputs[18], 'show_expanded'):
        group_input_019_1.outputs[18].show_expanded = False
    if hasattr(group_input_019_1.outputs[19], 'default_value'):
        group_input_019_1.outputs[19].default_value = 0.0
    if hasattr(group_input_019_1.outputs[19], 'display_shape'):
        group_input_019_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[19], 'enabled'):
        group_input_019_1.outputs[19].enabled = True
    if hasattr(group_input_019_1.outputs[19], 'hide'):
        group_input_019_1.outputs[19].hide = True
    if hasattr(group_input_019_1.outputs[19], 'hide_value'):
        group_input_019_1.outputs[19].hide_value = False
    if hasattr(group_input_019_1.outputs[19], 'name'):
        group_input_019_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_019_1.outputs[19], 'show_expanded'):
        group_input_019_1.outputs[19].show_expanded = False
    if hasattr(group_input_019_1.outputs[20], 'default_value'):
        group_input_019_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[20], 'display_shape'):
        group_input_019_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[20], 'enabled'):
        group_input_019_1.outputs[20].enabled = True
    if hasattr(group_input_019_1.outputs[20], 'hide'):
        group_input_019_1.outputs[20].hide = True
    if hasattr(group_input_019_1.outputs[20], 'hide_value'):
        group_input_019_1.outputs[20].hide_value = False
    if hasattr(group_input_019_1.outputs[20], 'name'):
        group_input_019_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_019_1.outputs[20], 'show_expanded'):
        group_input_019_1.outputs[20].show_expanded = False
    if hasattr(group_input_019_1.outputs[21], 'default_value'):
        group_input_019_1.outputs[21].default_value = 0.0
    if hasattr(group_input_019_1.outputs[21], 'display_shape'):
        group_input_019_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[21], 'enabled'):
        group_input_019_1.outputs[21].enabled = True
    if hasattr(group_input_019_1.outputs[21], 'hide'):
        group_input_019_1.outputs[21].hide = False
    if hasattr(group_input_019_1.outputs[21], 'hide_value'):
        group_input_019_1.outputs[21].hide_value = False
    if hasattr(group_input_019_1.outputs[21], 'name'):
        group_input_019_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_019_1.outputs[21], 'show_expanded'):
        group_input_019_1.outputs[21].show_expanded = False
    if hasattr(group_input_019_1.outputs[22], 'default_value'):
        group_input_019_1.outputs[22].default_value = 0.0
    if hasattr(group_input_019_1.outputs[22], 'display_shape'):
        group_input_019_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[22], 'enabled'):
        group_input_019_1.outputs[22].enabled = True
    if hasattr(group_input_019_1.outputs[22], 'hide'):
        group_input_019_1.outputs[22].hide = True
    if hasattr(group_input_019_1.outputs[22], 'hide_value'):
        group_input_019_1.outputs[22].hide_value = False
    if hasattr(group_input_019_1.outputs[22], 'name'):
        group_input_019_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_019_1.outputs[22], 'show_expanded'):
        group_input_019_1.outputs[22].show_expanded = False
    if hasattr(group_input_019_1.outputs[23], 'default_value'):
        group_input_019_1.outputs[23].default_value = 0.0
    if hasattr(group_input_019_1.outputs[23], 'display_shape'):
        group_input_019_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[23], 'enabled'):
        group_input_019_1.outputs[23].enabled = True
    if hasattr(group_input_019_1.outputs[23], 'hide'):
        group_input_019_1.outputs[23].hide = True
    if hasattr(group_input_019_1.outputs[23], 'hide_value'):
        group_input_019_1.outputs[23].hide_value = False
    if hasattr(group_input_019_1.outputs[23], 'name'):
        group_input_019_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_019_1.outputs[23], 'show_expanded'):
        group_input_019_1.outputs[23].show_expanded = False
    if hasattr(group_input_019_1.outputs[24], 'default_value'):
        group_input_019_1.outputs[24].default_value = 0.0
    if hasattr(group_input_019_1.outputs[24], 'display_shape'):
        group_input_019_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[24], 'enabled'):
        group_input_019_1.outputs[24].enabled = True
    if hasattr(group_input_019_1.outputs[24], 'hide'):
        group_input_019_1.outputs[24].hide = True
    if hasattr(group_input_019_1.outputs[24], 'hide_value'):
        group_input_019_1.outputs[24].hide_value = False
    if hasattr(group_input_019_1.outputs[24], 'name'):
        group_input_019_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_019_1.outputs[24], 'show_expanded'):
        group_input_019_1.outputs[24].show_expanded = False
    if hasattr(group_input_019_1.outputs[25], 'default_value'):
        group_input_019_1.outputs[25].default_value = 0.0
    if hasattr(group_input_019_1.outputs[25], 'display_shape'):
        group_input_019_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[25], 'enabled'):
        group_input_019_1.outputs[25].enabled = True
    if hasattr(group_input_019_1.outputs[25], 'hide'):
        group_input_019_1.outputs[25].hide = True
    if hasattr(group_input_019_1.outputs[25], 'hide_value'):
        group_input_019_1.outputs[25].hide_value = False
    if hasattr(group_input_019_1.outputs[25], 'name'):
        group_input_019_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_019_1.outputs[25], 'show_expanded'):
        group_input_019_1.outputs[25].show_expanded = False
    if hasattr(group_input_019_1.outputs[26], 'default_value'):
        group_input_019_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_019_1.outputs[26], 'display_shape'):
        group_input_019_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[26], 'enabled'):
        group_input_019_1.outputs[26].enabled = True
    if hasattr(group_input_019_1.outputs[26], 'hide'):
        group_input_019_1.outputs[26].hide = True
    if hasattr(group_input_019_1.outputs[26], 'hide_value'):
        group_input_019_1.outputs[26].hide_value = False
    if hasattr(group_input_019_1.outputs[26], 'name'):
        group_input_019_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_019_1.outputs[26], 'show_expanded'):
        group_input_019_1.outputs[26].show_expanded = False
    if hasattr(group_input_019_1.outputs[27], 'default_value'):
        group_input_019_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_019_1.outputs[27], 'display_shape'):
        group_input_019_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[27], 'enabled'):
        group_input_019_1.outputs[27].enabled = True
    if hasattr(group_input_019_1.outputs[27], 'hide'):
        group_input_019_1.outputs[27].hide = True
    if hasattr(group_input_019_1.outputs[27], 'hide_value'):
        group_input_019_1.outputs[27].hide_value = False
    if hasattr(group_input_019_1.outputs[27], 'name'):
        group_input_019_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_019_1.outputs[27], 'show_expanded'):
        group_input_019_1.outputs[27].show_expanded = False
    if hasattr(group_input_019_1.outputs[28], 'default_value'):
        group_input_019_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_019_1.outputs[28], 'display_shape'):
        group_input_019_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[28], 'enabled'):
        group_input_019_1.outputs[28].enabled = True
    if hasattr(group_input_019_1.outputs[28], 'hide'):
        group_input_019_1.outputs[28].hide = True
    if hasattr(group_input_019_1.outputs[28], 'hide_value'):
        group_input_019_1.outputs[28].hide_value = False
    if hasattr(group_input_019_1.outputs[28], 'name'):
        group_input_019_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_019_1.outputs[28], 'show_expanded'):
        group_input_019_1.outputs[28].show_expanded = False
    if hasattr(group_input_019_1.outputs[29], 'default_value'):
        group_input_019_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_019_1.outputs[29], 'display_shape'):
        group_input_019_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[29], 'enabled'):
        group_input_019_1.outputs[29].enabled = True
    if hasattr(group_input_019_1.outputs[29], 'hide'):
        group_input_019_1.outputs[29].hide = True
    if hasattr(group_input_019_1.outputs[29], 'hide_value'):
        group_input_019_1.outputs[29].hide_value = False
    if hasattr(group_input_019_1.outputs[29], 'name'):
        group_input_019_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_019_1.outputs[29], 'show_expanded'):
        group_input_019_1.outputs[29].show_expanded = False
    if hasattr(group_input_019_1.outputs[30], 'default_value'):
        group_input_019_1.outputs[30].default_value = 0.0
    if hasattr(group_input_019_1.outputs[30], 'display_shape'):
        group_input_019_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[30], 'enabled'):
        group_input_019_1.outputs[30].enabled = True
    if hasattr(group_input_019_1.outputs[30], 'hide'):
        group_input_019_1.outputs[30].hide = True
    if hasattr(group_input_019_1.outputs[30], 'hide_value'):
        group_input_019_1.outputs[30].hide_value = False
    if hasattr(group_input_019_1.outputs[30], 'name'):
        group_input_019_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_019_1.outputs[30], 'show_expanded'):
        group_input_019_1.outputs[30].show_expanded = False
    if hasattr(group_input_019_1.outputs[31], 'default_value'):
        group_input_019_1.outputs[31].default_value = 0.0
    if hasattr(group_input_019_1.outputs[31], 'display_shape'):
        group_input_019_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[31], 'enabled'):
        group_input_019_1.outputs[31].enabled = True
    if hasattr(group_input_019_1.outputs[31], 'hide'):
        group_input_019_1.outputs[31].hide = True
    if hasattr(group_input_019_1.outputs[31], 'hide_value'):
        group_input_019_1.outputs[31].hide_value = False
    if hasattr(group_input_019_1.outputs[31], 'name'):
        group_input_019_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_019_1.outputs[31], 'show_expanded'):
        group_input_019_1.outputs[31].show_expanded = False
    if hasattr(group_input_019_1.outputs[32], 'default_value'):
        group_input_019_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[32], 'display_shape'):
        group_input_019_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[32], 'enabled'):
        group_input_019_1.outputs[32].enabled = True
    if hasattr(group_input_019_1.outputs[32], 'hide'):
        group_input_019_1.outputs[32].hide = True
    if hasattr(group_input_019_1.outputs[32], 'hide_value'):
        group_input_019_1.outputs[32].hide_value = False
    if hasattr(group_input_019_1.outputs[32], 'name'):
        group_input_019_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_019_1.outputs[32], 'show_expanded'):
        group_input_019_1.outputs[32].show_expanded = False
    if hasattr(group_input_019_1.outputs[33], 'default_value'):
        group_input_019_1.outputs[33].default_value = 0.0
    if hasattr(group_input_019_1.outputs[33], 'display_shape'):
        group_input_019_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[33], 'enabled'):
        group_input_019_1.outputs[33].enabled = True
    if hasattr(group_input_019_1.outputs[33], 'hide'):
        group_input_019_1.outputs[33].hide = False
    if hasattr(group_input_019_1.outputs[33], 'hide_value'):
        group_input_019_1.outputs[33].hide_value = False
    if hasattr(group_input_019_1.outputs[33], 'name'):
        group_input_019_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_019_1.outputs[33], 'show_expanded'):
        group_input_019_1.outputs[33].show_expanded = False
    if hasattr(group_input_019_1.outputs[34], 'default_value'):
        group_input_019_1.outputs[34].default_value = 0.0
    if hasattr(group_input_019_1.outputs[34], 'display_shape'):
        group_input_019_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[34], 'enabled'):
        group_input_019_1.outputs[34].enabled = True
    if hasattr(group_input_019_1.outputs[34], 'hide'):
        group_input_019_1.outputs[34].hide = True
    if hasattr(group_input_019_1.outputs[34], 'hide_value'):
        group_input_019_1.outputs[34].hide_value = False
    if hasattr(group_input_019_1.outputs[34], 'name'):
        group_input_019_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_019_1.outputs[34], 'show_expanded'):
        group_input_019_1.outputs[34].show_expanded = False
    if hasattr(group_input_019_1.outputs[35], 'default_value'):
        group_input_019_1.outputs[35].default_value = 0.0
    if hasattr(group_input_019_1.outputs[35], 'display_shape'):
        group_input_019_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[35], 'enabled'):
        group_input_019_1.outputs[35].enabled = True
    if hasattr(group_input_019_1.outputs[35], 'hide'):
        group_input_019_1.outputs[35].hide = True
    if hasattr(group_input_019_1.outputs[35], 'hide_value'):
        group_input_019_1.outputs[35].hide_value = False
    if hasattr(group_input_019_1.outputs[35], 'name'):
        group_input_019_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_019_1.outputs[35], 'show_expanded'):
        group_input_019_1.outputs[35].show_expanded = False
    if hasattr(group_input_019_1.outputs[36], 'default_value'):
        group_input_019_1.outputs[36].default_value = 0.0
    if hasattr(group_input_019_1.outputs[36], 'display_shape'):
        group_input_019_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[36], 'enabled'):
        group_input_019_1.outputs[36].enabled = True
    if hasattr(group_input_019_1.outputs[36], 'hide'):
        group_input_019_1.outputs[36].hide = True
    if hasattr(group_input_019_1.outputs[36], 'hide_value'):
        group_input_019_1.outputs[36].hide_value = False
    if hasattr(group_input_019_1.outputs[36], 'name'):
        group_input_019_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_019_1.outputs[36], 'show_expanded'):
        group_input_019_1.outputs[36].show_expanded = False
    if hasattr(group_input_019_1.outputs[37], 'default_value'):
        group_input_019_1.outputs[37].default_value = 0.0
    if hasattr(group_input_019_1.outputs[37], 'display_shape'):
        group_input_019_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[37], 'enabled'):
        group_input_019_1.outputs[37].enabled = True
    if hasattr(group_input_019_1.outputs[37], 'hide'):
        group_input_019_1.outputs[37].hide = True
    if hasattr(group_input_019_1.outputs[37], 'hide_value'):
        group_input_019_1.outputs[37].hide_value = False
    if hasattr(group_input_019_1.outputs[37], 'name'):
        group_input_019_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_019_1.outputs[37], 'show_expanded'):
        group_input_019_1.outputs[37].show_expanded = False
    if hasattr(group_input_019_1.outputs[38], 'default_value'):
        group_input_019_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_019_1.outputs[38], 'display_shape'):
        group_input_019_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[38], 'enabled'):
        group_input_019_1.outputs[38].enabled = True
    if hasattr(group_input_019_1.outputs[38], 'hide'):
        group_input_019_1.outputs[38].hide = True
    if hasattr(group_input_019_1.outputs[38], 'hide_value'):
        group_input_019_1.outputs[38].hide_value = False
    if hasattr(group_input_019_1.outputs[38], 'name'):
        group_input_019_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_019_1.outputs[38], 'show_expanded'):
        group_input_019_1.outputs[38].show_expanded = False
    if hasattr(group_input_019_1.outputs[39], 'default_value'):
        group_input_019_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_019_1.outputs[39], 'display_shape'):
        group_input_019_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[39], 'enabled'):
        group_input_019_1.outputs[39].enabled = True
    if hasattr(group_input_019_1.outputs[39], 'hide'):
        group_input_019_1.outputs[39].hide = True
    if hasattr(group_input_019_1.outputs[39], 'hide_value'):
        group_input_019_1.outputs[39].hide_value = False
    if hasattr(group_input_019_1.outputs[39], 'name'):
        group_input_019_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_019_1.outputs[39], 'show_expanded'):
        group_input_019_1.outputs[39].show_expanded = False
    if hasattr(group_input_019_1.outputs[40], 'default_value'):
        group_input_019_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_019_1.outputs[40], 'display_shape'):
        group_input_019_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[40], 'enabled'):
        group_input_019_1.outputs[40].enabled = True
    if hasattr(group_input_019_1.outputs[40], 'hide'):
        group_input_019_1.outputs[40].hide = True
    if hasattr(group_input_019_1.outputs[40], 'hide_value'):
        group_input_019_1.outputs[40].hide_value = False
    if hasattr(group_input_019_1.outputs[40], 'name'):
        group_input_019_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_019_1.outputs[40], 'show_expanded'):
        group_input_019_1.outputs[40].show_expanded = False
    if hasattr(group_input_019_1.outputs[41], 'default_value'):
        group_input_019_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_019_1.outputs[41], 'display_shape'):
        group_input_019_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[41], 'enabled'):
        group_input_019_1.outputs[41].enabled = True
    if hasattr(group_input_019_1.outputs[41], 'hide'):
        group_input_019_1.outputs[41].hide = True
    if hasattr(group_input_019_1.outputs[41], 'hide_value'):
        group_input_019_1.outputs[41].hide_value = False
    if hasattr(group_input_019_1.outputs[41], 'name'):
        group_input_019_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_019_1.outputs[41], 'show_expanded'):
        group_input_019_1.outputs[41].show_expanded = False
    if hasattr(group_input_019_1.outputs[42], 'default_value'):
        group_input_019_1.outputs[42].default_value = 0.0
    if hasattr(group_input_019_1.outputs[42], 'display_shape'):
        group_input_019_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[42], 'enabled'):
        group_input_019_1.outputs[42].enabled = True
    if hasattr(group_input_019_1.outputs[42], 'hide'):
        group_input_019_1.outputs[42].hide = True
    if hasattr(group_input_019_1.outputs[42], 'hide_value'):
        group_input_019_1.outputs[42].hide_value = False
    if hasattr(group_input_019_1.outputs[42], 'name'):
        group_input_019_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_019_1.outputs[42], 'show_expanded'):
        group_input_019_1.outputs[42].show_expanded = False
    if hasattr(group_input_019_1.outputs[43], 'default_value'):
        group_input_019_1.outputs[43].default_value = 0.0
    if hasattr(group_input_019_1.outputs[43], 'display_shape'):
        group_input_019_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[43], 'enabled'):
        group_input_019_1.outputs[43].enabled = True
    if hasattr(group_input_019_1.outputs[43], 'hide'):
        group_input_019_1.outputs[43].hide = True
    if hasattr(group_input_019_1.outputs[43], 'hide_value'):
        group_input_019_1.outputs[43].hide_value = False
    if hasattr(group_input_019_1.outputs[43], 'name'):
        group_input_019_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_019_1.outputs[43], 'show_expanded'):
        group_input_019_1.outputs[43].show_expanded = False
    if hasattr(group_input_019_1.outputs[44], 'default_value'):
        group_input_019_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[44], 'display_shape'):
        group_input_019_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[44], 'enabled'):
        group_input_019_1.outputs[44].enabled = True
    if hasattr(group_input_019_1.outputs[44], 'hide'):
        group_input_019_1.outputs[44].hide = True
    if hasattr(group_input_019_1.outputs[44], 'hide_value'):
        group_input_019_1.outputs[44].hide_value = False
    if hasattr(group_input_019_1.outputs[44], 'name'):
        group_input_019_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_019_1.outputs[44], 'show_expanded'):
        group_input_019_1.outputs[44].show_expanded = False
    if hasattr(group_input_019_1.outputs[45], 'default_value'):
        group_input_019_1.outputs[45].default_value = 0.0
    if hasattr(group_input_019_1.outputs[45], 'display_shape'):
        group_input_019_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[45], 'enabled'):
        group_input_019_1.outputs[45].enabled = True
    if hasattr(group_input_019_1.outputs[45], 'hide'):
        group_input_019_1.outputs[45].hide = False
    if hasattr(group_input_019_1.outputs[45], 'hide_value'):
        group_input_019_1.outputs[45].hide_value = False
    if hasattr(group_input_019_1.outputs[45], 'name'):
        group_input_019_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_019_1.outputs[45], 'show_expanded'):
        group_input_019_1.outputs[45].show_expanded = False
    if hasattr(group_input_019_1.outputs[46], 'default_value'):
        group_input_019_1.outputs[46].default_value = 0.0
    if hasattr(group_input_019_1.outputs[46], 'display_shape'):
        group_input_019_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[46], 'enabled'):
        group_input_019_1.outputs[46].enabled = True
    if hasattr(group_input_019_1.outputs[46], 'hide'):
        group_input_019_1.outputs[46].hide = True
    if hasattr(group_input_019_1.outputs[46], 'hide_value'):
        group_input_019_1.outputs[46].hide_value = False
    if hasattr(group_input_019_1.outputs[46], 'name'):
        group_input_019_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_019_1.outputs[46], 'show_expanded'):
        group_input_019_1.outputs[46].show_expanded = False
    if hasattr(group_input_019_1.outputs[47], 'default_value'):
        group_input_019_1.outputs[47].default_value = 0.0
    if hasattr(group_input_019_1.outputs[47], 'display_shape'):
        group_input_019_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[47], 'enabled'):
        group_input_019_1.outputs[47].enabled = True
    if hasattr(group_input_019_1.outputs[47], 'hide'):
        group_input_019_1.outputs[47].hide = True
    if hasattr(group_input_019_1.outputs[47], 'hide_value'):
        group_input_019_1.outputs[47].hide_value = False
    if hasattr(group_input_019_1.outputs[47], 'name'):
        group_input_019_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_019_1.outputs[47], 'show_expanded'):
        group_input_019_1.outputs[47].show_expanded = False
    if hasattr(group_input_019_1.outputs[48], 'default_value'):
        group_input_019_1.outputs[48].default_value = 0.0
    if hasattr(group_input_019_1.outputs[48], 'display_shape'):
        group_input_019_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[48], 'enabled'):
        group_input_019_1.outputs[48].enabled = True
    if hasattr(group_input_019_1.outputs[48], 'hide'):
        group_input_019_1.outputs[48].hide = True
    if hasattr(group_input_019_1.outputs[48], 'hide_value'):
        group_input_019_1.outputs[48].hide_value = False
    if hasattr(group_input_019_1.outputs[48], 'name'):
        group_input_019_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_019_1.outputs[48], 'show_expanded'):
        group_input_019_1.outputs[48].show_expanded = False
    if hasattr(group_input_019_1.outputs[49], 'default_value'):
        group_input_019_1.outputs[49].default_value = 0.0
    if hasattr(group_input_019_1.outputs[49], 'display_shape'):
        group_input_019_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[49], 'enabled'):
        group_input_019_1.outputs[49].enabled = True
    if hasattr(group_input_019_1.outputs[49], 'hide'):
        group_input_019_1.outputs[49].hide = True
    if hasattr(group_input_019_1.outputs[49], 'hide_value'):
        group_input_019_1.outputs[49].hide_value = False
    if hasattr(group_input_019_1.outputs[49], 'name'):
        group_input_019_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_019_1.outputs[49], 'show_expanded'):
        group_input_019_1.outputs[49].show_expanded = False
    if hasattr(group_input_019_1.outputs[50], 'default_value'):
        group_input_019_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_019_1.outputs[50], 'display_shape'):
        group_input_019_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[50], 'enabled'):
        group_input_019_1.outputs[50].enabled = True
    if hasattr(group_input_019_1.outputs[50], 'hide'):
        group_input_019_1.outputs[50].hide = True
    if hasattr(group_input_019_1.outputs[50], 'hide_value'):
        group_input_019_1.outputs[50].hide_value = False
    if hasattr(group_input_019_1.outputs[50], 'name'):
        group_input_019_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_019_1.outputs[50], 'show_expanded'):
        group_input_019_1.outputs[50].show_expanded = False
    if hasattr(group_input_019_1.outputs[51], 'default_value'):
        group_input_019_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_019_1.outputs[51], 'display_shape'):
        group_input_019_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[51], 'enabled'):
        group_input_019_1.outputs[51].enabled = True
    if hasattr(group_input_019_1.outputs[51], 'hide'):
        group_input_019_1.outputs[51].hide = True
    if hasattr(group_input_019_1.outputs[51], 'hide_value'):
        group_input_019_1.outputs[51].hide_value = False
    if hasattr(group_input_019_1.outputs[51], 'name'):
        group_input_019_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_019_1.outputs[51], 'show_expanded'):
        group_input_019_1.outputs[51].show_expanded = False
    if hasattr(group_input_019_1.outputs[52], 'default_value'):
        group_input_019_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_019_1.outputs[52], 'display_shape'):
        group_input_019_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[52], 'enabled'):
        group_input_019_1.outputs[52].enabled = True
    if hasattr(group_input_019_1.outputs[52], 'hide'):
        group_input_019_1.outputs[52].hide = True
    if hasattr(group_input_019_1.outputs[52], 'hide_value'):
        group_input_019_1.outputs[52].hide_value = False
    if hasattr(group_input_019_1.outputs[52], 'name'):
        group_input_019_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_019_1.outputs[52], 'show_expanded'):
        group_input_019_1.outputs[52].show_expanded = False
    if hasattr(group_input_019_1.outputs[53], 'default_value'):
        group_input_019_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_019_1.outputs[53], 'display_shape'):
        group_input_019_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[53], 'enabled'):
        group_input_019_1.outputs[53].enabled = True
    if hasattr(group_input_019_1.outputs[53], 'hide'):
        group_input_019_1.outputs[53].hide = True
    if hasattr(group_input_019_1.outputs[53], 'hide_value'):
        group_input_019_1.outputs[53].hide_value = False
    if hasattr(group_input_019_1.outputs[53], 'name'):
        group_input_019_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_019_1.outputs[53], 'show_expanded'):
        group_input_019_1.outputs[53].show_expanded = False
    if hasattr(group_input_019_1.outputs[54], 'default_value'):
        group_input_019_1.outputs[54].default_value = 0.0
    if hasattr(group_input_019_1.outputs[54], 'display_shape'):
        group_input_019_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[54], 'enabled'):
        group_input_019_1.outputs[54].enabled = True
    if hasattr(group_input_019_1.outputs[54], 'hide'):
        group_input_019_1.outputs[54].hide = True
    if hasattr(group_input_019_1.outputs[54], 'hide_value'):
        group_input_019_1.outputs[54].hide_value = False
    if hasattr(group_input_019_1.outputs[54], 'name'):
        group_input_019_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_019_1.outputs[54], 'show_expanded'):
        group_input_019_1.outputs[54].show_expanded = False
    if hasattr(group_input_019_1.outputs[55], 'default_value'):
        group_input_019_1.outputs[55].default_value = 0.0
    if hasattr(group_input_019_1.outputs[55], 'display_shape'):
        group_input_019_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[55], 'enabled'):
        group_input_019_1.outputs[55].enabled = True
    if hasattr(group_input_019_1.outputs[55], 'hide'):
        group_input_019_1.outputs[55].hide = True
    if hasattr(group_input_019_1.outputs[55], 'hide_value'):
        group_input_019_1.outputs[55].hide_value = False
    if hasattr(group_input_019_1.outputs[55], 'name'):
        group_input_019_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_019_1.outputs[55], 'show_expanded'):
        group_input_019_1.outputs[55].show_expanded = False
    if hasattr(group_input_019_1.outputs[56], 'default_value'):
        group_input_019_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[56], 'display_shape'):
        group_input_019_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[56], 'enabled'):
        group_input_019_1.outputs[56].enabled = True
    if hasattr(group_input_019_1.outputs[56], 'hide'):
        group_input_019_1.outputs[56].hide = True
    if hasattr(group_input_019_1.outputs[56], 'hide_value'):
        group_input_019_1.outputs[56].hide_value = False
    if hasattr(group_input_019_1.outputs[56], 'name'):
        group_input_019_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_019_1.outputs[56], 'show_expanded'):
        group_input_019_1.outputs[56].show_expanded = False
    if hasattr(group_input_019_1.outputs[57], 'default_value'):
        group_input_019_1.outputs[57].default_value = 0.0
    if hasattr(group_input_019_1.outputs[57], 'display_shape'):
        group_input_019_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[57], 'enabled'):
        group_input_019_1.outputs[57].enabled = True
    if hasattr(group_input_019_1.outputs[57], 'hide'):
        group_input_019_1.outputs[57].hide = False
    if hasattr(group_input_019_1.outputs[57], 'hide_value'):
        group_input_019_1.outputs[57].hide_value = False
    if hasattr(group_input_019_1.outputs[57], 'name'):
        group_input_019_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_019_1.outputs[57], 'show_expanded'):
        group_input_019_1.outputs[57].show_expanded = False
    if hasattr(group_input_019_1.outputs[58], 'default_value'):
        group_input_019_1.outputs[58].default_value = 0.0
    if hasattr(group_input_019_1.outputs[58], 'display_shape'):
        group_input_019_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[58], 'enabled'):
        group_input_019_1.outputs[58].enabled = True
    if hasattr(group_input_019_1.outputs[58], 'hide'):
        group_input_019_1.outputs[58].hide = True
    if hasattr(group_input_019_1.outputs[58], 'hide_value'):
        group_input_019_1.outputs[58].hide_value = False
    if hasattr(group_input_019_1.outputs[58], 'name'):
        group_input_019_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_019_1.outputs[58], 'show_expanded'):
        group_input_019_1.outputs[58].show_expanded = False
    if hasattr(group_input_019_1.outputs[59], 'default_value'):
        group_input_019_1.outputs[59].default_value = 0.0
    if hasattr(group_input_019_1.outputs[59], 'display_shape'):
        group_input_019_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[59], 'enabled'):
        group_input_019_1.outputs[59].enabled = True
    if hasattr(group_input_019_1.outputs[59], 'hide'):
        group_input_019_1.outputs[59].hide = True
    if hasattr(group_input_019_1.outputs[59], 'hide_value'):
        group_input_019_1.outputs[59].hide_value = False
    if hasattr(group_input_019_1.outputs[59], 'name'):
        group_input_019_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_019_1.outputs[59], 'show_expanded'):
        group_input_019_1.outputs[59].show_expanded = False
    if hasattr(group_input_019_1.outputs[60], 'default_value'):
        group_input_019_1.outputs[60].default_value = 0.0
    if hasattr(group_input_019_1.outputs[60], 'display_shape'):
        group_input_019_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[60], 'enabled'):
        group_input_019_1.outputs[60].enabled = True
    if hasattr(group_input_019_1.outputs[60], 'hide'):
        group_input_019_1.outputs[60].hide = True
    if hasattr(group_input_019_1.outputs[60], 'hide_value'):
        group_input_019_1.outputs[60].hide_value = False
    if hasattr(group_input_019_1.outputs[60], 'name'):
        group_input_019_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_019_1.outputs[60], 'show_expanded'):
        group_input_019_1.outputs[60].show_expanded = False
    if hasattr(group_input_019_1.outputs[61], 'default_value'):
        group_input_019_1.outputs[61].default_value = 0.0
    if hasattr(group_input_019_1.outputs[61], 'display_shape'):
        group_input_019_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[61], 'enabled'):
        group_input_019_1.outputs[61].enabled = True
    if hasattr(group_input_019_1.outputs[61], 'hide'):
        group_input_019_1.outputs[61].hide = True
    if hasattr(group_input_019_1.outputs[61], 'hide_value'):
        group_input_019_1.outputs[61].hide_value = False
    if hasattr(group_input_019_1.outputs[61], 'name'):
        group_input_019_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_019_1.outputs[61], 'show_expanded'):
        group_input_019_1.outputs[61].show_expanded = False
    if hasattr(group_input_019_1.outputs[62], 'default_value'):
        group_input_019_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_019_1.outputs[62], 'display_shape'):
        group_input_019_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[62], 'enabled'):
        group_input_019_1.outputs[62].enabled = True
    if hasattr(group_input_019_1.outputs[62], 'hide'):
        group_input_019_1.outputs[62].hide = True
    if hasattr(group_input_019_1.outputs[62], 'hide_value'):
        group_input_019_1.outputs[62].hide_value = False
    if hasattr(group_input_019_1.outputs[62], 'name'):
        group_input_019_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_019_1.outputs[62], 'show_expanded'):
        group_input_019_1.outputs[62].show_expanded = False
    if hasattr(group_input_019_1.outputs[63], 'default_value'):
        group_input_019_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_019_1.outputs[63], 'display_shape'):
        group_input_019_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[63], 'enabled'):
        group_input_019_1.outputs[63].enabled = True
    if hasattr(group_input_019_1.outputs[63], 'hide'):
        group_input_019_1.outputs[63].hide = True
    if hasattr(group_input_019_1.outputs[63], 'hide_value'):
        group_input_019_1.outputs[63].hide_value = False
    if hasattr(group_input_019_1.outputs[63], 'name'):
        group_input_019_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_019_1.outputs[63], 'show_expanded'):
        group_input_019_1.outputs[63].show_expanded = False
    if hasattr(group_input_019_1.outputs[64], 'default_value'):
        group_input_019_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_019_1.outputs[64], 'display_shape'):
        group_input_019_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[64], 'enabled'):
        group_input_019_1.outputs[64].enabled = True
    if hasattr(group_input_019_1.outputs[64], 'hide'):
        group_input_019_1.outputs[64].hide = True
    if hasattr(group_input_019_1.outputs[64], 'hide_value'):
        group_input_019_1.outputs[64].hide_value = False
    if hasattr(group_input_019_1.outputs[64], 'name'):
        group_input_019_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_019_1.outputs[64], 'show_expanded'):
        group_input_019_1.outputs[64].show_expanded = False
    if hasattr(group_input_019_1.outputs[65], 'default_value'):
        group_input_019_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_019_1.outputs[65], 'display_shape'):
        group_input_019_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[65], 'enabled'):
        group_input_019_1.outputs[65].enabled = True
    if hasattr(group_input_019_1.outputs[65], 'hide'):
        group_input_019_1.outputs[65].hide = True
    if hasattr(group_input_019_1.outputs[65], 'hide_value'):
        group_input_019_1.outputs[65].hide_value = False
    if hasattr(group_input_019_1.outputs[65], 'name'):
        group_input_019_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_019_1.outputs[65], 'show_expanded'):
        group_input_019_1.outputs[65].show_expanded = False
    if hasattr(group_input_019_1.outputs[66], 'default_value'):
        group_input_019_1.outputs[66].default_value = 0.0
    if hasattr(group_input_019_1.outputs[66], 'display_shape'):
        group_input_019_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[66], 'enabled'):
        group_input_019_1.outputs[66].enabled = True
    if hasattr(group_input_019_1.outputs[66], 'hide'):
        group_input_019_1.outputs[66].hide = True
    if hasattr(group_input_019_1.outputs[66], 'hide_value'):
        group_input_019_1.outputs[66].hide_value = False
    if hasattr(group_input_019_1.outputs[66], 'name'):
        group_input_019_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_019_1.outputs[66], 'show_expanded'):
        group_input_019_1.outputs[66].show_expanded = False
    if hasattr(group_input_019_1.outputs[67], 'default_value'):
        group_input_019_1.outputs[67].default_value = 0.0
    if hasattr(group_input_019_1.outputs[67], 'display_shape'):
        group_input_019_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[67], 'enabled'):
        group_input_019_1.outputs[67].enabled = True
    if hasattr(group_input_019_1.outputs[67], 'hide'):
        group_input_019_1.outputs[67].hide = True
    if hasattr(group_input_019_1.outputs[67], 'hide_value'):
        group_input_019_1.outputs[67].hide_value = False
    if hasattr(group_input_019_1.outputs[67], 'name'):
        group_input_019_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_019_1.outputs[67], 'show_expanded'):
        group_input_019_1.outputs[67].show_expanded = False
    if hasattr(group_input_019_1.outputs[68], 'default_value'):
        group_input_019_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[68], 'display_shape'):
        group_input_019_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[68], 'enabled'):
        group_input_019_1.outputs[68].enabled = True
    if hasattr(group_input_019_1.outputs[68], 'hide'):
        group_input_019_1.outputs[68].hide = True
    if hasattr(group_input_019_1.outputs[68], 'hide_value'):
        group_input_019_1.outputs[68].hide_value = False
    if hasattr(group_input_019_1.outputs[68], 'name'):
        group_input_019_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_019_1.outputs[68], 'show_expanded'):
        group_input_019_1.outputs[68].show_expanded = False
    if hasattr(group_input_019_1.outputs[69], 'default_value'):
        group_input_019_1.outputs[69].default_value = 0.0
    if hasattr(group_input_019_1.outputs[69], 'display_shape'):
        group_input_019_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[69], 'enabled'):
        group_input_019_1.outputs[69].enabled = True
    if hasattr(group_input_019_1.outputs[69], 'hide'):
        group_input_019_1.outputs[69].hide = False
    if hasattr(group_input_019_1.outputs[69], 'hide_value'):
        group_input_019_1.outputs[69].hide_value = False
    if hasattr(group_input_019_1.outputs[69], 'name'):
        group_input_019_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_019_1.outputs[69], 'show_expanded'):
        group_input_019_1.outputs[69].show_expanded = False
    if hasattr(group_input_019_1.outputs[70], 'default_value'):
        group_input_019_1.outputs[70].default_value = 0.0
    if hasattr(group_input_019_1.outputs[70], 'display_shape'):
        group_input_019_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[70], 'enabled'):
        group_input_019_1.outputs[70].enabled = True
    if hasattr(group_input_019_1.outputs[70], 'hide'):
        group_input_019_1.outputs[70].hide = True
    if hasattr(group_input_019_1.outputs[70], 'hide_value'):
        group_input_019_1.outputs[70].hide_value = False
    if hasattr(group_input_019_1.outputs[70], 'name'):
        group_input_019_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_019_1.outputs[70], 'show_expanded'):
        group_input_019_1.outputs[70].show_expanded = False
    if hasattr(group_input_019_1.outputs[71], 'default_value'):
        group_input_019_1.outputs[71].default_value = 0.0
    if hasattr(group_input_019_1.outputs[71], 'display_shape'):
        group_input_019_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[71], 'enabled'):
        group_input_019_1.outputs[71].enabled = True
    if hasattr(group_input_019_1.outputs[71], 'hide'):
        group_input_019_1.outputs[71].hide = True
    if hasattr(group_input_019_1.outputs[71], 'hide_value'):
        group_input_019_1.outputs[71].hide_value = False
    if hasattr(group_input_019_1.outputs[71], 'name'):
        group_input_019_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_019_1.outputs[71], 'show_expanded'):
        group_input_019_1.outputs[71].show_expanded = False
    if hasattr(group_input_019_1.outputs[72], 'default_value'):
        group_input_019_1.outputs[72].default_value = 0.0
    if hasattr(group_input_019_1.outputs[72], 'display_shape'):
        group_input_019_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[72], 'enabled'):
        group_input_019_1.outputs[72].enabled = True
    if hasattr(group_input_019_1.outputs[72], 'hide'):
        group_input_019_1.outputs[72].hide = True
    if hasattr(group_input_019_1.outputs[72], 'hide_value'):
        group_input_019_1.outputs[72].hide_value = False
    if hasattr(group_input_019_1.outputs[72], 'name'):
        group_input_019_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_019_1.outputs[72], 'show_expanded'):
        group_input_019_1.outputs[72].show_expanded = False
    if hasattr(group_input_019_1.outputs[73], 'default_value'):
        group_input_019_1.outputs[73].default_value = 0.0
    if hasattr(group_input_019_1.outputs[73], 'display_shape'):
        group_input_019_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[73], 'enabled'):
        group_input_019_1.outputs[73].enabled = True
    if hasattr(group_input_019_1.outputs[73], 'hide'):
        group_input_019_1.outputs[73].hide = True
    if hasattr(group_input_019_1.outputs[73], 'hide_value'):
        group_input_019_1.outputs[73].hide_value = False
    if hasattr(group_input_019_1.outputs[73], 'name'):
        group_input_019_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_019_1.outputs[73], 'show_expanded'):
        group_input_019_1.outputs[73].show_expanded = False
    if hasattr(group_input_019_1.outputs[74], 'default_value'):
        group_input_019_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_019_1.outputs[74], 'display_shape'):
        group_input_019_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[74], 'enabled'):
        group_input_019_1.outputs[74].enabled = True
    if hasattr(group_input_019_1.outputs[74], 'hide'):
        group_input_019_1.outputs[74].hide = True
    if hasattr(group_input_019_1.outputs[74], 'hide_value'):
        group_input_019_1.outputs[74].hide_value = False
    if hasattr(group_input_019_1.outputs[74], 'name'):
        group_input_019_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_019_1.outputs[74], 'show_expanded'):
        group_input_019_1.outputs[74].show_expanded = False
    if hasattr(group_input_019_1.outputs[75], 'default_value'):
        group_input_019_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_019_1.outputs[75], 'display_shape'):
        group_input_019_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[75], 'enabled'):
        group_input_019_1.outputs[75].enabled = True
    if hasattr(group_input_019_1.outputs[75], 'hide'):
        group_input_019_1.outputs[75].hide = True
    if hasattr(group_input_019_1.outputs[75], 'hide_value'):
        group_input_019_1.outputs[75].hide_value = False
    if hasattr(group_input_019_1.outputs[75], 'name'):
        group_input_019_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_019_1.outputs[75], 'show_expanded'):
        group_input_019_1.outputs[75].show_expanded = False
    if hasattr(group_input_019_1.outputs[76], 'default_value'):
        group_input_019_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_019_1.outputs[76], 'display_shape'):
        group_input_019_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[76], 'enabled'):
        group_input_019_1.outputs[76].enabled = True
    if hasattr(group_input_019_1.outputs[76], 'hide'):
        group_input_019_1.outputs[76].hide = True
    if hasattr(group_input_019_1.outputs[76], 'hide_value'):
        group_input_019_1.outputs[76].hide_value = False
    if hasattr(group_input_019_1.outputs[76], 'name'):
        group_input_019_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_019_1.outputs[76], 'show_expanded'):
        group_input_019_1.outputs[76].show_expanded = False
    if hasattr(group_input_019_1.outputs[77], 'default_value'):
        group_input_019_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_019_1.outputs[77], 'display_shape'):
        group_input_019_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[77], 'enabled'):
        group_input_019_1.outputs[77].enabled = True
    if hasattr(group_input_019_1.outputs[77], 'hide'):
        group_input_019_1.outputs[77].hide = True
    if hasattr(group_input_019_1.outputs[77], 'hide_value'):
        group_input_019_1.outputs[77].hide_value = False
    if hasattr(group_input_019_1.outputs[77], 'name'):
        group_input_019_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_019_1.outputs[77], 'show_expanded'):
        group_input_019_1.outputs[77].show_expanded = False
    if hasattr(group_input_019_1.outputs[78], 'default_value'):
        group_input_019_1.outputs[78].default_value = 0.0
    if hasattr(group_input_019_1.outputs[78], 'display_shape'):
        group_input_019_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[78], 'enabled'):
        group_input_019_1.outputs[78].enabled = True
    if hasattr(group_input_019_1.outputs[78], 'hide'):
        group_input_019_1.outputs[78].hide = True
    if hasattr(group_input_019_1.outputs[78], 'hide_value'):
        group_input_019_1.outputs[78].hide_value = False
    if hasattr(group_input_019_1.outputs[78], 'name'):
        group_input_019_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_019_1.outputs[78], 'show_expanded'):
        group_input_019_1.outputs[78].show_expanded = False
    if hasattr(group_input_019_1.outputs[79], 'default_value'):
        group_input_019_1.outputs[79].default_value = 0.0
    if hasattr(group_input_019_1.outputs[79], 'display_shape'):
        group_input_019_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[79], 'enabled'):
        group_input_019_1.outputs[79].enabled = True
    if hasattr(group_input_019_1.outputs[79], 'hide'):
        group_input_019_1.outputs[79].hide = True
    if hasattr(group_input_019_1.outputs[79], 'hide_value'):
        group_input_019_1.outputs[79].hide_value = False
    if hasattr(group_input_019_1.outputs[79], 'name'):
        group_input_019_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_019_1.outputs[79], 'show_expanded'):
        group_input_019_1.outputs[79].show_expanded = False
    if hasattr(group_input_019_1.outputs[80], 'default_value'):
        group_input_019_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[80], 'display_shape'):
        group_input_019_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[80], 'enabled'):
        group_input_019_1.outputs[80].enabled = True
    if hasattr(group_input_019_1.outputs[80], 'hide'):
        group_input_019_1.outputs[80].hide = True
    if hasattr(group_input_019_1.outputs[80], 'hide_value'):
        group_input_019_1.outputs[80].hide_value = False
    if hasattr(group_input_019_1.outputs[80], 'name'):
        group_input_019_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_019_1.outputs[80], 'show_expanded'):
        group_input_019_1.outputs[80].show_expanded = False
    if hasattr(group_input_019_1.outputs[81], 'default_value'):
        group_input_019_1.outputs[81].default_value = 0.0
    if hasattr(group_input_019_1.outputs[81], 'display_shape'):
        group_input_019_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[81], 'enabled'):
        group_input_019_1.outputs[81].enabled = True
    if hasattr(group_input_019_1.outputs[81], 'hide'):
        group_input_019_1.outputs[81].hide = False
    if hasattr(group_input_019_1.outputs[81], 'hide_value'):
        group_input_019_1.outputs[81].hide_value = False
    if hasattr(group_input_019_1.outputs[81], 'name'):
        group_input_019_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_019_1.outputs[81], 'show_expanded'):
        group_input_019_1.outputs[81].show_expanded = False
    if hasattr(group_input_019_1.outputs[82], 'default_value'):
        group_input_019_1.outputs[82].default_value = 0.0
    if hasattr(group_input_019_1.outputs[82], 'display_shape'):
        group_input_019_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[82], 'enabled'):
        group_input_019_1.outputs[82].enabled = True
    if hasattr(group_input_019_1.outputs[82], 'hide'):
        group_input_019_1.outputs[82].hide = True
    if hasattr(group_input_019_1.outputs[82], 'hide_value'):
        group_input_019_1.outputs[82].hide_value = False
    if hasattr(group_input_019_1.outputs[82], 'name'):
        group_input_019_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_019_1.outputs[82], 'show_expanded'):
        group_input_019_1.outputs[82].show_expanded = False
    if hasattr(group_input_019_1.outputs[83], 'default_value'):
        group_input_019_1.outputs[83].default_value = 0.0
    if hasattr(group_input_019_1.outputs[83], 'display_shape'):
        group_input_019_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[83], 'enabled'):
        group_input_019_1.outputs[83].enabled = True
    if hasattr(group_input_019_1.outputs[83], 'hide'):
        group_input_019_1.outputs[83].hide = True
    if hasattr(group_input_019_1.outputs[83], 'hide_value'):
        group_input_019_1.outputs[83].hide_value = False
    if hasattr(group_input_019_1.outputs[83], 'name'):
        group_input_019_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_019_1.outputs[83], 'show_expanded'):
        group_input_019_1.outputs[83].show_expanded = False
    if hasattr(group_input_019_1.outputs[84], 'default_value'):
        group_input_019_1.outputs[84].default_value = 0.0
    if hasattr(group_input_019_1.outputs[84], 'display_shape'):
        group_input_019_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[84], 'enabled'):
        group_input_019_1.outputs[84].enabled = True
    if hasattr(group_input_019_1.outputs[84], 'hide'):
        group_input_019_1.outputs[84].hide = True
    if hasattr(group_input_019_1.outputs[84], 'hide_value'):
        group_input_019_1.outputs[84].hide_value = False
    if hasattr(group_input_019_1.outputs[84], 'name'):
        group_input_019_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_019_1.outputs[84], 'show_expanded'):
        group_input_019_1.outputs[84].show_expanded = False
    if hasattr(group_input_019_1.outputs[85], 'default_value'):
        group_input_019_1.outputs[85].default_value = 0.0
    if hasattr(group_input_019_1.outputs[85], 'display_shape'):
        group_input_019_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[85], 'enabled'):
        group_input_019_1.outputs[85].enabled = True
    if hasattr(group_input_019_1.outputs[85], 'hide'):
        group_input_019_1.outputs[85].hide = True
    if hasattr(group_input_019_1.outputs[85], 'hide_value'):
        group_input_019_1.outputs[85].hide_value = False
    if hasattr(group_input_019_1.outputs[85], 'name'):
        group_input_019_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_019_1.outputs[85], 'show_expanded'):
        group_input_019_1.outputs[85].show_expanded = False
    if hasattr(group_input_019_1.outputs[86], 'default_value'):
        group_input_019_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_019_1.outputs[86], 'display_shape'):
        group_input_019_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[86], 'enabled'):
        group_input_019_1.outputs[86].enabled = True
    if hasattr(group_input_019_1.outputs[86], 'hide'):
        group_input_019_1.outputs[86].hide = True
    if hasattr(group_input_019_1.outputs[86], 'hide_value'):
        group_input_019_1.outputs[86].hide_value = False
    if hasattr(group_input_019_1.outputs[86], 'name'):
        group_input_019_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_019_1.outputs[86], 'show_expanded'):
        group_input_019_1.outputs[86].show_expanded = False
    if hasattr(group_input_019_1.outputs[87], 'default_value'):
        group_input_019_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_019_1.outputs[87], 'display_shape'):
        group_input_019_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[87], 'enabled'):
        group_input_019_1.outputs[87].enabled = True
    if hasattr(group_input_019_1.outputs[87], 'hide'):
        group_input_019_1.outputs[87].hide = True
    if hasattr(group_input_019_1.outputs[87], 'hide_value'):
        group_input_019_1.outputs[87].hide_value = False
    if hasattr(group_input_019_1.outputs[87], 'name'):
        group_input_019_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_019_1.outputs[87], 'show_expanded'):
        group_input_019_1.outputs[87].show_expanded = False
    if hasattr(group_input_019_1.outputs[88], 'default_value'):
        group_input_019_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_019_1.outputs[88], 'display_shape'):
        group_input_019_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[88], 'enabled'):
        group_input_019_1.outputs[88].enabled = True
    if hasattr(group_input_019_1.outputs[88], 'hide'):
        group_input_019_1.outputs[88].hide = True
    if hasattr(group_input_019_1.outputs[88], 'hide_value'):
        group_input_019_1.outputs[88].hide_value = False
    if hasattr(group_input_019_1.outputs[88], 'name'):
        group_input_019_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_019_1.outputs[88], 'show_expanded'):
        group_input_019_1.outputs[88].show_expanded = False
    if hasattr(group_input_019_1.outputs[89], 'default_value'):
        group_input_019_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_019_1.outputs[89], 'display_shape'):
        group_input_019_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[89], 'enabled'):
        group_input_019_1.outputs[89].enabled = True
    if hasattr(group_input_019_1.outputs[89], 'hide'):
        group_input_019_1.outputs[89].hide = True
    if hasattr(group_input_019_1.outputs[89], 'hide_value'):
        group_input_019_1.outputs[89].hide_value = False
    if hasattr(group_input_019_1.outputs[89], 'name'):
        group_input_019_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_019_1.outputs[89], 'show_expanded'):
        group_input_019_1.outputs[89].show_expanded = False
    if hasattr(group_input_019_1.outputs[90], 'default_value'):
        group_input_019_1.outputs[90].default_value = 0.0
    if hasattr(group_input_019_1.outputs[90], 'display_shape'):
        group_input_019_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[90], 'enabled'):
        group_input_019_1.outputs[90].enabled = True
    if hasattr(group_input_019_1.outputs[90], 'hide'):
        group_input_019_1.outputs[90].hide = True
    if hasattr(group_input_019_1.outputs[90], 'hide_value'):
        group_input_019_1.outputs[90].hide_value = False
    if hasattr(group_input_019_1.outputs[90], 'name'):
        group_input_019_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_019_1.outputs[90], 'show_expanded'):
        group_input_019_1.outputs[90].show_expanded = False
    if hasattr(group_input_019_1.outputs[91], 'default_value'):
        group_input_019_1.outputs[91].default_value = 0.0
    if hasattr(group_input_019_1.outputs[91], 'display_shape'):
        group_input_019_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[91], 'enabled'):
        group_input_019_1.outputs[91].enabled = True
    if hasattr(group_input_019_1.outputs[91], 'hide'):
        group_input_019_1.outputs[91].hide = True
    if hasattr(group_input_019_1.outputs[91], 'hide_value'):
        group_input_019_1.outputs[91].hide_value = False
    if hasattr(group_input_019_1.outputs[91], 'name'):
        group_input_019_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_019_1.outputs[91], 'show_expanded'):
        group_input_019_1.outputs[91].show_expanded = False
    if hasattr(group_input_019_1.outputs[92], 'default_value'):
        group_input_019_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_019_1.outputs[92], 'display_shape'):
        group_input_019_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[92], 'enabled'):
        group_input_019_1.outputs[92].enabled = True
    if hasattr(group_input_019_1.outputs[92], 'hide'):
        group_input_019_1.outputs[92].hide = True
    if hasattr(group_input_019_1.outputs[92], 'hide_value'):
        group_input_019_1.outputs[92].hide_value = False
    if hasattr(group_input_019_1.outputs[92], 'name'):
        group_input_019_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_019_1.outputs[92], 'show_expanded'):
        group_input_019_1.outputs[92].show_expanded = False
    if hasattr(group_input_019_1.outputs[93], 'default_value'):
        group_input_019_1.outputs[93].default_value = 0.0
    if hasattr(group_input_019_1.outputs[93], 'display_shape'):
        group_input_019_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[93], 'enabled'):
        group_input_019_1.outputs[93].enabled = True
    if hasattr(group_input_019_1.outputs[93], 'hide'):
        group_input_019_1.outputs[93].hide = False
    if hasattr(group_input_019_1.outputs[93], 'hide_value'):
        group_input_019_1.outputs[93].hide_value = False
    if hasattr(group_input_019_1.outputs[93], 'name'):
        group_input_019_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_019_1.outputs[93], 'show_expanded'):
        group_input_019_1.outputs[93].show_expanded = False
    if hasattr(group_input_019_1.outputs[94], 'default_value'):
        group_input_019_1.outputs[94].default_value = 0.0
    if hasattr(group_input_019_1.outputs[94], 'display_shape'):
        group_input_019_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[94], 'enabled'):
        group_input_019_1.outputs[94].enabled = True
    if hasattr(group_input_019_1.outputs[94], 'hide'):
        group_input_019_1.outputs[94].hide = True
    if hasattr(group_input_019_1.outputs[94], 'hide_value'):
        group_input_019_1.outputs[94].hide_value = False
    if hasattr(group_input_019_1.outputs[94], 'name'):
        group_input_019_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_019_1.outputs[94], 'show_expanded'):
        group_input_019_1.outputs[94].show_expanded = False
    if hasattr(group_input_019_1.outputs[95], 'default_value'):
        group_input_019_1.outputs[95].default_value = 0.0
    if hasattr(group_input_019_1.outputs[95], 'display_shape'):
        group_input_019_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[95], 'enabled'):
        group_input_019_1.outputs[95].enabled = True
    if hasattr(group_input_019_1.outputs[95], 'hide'):
        group_input_019_1.outputs[95].hide = True
    if hasattr(group_input_019_1.outputs[95], 'hide_value'):
        group_input_019_1.outputs[95].hide_value = False
    if hasattr(group_input_019_1.outputs[95], 'name'):
        group_input_019_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_019_1.outputs[95], 'show_expanded'):
        group_input_019_1.outputs[95].show_expanded = False
    if hasattr(group_input_019_1.outputs[96], 'default_value'):
        group_input_019_1.outputs[96].default_value = 0.0
    if hasattr(group_input_019_1.outputs[96], 'display_shape'):
        group_input_019_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[96], 'enabled'):
        group_input_019_1.outputs[96].enabled = True
    if hasattr(group_input_019_1.outputs[96], 'hide'):
        group_input_019_1.outputs[96].hide = True
    if hasattr(group_input_019_1.outputs[96], 'hide_value'):
        group_input_019_1.outputs[96].hide_value = False
    if hasattr(group_input_019_1.outputs[96], 'name'):
        group_input_019_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_019_1.outputs[96], 'show_expanded'):
        group_input_019_1.outputs[96].show_expanded = False
    if hasattr(group_input_019_1.outputs[97], 'default_value'):
        group_input_019_1.outputs[97].default_value = 0.0
    if hasattr(group_input_019_1.outputs[97], 'display_shape'):
        group_input_019_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[97], 'enabled'):
        group_input_019_1.outputs[97].enabled = True
    if hasattr(group_input_019_1.outputs[97], 'hide'):
        group_input_019_1.outputs[97].hide = True
    if hasattr(group_input_019_1.outputs[97], 'hide_value'):
        group_input_019_1.outputs[97].hide_value = False
    if hasattr(group_input_019_1.outputs[97], 'name'):
        group_input_019_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_019_1.outputs[97], 'show_expanded'):
        group_input_019_1.outputs[97].show_expanded = False
    if hasattr(group_input_019_1.outputs[98], 'default_value'):
        group_input_019_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_019_1.outputs[98], 'display_shape'):
        group_input_019_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[98], 'enabled'):
        group_input_019_1.outputs[98].enabled = True
    if hasattr(group_input_019_1.outputs[98], 'hide'):
        group_input_019_1.outputs[98].hide = True
    if hasattr(group_input_019_1.outputs[98], 'hide_value'):
        group_input_019_1.outputs[98].hide_value = False
    if hasattr(group_input_019_1.outputs[98], 'name'):
        group_input_019_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_019_1.outputs[98], 'show_expanded'):
        group_input_019_1.outputs[98].show_expanded = False
    if hasattr(group_input_019_1.outputs[99], 'default_value'):
        group_input_019_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_019_1.outputs[99], 'display_shape'):
        group_input_019_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[99], 'enabled'):
        group_input_019_1.outputs[99].enabled = True
    if hasattr(group_input_019_1.outputs[99], 'hide'):
        group_input_019_1.outputs[99].hide = True
    if hasattr(group_input_019_1.outputs[99], 'hide_value'):
        group_input_019_1.outputs[99].hide_value = False
    if hasattr(group_input_019_1.outputs[99], 'name'):
        group_input_019_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_019_1.outputs[99], 'show_expanded'):
        group_input_019_1.outputs[99].show_expanded = False
    if hasattr(group_input_019_1.outputs[100], 'default_value'):
        group_input_019_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_019_1.outputs[100], 'display_shape'):
        group_input_019_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[100], 'enabled'):
        group_input_019_1.outputs[100].enabled = True
    if hasattr(group_input_019_1.outputs[100], 'hide'):
        group_input_019_1.outputs[100].hide = True
    if hasattr(group_input_019_1.outputs[100], 'hide_value'):
        group_input_019_1.outputs[100].hide_value = False
    if hasattr(group_input_019_1.outputs[100], 'name'):
        group_input_019_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_019_1.outputs[100], 'show_expanded'):
        group_input_019_1.outputs[100].show_expanded = False
    if hasattr(group_input_019_1.outputs[101], 'default_value'):
        group_input_019_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_019_1.outputs[101], 'display_shape'):
        group_input_019_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_019_1.outputs[101], 'enabled'):
        group_input_019_1.outputs[101].enabled = True
    if hasattr(group_input_019_1.outputs[101], 'hide'):
        group_input_019_1.outputs[101].hide = True
    if hasattr(group_input_019_1.outputs[101], 'hide_value'):
        group_input_019_1.outputs[101].hide_value = False
    if hasattr(group_input_019_1.outputs[101], 'name'):
        group_input_019_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_019_1.outputs[101], 'show_expanded'):
        group_input_019_1.outputs[101].show_expanded = False

    node_tree2 = bpy.data.node_groups.get('Infinite Masking Sorter')
    if not node_tree2:
        node_tree2 = bpy.data.node_groups.new('Infinite Masking Sorter', 'ShaderNodeTree')
        for node in node_tree2.nodes:
            node_tree2.nodes.remove(node)
        # INPUTS
        input = node_tree2.inputs.new('NodeSocketColor', 'ASG')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'ASG'
        input = node_tree2.inputs.new('NodeSocketColor', 'Mask_0')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Mask_0'
        input = node_tree2.inputs.new('NodeSocketColor', 'Mask_1')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Mask_1'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 1')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 1'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 2')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 2'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 3')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 3'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 4')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 4'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 5')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 5'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 6')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 6'
        input = node_tree2.inputs.new('NodeSocketColor', 'Grime')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Grime'
        input = node_tree2.inputs.new('NodeSocketColor', 'Dust')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Dust'
        # OUTPUTS
        output = node_tree2.outputs.new('NodeSocketColor', 'Color')
        if hasattr(output, 'attribute_domain'):
            output.attribute_domain = 'POINT'
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        # NODES
        group_output_2 = node_tree2.nodes.new('NodeGroupOutput')
        if hasattr(group_output_2, 'color'):
            group_output_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_output_2, 'hide'):
            group_output_2.hide = False
        if hasattr(group_output_2, 'is_active_output'):
            group_output_2.is_active_output = True
        if hasattr(group_output_2, 'location'):
            group_output_2.location = (987.58740234375, 12.1650390625)
        if hasattr(group_output_2, 'mute'):
            group_output_2.mute = False
        if hasattr(group_output_2, 'name'):
            group_output_2.name = 'Group Output'
        if hasattr(group_output_2, 'use_custom_color'):
            group_output_2.use_custom_color = False
        if hasattr(group_output_2, 'width'):
            group_output_2.width = 140.0
        if hasattr(group_output_2.inputs[0], 'default_value'):
            group_output_2.inputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(group_output_2.inputs[0], 'display_shape'):
            group_output_2.inputs[0].display_shape = 'CIRCLE'
        if hasattr(group_output_2.inputs[0], 'enabled'):
            group_output_2.inputs[0].enabled = True
        if hasattr(group_output_2.inputs[0], 'hide'):
            group_output_2.inputs[0].hide = False
        if hasattr(group_output_2.inputs[0], 'hide_value'):
            group_output_2.inputs[0].hide_value = False
        if hasattr(group_output_2.inputs[0], 'name'):
            group_output_2.inputs[0].name = 'Color'
        if hasattr(group_output_2.inputs[0], 'show_expanded'):
            group_output_2.inputs[0].show_expanded = False

        group_input_2 = node_tree2.nodes.new('NodeGroupInput')
        if hasattr(group_input_2, 'color'):
            group_input_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_input_2, 'hide'):
            group_input_2.hide = False
        if hasattr(group_input_2, 'location'):
            group_input_2.location = (-1320.0, 140.0)
        if hasattr(group_input_2, 'mute'):
            group_input_2.mute = False
        if hasattr(group_input_2, 'name'):
            group_input_2.name = 'Group Input'
        if hasattr(group_input_2, 'use_custom_color'):
            group_input_2.use_custom_color = False
        if hasattr(group_input_2, 'width'):
            group_input_2.width = 145.58837890625
        if hasattr(group_input_2.outputs[0], 'default_value'):
            group_input_2.outputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[0], 'display_shape'):
            group_input_2.outputs[0].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[0], 'enabled'):
            group_input_2.outputs[0].enabled = True
        if hasattr(group_input_2.outputs[0], 'hide'):
            group_input_2.outputs[0].hide = False
        if hasattr(group_input_2.outputs[0], 'hide_value'):
            group_input_2.outputs[0].hide_value = False
        if hasattr(group_input_2.outputs[0], 'name'):
            group_input_2.outputs[0].name = 'ASG'
        if hasattr(group_input_2.outputs[0], 'show_expanded'):
            group_input_2.outputs[0].show_expanded = False
        if hasattr(group_input_2.outputs[1], 'default_value'):
            group_input_2.outputs[1].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[1], 'display_shape'):
            group_input_2.outputs[1].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[1], 'enabled'):
            group_input_2.outputs[1].enabled = True
        if hasattr(group_input_2.outputs[1], 'hide'):
            group_input_2.outputs[1].hide = False
        if hasattr(group_input_2.outputs[1], 'hide_value'):
            group_input_2.outputs[1].hide_value = False
        if hasattr(group_input_2.outputs[1], 'name'):
            group_input_2.outputs[1].name = 'Mask_0'
        if hasattr(group_input_2.outputs[1], 'show_expanded'):
            group_input_2.outputs[1].show_expanded = False
        if hasattr(group_input_2.outputs[2], 'default_value'):
            group_input_2.outputs[2].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[2], 'display_shape'):
            group_input_2.outputs[2].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[2], 'enabled'):
            group_input_2.outputs[2].enabled = True
        if hasattr(group_input_2.outputs[2], 'hide'):
            group_input_2.outputs[2].hide = False
        if hasattr(group_input_2.outputs[2], 'hide_value'):
            group_input_2.outputs[2].hide_value = False
        if hasattr(group_input_2.outputs[2], 'name'):
            group_input_2.outputs[2].name = 'Mask_1'
        if hasattr(group_input_2.outputs[2], 'show_expanded'):
            group_input_2.outputs[2].show_expanded = False
        if hasattr(group_input_2.outputs[3], 'default_value'):
            group_input_2.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[3], 'display_shape'):
            group_input_2.outputs[3].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[3], 'enabled'):
            group_input_2.outputs[3].enabled = True
        if hasattr(group_input_2.outputs[3], 'hide'):
            group_input_2.outputs[3].hide = False
        if hasattr(group_input_2.outputs[3], 'hide_value'):
            group_input_2.outputs[3].hide_value = False
        if hasattr(group_input_2.outputs[3], 'name'):
            group_input_2.outputs[3].name = 'Slot 1'
        if hasattr(group_input_2.outputs[3], 'show_expanded'):
            group_input_2.outputs[3].show_expanded = False
        if hasattr(group_input_2.outputs[4], 'default_value'):
            group_input_2.outputs[4].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[4], 'display_shape'):
            group_input_2.outputs[4].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[4], 'enabled'):
            group_input_2.outputs[4].enabled = True
        if hasattr(group_input_2.outputs[4], 'hide'):
            group_input_2.outputs[4].hide = False
        if hasattr(group_input_2.outputs[4], 'hide_value'):
            group_input_2.outputs[4].hide_value = False
        if hasattr(group_input_2.outputs[4], 'name'):
            group_input_2.outputs[4].name = 'Slot 2'
        if hasattr(group_input_2.outputs[4], 'show_expanded'):
            group_input_2.outputs[4].show_expanded = False
        if hasattr(group_input_2.outputs[5], 'default_value'):
            group_input_2.outputs[5].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[5], 'display_shape'):
            group_input_2.outputs[5].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[5], 'enabled'):
            group_input_2.outputs[5].enabled = True
        if hasattr(group_input_2.outputs[5], 'hide'):
            group_input_2.outputs[5].hide = False
        if hasattr(group_input_2.outputs[5], 'hide_value'):
            group_input_2.outputs[5].hide_value = False
        if hasattr(group_input_2.outputs[5], 'name'):
            group_input_2.outputs[5].name = 'Slot 3'
        if hasattr(group_input_2.outputs[5], 'show_expanded'):
            group_input_2.outputs[5].show_expanded = False
        if hasattr(group_input_2.outputs[6], 'default_value'):
            group_input_2.outputs[6].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[6], 'display_shape'):
            group_input_2.outputs[6].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[6], 'enabled'):
            group_input_2.outputs[6].enabled = True
        if hasattr(group_input_2.outputs[6], 'hide'):
            group_input_2.outputs[6].hide = False
        if hasattr(group_input_2.outputs[6], 'hide_value'):
            group_input_2.outputs[6].hide_value = False
        if hasattr(group_input_2.outputs[6], 'name'):
            group_input_2.outputs[6].name = 'Slot 4'
        if hasattr(group_input_2.outputs[6], 'show_expanded'):
            group_input_2.outputs[6].show_expanded = False
        if hasattr(group_input_2.outputs[7], 'default_value'):
            group_input_2.outputs[7].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[7], 'display_shape'):
            group_input_2.outputs[7].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[7], 'enabled'):
            group_input_2.outputs[7].enabled = True
        if hasattr(group_input_2.outputs[7], 'hide'):
            group_input_2.outputs[7].hide = False
        if hasattr(group_input_2.outputs[7], 'hide_value'):
            group_input_2.outputs[7].hide_value = False
        if hasattr(group_input_2.outputs[7], 'name'):
            group_input_2.outputs[7].name = 'Slot 5'
        if hasattr(group_input_2.outputs[7], 'show_expanded'):
            group_input_2.outputs[7].show_expanded = False
        if hasattr(group_input_2.outputs[8], 'default_value'):
            group_input_2.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[8], 'display_shape'):
            group_input_2.outputs[8].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[8], 'enabled'):
            group_input_2.outputs[8].enabled = True
        if hasattr(group_input_2.outputs[8], 'hide'):
            group_input_2.outputs[8].hide = False
        if hasattr(group_input_2.outputs[8], 'hide_value'):
            group_input_2.outputs[8].hide_value = False
        if hasattr(group_input_2.outputs[8], 'name'):
            group_input_2.outputs[8].name = 'Slot 6'
        if hasattr(group_input_2.outputs[8], 'show_expanded'):
            group_input_2.outputs[8].show_expanded = False
        if hasattr(group_input_2.outputs[9], 'default_value'):
            group_input_2.outputs[9].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[9], 'display_shape'):
            group_input_2.outputs[9].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[9], 'enabled'):
            group_input_2.outputs[9].enabled = True
        if hasattr(group_input_2.outputs[9], 'hide'):
            group_input_2.outputs[9].hide = False
        if hasattr(group_input_2.outputs[9], 'hide_value'):
            group_input_2.outputs[9].hide_value = False
        if hasattr(group_input_2.outputs[9], 'name'):
            group_input_2.outputs[9].name = 'Grime'
        if hasattr(group_input_2.outputs[9], 'show_expanded'):
            group_input_2.outputs[9].show_expanded = False
        if hasattr(group_input_2.outputs[10], 'default_value'):
            group_input_2.outputs[10].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[10], 'display_shape'):
            group_input_2.outputs[10].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[10], 'enabled'):
            group_input_2.outputs[10].enabled = True
        if hasattr(group_input_2.outputs[10], 'hide'):
            group_input_2.outputs[10].hide = False
        if hasattr(group_input_2.outputs[10], 'hide_value'):
            group_input_2.outputs[10].hide_value = False
        if hasattr(group_input_2.outputs[10], 'name'):
            group_input_2.outputs[10].name = 'Dust'
        if hasattr(group_input_2.outputs[10], 'show_expanded'):
            group_input_2.outputs[10].show_expanded = False

        separate_rgb_002_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_002_2, 'color'):
            separate_rgb_002_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_002_2, 'hide'):
            separate_rgb_002_2.hide = False
        if hasattr(separate_rgb_002_2, 'location'):
            separate_rgb_002_2.location = (-1080.0, 340.0)
        if hasattr(separate_rgb_002_2, 'mute'):
            separate_rgb_002_2.mute = False
        if hasattr(separate_rgb_002_2, 'name'):
            separate_rgb_002_2.name = 'Separate RGB.002'
        if hasattr(separate_rgb_002_2, 'use_custom_color'):
            separate_rgb_002_2.use_custom_color = False
        if hasattr(separate_rgb_002_2, 'width'):
            separate_rgb_002_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_002_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_2, 'blend_type'):
            mix_2.blend_type = 'MIX'
        if hasattr(mix_2, 'color'):
            mix_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_2, 'hide'):
            mix_2.hide = False
        if hasattr(mix_2, 'label'):
            mix_2.label = 'Slot 1 and 2'
        if hasattr(mix_2, 'location'):
            mix_2.location = (-760.0, 120.0)
        if hasattr(mix_2, 'mute'):
            mix_2.mute = False
        if hasattr(mix_2, 'name'):
            mix_2.name = 'Mix'
        if hasattr(mix_2, 'use_alpha'):
            mix_2.use_alpha = False
        if hasattr(mix_2, 'use_clamp'):
            mix_2.use_clamp = False
        if hasattr(mix_2, 'use_custom_color'):
            mix_2.use_custom_color = False
        if hasattr(mix_2, 'width'):
            mix_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 1.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_001_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_001_2, 'blend_type'):
            mix_001_2.blend_type = 'MIX'
        if hasattr(mix_001_2, 'color'):
            mix_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_001_2, 'hide'):
            mix_001_2.hide = False
        if hasattr(mix_001_2, 'label'):
            mix_001_2.label = 'Slot 3'
        if hasattr(mix_001_2, 'location'):
            mix_001_2.location = (-520.0, 20.0)
        if hasattr(mix_001_2, 'mute'):
            mix_001_2.mute = False
        if hasattr(mix_001_2, 'name'):
            mix_001_2.name = 'Mix.001'
        if hasattr(mix_001_2, 'use_alpha'):
            mix_001_2.use_alpha = False
        if hasattr(mix_001_2, 'use_clamp'):
            mix_001_2.use_clamp = False
        if hasattr(mix_001_2, 'use_custom_color'):
            mix_001_2.use_custom_color = False
        if hasattr(mix_001_2, 'width'):
            mix_001_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.8411373496055603, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_001_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_002_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_002_2, 'blend_type'):
            mix_002_2.blend_type = 'MIX'
        if hasattr(mix_002_2, 'color'):
            mix_002_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_002_2, 'hide'):
            mix_002_2.hide = False
        if hasattr(mix_002_2, 'label'):
            mix_002_2.label = 'Slot 4'
        if hasattr(mix_002_2, 'location'):
            mix_002_2.location = (-249.4803466796875, -66.48199462890625)
        if hasattr(mix_002_2, 'mute'):
            mix_002_2.mute = False
        if hasattr(mix_002_2, 'name'):
            mix_002_2.name = 'Mix.002'
        if hasattr(mix_002_2, 'use_alpha'):
            mix_002_2.use_alpha = False
        if hasattr(mix_002_2, 'use_clamp'):
            mix_002_2.use_clamp = False
        if hasattr(mix_002_2, 'use_custom_color'):
            mix_002_2.use_custom_color = False
        if hasattr(mix_002_2, 'width'):
            mix_002_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.006658518221229315, 1.0, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_002_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_003_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_003_2, 'blend_type'):
            mix_003_2.blend_type = 'MIX'
        if hasattr(mix_003_2, 'color'):
            mix_003_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_003_2, 'hide'):
            mix_003_2.hide = False
        if hasattr(mix_003_2, 'label'):
            mix_003_2.label = 'Slot 5'
        if hasattr(mix_003_2, 'location'):
            mix_003_2.location = (0.0, -140.0)
        if hasattr(mix_003_2, 'mute'):
            mix_003_2.mute = False
        if hasattr(mix_003_2, 'name'):
            mix_003_2.name = 'Mix.003'
        if hasattr(mix_003_2, 'use_alpha'):
            mix_003_2.use_alpha = False
        if hasattr(mix_003_2, 'use_clamp'):
            mix_003_2.use_clamp = False
        if hasattr(mix_003_2, 'use_custom_color'):
            mix_003_2.use_custom_color = False
        if hasattr(mix_003_2, 'width'):
            mix_003_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 1.0, 0.7098963856697083, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_003_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_004_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_004_2, 'blend_type'):
            mix_004_2.blend_type = 'MIX'
        if hasattr(mix_004_2, 'color'):
            mix_004_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_004_2, 'hide'):
            mix_004_2.hide = False
        if hasattr(mix_004_2, 'label'):
            mix_004_2.label = 'Slot 6'
        if hasattr(mix_004_2, 'location'):
            mix_004_2.location = (239.99996948242188, -220.0)
        if hasattr(mix_004_2, 'mute'):
            mix_004_2.mute = False
        if hasattr(mix_004_2, 'name'):
            mix_004_2.name = 'Mix.004'
        if hasattr(mix_004_2, 'use_alpha'):
            mix_004_2.use_alpha = False
        if hasattr(mix_004_2, 'use_clamp'):
            mix_004_2.use_clamp = False
        if hasattr(mix_004_2, 'use_custom_color'):
            mix_004_2.use_custom_color = False
        if hasattr(mix_004_2, 'width'):
            mix_004_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_004_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_005_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_005_2, 'blend_type'):
            mix_005_2.blend_type = 'MIX'
        if hasattr(mix_005_2, 'color'):
            mix_005_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_005_2, 'hide'):
            mix_005_2.hide = False
        if hasattr(mix_005_2, 'label'):
            mix_005_2.label = 'Grime'
        if hasattr(mix_005_2, 'location'):
            mix_005_2.location = (489.16949462890625, -120.0)
        if hasattr(mix_005_2, 'mute'):
            mix_005_2.mute = False
        if hasattr(mix_005_2, 'name'):
            mix_005_2.name = 'Mix.005'
        if hasattr(mix_005_2, 'use_alpha'):
            mix_005_2.use_alpha = False
        if hasattr(mix_005_2, 'use_clamp'):
            mix_005_2.use_clamp = False
        if hasattr(mix_005_2, 'use_custom_color'):
            mix_005_2.use_custom_color = False
        if hasattr(mix_005_2, 'width'):
            mix_005_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_005_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_006_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_006_2, 'blend_type'):
            mix_006_2.blend_type = 'MIX'
        if hasattr(mix_006_2, 'color'):
            mix_006_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_006_2, 'hide'):
            mix_006_2.hide = False
        if hasattr(mix_006_2, 'label'):
            mix_006_2.label = 'Dust'
        if hasattr(mix_006_2, 'location'):
            mix_006_2.location = (738.1694946289062, -119.99993896484375)
        if hasattr(mix_006_2, 'mute'):
            mix_006_2.mute = False
        if hasattr(mix_006_2, 'name'):
            mix_006_2.name = 'Mix.006'
        if hasattr(mix_006_2, 'use_alpha'):
            mix_006_2.use_alpha = False
        if hasattr(mix_006_2, 'use_clamp'):
            mix_006_2.use_clamp = True
        if hasattr(mix_006_2, 'use_custom_color'):
            mix_006_2.use_custom_color = False
        if hasattr(mix_006_2, 'width'):
            mix_006_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_006_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_003_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_003_2, 'color'):
            separate_rgb_003_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_003_2, 'hide'):
            separate_rgb_003_2.hide = False
        if hasattr(separate_rgb_003_2, 'location'):
            separate_rgb_003_2.location = (-1080.0, 460.0)
        if hasattr(separate_rgb_003_2, 'mute'):
            separate_rgb_003_2.mute = False
        if hasattr(separate_rgb_003_2, 'name'):
            separate_rgb_003_2.name = 'Separate RGB.003'
        if hasattr(separate_rgb_003_2, 'use_custom_color'):
            separate_rgb_003_2.use_custom_color = False
        if hasattr(separate_rgb_003_2, 'width'):
            separate_rgb_003_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_003_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_003_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_003_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_003_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_001_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_001_2, 'color'):
            separate_rgb_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_001_2, 'hide'):
            separate_rgb_001_2.hide = False
        if hasattr(separate_rgb_001_2, 'location'):
            separate_rgb_001_2.location = (-1080.0, 220.0)
        if hasattr(separate_rgb_001_2, 'mute'):
            separate_rgb_001_2.mute = False
        if hasattr(separate_rgb_001_2, 'name'):
            separate_rgb_001_2.name = 'Separate RGB.001'
        if hasattr(separate_rgb_001_2, 'use_custom_color'):
            separate_rgb_001_2.use_custom_color = False
        if hasattr(separate_rgb_001_2, 'width'):
            separate_rgb_001_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_001_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        # LINKS
        node_tree2.links.new(group_input_2.outputs[2], separate_rgb_001_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[1], separate_rgb_002_2.inputs[0])
        node_tree2.links.new(mix_2.outputs[0], mix_001_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[0], mix_2.inputs[0])
        node_tree2.links.new(mix_001_2.outputs[0], mix_002_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[1], mix_001_2.inputs[0])
        node_tree2.links.new(mix_002_2.outputs[0], mix_003_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[2], mix_002_2.inputs[0])
        node_tree2.links.new(mix_003_2.outputs[0], mix_004_2.inputs[1])
        node_tree2.links.new(separate_rgb_001_2.outputs[0], mix_003_2.inputs[0])
        node_tree2.links.new(separate_rgb_001_2.outputs[1], mix_004_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[3], mix_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[4], mix_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[5], mix_001_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[6], mix_002_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[7], mix_003_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[8], mix_004_2.inputs[2])
        node_tree2.links.new(mix_006_2.outputs[0], group_output_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[0], separate_rgb_003_2.inputs[0])
        node_tree2.links.new(mix_004_2.outputs[0], mix_005_2.inputs[1])
        node_tree2.links.new(mix_005_2.outputs[0], mix_006_2.inputs[1])
        node_tree2.links.new(separate_rgb_003_2.outputs[2], mix_005_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[9], mix_005_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[10], mix_006_2.inputs[2])
        node_tree2.links.new(separate_rgb_001_2.outputs[2], mix_006_2.inputs[0])

    group_018_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_018_1, 'node_tree'):
        group_018_1.node_tree = bpy.data.node_groups.get('Infinite Masking Sorter')
    if hasattr(group_018_1, 'color'):
        group_018_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_018_1, 'hide'):
        group_018_1.hide = False
    if hasattr(group_018_1, 'location'):
        group_018_1.location = (-1740.0, -259.9998779296875)
    if hasattr(group_018_1, 'mute'):
        group_018_1.mute = False
    if hasattr(group_018_1, 'name'):
        group_018_1.name = 'Group.018'
    if hasattr(group_018_1, 'use_custom_color'):
        group_018_1.use_custom_color = False
    if hasattr(group_018_1, 'width'):
        group_018_1.width = 239.4532470703125
    if hasattr(group_018_1.inputs[0], 'default_value'):
        group_018_1.inputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_018_1.inputs[0], 'display_shape'):
        group_018_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[0], 'enabled'):
        group_018_1.inputs[0].enabled = True
    if hasattr(group_018_1.inputs[0], 'hide'):
        group_018_1.inputs[0].hide = False
    if hasattr(group_018_1.inputs[0], 'hide_value'):
        group_018_1.inputs[0].hide_value = False
    if hasattr(group_018_1.inputs[0], 'name'):
        group_018_1.inputs[0].name = 'ASG'
    if hasattr(group_018_1.inputs[0], 'show_expanded'):
        group_018_1.inputs[0].show_expanded = False
    if hasattr(group_018_1.inputs[1], 'default_value'):
        group_018_1.inputs[1].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_018_1.inputs[1], 'display_shape'):
        group_018_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[1], 'enabled'):
        group_018_1.inputs[1].enabled = True
    if hasattr(group_018_1.inputs[1], 'hide'):
        group_018_1.inputs[1].hide = False
    if hasattr(group_018_1.inputs[1], 'hide_value'):
        group_018_1.inputs[1].hide_value = False
    if hasattr(group_018_1.inputs[1], 'name'):
        group_018_1.inputs[1].name = 'Mask_0'
    if hasattr(group_018_1.inputs[1], 'show_expanded'):
        group_018_1.inputs[1].show_expanded = False
    if hasattr(group_018_1.inputs[2], 'default_value'):
        group_018_1.inputs[2].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_018_1.inputs[2], 'display_shape'):
        group_018_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[2], 'enabled'):
        group_018_1.inputs[2].enabled = True
    if hasattr(group_018_1.inputs[2], 'hide'):
        group_018_1.inputs[2].hide = False
    if hasattr(group_018_1.inputs[2], 'hide_value'):
        group_018_1.inputs[2].hide_value = False
    if hasattr(group_018_1.inputs[2], 'name'):
        group_018_1.inputs[2].name = 'Mask_1'
    if hasattr(group_018_1.inputs[2], 'show_expanded'):
        group_018_1.inputs[2].show_expanded = False
    if hasattr(group_018_1.inputs[3], 'default_value'):
        group_018_1.inputs[3].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_018_1.inputs[3], 'display_shape'):
        group_018_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[3], 'enabled'):
        group_018_1.inputs[3].enabled = True
    if hasattr(group_018_1.inputs[3], 'hide'):
        group_018_1.inputs[3].hide = False
    if hasattr(group_018_1.inputs[3], 'hide_value'):
        group_018_1.inputs[3].hide_value = False
    if hasattr(group_018_1.inputs[3], 'name'):
        group_018_1.inputs[3].name = 'Slot 1'
    if hasattr(group_018_1.inputs[3], 'show_expanded'):
        group_018_1.inputs[3].show_expanded = False
    if hasattr(group_018_1.inputs[4], 'default_value'):
        group_018_1.inputs[4].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_018_1.inputs[4], 'display_shape'):
        group_018_1.inputs[4].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[4], 'enabled'):
        group_018_1.inputs[4].enabled = True
    if hasattr(group_018_1.inputs[4], 'hide'):
        group_018_1.inputs[4].hide = False
    if hasattr(group_018_1.inputs[4], 'hide_value'):
        group_018_1.inputs[4].hide_value = False
    if hasattr(group_018_1.inputs[4], 'name'):
        group_018_1.inputs[4].name = 'Slot 2'
    if hasattr(group_018_1.inputs[4], 'show_expanded'):
        group_018_1.inputs[4].show_expanded = False
    if hasattr(group_018_1.inputs[5], 'default_value'):
        group_018_1.inputs[5].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_018_1.inputs[5], 'display_shape'):
        group_018_1.inputs[5].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[5], 'enabled'):
        group_018_1.inputs[5].enabled = True
    if hasattr(group_018_1.inputs[5], 'hide'):
        group_018_1.inputs[5].hide = False
    if hasattr(group_018_1.inputs[5], 'hide_value'):
        group_018_1.inputs[5].hide_value = False
    if hasattr(group_018_1.inputs[5], 'name'):
        group_018_1.inputs[5].name = 'Slot 3'
    if hasattr(group_018_1.inputs[5], 'show_expanded'):
        group_018_1.inputs[5].show_expanded = False
    if hasattr(group_018_1.inputs[6], 'default_value'):
        group_018_1.inputs[6].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_018_1.inputs[6], 'display_shape'):
        group_018_1.inputs[6].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[6], 'enabled'):
        group_018_1.inputs[6].enabled = True
    if hasattr(group_018_1.inputs[6], 'hide'):
        group_018_1.inputs[6].hide = False
    if hasattr(group_018_1.inputs[6], 'hide_value'):
        group_018_1.inputs[6].hide_value = False
    if hasattr(group_018_1.inputs[6], 'name'):
        group_018_1.inputs[6].name = 'Slot 4'
    if hasattr(group_018_1.inputs[6], 'show_expanded'):
        group_018_1.inputs[6].show_expanded = False
    if hasattr(group_018_1.inputs[7], 'default_value'):
        group_018_1.inputs[7].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_018_1.inputs[7], 'display_shape'):
        group_018_1.inputs[7].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[7], 'enabled'):
        group_018_1.inputs[7].enabled = True
    if hasattr(group_018_1.inputs[7], 'hide'):
        group_018_1.inputs[7].hide = False
    if hasattr(group_018_1.inputs[7], 'hide_value'):
        group_018_1.inputs[7].hide_value = False
    if hasattr(group_018_1.inputs[7], 'name'):
        group_018_1.inputs[7].name = 'Slot 5'
    if hasattr(group_018_1.inputs[7], 'show_expanded'):
        group_018_1.inputs[7].show_expanded = False
    if hasattr(group_018_1.inputs[8], 'default_value'):
        group_018_1.inputs[8].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_018_1.inputs[8], 'display_shape'):
        group_018_1.inputs[8].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[8], 'enabled'):
        group_018_1.inputs[8].enabled = True
    if hasattr(group_018_1.inputs[8], 'hide'):
        group_018_1.inputs[8].hide = False
    if hasattr(group_018_1.inputs[8], 'hide_value'):
        group_018_1.inputs[8].hide_value = False
    if hasattr(group_018_1.inputs[8], 'name'):
        group_018_1.inputs[8].name = 'Slot 6'
    if hasattr(group_018_1.inputs[8], 'show_expanded'):
        group_018_1.inputs[8].show_expanded = False
    if hasattr(group_018_1.inputs[9], 'default_value'):
        group_018_1.inputs[9].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_018_1.inputs[9], 'display_shape'):
        group_018_1.inputs[9].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[9], 'enabled'):
        group_018_1.inputs[9].enabled = True
    if hasattr(group_018_1.inputs[9], 'hide'):
        group_018_1.inputs[9].hide = False
    if hasattr(group_018_1.inputs[9], 'hide_value'):
        group_018_1.inputs[9].hide_value = False
    if hasattr(group_018_1.inputs[9], 'name'):
        group_018_1.inputs[9].name = 'Grime'
    if hasattr(group_018_1.inputs[9], 'show_expanded'):
        group_018_1.inputs[9].show_expanded = False
    if hasattr(group_018_1.inputs[10], 'default_value'):
        group_018_1.inputs[10].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_018_1.inputs[10], 'display_shape'):
        group_018_1.inputs[10].display_shape = 'CIRCLE'
    if hasattr(group_018_1.inputs[10], 'enabled'):
        group_018_1.inputs[10].enabled = True
    if hasattr(group_018_1.inputs[10], 'hide'):
        group_018_1.inputs[10].hide = False
    if hasattr(group_018_1.inputs[10], 'hide_value'):
        group_018_1.inputs[10].hide_value = False
    if hasattr(group_018_1.inputs[10], 'name'):
        group_018_1.inputs[10].name = 'Dust'
    if hasattr(group_018_1.inputs[10], 'show_expanded'):
        group_018_1.inputs[10].show_expanded = False
    if hasattr(group_018_1.outputs[0], 'default_value'):
        group_018_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_018_1.outputs[0], 'display_shape'):
        group_018_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_018_1.outputs[0], 'enabled'):
        group_018_1.outputs[0].enabled = True
    if hasattr(group_018_1.outputs[0], 'hide'):
        group_018_1.outputs[0].hide = False
    if hasattr(group_018_1.outputs[0], 'hide_value'):
        group_018_1.outputs[0].hide_value = False
    if hasattr(group_018_1.outputs[0], 'name'):
        group_018_1.outputs[0].name = 'Color'
    if hasattr(group_018_1.outputs[0], 'show_expanded'):
        group_018_1.outputs[0].show_expanded = False

    group_014_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_014_1, 'node_tree'):
        group_014_1.node_tree = bpy.data.node_groups.get('Infinite Masking Sorter')
    if hasattr(group_014_1, 'color'):
        group_014_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_014_1, 'hide'):
        group_014_1.hide = False
    if hasattr(group_014_1, 'location'):
        group_014_1.location = (-1740.0, 780.0000610351562)
    if hasattr(group_014_1, 'mute'):
        group_014_1.mute = False
    if hasattr(group_014_1, 'name'):
        group_014_1.name = 'Group.014'
    if hasattr(group_014_1, 'use_custom_color'):
        group_014_1.use_custom_color = False
    if hasattr(group_014_1, 'width'):
        group_014_1.width = 240.0601806640625
    if hasattr(group_014_1.inputs[0], 'default_value'):
        group_014_1.inputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_014_1.inputs[0], 'display_shape'):
        group_014_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[0], 'enabled'):
        group_014_1.inputs[0].enabled = True
    if hasattr(group_014_1.inputs[0], 'hide'):
        group_014_1.inputs[0].hide = False
    if hasattr(group_014_1.inputs[0], 'hide_value'):
        group_014_1.inputs[0].hide_value = False
    if hasattr(group_014_1.inputs[0], 'name'):
        group_014_1.inputs[0].name = 'ASG'
    if hasattr(group_014_1.inputs[0], 'show_expanded'):
        group_014_1.inputs[0].show_expanded = False
    if hasattr(group_014_1.inputs[1], 'default_value'):
        group_014_1.inputs[1].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_014_1.inputs[1], 'display_shape'):
        group_014_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[1], 'enabled'):
        group_014_1.inputs[1].enabled = True
    if hasattr(group_014_1.inputs[1], 'hide'):
        group_014_1.inputs[1].hide = False
    if hasattr(group_014_1.inputs[1], 'hide_value'):
        group_014_1.inputs[1].hide_value = False
    if hasattr(group_014_1.inputs[1], 'name'):
        group_014_1.inputs[1].name = 'Mask_0'
    if hasattr(group_014_1.inputs[1], 'show_expanded'):
        group_014_1.inputs[1].show_expanded = False
    if hasattr(group_014_1.inputs[2], 'default_value'):
        group_014_1.inputs[2].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_014_1.inputs[2], 'display_shape'):
        group_014_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[2], 'enabled'):
        group_014_1.inputs[2].enabled = True
    if hasattr(group_014_1.inputs[2], 'hide'):
        group_014_1.inputs[2].hide = False
    if hasattr(group_014_1.inputs[2], 'hide_value'):
        group_014_1.inputs[2].hide_value = False
    if hasattr(group_014_1.inputs[2], 'name'):
        group_014_1.inputs[2].name = 'Mask_1'
    if hasattr(group_014_1.inputs[2], 'show_expanded'):
        group_014_1.inputs[2].show_expanded = False
    if hasattr(group_014_1.inputs[3], 'default_value'):
        group_014_1.inputs[3].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_014_1.inputs[3], 'display_shape'):
        group_014_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[3], 'enabled'):
        group_014_1.inputs[3].enabled = True
    if hasattr(group_014_1.inputs[3], 'hide'):
        group_014_1.inputs[3].hide = False
    if hasattr(group_014_1.inputs[3], 'hide_value'):
        group_014_1.inputs[3].hide_value = False
    if hasattr(group_014_1.inputs[3], 'name'):
        group_014_1.inputs[3].name = 'Slot 1'
    if hasattr(group_014_1.inputs[3], 'show_expanded'):
        group_014_1.inputs[3].show_expanded = False
    if hasattr(group_014_1.inputs[4], 'default_value'):
        group_014_1.inputs[4].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_014_1.inputs[4], 'display_shape'):
        group_014_1.inputs[4].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[4], 'enabled'):
        group_014_1.inputs[4].enabled = True
    if hasattr(group_014_1.inputs[4], 'hide'):
        group_014_1.inputs[4].hide = False
    if hasattr(group_014_1.inputs[4], 'hide_value'):
        group_014_1.inputs[4].hide_value = False
    if hasattr(group_014_1.inputs[4], 'name'):
        group_014_1.inputs[4].name = 'Slot 2'
    if hasattr(group_014_1.inputs[4], 'show_expanded'):
        group_014_1.inputs[4].show_expanded = False
    if hasattr(group_014_1.inputs[5], 'default_value'):
        group_014_1.inputs[5].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_014_1.inputs[5], 'display_shape'):
        group_014_1.inputs[5].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[5], 'enabled'):
        group_014_1.inputs[5].enabled = True
    if hasattr(group_014_1.inputs[5], 'hide'):
        group_014_1.inputs[5].hide = False
    if hasattr(group_014_1.inputs[5], 'hide_value'):
        group_014_1.inputs[5].hide_value = False
    if hasattr(group_014_1.inputs[5], 'name'):
        group_014_1.inputs[5].name = 'Slot 3'
    if hasattr(group_014_1.inputs[5], 'show_expanded'):
        group_014_1.inputs[5].show_expanded = False
    if hasattr(group_014_1.inputs[6], 'default_value'):
        group_014_1.inputs[6].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_014_1.inputs[6], 'display_shape'):
        group_014_1.inputs[6].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[6], 'enabled'):
        group_014_1.inputs[6].enabled = True
    if hasattr(group_014_1.inputs[6], 'hide'):
        group_014_1.inputs[6].hide = False
    if hasattr(group_014_1.inputs[6], 'hide_value'):
        group_014_1.inputs[6].hide_value = False
    if hasattr(group_014_1.inputs[6], 'name'):
        group_014_1.inputs[6].name = 'Slot 4'
    if hasattr(group_014_1.inputs[6], 'show_expanded'):
        group_014_1.inputs[6].show_expanded = False
    if hasattr(group_014_1.inputs[7], 'default_value'):
        group_014_1.inputs[7].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_014_1.inputs[7], 'display_shape'):
        group_014_1.inputs[7].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[7], 'enabled'):
        group_014_1.inputs[7].enabled = True
    if hasattr(group_014_1.inputs[7], 'hide'):
        group_014_1.inputs[7].hide = False
    if hasattr(group_014_1.inputs[7], 'hide_value'):
        group_014_1.inputs[7].hide_value = False
    if hasattr(group_014_1.inputs[7], 'name'):
        group_014_1.inputs[7].name = 'Slot 5'
    if hasattr(group_014_1.inputs[7], 'show_expanded'):
        group_014_1.inputs[7].show_expanded = False
    if hasattr(group_014_1.inputs[8], 'default_value'):
        group_014_1.inputs[8].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_014_1.inputs[8], 'display_shape'):
        group_014_1.inputs[8].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[8], 'enabled'):
        group_014_1.inputs[8].enabled = True
    if hasattr(group_014_1.inputs[8], 'hide'):
        group_014_1.inputs[8].hide = False
    if hasattr(group_014_1.inputs[8], 'hide_value'):
        group_014_1.inputs[8].hide_value = False
    if hasattr(group_014_1.inputs[8], 'name'):
        group_014_1.inputs[8].name = 'Slot 6'
    if hasattr(group_014_1.inputs[8], 'show_expanded'):
        group_014_1.inputs[8].show_expanded = False
    if hasattr(group_014_1.inputs[9], 'default_value'):
        group_014_1.inputs[9].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_014_1.inputs[9], 'display_shape'):
        group_014_1.inputs[9].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[9], 'enabled'):
        group_014_1.inputs[9].enabled = True
    if hasattr(group_014_1.inputs[9], 'hide'):
        group_014_1.inputs[9].hide = False
    if hasattr(group_014_1.inputs[9], 'hide_value'):
        group_014_1.inputs[9].hide_value = False
    if hasattr(group_014_1.inputs[9], 'name'):
        group_014_1.inputs[9].name = 'Grime'
    if hasattr(group_014_1.inputs[9], 'show_expanded'):
        group_014_1.inputs[9].show_expanded = False
    if hasattr(group_014_1.inputs[10], 'default_value'):
        group_014_1.inputs[10].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_014_1.inputs[10], 'display_shape'):
        group_014_1.inputs[10].display_shape = 'CIRCLE'
    if hasattr(group_014_1.inputs[10], 'enabled'):
        group_014_1.inputs[10].enabled = True
    if hasattr(group_014_1.inputs[10], 'hide'):
        group_014_1.inputs[10].hide = False
    if hasattr(group_014_1.inputs[10], 'hide_value'):
        group_014_1.inputs[10].hide_value = False
    if hasattr(group_014_1.inputs[10], 'name'):
        group_014_1.inputs[10].name = 'Dust'
    if hasattr(group_014_1.inputs[10], 'show_expanded'):
        group_014_1.inputs[10].show_expanded = False
    if hasattr(group_014_1.outputs[0], 'default_value'):
        group_014_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_014_1.outputs[0], 'display_shape'):
        group_014_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_014_1.outputs[0], 'enabled'):
        group_014_1.outputs[0].enabled = True
    if hasattr(group_014_1.outputs[0], 'hide'):
        group_014_1.outputs[0].hide = False
    if hasattr(group_014_1.outputs[0], 'hide_value'):
        group_014_1.outputs[0].hide_value = False
    if hasattr(group_014_1.outputs[0], 'name'):
        group_014_1.outputs[0].name = 'Color'
    if hasattr(group_014_1.outputs[0], 'show_expanded'):
        group_014_1.outputs[0].show_expanded = False

    group_017_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_017_1, 'node_tree'):
        group_017_1.node_tree = bpy.data.node_groups.get('Infinite Masking Sorter')
    if hasattr(group_017_1, 'color'):
        group_017_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_017_1, 'hide'):
        group_017_1.hide = False
    if hasattr(group_017_1, 'location'):
        group_017_1.location = (-1740.0, 440.00006103515625)
    if hasattr(group_017_1, 'mute'):
        group_017_1.mute = False
    if hasattr(group_017_1, 'name'):
        group_017_1.name = 'Group.017'
    if hasattr(group_017_1, 'use_custom_color'):
        group_017_1.use_custom_color = False
    if hasattr(group_017_1, 'width'):
        group_017_1.width = 239.53497314453125
    if hasattr(group_017_1.inputs[0], 'default_value'):
        group_017_1.inputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_017_1.inputs[0], 'display_shape'):
        group_017_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[0], 'enabled'):
        group_017_1.inputs[0].enabled = True
    if hasattr(group_017_1.inputs[0], 'hide'):
        group_017_1.inputs[0].hide = False
    if hasattr(group_017_1.inputs[0], 'hide_value'):
        group_017_1.inputs[0].hide_value = False
    if hasattr(group_017_1.inputs[0], 'name'):
        group_017_1.inputs[0].name = 'ASG'
    if hasattr(group_017_1.inputs[0], 'show_expanded'):
        group_017_1.inputs[0].show_expanded = False
    if hasattr(group_017_1.inputs[1], 'default_value'):
        group_017_1.inputs[1].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_017_1.inputs[1], 'display_shape'):
        group_017_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[1], 'enabled'):
        group_017_1.inputs[1].enabled = True
    if hasattr(group_017_1.inputs[1], 'hide'):
        group_017_1.inputs[1].hide = False
    if hasattr(group_017_1.inputs[1], 'hide_value'):
        group_017_1.inputs[1].hide_value = False
    if hasattr(group_017_1.inputs[1], 'name'):
        group_017_1.inputs[1].name = 'Mask_0'
    if hasattr(group_017_1.inputs[1], 'show_expanded'):
        group_017_1.inputs[1].show_expanded = False
    if hasattr(group_017_1.inputs[2], 'default_value'):
        group_017_1.inputs[2].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_017_1.inputs[2], 'display_shape'):
        group_017_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[2], 'enabled'):
        group_017_1.inputs[2].enabled = True
    if hasattr(group_017_1.inputs[2], 'hide'):
        group_017_1.inputs[2].hide = False
    if hasattr(group_017_1.inputs[2], 'hide_value'):
        group_017_1.inputs[2].hide_value = False
    if hasattr(group_017_1.inputs[2], 'name'):
        group_017_1.inputs[2].name = 'Mask_1'
    if hasattr(group_017_1.inputs[2], 'show_expanded'):
        group_017_1.inputs[2].show_expanded = False
    if hasattr(group_017_1.inputs[3], 'default_value'):
        group_017_1.inputs[3].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_017_1.inputs[3], 'display_shape'):
        group_017_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[3], 'enabled'):
        group_017_1.inputs[3].enabled = True
    if hasattr(group_017_1.inputs[3], 'hide'):
        group_017_1.inputs[3].hide = False
    if hasattr(group_017_1.inputs[3], 'hide_value'):
        group_017_1.inputs[3].hide_value = False
    if hasattr(group_017_1.inputs[3], 'name'):
        group_017_1.inputs[3].name = 'Slot 1'
    if hasattr(group_017_1.inputs[3], 'show_expanded'):
        group_017_1.inputs[3].show_expanded = False
    if hasattr(group_017_1.inputs[4], 'default_value'):
        group_017_1.inputs[4].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_017_1.inputs[4], 'display_shape'):
        group_017_1.inputs[4].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[4], 'enabled'):
        group_017_1.inputs[4].enabled = True
    if hasattr(group_017_1.inputs[4], 'hide'):
        group_017_1.inputs[4].hide = False
    if hasattr(group_017_1.inputs[4], 'hide_value'):
        group_017_1.inputs[4].hide_value = False
    if hasattr(group_017_1.inputs[4], 'name'):
        group_017_1.inputs[4].name = 'Slot 2'
    if hasattr(group_017_1.inputs[4], 'show_expanded'):
        group_017_1.inputs[4].show_expanded = False
    if hasattr(group_017_1.inputs[5], 'default_value'):
        group_017_1.inputs[5].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_017_1.inputs[5], 'display_shape'):
        group_017_1.inputs[5].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[5], 'enabled'):
        group_017_1.inputs[5].enabled = True
    if hasattr(group_017_1.inputs[5], 'hide'):
        group_017_1.inputs[5].hide = False
    if hasattr(group_017_1.inputs[5], 'hide_value'):
        group_017_1.inputs[5].hide_value = False
    if hasattr(group_017_1.inputs[5], 'name'):
        group_017_1.inputs[5].name = 'Slot 3'
    if hasattr(group_017_1.inputs[5], 'show_expanded'):
        group_017_1.inputs[5].show_expanded = False
    if hasattr(group_017_1.inputs[6], 'default_value'):
        group_017_1.inputs[6].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_017_1.inputs[6], 'display_shape'):
        group_017_1.inputs[6].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[6], 'enabled'):
        group_017_1.inputs[6].enabled = True
    if hasattr(group_017_1.inputs[6], 'hide'):
        group_017_1.inputs[6].hide = False
    if hasattr(group_017_1.inputs[6], 'hide_value'):
        group_017_1.inputs[6].hide_value = False
    if hasattr(group_017_1.inputs[6], 'name'):
        group_017_1.inputs[6].name = 'Slot 4'
    if hasattr(group_017_1.inputs[6], 'show_expanded'):
        group_017_1.inputs[6].show_expanded = False
    if hasattr(group_017_1.inputs[7], 'default_value'):
        group_017_1.inputs[7].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_017_1.inputs[7], 'display_shape'):
        group_017_1.inputs[7].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[7], 'enabled'):
        group_017_1.inputs[7].enabled = True
    if hasattr(group_017_1.inputs[7], 'hide'):
        group_017_1.inputs[7].hide = False
    if hasattr(group_017_1.inputs[7], 'hide_value'):
        group_017_1.inputs[7].hide_value = False
    if hasattr(group_017_1.inputs[7], 'name'):
        group_017_1.inputs[7].name = 'Slot 5'
    if hasattr(group_017_1.inputs[7], 'show_expanded'):
        group_017_1.inputs[7].show_expanded = False
    if hasattr(group_017_1.inputs[8], 'default_value'):
        group_017_1.inputs[8].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_017_1.inputs[8], 'display_shape'):
        group_017_1.inputs[8].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[8], 'enabled'):
        group_017_1.inputs[8].enabled = True
    if hasattr(group_017_1.inputs[8], 'hide'):
        group_017_1.inputs[8].hide = False
    if hasattr(group_017_1.inputs[8], 'hide_value'):
        group_017_1.inputs[8].hide_value = False
    if hasattr(group_017_1.inputs[8], 'name'):
        group_017_1.inputs[8].name = 'Slot 6'
    if hasattr(group_017_1.inputs[8], 'show_expanded'):
        group_017_1.inputs[8].show_expanded = False
    if hasattr(group_017_1.inputs[9], 'default_value'):
        group_017_1.inputs[9].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_017_1.inputs[9], 'display_shape'):
        group_017_1.inputs[9].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[9], 'enabled'):
        group_017_1.inputs[9].enabled = True
    if hasattr(group_017_1.inputs[9], 'hide'):
        group_017_1.inputs[9].hide = False
    if hasattr(group_017_1.inputs[9], 'hide_value'):
        group_017_1.inputs[9].hide_value = False
    if hasattr(group_017_1.inputs[9], 'name'):
        group_017_1.inputs[9].name = 'Grime'
    if hasattr(group_017_1.inputs[9], 'show_expanded'):
        group_017_1.inputs[9].show_expanded = False
    if hasattr(group_017_1.inputs[10], 'default_value'):
        group_017_1.inputs[10].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_017_1.inputs[10], 'display_shape'):
        group_017_1.inputs[10].display_shape = 'CIRCLE'
    if hasattr(group_017_1.inputs[10], 'enabled'):
        group_017_1.inputs[10].enabled = True
    if hasattr(group_017_1.inputs[10], 'hide'):
        group_017_1.inputs[10].hide = False
    if hasattr(group_017_1.inputs[10], 'hide_value'):
        group_017_1.inputs[10].hide_value = False
    if hasattr(group_017_1.inputs[10], 'name'):
        group_017_1.inputs[10].name = 'Dust'
    if hasattr(group_017_1.inputs[10], 'show_expanded'):
        group_017_1.inputs[10].show_expanded = False
    if hasattr(group_017_1.outputs[0], 'default_value'):
        group_017_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_017_1.outputs[0], 'display_shape'):
        group_017_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_017_1.outputs[0], 'enabled'):
        group_017_1.outputs[0].enabled = True
    if hasattr(group_017_1.outputs[0], 'hide'):
        group_017_1.outputs[0].hide = False
    if hasattr(group_017_1.outputs[0], 'hide_value'):
        group_017_1.outputs[0].hide_value = False
    if hasattr(group_017_1.outputs[0], 'name'):
        group_017_1.outputs[0].name = 'Color'
    if hasattr(group_017_1.outputs[0], 'show_expanded'):
        group_017_1.outputs[0].show_expanded = False

    group_input_005_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_005_1, 'color'):
        group_input_005_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_005_1, 'hide'):
        group_input_005_1.hide = False
    if hasattr(group_input_005_1, 'location'):
        group_input_005_1.location = (-2120.0, 720.0000610351562)
    if hasattr(group_input_005_1, 'mute'):
        group_input_005_1.mute = False
    if hasattr(group_input_005_1, 'name'):
        group_input_005_1.name = 'Group Input.005'
    if hasattr(group_input_005_1, 'use_custom_color'):
        group_input_005_1.use_custom_color = False
    if hasattr(group_input_005_1, 'width'):
        group_input_005_1.width = 200.9415283203125
    if hasattr(group_input_005_1.outputs[0], 'default_value'):
        group_input_005_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[0], 'display_shape'):
        group_input_005_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[0], 'enabled'):
        group_input_005_1.outputs[0].enabled = True
    if hasattr(group_input_005_1.outputs[0], 'hide'):
        group_input_005_1.outputs[0].hide = False
    if hasattr(group_input_005_1.outputs[0], 'hide_value'):
        group_input_005_1.outputs[0].hide_value = False
    if hasattr(group_input_005_1.outputs[0], 'name'):
        group_input_005_1.outputs[0].name = 'ASG'
    if hasattr(group_input_005_1.outputs[0], 'show_expanded'):
        group_input_005_1.outputs[0].show_expanded = False
    if hasattr(group_input_005_1.outputs[1], 'default_value'):
        group_input_005_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[1], 'display_shape'):
        group_input_005_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[1], 'enabled'):
        group_input_005_1.outputs[1].enabled = True
    if hasattr(group_input_005_1.outputs[1], 'hide'):
        group_input_005_1.outputs[1].hide = False
    if hasattr(group_input_005_1.outputs[1], 'hide_value'):
        group_input_005_1.outputs[1].hide_value = False
    if hasattr(group_input_005_1.outputs[1], 'name'):
        group_input_005_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_005_1.outputs[1], 'show_expanded'):
        group_input_005_1.outputs[1].show_expanded = False
    if hasattr(group_input_005_1.outputs[2], 'default_value'):
        group_input_005_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[2], 'display_shape'):
        group_input_005_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[2], 'enabled'):
        group_input_005_1.outputs[2].enabled = True
    if hasattr(group_input_005_1.outputs[2], 'hide'):
        group_input_005_1.outputs[2].hide = False
    if hasattr(group_input_005_1.outputs[2], 'hide_value'):
        group_input_005_1.outputs[2].hide_value = False
    if hasattr(group_input_005_1.outputs[2], 'name'):
        group_input_005_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_005_1.outputs[2], 'show_expanded'):
        group_input_005_1.outputs[2].show_expanded = False
    if hasattr(group_input_005_1.outputs[3], 'default_value'):
        group_input_005_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[3], 'display_shape'):
        group_input_005_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[3], 'enabled'):
        group_input_005_1.outputs[3].enabled = True
    if hasattr(group_input_005_1.outputs[3], 'hide'):
        group_input_005_1.outputs[3].hide = True
    if hasattr(group_input_005_1.outputs[3], 'hide_value'):
        group_input_005_1.outputs[3].hide_value = False
    if hasattr(group_input_005_1.outputs[3], 'name'):
        group_input_005_1.outputs[3].name = 'Normal'
    if hasattr(group_input_005_1.outputs[3], 'show_expanded'):
        group_input_005_1.outputs[3].show_expanded = False
    if hasattr(group_input_005_1.outputs[4], 'default_value'):
        group_input_005_1.outputs[4].default_value = 0.0
    if hasattr(group_input_005_1.outputs[4], 'display_shape'):
        group_input_005_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[4], 'enabled'):
        group_input_005_1.outputs[4].enabled = True
    if hasattr(group_input_005_1.outputs[4], 'hide'):
        group_input_005_1.outputs[4].hide = True
    if hasattr(group_input_005_1.outputs[4], 'hide_value'):
        group_input_005_1.outputs[4].hide_value = False
    if hasattr(group_input_005_1.outputs[4], 'name'):
        group_input_005_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_005_1.outputs[4], 'show_expanded'):
        group_input_005_1.outputs[4].show_expanded = False
    if hasattr(group_input_005_1.outputs[5], 'default_value'):
        group_input_005_1.outputs[5].default_value = 1.0
    if hasattr(group_input_005_1.outputs[5], 'display_shape'):
        group_input_005_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[5], 'enabled'):
        group_input_005_1.outputs[5].enabled = True
    if hasattr(group_input_005_1.outputs[5], 'hide'):
        group_input_005_1.outputs[5].hide = True
    if hasattr(group_input_005_1.outputs[5], 'hide_value'):
        group_input_005_1.outputs[5].hide_value = False
    if hasattr(group_input_005_1.outputs[5], 'name'):
        group_input_005_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_005_1.outputs[5], 'show_expanded'):
        group_input_005_1.outputs[5].show_expanded = False
    if hasattr(group_input_005_1.outputs[6], 'default_value'):
        group_input_005_1.outputs[6].default_value = 0.0
    if hasattr(group_input_005_1.outputs[6], 'display_shape'):
        group_input_005_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[6], 'enabled'):
        group_input_005_1.outputs[6].enabled = True
    if hasattr(group_input_005_1.outputs[6], 'hide'):
        group_input_005_1.outputs[6].hide = True
    if hasattr(group_input_005_1.outputs[6], 'hide_value'):
        group_input_005_1.outputs[6].hide_value = False
    if hasattr(group_input_005_1.outputs[6], 'name'):
        group_input_005_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_005_1.outputs[6], 'show_expanded'):
        group_input_005_1.outputs[6].show_expanded = False
    if hasattr(group_input_005_1.outputs[7], 'default_value'):
        group_input_005_1.outputs[7].default_value = 0.0
    if hasattr(group_input_005_1.outputs[7], 'display_shape'):
        group_input_005_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[7], 'enabled'):
        group_input_005_1.outputs[7].enabled = True
    if hasattr(group_input_005_1.outputs[7], 'hide'):
        group_input_005_1.outputs[7].hide = True
    if hasattr(group_input_005_1.outputs[7], 'hide_value'):
        group_input_005_1.outputs[7].hide_value = False
    if hasattr(group_input_005_1.outputs[7], 'name'):
        group_input_005_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_005_1.outputs[7], 'show_expanded'):
        group_input_005_1.outputs[7].show_expanded = False
    if hasattr(group_input_005_1.outputs[8], 'default_value'):
        group_input_005_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[8], 'display_shape'):
        group_input_005_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[8], 'enabled'):
        group_input_005_1.outputs[8].enabled = True
    if hasattr(group_input_005_1.outputs[8], 'hide'):
        group_input_005_1.outputs[8].hide = True
    if hasattr(group_input_005_1.outputs[8], 'hide_value'):
        group_input_005_1.outputs[8].hide_value = False
    if hasattr(group_input_005_1.outputs[8], 'name'):
        group_input_005_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_005_1.outputs[8], 'show_expanded'):
        group_input_005_1.outputs[8].show_expanded = False
    if hasattr(group_input_005_1.outputs[9], 'default_value'):
        group_input_005_1.outputs[9].default_value = 0.0
    if hasattr(group_input_005_1.outputs[9], 'display_shape'):
        group_input_005_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[9], 'enabled'):
        group_input_005_1.outputs[9].enabled = True
    if hasattr(group_input_005_1.outputs[9], 'hide'):
        group_input_005_1.outputs[9].hide = True
    if hasattr(group_input_005_1.outputs[9], 'hide_value'):
        group_input_005_1.outputs[9].hide_value = False
    if hasattr(group_input_005_1.outputs[9], 'name'):
        group_input_005_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_005_1.outputs[9], 'show_expanded'):
        group_input_005_1.outputs[9].show_expanded = False
    if hasattr(group_input_005_1.outputs[10], 'default_value'):
        group_input_005_1.outputs[10].default_value = 0.0
    if hasattr(group_input_005_1.outputs[10], 'display_shape'):
        group_input_005_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[10], 'enabled'):
        group_input_005_1.outputs[10].enabled = True
    if hasattr(group_input_005_1.outputs[10], 'hide'):
        group_input_005_1.outputs[10].hide = True
    if hasattr(group_input_005_1.outputs[10], 'hide_value'):
        group_input_005_1.outputs[10].hide_value = False
    if hasattr(group_input_005_1.outputs[10], 'name'):
        group_input_005_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_005_1.outputs[10], 'show_expanded'):
        group_input_005_1.outputs[10].show_expanded = False
    if hasattr(group_input_005_1.outputs[11], 'default_value'):
        group_input_005_1.outputs[11].default_value = 0.0
    if hasattr(group_input_005_1.outputs[11], 'display_shape'):
        group_input_005_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[11], 'enabled'):
        group_input_005_1.outputs[11].enabled = True
    if hasattr(group_input_005_1.outputs[11], 'hide'):
        group_input_005_1.outputs[11].hide = True
    if hasattr(group_input_005_1.outputs[11], 'hide_value'):
        group_input_005_1.outputs[11].hide_value = False
    if hasattr(group_input_005_1.outputs[11], 'name'):
        group_input_005_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_005_1.outputs[11], 'show_expanded'):
        group_input_005_1.outputs[11].show_expanded = False
    if hasattr(group_input_005_1.outputs[12], 'default_value'):
        group_input_005_1.outputs[12].default_value = 0.0
    if hasattr(group_input_005_1.outputs[12], 'display_shape'):
        group_input_005_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[12], 'enabled'):
        group_input_005_1.outputs[12].enabled = True
    if hasattr(group_input_005_1.outputs[12], 'hide'):
        group_input_005_1.outputs[12].hide = True
    if hasattr(group_input_005_1.outputs[12], 'hide_value'):
        group_input_005_1.outputs[12].hide_value = False
    if hasattr(group_input_005_1.outputs[12], 'name'):
        group_input_005_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_005_1.outputs[12], 'show_expanded'):
        group_input_005_1.outputs[12].show_expanded = False
    if hasattr(group_input_005_1.outputs[13], 'default_value'):
        group_input_005_1.outputs[13].default_value = 0.0
    if hasattr(group_input_005_1.outputs[13], 'display_shape'):
        group_input_005_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[13], 'enabled'):
        group_input_005_1.outputs[13].enabled = True
    if hasattr(group_input_005_1.outputs[13], 'hide'):
        group_input_005_1.outputs[13].hide = True
    if hasattr(group_input_005_1.outputs[13], 'hide_value'):
        group_input_005_1.outputs[13].hide_value = False
    if hasattr(group_input_005_1.outputs[13], 'name'):
        group_input_005_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_005_1.outputs[13], 'show_expanded'):
        group_input_005_1.outputs[13].show_expanded = False
    if hasattr(group_input_005_1.outputs[14], 'default_value'):
        group_input_005_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_005_1.outputs[14], 'display_shape'):
        group_input_005_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[14], 'enabled'):
        group_input_005_1.outputs[14].enabled = True
    if hasattr(group_input_005_1.outputs[14], 'hide'):
        group_input_005_1.outputs[14].hide = True
    if hasattr(group_input_005_1.outputs[14], 'hide_value'):
        group_input_005_1.outputs[14].hide_value = False
    if hasattr(group_input_005_1.outputs[14], 'name'):
        group_input_005_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_005_1.outputs[14], 'show_expanded'):
        group_input_005_1.outputs[14].show_expanded = False
    if hasattr(group_input_005_1.outputs[15], 'default_value'):
        group_input_005_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_005_1.outputs[15], 'display_shape'):
        group_input_005_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[15], 'enabled'):
        group_input_005_1.outputs[15].enabled = True
    if hasattr(group_input_005_1.outputs[15], 'hide'):
        group_input_005_1.outputs[15].hide = True
    if hasattr(group_input_005_1.outputs[15], 'hide_value'):
        group_input_005_1.outputs[15].hide_value = False
    if hasattr(group_input_005_1.outputs[15], 'name'):
        group_input_005_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_005_1.outputs[15], 'show_expanded'):
        group_input_005_1.outputs[15].show_expanded = False
    if hasattr(group_input_005_1.outputs[16], 'default_value'):
        group_input_005_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_005_1.outputs[16], 'display_shape'):
        group_input_005_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[16], 'enabled'):
        group_input_005_1.outputs[16].enabled = True
    if hasattr(group_input_005_1.outputs[16], 'hide'):
        group_input_005_1.outputs[16].hide = True
    if hasattr(group_input_005_1.outputs[16], 'hide_value'):
        group_input_005_1.outputs[16].hide_value = False
    if hasattr(group_input_005_1.outputs[16], 'name'):
        group_input_005_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_005_1.outputs[16], 'show_expanded'):
        group_input_005_1.outputs[16].show_expanded = False
    if hasattr(group_input_005_1.outputs[17], 'default_value'):
        group_input_005_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_005_1.outputs[17], 'display_shape'):
        group_input_005_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[17], 'enabled'):
        group_input_005_1.outputs[17].enabled = True
    if hasattr(group_input_005_1.outputs[17], 'hide'):
        group_input_005_1.outputs[17].hide = False
    if hasattr(group_input_005_1.outputs[17], 'hide_value'):
        group_input_005_1.outputs[17].hide_value = False
    if hasattr(group_input_005_1.outputs[17], 'name'):
        group_input_005_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_005_1.outputs[17], 'show_expanded'):
        group_input_005_1.outputs[17].show_expanded = False
    if hasattr(group_input_005_1.outputs[18], 'default_value'):
        group_input_005_1.outputs[18].default_value = 0.0
    if hasattr(group_input_005_1.outputs[18], 'display_shape'):
        group_input_005_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[18], 'enabled'):
        group_input_005_1.outputs[18].enabled = True
    if hasattr(group_input_005_1.outputs[18], 'hide'):
        group_input_005_1.outputs[18].hide = True
    if hasattr(group_input_005_1.outputs[18], 'hide_value'):
        group_input_005_1.outputs[18].hide_value = False
    if hasattr(group_input_005_1.outputs[18], 'name'):
        group_input_005_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_005_1.outputs[18], 'show_expanded'):
        group_input_005_1.outputs[18].show_expanded = False
    if hasattr(group_input_005_1.outputs[19], 'default_value'):
        group_input_005_1.outputs[19].default_value = 0.0
    if hasattr(group_input_005_1.outputs[19], 'display_shape'):
        group_input_005_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[19], 'enabled'):
        group_input_005_1.outputs[19].enabled = True
    if hasattr(group_input_005_1.outputs[19], 'hide'):
        group_input_005_1.outputs[19].hide = True
    if hasattr(group_input_005_1.outputs[19], 'hide_value'):
        group_input_005_1.outputs[19].hide_value = False
    if hasattr(group_input_005_1.outputs[19], 'name'):
        group_input_005_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_005_1.outputs[19], 'show_expanded'):
        group_input_005_1.outputs[19].show_expanded = False
    if hasattr(group_input_005_1.outputs[20], 'default_value'):
        group_input_005_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[20], 'display_shape'):
        group_input_005_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[20], 'enabled'):
        group_input_005_1.outputs[20].enabled = True
    if hasattr(group_input_005_1.outputs[20], 'hide'):
        group_input_005_1.outputs[20].hide = True
    if hasattr(group_input_005_1.outputs[20], 'hide_value'):
        group_input_005_1.outputs[20].hide_value = False
    if hasattr(group_input_005_1.outputs[20], 'name'):
        group_input_005_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_005_1.outputs[20], 'show_expanded'):
        group_input_005_1.outputs[20].show_expanded = False
    if hasattr(group_input_005_1.outputs[21], 'default_value'):
        group_input_005_1.outputs[21].default_value = 0.0
    if hasattr(group_input_005_1.outputs[21], 'display_shape'):
        group_input_005_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[21], 'enabled'):
        group_input_005_1.outputs[21].enabled = True
    if hasattr(group_input_005_1.outputs[21], 'hide'):
        group_input_005_1.outputs[21].hide = True
    if hasattr(group_input_005_1.outputs[21], 'hide_value'):
        group_input_005_1.outputs[21].hide_value = False
    if hasattr(group_input_005_1.outputs[21], 'name'):
        group_input_005_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_005_1.outputs[21], 'show_expanded'):
        group_input_005_1.outputs[21].show_expanded = False
    if hasattr(group_input_005_1.outputs[22], 'default_value'):
        group_input_005_1.outputs[22].default_value = 0.0
    if hasattr(group_input_005_1.outputs[22], 'display_shape'):
        group_input_005_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[22], 'enabled'):
        group_input_005_1.outputs[22].enabled = True
    if hasattr(group_input_005_1.outputs[22], 'hide'):
        group_input_005_1.outputs[22].hide = True
    if hasattr(group_input_005_1.outputs[22], 'hide_value'):
        group_input_005_1.outputs[22].hide_value = False
    if hasattr(group_input_005_1.outputs[22], 'name'):
        group_input_005_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_005_1.outputs[22], 'show_expanded'):
        group_input_005_1.outputs[22].show_expanded = False
    if hasattr(group_input_005_1.outputs[23], 'default_value'):
        group_input_005_1.outputs[23].default_value = 0.0
    if hasattr(group_input_005_1.outputs[23], 'display_shape'):
        group_input_005_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[23], 'enabled'):
        group_input_005_1.outputs[23].enabled = True
    if hasattr(group_input_005_1.outputs[23], 'hide'):
        group_input_005_1.outputs[23].hide = True
    if hasattr(group_input_005_1.outputs[23], 'hide_value'):
        group_input_005_1.outputs[23].hide_value = False
    if hasattr(group_input_005_1.outputs[23], 'name'):
        group_input_005_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_005_1.outputs[23], 'show_expanded'):
        group_input_005_1.outputs[23].show_expanded = False
    if hasattr(group_input_005_1.outputs[24], 'default_value'):
        group_input_005_1.outputs[24].default_value = 0.0
    if hasattr(group_input_005_1.outputs[24], 'display_shape'):
        group_input_005_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[24], 'enabled'):
        group_input_005_1.outputs[24].enabled = True
    if hasattr(group_input_005_1.outputs[24], 'hide'):
        group_input_005_1.outputs[24].hide = True
    if hasattr(group_input_005_1.outputs[24], 'hide_value'):
        group_input_005_1.outputs[24].hide_value = False
    if hasattr(group_input_005_1.outputs[24], 'name'):
        group_input_005_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_005_1.outputs[24], 'show_expanded'):
        group_input_005_1.outputs[24].show_expanded = False
    if hasattr(group_input_005_1.outputs[25], 'default_value'):
        group_input_005_1.outputs[25].default_value = 0.0
    if hasattr(group_input_005_1.outputs[25], 'display_shape'):
        group_input_005_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[25], 'enabled'):
        group_input_005_1.outputs[25].enabled = True
    if hasattr(group_input_005_1.outputs[25], 'hide'):
        group_input_005_1.outputs[25].hide = True
    if hasattr(group_input_005_1.outputs[25], 'hide_value'):
        group_input_005_1.outputs[25].hide_value = False
    if hasattr(group_input_005_1.outputs[25], 'name'):
        group_input_005_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_005_1.outputs[25], 'show_expanded'):
        group_input_005_1.outputs[25].show_expanded = False
    if hasattr(group_input_005_1.outputs[26], 'default_value'):
        group_input_005_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_005_1.outputs[26], 'display_shape'):
        group_input_005_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[26], 'enabled'):
        group_input_005_1.outputs[26].enabled = True
    if hasattr(group_input_005_1.outputs[26], 'hide'):
        group_input_005_1.outputs[26].hide = True
    if hasattr(group_input_005_1.outputs[26], 'hide_value'):
        group_input_005_1.outputs[26].hide_value = False
    if hasattr(group_input_005_1.outputs[26], 'name'):
        group_input_005_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_005_1.outputs[26], 'show_expanded'):
        group_input_005_1.outputs[26].show_expanded = False
    if hasattr(group_input_005_1.outputs[27], 'default_value'):
        group_input_005_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_005_1.outputs[27], 'display_shape'):
        group_input_005_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[27], 'enabled'):
        group_input_005_1.outputs[27].enabled = True
    if hasattr(group_input_005_1.outputs[27], 'hide'):
        group_input_005_1.outputs[27].hide = True
    if hasattr(group_input_005_1.outputs[27], 'hide_value'):
        group_input_005_1.outputs[27].hide_value = False
    if hasattr(group_input_005_1.outputs[27], 'name'):
        group_input_005_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_005_1.outputs[27], 'show_expanded'):
        group_input_005_1.outputs[27].show_expanded = False
    if hasattr(group_input_005_1.outputs[28], 'default_value'):
        group_input_005_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_005_1.outputs[28], 'display_shape'):
        group_input_005_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[28], 'enabled'):
        group_input_005_1.outputs[28].enabled = True
    if hasattr(group_input_005_1.outputs[28], 'hide'):
        group_input_005_1.outputs[28].hide = True
    if hasattr(group_input_005_1.outputs[28], 'hide_value'):
        group_input_005_1.outputs[28].hide_value = False
    if hasattr(group_input_005_1.outputs[28], 'name'):
        group_input_005_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_005_1.outputs[28], 'show_expanded'):
        group_input_005_1.outputs[28].show_expanded = False
    if hasattr(group_input_005_1.outputs[29], 'default_value'):
        group_input_005_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_005_1.outputs[29], 'display_shape'):
        group_input_005_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[29], 'enabled'):
        group_input_005_1.outputs[29].enabled = True
    if hasattr(group_input_005_1.outputs[29], 'hide'):
        group_input_005_1.outputs[29].hide = False
    if hasattr(group_input_005_1.outputs[29], 'hide_value'):
        group_input_005_1.outputs[29].hide_value = False
    if hasattr(group_input_005_1.outputs[29], 'name'):
        group_input_005_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_005_1.outputs[29], 'show_expanded'):
        group_input_005_1.outputs[29].show_expanded = False
    if hasattr(group_input_005_1.outputs[30], 'default_value'):
        group_input_005_1.outputs[30].default_value = 0.0
    if hasattr(group_input_005_1.outputs[30], 'display_shape'):
        group_input_005_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[30], 'enabled'):
        group_input_005_1.outputs[30].enabled = True
    if hasattr(group_input_005_1.outputs[30], 'hide'):
        group_input_005_1.outputs[30].hide = True
    if hasattr(group_input_005_1.outputs[30], 'hide_value'):
        group_input_005_1.outputs[30].hide_value = False
    if hasattr(group_input_005_1.outputs[30], 'name'):
        group_input_005_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_005_1.outputs[30], 'show_expanded'):
        group_input_005_1.outputs[30].show_expanded = False
    if hasattr(group_input_005_1.outputs[31], 'default_value'):
        group_input_005_1.outputs[31].default_value = 0.0
    if hasattr(group_input_005_1.outputs[31], 'display_shape'):
        group_input_005_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[31], 'enabled'):
        group_input_005_1.outputs[31].enabled = True
    if hasattr(group_input_005_1.outputs[31], 'hide'):
        group_input_005_1.outputs[31].hide = True
    if hasattr(group_input_005_1.outputs[31], 'hide_value'):
        group_input_005_1.outputs[31].hide_value = False
    if hasattr(group_input_005_1.outputs[31], 'name'):
        group_input_005_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_005_1.outputs[31], 'show_expanded'):
        group_input_005_1.outputs[31].show_expanded = False
    if hasattr(group_input_005_1.outputs[32], 'default_value'):
        group_input_005_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[32], 'display_shape'):
        group_input_005_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[32], 'enabled'):
        group_input_005_1.outputs[32].enabled = True
    if hasattr(group_input_005_1.outputs[32], 'hide'):
        group_input_005_1.outputs[32].hide = True
    if hasattr(group_input_005_1.outputs[32], 'hide_value'):
        group_input_005_1.outputs[32].hide_value = False
    if hasattr(group_input_005_1.outputs[32], 'name'):
        group_input_005_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_005_1.outputs[32], 'show_expanded'):
        group_input_005_1.outputs[32].show_expanded = False
    if hasattr(group_input_005_1.outputs[33], 'default_value'):
        group_input_005_1.outputs[33].default_value = 0.0
    if hasattr(group_input_005_1.outputs[33], 'display_shape'):
        group_input_005_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[33], 'enabled'):
        group_input_005_1.outputs[33].enabled = True
    if hasattr(group_input_005_1.outputs[33], 'hide'):
        group_input_005_1.outputs[33].hide = True
    if hasattr(group_input_005_1.outputs[33], 'hide_value'):
        group_input_005_1.outputs[33].hide_value = False
    if hasattr(group_input_005_1.outputs[33], 'name'):
        group_input_005_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_005_1.outputs[33], 'show_expanded'):
        group_input_005_1.outputs[33].show_expanded = False
    if hasattr(group_input_005_1.outputs[34], 'default_value'):
        group_input_005_1.outputs[34].default_value = 0.0
    if hasattr(group_input_005_1.outputs[34], 'display_shape'):
        group_input_005_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[34], 'enabled'):
        group_input_005_1.outputs[34].enabled = True
    if hasattr(group_input_005_1.outputs[34], 'hide'):
        group_input_005_1.outputs[34].hide = True
    if hasattr(group_input_005_1.outputs[34], 'hide_value'):
        group_input_005_1.outputs[34].hide_value = False
    if hasattr(group_input_005_1.outputs[34], 'name'):
        group_input_005_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_005_1.outputs[34], 'show_expanded'):
        group_input_005_1.outputs[34].show_expanded = False
    if hasattr(group_input_005_1.outputs[35], 'default_value'):
        group_input_005_1.outputs[35].default_value = 0.0
    if hasattr(group_input_005_1.outputs[35], 'display_shape'):
        group_input_005_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[35], 'enabled'):
        group_input_005_1.outputs[35].enabled = True
    if hasattr(group_input_005_1.outputs[35], 'hide'):
        group_input_005_1.outputs[35].hide = True
    if hasattr(group_input_005_1.outputs[35], 'hide_value'):
        group_input_005_1.outputs[35].hide_value = False
    if hasattr(group_input_005_1.outputs[35], 'name'):
        group_input_005_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_005_1.outputs[35], 'show_expanded'):
        group_input_005_1.outputs[35].show_expanded = False
    if hasattr(group_input_005_1.outputs[36], 'default_value'):
        group_input_005_1.outputs[36].default_value = 0.0
    if hasattr(group_input_005_1.outputs[36], 'display_shape'):
        group_input_005_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[36], 'enabled'):
        group_input_005_1.outputs[36].enabled = True
    if hasattr(group_input_005_1.outputs[36], 'hide'):
        group_input_005_1.outputs[36].hide = True
    if hasattr(group_input_005_1.outputs[36], 'hide_value'):
        group_input_005_1.outputs[36].hide_value = False
    if hasattr(group_input_005_1.outputs[36], 'name'):
        group_input_005_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_005_1.outputs[36], 'show_expanded'):
        group_input_005_1.outputs[36].show_expanded = False
    if hasattr(group_input_005_1.outputs[37], 'default_value'):
        group_input_005_1.outputs[37].default_value = 0.0
    if hasattr(group_input_005_1.outputs[37], 'display_shape'):
        group_input_005_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[37], 'enabled'):
        group_input_005_1.outputs[37].enabled = True
    if hasattr(group_input_005_1.outputs[37], 'hide'):
        group_input_005_1.outputs[37].hide = True
    if hasattr(group_input_005_1.outputs[37], 'hide_value'):
        group_input_005_1.outputs[37].hide_value = False
    if hasattr(group_input_005_1.outputs[37], 'name'):
        group_input_005_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_005_1.outputs[37], 'show_expanded'):
        group_input_005_1.outputs[37].show_expanded = False
    if hasattr(group_input_005_1.outputs[38], 'default_value'):
        group_input_005_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_005_1.outputs[38], 'display_shape'):
        group_input_005_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[38], 'enabled'):
        group_input_005_1.outputs[38].enabled = True
    if hasattr(group_input_005_1.outputs[38], 'hide'):
        group_input_005_1.outputs[38].hide = True
    if hasattr(group_input_005_1.outputs[38], 'hide_value'):
        group_input_005_1.outputs[38].hide_value = False
    if hasattr(group_input_005_1.outputs[38], 'name'):
        group_input_005_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_005_1.outputs[38], 'show_expanded'):
        group_input_005_1.outputs[38].show_expanded = False
    if hasattr(group_input_005_1.outputs[39], 'default_value'):
        group_input_005_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_005_1.outputs[39], 'display_shape'):
        group_input_005_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[39], 'enabled'):
        group_input_005_1.outputs[39].enabled = True
    if hasattr(group_input_005_1.outputs[39], 'hide'):
        group_input_005_1.outputs[39].hide = True
    if hasattr(group_input_005_1.outputs[39], 'hide_value'):
        group_input_005_1.outputs[39].hide_value = False
    if hasattr(group_input_005_1.outputs[39], 'name'):
        group_input_005_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_005_1.outputs[39], 'show_expanded'):
        group_input_005_1.outputs[39].show_expanded = False
    if hasattr(group_input_005_1.outputs[40], 'default_value'):
        group_input_005_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_005_1.outputs[40], 'display_shape'):
        group_input_005_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[40], 'enabled'):
        group_input_005_1.outputs[40].enabled = True
    if hasattr(group_input_005_1.outputs[40], 'hide'):
        group_input_005_1.outputs[40].hide = True
    if hasattr(group_input_005_1.outputs[40], 'hide_value'):
        group_input_005_1.outputs[40].hide_value = False
    if hasattr(group_input_005_1.outputs[40], 'name'):
        group_input_005_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_005_1.outputs[40], 'show_expanded'):
        group_input_005_1.outputs[40].show_expanded = False
    if hasattr(group_input_005_1.outputs[41], 'default_value'):
        group_input_005_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_005_1.outputs[41], 'display_shape'):
        group_input_005_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[41], 'enabled'):
        group_input_005_1.outputs[41].enabled = True
    if hasattr(group_input_005_1.outputs[41], 'hide'):
        group_input_005_1.outputs[41].hide = False
    if hasattr(group_input_005_1.outputs[41], 'hide_value'):
        group_input_005_1.outputs[41].hide_value = False
    if hasattr(group_input_005_1.outputs[41], 'name'):
        group_input_005_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_005_1.outputs[41], 'show_expanded'):
        group_input_005_1.outputs[41].show_expanded = False
    if hasattr(group_input_005_1.outputs[42], 'default_value'):
        group_input_005_1.outputs[42].default_value = 0.0
    if hasattr(group_input_005_1.outputs[42], 'display_shape'):
        group_input_005_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[42], 'enabled'):
        group_input_005_1.outputs[42].enabled = True
    if hasattr(group_input_005_1.outputs[42], 'hide'):
        group_input_005_1.outputs[42].hide = True
    if hasattr(group_input_005_1.outputs[42], 'hide_value'):
        group_input_005_1.outputs[42].hide_value = False
    if hasattr(group_input_005_1.outputs[42], 'name'):
        group_input_005_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_005_1.outputs[42], 'show_expanded'):
        group_input_005_1.outputs[42].show_expanded = False
    if hasattr(group_input_005_1.outputs[43], 'default_value'):
        group_input_005_1.outputs[43].default_value = 0.0
    if hasattr(group_input_005_1.outputs[43], 'display_shape'):
        group_input_005_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[43], 'enabled'):
        group_input_005_1.outputs[43].enabled = True
    if hasattr(group_input_005_1.outputs[43], 'hide'):
        group_input_005_1.outputs[43].hide = True
    if hasattr(group_input_005_1.outputs[43], 'hide_value'):
        group_input_005_1.outputs[43].hide_value = False
    if hasattr(group_input_005_1.outputs[43], 'name'):
        group_input_005_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_005_1.outputs[43], 'show_expanded'):
        group_input_005_1.outputs[43].show_expanded = False
    if hasattr(group_input_005_1.outputs[44], 'default_value'):
        group_input_005_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[44], 'display_shape'):
        group_input_005_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[44], 'enabled'):
        group_input_005_1.outputs[44].enabled = True
    if hasattr(group_input_005_1.outputs[44], 'hide'):
        group_input_005_1.outputs[44].hide = True
    if hasattr(group_input_005_1.outputs[44], 'hide_value'):
        group_input_005_1.outputs[44].hide_value = False
    if hasattr(group_input_005_1.outputs[44], 'name'):
        group_input_005_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_005_1.outputs[44], 'show_expanded'):
        group_input_005_1.outputs[44].show_expanded = False
    if hasattr(group_input_005_1.outputs[45], 'default_value'):
        group_input_005_1.outputs[45].default_value = 0.0
    if hasattr(group_input_005_1.outputs[45], 'display_shape'):
        group_input_005_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[45], 'enabled'):
        group_input_005_1.outputs[45].enabled = True
    if hasattr(group_input_005_1.outputs[45], 'hide'):
        group_input_005_1.outputs[45].hide = True
    if hasattr(group_input_005_1.outputs[45], 'hide_value'):
        group_input_005_1.outputs[45].hide_value = False
    if hasattr(group_input_005_1.outputs[45], 'name'):
        group_input_005_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_005_1.outputs[45], 'show_expanded'):
        group_input_005_1.outputs[45].show_expanded = False
    if hasattr(group_input_005_1.outputs[46], 'default_value'):
        group_input_005_1.outputs[46].default_value = 0.0
    if hasattr(group_input_005_1.outputs[46], 'display_shape'):
        group_input_005_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[46], 'enabled'):
        group_input_005_1.outputs[46].enabled = True
    if hasattr(group_input_005_1.outputs[46], 'hide'):
        group_input_005_1.outputs[46].hide = True
    if hasattr(group_input_005_1.outputs[46], 'hide_value'):
        group_input_005_1.outputs[46].hide_value = False
    if hasattr(group_input_005_1.outputs[46], 'name'):
        group_input_005_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_005_1.outputs[46], 'show_expanded'):
        group_input_005_1.outputs[46].show_expanded = False
    if hasattr(group_input_005_1.outputs[47], 'default_value'):
        group_input_005_1.outputs[47].default_value = 0.0
    if hasattr(group_input_005_1.outputs[47], 'display_shape'):
        group_input_005_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[47], 'enabled'):
        group_input_005_1.outputs[47].enabled = True
    if hasattr(group_input_005_1.outputs[47], 'hide'):
        group_input_005_1.outputs[47].hide = True
    if hasattr(group_input_005_1.outputs[47], 'hide_value'):
        group_input_005_1.outputs[47].hide_value = False
    if hasattr(group_input_005_1.outputs[47], 'name'):
        group_input_005_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_005_1.outputs[47], 'show_expanded'):
        group_input_005_1.outputs[47].show_expanded = False
    if hasattr(group_input_005_1.outputs[48], 'default_value'):
        group_input_005_1.outputs[48].default_value = 0.0
    if hasattr(group_input_005_1.outputs[48], 'display_shape'):
        group_input_005_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[48], 'enabled'):
        group_input_005_1.outputs[48].enabled = True
    if hasattr(group_input_005_1.outputs[48], 'hide'):
        group_input_005_1.outputs[48].hide = True
    if hasattr(group_input_005_1.outputs[48], 'hide_value'):
        group_input_005_1.outputs[48].hide_value = False
    if hasattr(group_input_005_1.outputs[48], 'name'):
        group_input_005_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_005_1.outputs[48], 'show_expanded'):
        group_input_005_1.outputs[48].show_expanded = False
    if hasattr(group_input_005_1.outputs[49], 'default_value'):
        group_input_005_1.outputs[49].default_value = 0.0
    if hasattr(group_input_005_1.outputs[49], 'display_shape'):
        group_input_005_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[49], 'enabled'):
        group_input_005_1.outputs[49].enabled = True
    if hasattr(group_input_005_1.outputs[49], 'hide'):
        group_input_005_1.outputs[49].hide = True
    if hasattr(group_input_005_1.outputs[49], 'hide_value'):
        group_input_005_1.outputs[49].hide_value = False
    if hasattr(group_input_005_1.outputs[49], 'name'):
        group_input_005_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_005_1.outputs[49], 'show_expanded'):
        group_input_005_1.outputs[49].show_expanded = False
    if hasattr(group_input_005_1.outputs[50], 'default_value'):
        group_input_005_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_005_1.outputs[50], 'display_shape'):
        group_input_005_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[50], 'enabled'):
        group_input_005_1.outputs[50].enabled = True
    if hasattr(group_input_005_1.outputs[50], 'hide'):
        group_input_005_1.outputs[50].hide = True
    if hasattr(group_input_005_1.outputs[50], 'hide_value'):
        group_input_005_1.outputs[50].hide_value = False
    if hasattr(group_input_005_1.outputs[50], 'name'):
        group_input_005_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_005_1.outputs[50], 'show_expanded'):
        group_input_005_1.outputs[50].show_expanded = False
    if hasattr(group_input_005_1.outputs[51], 'default_value'):
        group_input_005_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_005_1.outputs[51], 'display_shape'):
        group_input_005_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[51], 'enabled'):
        group_input_005_1.outputs[51].enabled = True
    if hasattr(group_input_005_1.outputs[51], 'hide'):
        group_input_005_1.outputs[51].hide = True
    if hasattr(group_input_005_1.outputs[51], 'hide_value'):
        group_input_005_1.outputs[51].hide_value = False
    if hasattr(group_input_005_1.outputs[51], 'name'):
        group_input_005_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_005_1.outputs[51], 'show_expanded'):
        group_input_005_1.outputs[51].show_expanded = False
    if hasattr(group_input_005_1.outputs[52], 'default_value'):
        group_input_005_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_005_1.outputs[52], 'display_shape'):
        group_input_005_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[52], 'enabled'):
        group_input_005_1.outputs[52].enabled = True
    if hasattr(group_input_005_1.outputs[52], 'hide'):
        group_input_005_1.outputs[52].hide = True
    if hasattr(group_input_005_1.outputs[52], 'hide_value'):
        group_input_005_1.outputs[52].hide_value = False
    if hasattr(group_input_005_1.outputs[52], 'name'):
        group_input_005_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_005_1.outputs[52], 'show_expanded'):
        group_input_005_1.outputs[52].show_expanded = False
    if hasattr(group_input_005_1.outputs[53], 'default_value'):
        group_input_005_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_005_1.outputs[53], 'display_shape'):
        group_input_005_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[53], 'enabled'):
        group_input_005_1.outputs[53].enabled = True
    if hasattr(group_input_005_1.outputs[53], 'hide'):
        group_input_005_1.outputs[53].hide = False
    if hasattr(group_input_005_1.outputs[53], 'hide_value'):
        group_input_005_1.outputs[53].hide_value = False
    if hasattr(group_input_005_1.outputs[53], 'name'):
        group_input_005_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_005_1.outputs[53], 'show_expanded'):
        group_input_005_1.outputs[53].show_expanded = False
    if hasattr(group_input_005_1.outputs[54], 'default_value'):
        group_input_005_1.outputs[54].default_value = 0.0
    if hasattr(group_input_005_1.outputs[54], 'display_shape'):
        group_input_005_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[54], 'enabled'):
        group_input_005_1.outputs[54].enabled = True
    if hasattr(group_input_005_1.outputs[54], 'hide'):
        group_input_005_1.outputs[54].hide = True
    if hasattr(group_input_005_1.outputs[54], 'hide_value'):
        group_input_005_1.outputs[54].hide_value = False
    if hasattr(group_input_005_1.outputs[54], 'name'):
        group_input_005_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_005_1.outputs[54], 'show_expanded'):
        group_input_005_1.outputs[54].show_expanded = False
    if hasattr(group_input_005_1.outputs[55], 'default_value'):
        group_input_005_1.outputs[55].default_value = 0.0
    if hasattr(group_input_005_1.outputs[55], 'display_shape'):
        group_input_005_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[55], 'enabled'):
        group_input_005_1.outputs[55].enabled = True
    if hasattr(group_input_005_1.outputs[55], 'hide'):
        group_input_005_1.outputs[55].hide = True
    if hasattr(group_input_005_1.outputs[55], 'hide_value'):
        group_input_005_1.outputs[55].hide_value = False
    if hasattr(group_input_005_1.outputs[55], 'name'):
        group_input_005_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_005_1.outputs[55], 'show_expanded'):
        group_input_005_1.outputs[55].show_expanded = False
    if hasattr(group_input_005_1.outputs[56], 'default_value'):
        group_input_005_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[56], 'display_shape'):
        group_input_005_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[56], 'enabled'):
        group_input_005_1.outputs[56].enabled = True
    if hasattr(group_input_005_1.outputs[56], 'hide'):
        group_input_005_1.outputs[56].hide = True
    if hasattr(group_input_005_1.outputs[56], 'hide_value'):
        group_input_005_1.outputs[56].hide_value = False
    if hasattr(group_input_005_1.outputs[56], 'name'):
        group_input_005_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_005_1.outputs[56], 'show_expanded'):
        group_input_005_1.outputs[56].show_expanded = False
    if hasattr(group_input_005_1.outputs[57], 'default_value'):
        group_input_005_1.outputs[57].default_value = 0.0
    if hasattr(group_input_005_1.outputs[57], 'display_shape'):
        group_input_005_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[57], 'enabled'):
        group_input_005_1.outputs[57].enabled = True
    if hasattr(group_input_005_1.outputs[57], 'hide'):
        group_input_005_1.outputs[57].hide = True
    if hasattr(group_input_005_1.outputs[57], 'hide_value'):
        group_input_005_1.outputs[57].hide_value = False
    if hasattr(group_input_005_1.outputs[57], 'name'):
        group_input_005_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_005_1.outputs[57], 'show_expanded'):
        group_input_005_1.outputs[57].show_expanded = False
    if hasattr(group_input_005_1.outputs[58], 'default_value'):
        group_input_005_1.outputs[58].default_value = 0.0
    if hasattr(group_input_005_1.outputs[58], 'display_shape'):
        group_input_005_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[58], 'enabled'):
        group_input_005_1.outputs[58].enabled = True
    if hasattr(group_input_005_1.outputs[58], 'hide'):
        group_input_005_1.outputs[58].hide = True
    if hasattr(group_input_005_1.outputs[58], 'hide_value'):
        group_input_005_1.outputs[58].hide_value = False
    if hasattr(group_input_005_1.outputs[58], 'name'):
        group_input_005_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_005_1.outputs[58], 'show_expanded'):
        group_input_005_1.outputs[58].show_expanded = False
    if hasattr(group_input_005_1.outputs[59], 'default_value'):
        group_input_005_1.outputs[59].default_value = 0.0
    if hasattr(group_input_005_1.outputs[59], 'display_shape'):
        group_input_005_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[59], 'enabled'):
        group_input_005_1.outputs[59].enabled = True
    if hasattr(group_input_005_1.outputs[59], 'hide'):
        group_input_005_1.outputs[59].hide = True
    if hasattr(group_input_005_1.outputs[59], 'hide_value'):
        group_input_005_1.outputs[59].hide_value = False
    if hasattr(group_input_005_1.outputs[59], 'name'):
        group_input_005_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_005_1.outputs[59], 'show_expanded'):
        group_input_005_1.outputs[59].show_expanded = False
    if hasattr(group_input_005_1.outputs[60], 'default_value'):
        group_input_005_1.outputs[60].default_value = 0.0
    if hasattr(group_input_005_1.outputs[60], 'display_shape'):
        group_input_005_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[60], 'enabled'):
        group_input_005_1.outputs[60].enabled = True
    if hasattr(group_input_005_1.outputs[60], 'hide'):
        group_input_005_1.outputs[60].hide = True
    if hasattr(group_input_005_1.outputs[60], 'hide_value'):
        group_input_005_1.outputs[60].hide_value = False
    if hasattr(group_input_005_1.outputs[60], 'name'):
        group_input_005_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_005_1.outputs[60], 'show_expanded'):
        group_input_005_1.outputs[60].show_expanded = False
    if hasattr(group_input_005_1.outputs[61], 'default_value'):
        group_input_005_1.outputs[61].default_value = 0.0
    if hasattr(group_input_005_1.outputs[61], 'display_shape'):
        group_input_005_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[61], 'enabled'):
        group_input_005_1.outputs[61].enabled = True
    if hasattr(group_input_005_1.outputs[61], 'hide'):
        group_input_005_1.outputs[61].hide = True
    if hasattr(group_input_005_1.outputs[61], 'hide_value'):
        group_input_005_1.outputs[61].hide_value = False
    if hasattr(group_input_005_1.outputs[61], 'name'):
        group_input_005_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_005_1.outputs[61], 'show_expanded'):
        group_input_005_1.outputs[61].show_expanded = False
    if hasattr(group_input_005_1.outputs[62], 'default_value'):
        group_input_005_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_005_1.outputs[62], 'display_shape'):
        group_input_005_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[62], 'enabled'):
        group_input_005_1.outputs[62].enabled = True
    if hasattr(group_input_005_1.outputs[62], 'hide'):
        group_input_005_1.outputs[62].hide = True
    if hasattr(group_input_005_1.outputs[62], 'hide_value'):
        group_input_005_1.outputs[62].hide_value = False
    if hasattr(group_input_005_1.outputs[62], 'name'):
        group_input_005_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_005_1.outputs[62], 'show_expanded'):
        group_input_005_1.outputs[62].show_expanded = False
    if hasattr(group_input_005_1.outputs[63], 'default_value'):
        group_input_005_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_005_1.outputs[63], 'display_shape'):
        group_input_005_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[63], 'enabled'):
        group_input_005_1.outputs[63].enabled = True
    if hasattr(group_input_005_1.outputs[63], 'hide'):
        group_input_005_1.outputs[63].hide = True
    if hasattr(group_input_005_1.outputs[63], 'hide_value'):
        group_input_005_1.outputs[63].hide_value = False
    if hasattr(group_input_005_1.outputs[63], 'name'):
        group_input_005_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_005_1.outputs[63], 'show_expanded'):
        group_input_005_1.outputs[63].show_expanded = False
    if hasattr(group_input_005_1.outputs[64], 'default_value'):
        group_input_005_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_005_1.outputs[64], 'display_shape'):
        group_input_005_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[64], 'enabled'):
        group_input_005_1.outputs[64].enabled = True
    if hasattr(group_input_005_1.outputs[64], 'hide'):
        group_input_005_1.outputs[64].hide = True
    if hasattr(group_input_005_1.outputs[64], 'hide_value'):
        group_input_005_1.outputs[64].hide_value = False
    if hasattr(group_input_005_1.outputs[64], 'name'):
        group_input_005_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_005_1.outputs[64], 'show_expanded'):
        group_input_005_1.outputs[64].show_expanded = False
    if hasattr(group_input_005_1.outputs[65], 'default_value'):
        group_input_005_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_005_1.outputs[65], 'display_shape'):
        group_input_005_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[65], 'enabled'):
        group_input_005_1.outputs[65].enabled = True
    if hasattr(group_input_005_1.outputs[65], 'hide'):
        group_input_005_1.outputs[65].hide = False
    if hasattr(group_input_005_1.outputs[65], 'hide_value'):
        group_input_005_1.outputs[65].hide_value = False
    if hasattr(group_input_005_1.outputs[65], 'name'):
        group_input_005_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_005_1.outputs[65], 'show_expanded'):
        group_input_005_1.outputs[65].show_expanded = False
    if hasattr(group_input_005_1.outputs[66], 'default_value'):
        group_input_005_1.outputs[66].default_value = 0.0
    if hasattr(group_input_005_1.outputs[66], 'display_shape'):
        group_input_005_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[66], 'enabled'):
        group_input_005_1.outputs[66].enabled = True
    if hasattr(group_input_005_1.outputs[66], 'hide'):
        group_input_005_1.outputs[66].hide = True
    if hasattr(group_input_005_1.outputs[66], 'hide_value'):
        group_input_005_1.outputs[66].hide_value = False
    if hasattr(group_input_005_1.outputs[66], 'name'):
        group_input_005_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_005_1.outputs[66], 'show_expanded'):
        group_input_005_1.outputs[66].show_expanded = False
    if hasattr(group_input_005_1.outputs[67], 'default_value'):
        group_input_005_1.outputs[67].default_value = 0.0
    if hasattr(group_input_005_1.outputs[67], 'display_shape'):
        group_input_005_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[67], 'enabled'):
        group_input_005_1.outputs[67].enabled = True
    if hasattr(group_input_005_1.outputs[67], 'hide'):
        group_input_005_1.outputs[67].hide = True
    if hasattr(group_input_005_1.outputs[67], 'hide_value'):
        group_input_005_1.outputs[67].hide_value = False
    if hasattr(group_input_005_1.outputs[67], 'name'):
        group_input_005_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_005_1.outputs[67], 'show_expanded'):
        group_input_005_1.outputs[67].show_expanded = False
    if hasattr(group_input_005_1.outputs[68], 'default_value'):
        group_input_005_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[68], 'display_shape'):
        group_input_005_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[68], 'enabled'):
        group_input_005_1.outputs[68].enabled = True
    if hasattr(group_input_005_1.outputs[68], 'hide'):
        group_input_005_1.outputs[68].hide = True
    if hasattr(group_input_005_1.outputs[68], 'hide_value'):
        group_input_005_1.outputs[68].hide_value = False
    if hasattr(group_input_005_1.outputs[68], 'name'):
        group_input_005_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_005_1.outputs[68], 'show_expanded'):
        group_input_005_1.outputs[68].show_expanded = False
    if hasattr(group_input_005_1.outputs[69], 'default_value'):
        group_input_005_1.outputs[69].default_value = 0.0
    if hasattr(group_input_005_1.outputs[69], 'display_shape'):
        group_input_005_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[69], 'enabled'):
        group_input_005_1.outputs[69].enabled = True
    if hasattr(group_input_005_1.outputs[69], 'hide'):
        group_input_005_1.outputs[69].hide = True
    if hasattr(group_input_005_1.outputs[69], 'hide_value'):
        group_input_005_1.outputs[69].hide_value = False
    if hasattr(group_input_005_1.outputs[69], 'name'):
        group_input_005_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_005_1.outputs[69], 'show_expanded'):
        group_input_005_1.outputs[69].show_expanded = False
    if hasattr(group_input_005_1.outputs[70], 'default_value'):
        group_input_005_1.outputs[70].default_value = 0.0
    if hasattr(group_input_005_1.outputs[70], 'display_shape'):
        group_input_005_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[70], 'enabled'):
        group_input_005_1.outputs[70].enabled = True
    if hasattr(group_input_005_1.outputs[70], 'hide'):
        group_input_005_1.outputs[70].hide = True
    if hasattr(group_input_005_1.outputs[70], 'hide_value'):
        group_input_005_1.outputs[70].hide_value = False
    if hasattr(group_input_005_1.outputs[70], 'name'):
        group_input_005_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_005_1.outputs[70], 'show_expanded'):
        group_input_005_1.outputs[70].show_expanded = False
    if hasattr(group_input_005_1.outputs[71], 'default_value'):
        group_input_005_1.outputs[71].default_value = 0.0
    if hasattr(group_input_005_1.outputs[71], 'display_shape'):
        group_input_005_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[71], 'enabled'):
        group_input_005_1.outputs[71].enabled = True
    if hasattr(group_input_005_1.outputs[71], 'hide'):
        group_input_005_1.outputs[71].hide = True
    if hasattr(group_input_005_1.outputs[71], 'hide_value'):
        group_input_005_1.outputs[71].hide_value = False
    if hasattr(group_input_005_1.outputs[71], 'name'):
        group_input_005_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_005_1.outputs[71], 'show_expanded'):
        group_input_005_1.outputs[71].show_expanded = False
    if hasattr(group_input_005_1.outputs[72], 'default_value'):
        group_input_005_1.outputs[72].default_value = 0.0
    if hasattr(group_input_005_1.outputs[72], 'display_shape'):
        group_input_005_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[72], 'enabled'):
        group_input_005_1.outputs[72].enabled = True
    if hasattr(group_input_005_1.outputs[72], 'hide'):
        group_input_005_1.outputs[72].hide = True
    if hasattr(group_input_005_1.outputs[72], 'hide_value'):
        group_input_005_1.outputs[72].hide_value = False
    if hasattr(group_input_005_1.outputs[72], 'name'):
        group_input_005_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_005_1.outputs[72], 'show_expanded'):
        group_input_005_1.outputs[72].show_expanded = False
    if hasattr(group_input_005_1.outputs[73], 'default_value'):
        group_input_005_1.outputs[73].default_value = 0.0
    if hasattr(group_input_005_1.outputs[73], 'display_shape'):
        group_input_005_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[73], 'enabled'):
        group_input_005_1.outputs[73].enabled = True
    if hasattr(group_input_005_1.outputs[73], 'hide'):
        group_input_005_1.outputs[73].hide = True
    if hasattr(group_input_005_1.outputs[73], 'hide_value'):
        group_input_005_1.outputs[73].hide_value = False
    if hasattr(group_input_005_1.outputs[73], 'name'):
        group_input_005_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_005_1.outputs[73], 'show_expanded'):
        group_input_005_1.outputs[73].show_expanded = False
    if hasattr(group_input_005_1.outputs[74], 'default_value'):
        group_input_005_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_005_1.outputs[74], 'display_shape'):
        group_input_005_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[74], 'enabled'):
        group_input_005_1.outputs[74].enabled = True
    if hasattr(group_input_005_1.outputs[74], 'hide'):
        group_input_005_1.outputs[74].hide = True
    if hasattr(group_input_005_1.outputs[74], 'hide_value'):
        group_input_005_1.outputs[74].hide_value = False
    if hasattr(group_input_005_1.outputs[74], 'name'):
        group_input_005_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_005_1.outputs[74], 'show_expanded'):
        group_input_005_1.outputs[74].show_expanded = False
    if hasattr(group_input_005_1.outputs[75], 'default_value'):
        group_input_005_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_005_1.outputs[75], 'display_shape'):
        group_input_005_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[75], 'enabled'):
        group_input_005_1.outputs[75].enabled = True
    if hasattr(group_input_005_1.outputs[75], 'hide'):
        group_input_005_1.outputs[75].hide = True
    if hasattr(group_input_005_1.outputs[75], 'hide_value'):
        group_input_005_1.outputs[75].hide_value = False
    if hasattr(group_input_005_1.outputs[75], 'name'):
        group_input_005_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_005_1.outputs[75], 'show_expanded'):
        group_input_005_1.outputs[75].show_expanded = False
    if hasattr(group_input_005_1.outputs[76], 'default_value'):
        group_input_005_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_005_1.outputs[76], 'display_shape'):
        group_input_005_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[76], 'enabled'):
        group_input_005_1.outputs[76].enabled = True
    if hasattr(group_input_005_1.outputs[76], 'hide'):
        group_input_005_1.outputs[76].hide = True
    if hasattr(group_input_005_1.outputs[76], 'hide_value'):
        group_input_005_1.outputs[76].hide_value = False
    if hasattr(group_input_005_1.outputs[76], 'name'):
        group_input_005_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_005_1.outputs[76], 'show_expanded'):
        group_input_005_1.outputs[76].show_expanded = False
    if hasattr(group_input_005_1.outputs[77], 'default_value'):
        group_input_005_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_005_1.outputs[77], 'display_shape'):
        group_input_005_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[77], 'enabled'):
        group_input_005_1.outputs[77].enabled = True
    if hasattr(group_input_005_1.outputs[77], 'hide'):
        group_input_005_1.outputs[77].hide = False
    if hasattr(group_input_005_1.outputs[77], 'hide_value'):
        group_input_005_1.outputs[77].hide_value = False
    if hasattr(group_input_005_1.outputs[77], 'name'):
        group_input_005_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_005_1.outputs[77], 'show_expanded'):
        group_input_005_1.outputs[77].show_expanded = False
    if hasattr(group_input_005_1.outputs[78], 'default_value'):
        group_input_005_1.outputs[78].default_value = 0.0
    if hasattr(group_input_005_1.outputs[78], 'display_shape'):
        group_input_005_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[78], 'enabled'):
        group_input_005_1.outputs[78].enabled = True
    if hasattr(group_input_005_1.outputs[78], 'hide'):
        group_input_005_1.outputs[78].hide = True
    if hasattr(group_input_005_1.outputs[78], 'hide_value'):
        group_input_005_1.outputs[78].hide_value = False
    if hasattr(group_input_005_1.outputs[78], 'name'):
        group_input_005_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_005_1.outputs[78], 'show_expanded'):
        group_input_005_1.outputs[78].show_expanded = False
    if hasattr(group_input_005_1.outputs[79], 'default_value'):
        group_input_005_1.outputs[79].default_value = 0.0
    if hasattr(group_input_005_1.outputs[79], 'display_shape'):
        group_input_005_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[79], 'enabled'):
        group_input_005_1.outputs[79].enabled = True
    if hasattr(group_input_005_1.outputs[79], 'hide'):
        group_input_005_1.outputs[79].hide = True
    if hasattr(group_input_005_1.outputs[79], 'hide_value'):
        group_input_005_1.outputs[79].hide_value = False
    if hasattr(group_input_005_1.outputs[79], 'name'):
        group_input_005_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_005_1.outputs[79], 'show_expanded'):
        group_input_005_1.outputs[79].show_expanded = False
    if hasattr(group_input_005_1.outputs[80], 'default_value'):
        group_input_005_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[80], 'display_shape'):
        group_input_005_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[80], 'enabled'):
        group_input_005_1.outputs[80].enabled = True
    if hasattr(group_input_005_1.outputs[80], 'hide'):
        group_input_005_1.outputs[80].hide = True
    if hasattr(group_input_005_1.outputs[80], 'hide_value'):
        group_input_005_1.outputs[80].hide_value = False
    if hasattr(group_input_005_1.outputs[80], 'name'):
        group_input_005_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_005_1.outputs[80], 'show_expanded'):
        group_input_005_1.outputs[80].show_expanded = False
    if hasattr(group_input_005_1.outputs[81], 'default_value'):
        group_input_005_1.outputs[81].default_value = 0.0
    if hasattr(group_input_005_1.outputs[81], 'display_shape'):
        group_input_005_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[81], 'enabled'):
        group_input_005_1.outputs[81].enabled = True
    if hasattr(group_input_005_1.outputs[81], 'hide'):
        group_input_005_1.outputs[81].hide = True
    if hasattr(group_input_005_1.outputs[81], 'hide_value'):
        group_input_005_1.outputs[81].hide_value = False
    if hasattr(group_input_005_1.outputs[81], 'name'):
        group_input_005_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_005_1.outputs[81], 'show_expanded'):
        group_input_005_1.outputs[81].show_expanded = False
    if hasattr(group_input_005_1.outputs[82], 'default_value'):
        group_input_005_1.outputs[82].default_value = 0.0
    if hasattr(group_input_005_1.outputs[82], 'display_shape'):
        group_input_005_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[82], 'enabled'):
        group_input_005_1.outputs[82].enabled = True
    if hasattr(group_input_005_1.outputs[82], 'hide'):
        group_input_005_1.outputs[82].hide = True
    if hasattr(group_input_005_1.outputs[82], 'hide_value'):
        group_input_005_1.outputs[82].hide_value = False
    if hasattr(group_input_005_1.outputs[82], 'name'):
        group_input_005_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_005_1.outputs[82], 'show_expanded'):
        group_input_005_1.outputs[82].show_expanded = False
    if hasattr(group_input_005_1.outputs[83], 'default_value'):
        group_input_005_1.outputs[83].default_value = 0.0
    if hasattr(group_input_005_1.outputs[83], 'display_shape'):
        group_input_005_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[83], 'enabled'):
        group_input_005_1.outputs[83].enabled = True
    if hasattr(group_input_005_1.outputs[83], 'hide'):
        group_input_005_1.outputs[83].hide = True
    if hasattr(group_input_005_1.outputs[83], 'hide_value'):
        group_input_005_1.outputs[83].hide_value = False
    if hasattr(group_input_005_1.outputs[83], 'name'):
        group_input_005_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_005_1.outputs[83], 'show_expanded'):
        group_input_005_1.outputs[83].show_expanded = False
    if hasattr(group_input_005_1.outputs[84], 'default_value'):
        group_input_005_1.outputs[84].default_value = 0.0
    if hasattr(group_input_005_1.outputs[84], 'display_shape'):
        group_input_005_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[84], 'enabled'):
        group_input_005_1.outputs[84].enabled = True
    if hasattr(group_input_005_1.outputs[84], 'hide'):
        group_input_005_1.outputs[84].hide = True
    if hasattr(group_input_005_1.outputs[84], 'hide_value'):
        group_input_005_1.outputs[84].hide_value = False
    if hasattr(group_input_005_1.outputs[84], 'name'):
        group_input_005_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_005_1.outputs[84], 'show_expanded'):
        group_input_005_1.outputs[84].show_expanded = False
    if hasattr(group_input_005_1.outputs[85], 'default_value'):
        group_input_005_1.outputs[85].default_value = 0.0
    if hasattr(group_input_005_1.outputs[85], 'display_shape'):
        group_input_005_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[85], 'enabled'):
        group_input_005_1.outputs[85].enabled = True
    if hasattr(group_input_005_1.outputs[85], 'hide'):
        group_input_005_1.outputs[85].hide = True
    if hasattr(group_input_005_1.outputs[85], 'hide_value'):
        group_input_005_1.outputs[85].hide_value = False
    if hasattr(group_input_005_1.outputs[85], 'name'):
        group_input_005_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_005_1.outputs[85], 'show_expanded'):
        group_input_005_1.outputs[85].show_expanded = False
    if hasattr(group_input_005_1.outputs[86], 'default_value'):
        group_input_005_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_005_1.outputs[86], 'display_shape'):
        group_input_005_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[86], 'enabled'):
        group_input_005_1.outputs[86].enabled = True
    if hasattr(group_input_005_1.outputs[86], 'hide'):
        group_input_005_1.outputs[86].hide = True
    if hasattr(group_input_005_1.outputs[86], 'hide_value'):
        group_input_005_1.outputs[86].hide_value = False
    if hasattr(group_input_005_1.outputs[86], 'name'):
        group_input_005_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_005_1.outputs[86], 'show_expanded'):
        group_input_005_1.outputs[86].show_expanded = False
    if hasattr(group_input_005_1.outputs[87], 'default_value'):
        group_input_005_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_005_1.outputs[87], 'display_shape'):
        group_input_005_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[87], 'enabled'):
        group_input_005_1.outputs[87].enabled = True
    if hasattr(group_input_005_1.outputs[87], 'hide'):
        group_input_005_1.outputs[87].hide = True
    if hasattr(group_input_005_1.outputs[87], 'hide_value'):
        group_input_005_1.outputs[87].hide_value = False
    if hasattr(group_input_005_1.outputs[87], 'name'):
        group_input_005_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_005_1.outputs[87], 'show_expanded'):
        group_input_005_1.outputs[87].show_expanded = False
    if hasattr(group_input_005_1.outputs[88], 'default_value'):
        group_input_005_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_005_1.outputs[88], 'display_shape'):
        group_input_005_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[88], 'enabled'):
        group_input_005_1.outputs[88].enabled = True
    if hasattr(group_input_005_1.outputs[88], 'hide'):
        group_input_005_1.outputs[88].hide = True
    if hasattr(group_input_005_1.outputs[88], 'hide_value'):
        group_input_005_1.outputs[88].hide_value = False
    if hasattr(group_input_005_1.outputs[88], 'name'):
        group_input_005_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_005_1.outputs[88], 'show_expanded'):
        group_input_005_1.outputs[88].show_expanded = False
    if hasattr(group_input_005_1.outputs[89], 'default_value'):
        group_input_005_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_005_1.outputs[89], 'display_shape'):
        group_input_005_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[89], 'enabled'):
        group_input_005_1.outputs[89].enabled = True
    if hasattr(group_input_005_1.outputs[89], 'hide'):
        group_input_005_1.outputs[89].hide = False
    if hasattr(group_input_005_1.outputs[89], 'hide_value'):
        group_input_005_1.outputs[89].hide_value = False
    if hasattr(group_input_005_1.outputs[89], 'name'):
        group_input_005_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_005_1.outputs[89], 'show_expanded'):
        group_input_005_1.outputs[89].show_expanded = False
    if hasattr(group_input_005_1.outputs[90], 'default_value'):
        group_input_005_1.outputs[90].default_value = 0.0
    if hasattr(group_input_005_1.outputs[90], 'display_shape'):
        group_input_005_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[90], 'enabled'):
        group_input_005_1.outputs[90].enabled = True
    if hasattr(group_input_005_1.outputs[90], 'hide'):
        group_input_005_1.outputs[90].hide = True
    if hasattr(group_input_005_1.outputs[90], 'hide_value'):
        group_input_005_1.outputs[90].hide_value = False
    if hasattr(group_input_005_1.outputs[90], 'name'):
        group_input_005_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_005_1.outputs[90], 'show_expanded'):
        group_input_005_1.outputs[90].show_expanded = False
    if hasattr(group_input_005_1.outputs[91], 'default_value'):
        group_input_005_1.outputs[91].default_value = 0.0
    if hasattr(group_input_005_1.outputs[91], 'display_shape'):
        group_input_005_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[91], 'enabled'):
        group_input_005_1.outputs[91].enabled = True
    if hasattr(group_input_005_1.outputs[91], 'hide'):
        group_input_005_1.outputs[91].hide = True
    if hasattr(group_input_005_1.outputs[91], 'hide_value'):
        group_input_005_1.outputs[91].hide_value = False
    if hasattr(group_input_005_1.outputs[91], 'name'):
        group_input_005_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_005_1.outputs[91], 'show_expanded'):
        group_input_005_1.outputs[91].show_expanded = False
    if hasattr(group_input_005_1.outputs[92], 'default_value'):
        group_input_005_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_005_1.outputs[92], 'display_shape'):
        group_input_005_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[92], 'enabled'):
        group_input_005_1.outputs[92].enabled = True
    if hasattr(group_input_005_1.outputs[92], 'hide'):
        group_input_005_1.outputs[92].hide = True
    if hasattr(group_input_005_1.outputs[92], 'hide_value'):
        group_input_005_1.outputs[92].hide_value = False
    if hasattr(group_input_005_1.outputs[92], 'name'):
        group_input_005_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_005_1.outputs[92], 'show_expanded'):
        group_input_005_1.outputs[92].show_expanded = False
    if hasattr(group_input_005_1.outputs[93], 'default_value'):
        group_input_005_1.outputs[93].default_value = 0.0
    if hasattr(group_input_005_1.outputs[93], 'display_shape'):
        group_input_005_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[93], 'enabled'):
        group_input_005_1.outputs[93].enabled = True
    if hasattr(group_input_005_1.outputs[93], 'hide'):
        group_input_005_1.outputs[93].hide = True
    if hasattr(group_input_005_1.outputs[93], 'hide_value'):
        group_input_005_1.outputs[93].hide_value = False
    if hasattr(group_input_005_1.outputs[93], 'name'):
        group_input_005_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_005_1.outputs[93], 'show_expanded'):
        group_input_005_1.outputs[93].show_expanded = False
    if hasattr(group_input_005_1.outputs[94], 'default_value'):
        group_input_005_1.outputs[94].default_value = 0.0
    if hasattr(group_input_005_1.outputs[94], 'display_shape'):
        group_input_005_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[94], 'enabled'):
        group_input_005_1.outputs[94].enabled = True
    if hasattr(group_input_005_1.outputs[94], 'hide'):
        group_input_005_1.outputs[94].hide = True
    if hasattr(group_input_005_1.outputs[94], 'hide_value'):
        group_input_005_1.outputs[94].hide_value = False
    if hasattr(group_input_005_1.outputs[94], 'name'):
        group_input_005_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_005_1.outputs[94], 'show_expanded'):
        group_input_005_1.outputs[94].show_expanded = False
    if hasattr(group_input_005_1.outputs[95], 'default_value'):
        group_input_005_1.outputs[95].default_value = 0.0
    if hasattr(group_input_005_1.outputs[95], 'display_shape'):
        group_input_005_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[95], 'enabled'):
        group_input_005_1.outputs[95].enabled = True
    if hasattr(group_input_005_1.outputs[95], 'hide'):
        group_input_005_1.outputs[95].hide = True
    if hasattr(group_input_005_1.outputs[95], 'hide_value'):
        group_input_005_1.outputs[95].hide_value = False
    if hasattr(group_input_005_1.outputs[95], 'name'):
        group_input_005_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_005_1.outputs[95], 'show_expanded'):
        group_input_005_1.outputs[95].show_expanded = False
    if hasattr(group_input_005_1.outputs[96], 'default_value'):
        group_input_005_1.outputs[96].default_value = 0.0
    if hasattr(group_input_005_1.outputs[96], 'display_shape'):
        group_input_005_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[96], 'enabled'):
        group_input_005_1.outputs[96].enabled = True
    if hasattr(group_input_005_1.outputs[96], 'hide'):
        group_input_005_1.outputs[96].hide = True
    if hasattr(group_input_005_1.outputs[96], 'hide_value'):
        group_input_005_1.outputs[96].hide_value = False
    if hasattr(group_input_005_1.outputs[96], 'name'):
        group_input_005_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_005_1.outputs[96], 'show_expanded'):
        group_input_005_1.outputs[96].show_expanded = False
    if hasattr(group_input_005_1.outputs[97], 'default_value'):
        group_input_005_1.outputs[97].default_value = 0.0
    if hasattr(group_input_005_1.outputs[97], 'display_shape'):
        group_input_005_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[97], 'enabled'):
        group_input_005_1.outputs[97].enabled = True
    if hasattr(group_input_005_1.outputs[97], 'hide'):
        group_input_005_1.outputs[97].hide = True
    if hasattr(group_input_005_1.outputs[97], 'hide_value'):
        group_input_005_1.outputs[97].hide_value = False
    if hasattr(group_input_005_1.outputs[97], 'name'):
        group_input_005_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_005_1.outputs[97], 'show_expanded'):
        group_input_005_1.outputs[97].show_expanded = False
    if hasattr(group_input_005_1.outputs[98], 'default_value'):
        group_input_005_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_005_1.outputs[98], 'display_shape'):
        group_input_005_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[98], 'enabled'):
        group_input_005_1.outputs[98].enabled = True
    if hasattr(group_input_005_1.outputs[98], 'hide'):
        group_input_005_1.outputs[98].hide = True
    if hasattr(group_input_005_1.outputs[98], 'hide_value'):
        group_input_005_1.outputs[98].hide_value = False
    if hasattr(group_input_005_1.outputs[98], 'name'):
        group_input_005_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_005_1.outputs[98], 'show_expanded'):
        group_input_005_1.outputs[98].show_expanded = False
    if hasattr(group_input_005_1.outputs[99], 'default_value'):
        group_input_005_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_005_1.outputs[99], 'display_shape'):
        group_input_005_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[99], 'enabled'):
        group_input_005_1.outputs[99].enabled = True
    if hasattr(group_input_005_1.outputs[99], 'hide'):
        group_input_005_1.outputs[99].hide = True
    if hasattr(group_input_005_1.outputs[99], 'hide_value'):
        group_input_005_1.outputs[99].hide_value = False
    if hasattr(group_input_005_1.outputs[99], 'name'):
        group_input_005_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_005_1.outputs[99], 'show_expanded'):
        group_input_005_1.outputs[99].show_expanded = False
    if hasattr(group_input_005_1.outputs[100], 'default_value'):
        group_input_005_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_005_1.outputs[100], 'display_shape'):
        group_input_005_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[100], 'enabled'):
        group_input_005_1.outputs[100].enabled = True
    if hasattr(group_input_005_1.outputs[100], 'hide'):
        group_input_005_1.outputs[100].hide = True
    if hasattr(group_input_005_1.outputs[100], 'hide_value'):
        group_input_005_1.outputs[100].hide_value = False
    if hasattr(group_input_005_1.outputs[100], 'name'):
        group_input_005_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_005_1.outputs[100], 'show_expanded'):
        group_input_005_1.outputs[100].show_expanded = False
    if hasattr(group_input_005_1.outputs[101], 'default_value'):
        group_input_005_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_005_1.outputs[101], 'display_shape'):
        group_input_005_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_005_1.outputs[101], 'enabled'):
        group_input_005_1.outputs[101].enabled = True
    if hasattr(group_input_005_1.outputs[101], 'hide'):
        group_input_005_1.outputs[101].hide = False
    if hasattr(group_input_005_1.outputs[101], 'hide_value'):
        group_input_005_1.outputs[101].hide_value = False
    if hasattr(group_input_005_1.outputs[101], 'name'):
        group_input_005_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_005_1.outputs[101], 'show_expanded'):
        group_input_005_1.outputs[101].show_expanded = False

    node_tree2 = bpy.data.node_groups.get('Infinite Matts')
    if not node_tree2:
        node_tree2 = bpy.data.node_groups.new('Infinite Matts', 'ShaderNodeTree')
        for node in node_tree2.nodes:
            node_tree2.nodes.remove(node)
        # INPUTS
        input = node_tree2.inputs.new('NodeSocketColor', 'ASG Control')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'ASG Control'
        input = node_tree2.inputs.new('NodeSocketColor', 'RGB Control')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'RGB Control'
        input = node_tree2.inputs.new('NodeSocketColor', 'Blue Control')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Blue Control'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 1')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 1'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 2')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 2'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 3')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 3'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 4')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 4'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 5')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 5'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 6')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 6'
        input = node_tree2.inputs.new('NodeSocketColor', 'Grime')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Grime'
        input = node_tree2.inputs.new('NodeSocketColor', 'Dust')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Dust'
        input = node_tree2.inputs.new('NodeSocketColor', 'Scratch')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (1.0, 1.0, 1.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Scratch'
        input = node_tree2.inputs.new('NodeSocketFloat', 'Scratch Amount')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 0.5
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 10000.0
        if hasattr(input, 'min_value'):
            input.min_value = -10000.0
        if hasattr(input, 'name'):
            input.name = 'Scratch Amount'
        input = node_tree2.inputs.new('NodeSocketFloat', 'Grime Amount')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 1.0
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 10000.0
        if hasattr(input, 'min_value'):
            input.min_value = -10000.0
        if hasattr(input, 'name'):
            input.name = 'Grime Amount'
        input = node_tree2.inputs.new('NodeSocketFloat', 'Dust Amount')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 1.0
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 2.0
        if hasattr(input, 'min_value'):
            input.min_value = 0.0
        if hasattr(input, 'name'):
            input.name = 'Dust Amount'
        # OUTPUTS
        output = node_tree2.outputs.new('NodeSocketColor', 'Color')
        if hasattr(output, 'attribute_domain'):
            output.attribute_domain = 'POINT'
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        # NODES
        group_output_2 = node_tree2.nodes.new('NodeGroupOutput')
        if hasattr(group_output_2, 'color'):
            group_output_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_output_2, 'hide'):
            group_output_2.hide = False
        if hasattr(group_output_2, 'is_active_output'):
            group_output_2.is_active_output = True
        if hasattr(group_output_2, 'location'):
            group_output_2.location = (2026.0322265625, -1.6859145164489746)
        if hasattr(group_output_2, 'mute'):
            group_output_2.mute = False
        if hasattr(group_output_2, 'name'):
            group_output_2.name = 'Group Output'
        if hasattr(group_output_2, 'use_custom_color'):
            group_output_2.use_custom_color = False
        if hasattr(group_output_2, 'width'):
            group_output_2.width = 140.0
        if hasattr(group_output_2.inputs[0], 'default_value'):
            group_output_2.inputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(group_output_2.inputs[0], 'display_shape'):
            group_output_2.inputs[0].display_shape = 'CIRCLE'
        if hasattr(group_output_2.inputs[0], 'enabled'):
            group_output_2.inputs[0].enabled = True
        if hasattr(group_output_2.inputs[0], 'hide'):
            group_output_2.inputs[0].hide = False
        if hasattr(group_output_2.inputs[0], 'hide_value'):
            group_output_2.inputs[0].hide_value = False
        if hasattr(group_output_2.inputs[0], 'name'):
            group_output_2.inputs[0].name = 'Color'
        if hasattr(group_output_2.inputs[0], 'show_expanded'):
            group_output_2.inputs[0].show_expanded = False

        mix_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_2, 'blend_type'):
            mix_2.blend_type = 'MIX'
        if hasattr(mix_2, 'color'):
            mix_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_2, 'hide'):
            mix_2.hide = False
        if hasattr(mix_2, 'label'):
            mix_2.label = 'Slot 1 and 2'
        if hasattr(mix_2, 'location'):
            mix_2.location = (-740.0, -60.0)
        if hasattr(mix_2, 'mute'):
            mix_2.mute = False
        if hasattr(mix_2, 'name'):
            mix_2.name = 'Mix'
        if hasattr(mix_2, 'use_alpha'):
            mix_2.use_alpha = False
        if hasattr(mix_2, 'use_clamp'):
            mix_2.use_clamp = False
        if hasattr(mix_2, 'use_custom_color'):
            mix_2.use_custom_color = False
        if hasattr(mix_2, 'width'):
            mix_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 1.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_001_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_001_2, 'blend_type'):
            mix_001_2.blend_type = 'MIX'
        if hasattr(mix_001_2, 'color'):
            mix_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_001_2, 'hide'):
            mix_001_2.hide = False
        if hasattr(mix_001_2, 'label'):
            mix_001_2.label = 'Slot 3'
        if hasattr(mix_001_2, 'location'):
            mix_001_2.location = (-520.0, -60.0)
        if hasattr(mix_001_2, 'mute'):
            mix_001_2.mute = False
        if hasattr(mix_001_2, 'name'):
            mix_001_2.name = 'Mix.001'
        if hasattr(mix_001_2, 'use_alpha'):
            mix_001_2.use_alpha = False
        if hasattr(mix_001_2, 'use_clamp'):
            mix_001_2.use_clamp = False
        if hasattr(mix_001_2, 'use_custom_color'):
            mix_001_2.use_custom_color = False
        if hasattr(mix_001_2, 'width'):
            mix_001_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.8411373496055603, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_001_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_002_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_002_2, 'blend_type'):
            mix_002_2.blend_type = 'MIX'
        if hasattr(mix_002_2, 'color'):
            mix_002_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_002_2, 'hide'):
            mix_002_2.hide = False
        if hasattr(mix_002_2, 'label'):
            mix_002_2.label = 'Slot 4'
        if hasattr(mix_002_2, 'location'):
            mix_002_2.location = (-280.0, -59.999969482421875)
        if hasattr(mix_002_2, 'mute'):
            mix_002_2.mute = False
        if hasattr(mix_002_2, 'name'):
            mix_002_2.name = 'Mix.002'
        if hasattr(mix_002_2, 'use_alpha'):
            mix_002_2.use_alpha = False
        if hasattr(mix_002_2, 'use_clamp'):
            mix_002_2.use_clamp = False
        if hasattr(mix_002_2, 'use_custom_color'):
            mix_002_2.use_custom_color = False
        if hasattr(mix_002_2, 'width'):
            mix_002_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.006658518221229315, 1.0, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_002_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_003_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_003_2, 'blend_type'):
            mix_003_2.blend_type = 'MIX'
        if hasattr(mix_003_2, 'color'):
            mix_003_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_003_2, 'hide'):
            mix_003_2.hide = False
        if hasattr(mix_003_2, 'label'):
            mix_003_2.label = 'Slot 5'
        if hasattr(mix_003_2, 'location'):
            mix_003_2.location = (-40.0, -60.000030517578125)
        if hasattr(mix_003_2, 'mute'):
            mix_003_2.mute = False
        if hasattr(mix_003_2, 'name'):
            mix_003_2.name = 'Mix.003'
        if hasattr(mix_003_2, 'use_alpha'):
            mix_003_2.use_alpha = False
        if hasattr(mix_003_2, 'use_clamp'):
            mix_003_2.use_clamp = False
        if hasattr(mix_003_2, 'use_custom_color'):
            mix_003_2.use_custom_color = False
        if hasattr(mix_003_2, 'width'):
            mix_003_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 1.0, 0.7098963856697083, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_003_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_004_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_004_2, 'blend_type'):
            mix_004_2.blend_type = 'MIX'
        if hasattr(mix_004_2, 'color'):
            mix_004_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_004_2, 'hide'):
            mix_004_2.hide = False
        if hasattr(mix_004_2, 'label'):
            mix_004_2.label = 'Slot 6'
        if hasattr(mix_004_2, 'location'):
            mix_004_2.location = (200.0, -59.999969482421875)
        if hasattr(mix_004_2, 'mute'):
            mix_004_2.mute = False
        if hasattr(mix_004_2, 'name'):
            mix_004_2.name = 'Mix.004'
        if hasattr(mix_004_2, 'use_alpha'):
            mix_004_2.use_alpha = False
        if hasattr(mix_004_2, 'use_clamp'):
            mix_004_2.use_clamp = False
        if hasattr(mix_004_2, 'use_custom_color'):
            mix_004_2.use_custom_color = False
        if hasattr(mix_004_2, 'width'):
            mix_004_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_004_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_001_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_001_2, 'color'):
            separate_rgb_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_001_2, 'hide'):
            separate_rgb_001_2.hide = False
        if hasattr(separate_rgb_001_2, 'location'):
            separate_rgb_001_2.location = (-260.0, -380.0)
        if hasattr(separate_rgb_001_2, 'mute'):
            separate_rgb_001_2.mute = False
        if hasattr(separate_rgb_001_2, 'name'):
            separate_rgb_001_2.name = 'Separate RGB.001'
        if hasattr(separate_rgb_001_2, 'use_custom_color'):
            separate_rgb_001_2.use_custom_color = False
        if hasattr(separate_rgb_001_2, 'width'):
            separate_rgb_001_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_001_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_2, 'color'):
            separate_rgb_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_2, 'hide'):
            separate_rgb_2.hide = False
        if hasattr(separate_rgb_2, 'location'):
            separate_rgb_2.location = (-780.0, 240.0)
        if hasattr(separate_rgb_2, 'mute'):
            separate_rgb_2.mute = False
        if hasattr(separate_rgb_2, 'name'):
            separate_rgb_2.name = 'Separate RGB'
        if hasattr(separate_rgb_2, 'use_custom_color'):
            separate_rgb_2.use_custom_color = False
        if hasattr(separate_rgb_2, 'width'):
            separate_rgb_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_2, 'color'):
            math_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_2, 'hide'):
            math_2.hide = False
        if hasattr(math_2, 'location'):
            math_2.location = (180.0, 180.0)
        if hasattr(math_2, 'mute'):
            math_2.mute = False
        if hasattr(math_2, 'name'):
            math_2.name = 'Math'
        if hasattr(math_2, 'operation'):
            math_2.operation = 'MULTIPLY'
        if hasattr(math_2, 'use_clamp'):
            math_2.use_clamp = False
        if hasattr(math_2, 'use_custom_color'):
            math_2.use_custom_color = False
        if hasattr(math_2, 'width'):
            math_2.width = 140.0
        input_ = next((input_ for input_ in math_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_007_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_007_2, 'blend_type'):
            mix_007_2.blend_type = 'MIX'
        if hasattr(mix_007_2, 'color'):
            mix_007_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_007_2, 'hide'):
            mix_007_2.hide = False
        if hasattr(mix_007_2, 'label'):
            mix_007_2.label = 'Scratch'
        if hasattr(mix_007_2, 'location'):
            mix_007_2.location = (940.0000610351562, -60.0)
        if hasattr(mix_007_2, 'mute'):
            mix_007_2.mute = False
        if hasattr(mix_007_2, 'name'):
            mix_007_2.name = 'Mix.007'
        if hasattr(mix_007_2, 'use_alpha'):
            mix_007_2.use_alpha = False
        if hasattr(mix_007_2, 'use_clamp'):
            mix_007_2.use_clamp = True
        if hasattr(mix_007_2, 'use_custom_color'):
            mix_007_2.use_custom_color = False
        if hasattr(mix_007_2, 'width'):
            mix_007_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_007_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_007_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_007_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 0.0, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_007_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_006_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_006_2, 'blend_type'):
            mix_006_2.blend_type = 'MIX'
        if hasattr(mix_006_2, 'color'):
            mix_006_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_006_2, 'hide'):
            mix_006_2.hide = False
        if hasattr(mix_006_2, 'label'):
            mix_006_2.label = 'Dust'
        if hasattr(mix_006_2, 'location'):
            mix_006_2.location = (720.0, -60.0)
        if hasattr(mix_006_2, 'mute'):
            mix_006_2.mute = False
        if hasattr(mix_006_2, 'name'):
            mix_006_2.name = 'Mix.006'
        if hasattr(mix_006_2, 'use_alpha'):
            mix_006_2.use_alpha = False
        if hasattr(mix_006_2, 'use_clamp'):
            mix_006_2.use_clamp = False
        if hasattr(mix_006_2, 'use_custom_color'):
            mix_006_2.use_custom_color = False
        if hasattr(mix_006_2, 'width'):
            mix_006_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 1.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_006_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_005_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_005_2, 'blend_type'):
            mix_005_2.blend_type = 'MIX'
        if hasattr(mix_005_2, 'color'):
            mix_005_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_005_2, 'hide'):
            mix_005_2.hide = False
        if hasattr(mix_005_2, 'label'):
            mix_005_2.label = 'Grime'
        if hasattr(mix_005_2, 'location'):
            mix_005_2.location = (460.0, -60.0)
        if hasattr(mix_005_2, 'mute'):
            mix_005_2.mute = False
        if hasattr(mix_005_2, 'name'):
            mix_005_2.name = 'Mix.005'
        if hasattr(mix_005_2, 'use_alpha'):
            mix_005_2.use_alpha = False
        if hasattr(mix_005_2, 'use_clamp'):
            mix_005_2.use_clamp = False
        if hasattr(mix_005_2, 'use_custom_color'):
            mix_005_2.use_custom_color = False
        if hasattr(mix_005_2, 'width'):
            mix_005_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 0.0, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_005_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_002_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_002_2, 'color'):
            separate_rgb_002_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_002_2, 'hide'):
            separate_rgb_002_2.hide = False
        if hasattr(separate_rgb_002_2, 'location'):
            separate_rgb_002_2.location = (-960.0, 80.00006103515625)
        if hasattr(separate_rgb_002_2, 'mute'):
            separate_rgb_002_2.mute = False
        if hasattr(separate_rgb_002_2, 'name'):
            separate_rgb_002_2.name = 'Separate RGB.002'
        if hasattr(separate_rgb_002_2, 'use_custom_color'):
            separate_rgb_002_2.use_custom_color = False
        if hasattr(separate_rgb_002_2, 'width'):
            separate_rgb_002_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_002_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_005_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_005_2, 'color'):
            math_005_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_005_2, 'hide'):
            math_005_2.hide = False
        if hasattr(math_005_2, 'location'):
            math_005_2.location = (98.72056579589844, -492.86798095703125)
        if hasattr(math_005_2, 'mute'):
            math_005_2.mute = False
        if hasattr(math_005_2, 'name'):
            math_005_2.name = 'Math.005'
        if hasattr(math_005_2, 'operation'):
            math_005_2.operation = 'MULTIPLY'
        if hasattr(math_005_2, 'use_clamp'):
            math_005_2.use_clamp = False
        if hasattr(math_005_2, 'use_custom_color'):
            math_005_2.use_custom_color = False
        if hasattr(math_005_2, 'width'):
            math_005_2.width = 140.0
        input_ = next((input_ for input_ in math_005_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_005_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_005_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_005_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_006_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_006_2, 'color'):
            math_006_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_006_2, 'hide'):
            math_006_2.hide = False
        if hasattr(math_006_2, 'location'):
            math_006_2.location = (-500.0, -460.0)
        if hasattr(math_006_2, 'mute'):
            math_006_2.mute = False
        if hasattr(math_006_2, 'name'):
            math_006_2.name = 'Math.006'
        if hasattr(math_006_2, 'operation'):
            math_006_2.operation = 'MULTIPLY'
        if hasattr(math_006_2, 'use_clamp'):
            math_006_2.use_clamp = False
        if hasattr(math_006_2, 'use_custom_color'):
            math_006_2.use_custom_color = False
        if hasattr(math_006_2, 'width'):
            math_006_2.width = 140.0
        input_ = next((input_ for input_ in math_006_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_006_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_006_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_006_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        group_input_2 = node_tree2.nodes.new('NodeGroupInput')
        if hasattr(group_input_2, 'color'):
            group_input_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_input_2, 'hide'):
            group_input_2.hide = False
        if hasattr(group_input_2, 'location'):
            group_input_2.location = (-1160.0, -320.0)
        if hasattr(group_input_2, 'mute'):
            group_input_2.mute = False
        if hasattr(group_input_2, 'name'):
            group_input_2.name = 'Group Input'
        if hasattr(group_input_2, 'use_custom_color'):
            group_input_2.use_custom_color = False
        if hasattr(group_input_2, 'width'):
            group_input_2.width = 140.0
        if hasattr(group_input_2.outputs[0], 'default_value'):
            group_input_2.outputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[0], 'display_shape'):
            group_input_2.outputs[0].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[0], 'enabled'):
            group_input_2.outputs[0].enabled = True
        if hasattr(group_input_2.outputs[0], 'hide'):
            group_input_2.outputs[0].hide = False
        if hasattr(group_input_2.outputs[0], 'hide_value'):
            group_input_2.outputs[0].hide_value = False
        if hasattr(group_input_2.outputs[0], 'name'):
            group_input_2.outputs[0].name = 'ASG Control'
        if hasattr(group_input_2.outputs[0], 'show_expanded'):
            group_input_2.outputs[0].show_expanded = False
        if hasattr(group_input_2.outputs[1], 'default_value'):
            group_input_2.outputs[1].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[1], 'display_shape'):
            group_input_2.outputs[1].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[1], 'enabled'):
            group_input_2.outputs[1].enabled = True
        if hasattr(group_input_2.outputs[1], 'hide'):
            group_input_2.outputs[1].hide = False
        if hasattr(group_input_2.outputs[1], 'hide_value'):
            group_input_2.outputs[1].hide_value = False
        if hasattr(group_input_2.outputs[1], 'name'):
            group_input_2.outputs[1].name = 'RGB Control'
        if hasattr(group_input_2.outputs[1], 'show_expanded'):
            group_input_2.outputs[1].show_expanded = False
        if hasattr(group_input_2.outputs[2], 'default_value'):
            group_input_2.outputs[2].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[2], 'display_shape'):
            group_input_2.outputs[2].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[2], 'enabled'):
            group_input_2.outputs[2].enabled = True
        if hasattr(group_input_2.outputs[2], 'hide'):
            group_input_2.outputs[2].hide = False
        if hasattr(group_input_2.outputs[2], 'hide_value'):
            group_input_2.outputs[2].hide_value = False
        if hasattr(group_input_2.outputs[2], 'name'):
            group_input_2.outputs[2].name = 'Blue Control'
        if hasattr(group_input_2.outputs[2], 'show_expanded'):
            group_input_2.outputs[2].show_expanded = False
        if hasattr(group_input_2.outputs[3], 'default_value'):
            group_input_2.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[3], 'display_shape'):
            group_input_2.outputs[3].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[3], 'enabled'):
            group_input_2.outputs[3].enabled = True
        if hasattr(group_input_2.outputs[3], 'hide'):
            group_input_2.outputs[3].hide = False
        if hasattr(group_input_2.outputs[3], 'hide_value'):
            group_input_2.outputs[3].hide_value = False
        if hasattr(group_input_2.outputs[3], 'name'):
            group_input_2.outputs[3].name = 'Slot 1'
        if hasattr(group_input_2.outputs[3], 'show_expanded'):
            group_input_2.outputs[3].show_expanded = False
        if hasattr(group_input_2.outputs[4], 'default_value'):
            group_input_2.outputs[4].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[4], 'display_shape'):
            group_input_2.outputs[4].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[4], 'enabled'):
            group_input_2.outputs[4].enabled = True
        if hasattr(group_input_2.outputs[4], 'hide'):
            group_input_2.outputs[4].hide = False
        if hasattr(group_input_2.outputs[4], 'hide_value'):
            group_input_2.outputs[4].hide_value = False
        if hasattr(group_input_2.outputs[4], 'name'):
            group_input_2.outputs[4].name = 'Slot 2'
        if hasattr(group_input_2.outputs[4], 'show_expanded'):
            group_input_2.outputs[4].show_expanded = False
        if hasattr(group_input_2.outputs[5], 'default_value'):
            group_input_2.outputs[5].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[5], 'display_shape'):
            group_input_2.outputs[5].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[5], 'enabled'):
            group_input_2.outputs[5].enabled = True
        if hasattr(group_input_2.outputs[5], 'hide'):
            group_input_2.outputs[5].hide = False
        if hasattr(group_input_2.outputs[5], 'hide_value'):
            group_input_2.outputs[5].hide_value = False
        if hasattr(group_input_2.outputs[5], 'name'):
            group_input_2.outputs[5].name = 'Slot 3'
        if hasattr(group_input_2.outputs[5], 'show_expanded'):
            group_input_2.outputs[5].show_expanded = False
        if hasattr(group_input_2.outputs[6], 'default_value'):
            group_input_2.outputs[6].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[6], 'display_shape'):
            group_input_2.outputs[6].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[6], 'enabled'):
            group_input_2.outputs[6].enabled = True
        if hasattr(group_input_2.outputs[6], 'hide'):
            group_input_2.outputs[6].hide = False
        if hasattr(group_input_2.outputs[6], 'hide_value'):
            group_input_2.outputs[6].hide_value = False
        if hasattr(group_input_2.outputs[6], 'name'):
            group_input_2.outputs[6].name = 'Slot 4'
        if hasattr(group_input_2.outputs[6], 'show_expanded'):
            group_input_2.outputs[6].show_expanded = False
        if hasattr(group_input_2.outputs[7], 'default_value'):
            group_input_2.outputs[7].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[7], 'display_shape'):
            group_input_2.outputs[7].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[7], 'enabled'):
            group_input_2.outputs[7].enabled = True
        if hasattr(group_input_2.outputs[7], 'hide'):
            group_input_2.outputs[7].hide = False
        if hasattr(group_input_2.outputs[7], 'hide_value'):
            group_input_2.outputs[7].hide_value = False
        if hasattr(group_input_2.outputs[7], 'name'):
            group_input_2.outputs[7].name = 'Slot 5'
        if hasattr(group_input_2.outputs[7], 'show_expanded'):
            group_input_2.outputs[7].show_expanded = False
        if hasattr(group_input_2.outputs[8], 'default_value'):
            group_input_2.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[8], 'display_shape'):
            group_input_2.outputs[8].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[8], 'enabled'):
            group_input_2.outputs[8].enabled = True
        if hasattr(group_input_2.outputs[8], 'hide'):
            group_input_2.outputs[8].hide = False
        if hasattr(group_input_2.outputs[8], 'hide_value'):
            group_input_2.outputs[8].hide_value = False
        if hasattr(group_input_2.outputs[8], 'name'):
            group_input_2.outputs[8].name = 'Slot 6'
        if hasattr(group_input_2.outputs[8], 'show_expanded'):
            group_input_2.outputs[8].show_expanded = False
        if hasattr(group_input_2.outputs[9], 'default_value'):
            group_input_2.outputs[9].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[9], 'display_shape'):
            group_input_2.outputs[9].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[9], 'enabled'):
            group_input_2.outputs[9].enabled = True
        if hasattr(group_input_2.outputs[9], 'hide'):
            group_input_2.outputs[9].hide = False
        if hasattr(group_input_2.outputs[9], 'hide_value'):
            group_input_2.outputs[9].hide_value = False
        if hasattr(group_input_2.outputs[9], 'name'):
            group_input_2.outputs[9].name = 'Grime'
        if hasattr(group_input_2.outputs[9], 'show_expanded'):
            group_input_2.outputs[9].show_expanded = False
        if hasattr(group_input_2.outputs[10], 'default_value'):
            group_input_2.outputs[10].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[10], 'display_shape'):
            group_input_2.outputs[10].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[10], 'enabled'):
            group_input_2.outputs[10].enabled = True
        if hasattr(group_input_2.outputs[10], 'hide'):
            group_input_2.outputs[10].hide = False
        if hasattr(group_input_2.outputs[10], 'hide_value'):
            group_input_2.outputs[10].hide_value = False
        if hasattr(group_input_2.outputs[10], 'name'):
            group_input_2.outputs[10].name = 'Dust'
        if hasattr(group_input_2.outputs[10], 'show_expanded'):
            group_input_2.outputs[10].show_expanded = False
        if hasattr(group_input_2.outputs[11], 'default_value'):
            group_input_2.outputs[11].default_value = (1.0, 1.0, 1.0, 1.0)
        if hasattr(group_input_2.outputs[11], 'display_shape'):
            group_input_2.outputs[11].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[11], 'enabled'):
            group_input_2.outputs[11].enabled = True
        if hasattr(group_input_2.outputs[11], 'hide'):
            group_input_2.outputs[11].hide = False
        if hasattr(group_input_2.outputs[11], 'hide_value'):
            group_input_2.outputs[11].hide_value = False
        if hasattr(group_input_2.outputs[11], 'name'):
            group_input_2.outputs[11].name = 'Scratch'
        if hasattr(group_input_2.outputs[11], 'show_expanded'):
            group_input_2.outputs[11].show_expanded = False
        if hasattr(group_input_2.outputs[12], 'default_value'):
            group_input_2.outputs[12].default_value = 0.5
        if hasattr(group_input_2.outputs[12], 'display_shape'):
            group_input_2.outputs[12].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[12], 'enabled'):
            group_input_2.outputs[12].enabled = True
        if hasattr(group_input_2.outputs[12], 'hide'):
            group_input_2.outputs[12].hide = False
        if hasattr(group_input_2.outputs[12], 'hide_value'):
            group_input_2.outputs[12].hide_value = False
        if hasattr(group_input_2.outputs[12], 'name'):
            group_input_2.outputs[12].name = 'Scratch Amount'
        if hasattr(group_input_2.outputs[12], 'show_expanded'):
            group_input_2.outputs[12].show_expanded = False
        if hasattr(group_input_2.outputs[13], 'default_value'):
            group_input_2.outputs[13].default_value = 1.0
        if hasattr(group_input_2.outputs[13], 'display_shape'):
            group_input_2.outputs[13].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[13], 'enabled'):
            group_input_2.outputs[13].enabled = True
        if hasattr(group_input_2.outputs[13], 'hide'):
            group_input_2.outputs[13].hide = False
        if hasattr(group_input_2.outputs[13], 'hide_value'):
            group_input_2.outputs[13].hide_value = False
        if hasattr(group_input_2.outputs[13], 'name'):
            group_input_2.outputs[13].name = 'Grime Amount'
        if hasattr(group_input_2.outputs[13], 'show_expanded'):
            group_input_2.outputs[13].show_expanded = False
        if hasattr(group_input_2.outputs[14], 'default_value'):
            group_input_2.outputs[14].default_value = 1.0
        if hasattr(group_input_2.outputs[14], 'display_shape'):
            group_input_2.outputs[14].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[14], 'enabled'):
            group_input_2.outputs[14].enabled = True
        if hasattr(group_input_2.outputs[14], 'hide'):
            group_input_2.outputs[14].hide = False
        if hasattr(group_input_2.outputs[14], 'hide_value'):
            group_input_2.outputs[14].hide_value = False
        if hasattr(group_input_2.outputs[14], 'name'):
            group_input_2.outputs[14].name = 'Dust Amount'
        if hasattr(group_input_2.outputs[14], 'show_expanded'):
            group_input_2.outputs[14].show_expanded = False

        # LINKS
        node_tree2.links.new(group_input_2.outputs[0], separate_rgb_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[2], separate_rgb_001_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[1], separate_rgb_002_2.inputs[0])
        node_tree2.links.new(mix_2.outputs[0], mix_001_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[0], mix_2.inputs[0])
        node_tree2.links.new(mix_001_2.outputs[0], mix_002_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[1], mix_001_2.inputs[0])
        node_tree2.links.new(mix_002_2.outputs[0], mix_003_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[2], mix_002_2.inputs[0])
        node_tree2.links.new(mix_003_2.outputs[0], mix_004_2.inputs[1])
        node_tree2.links.new(separate_rgb_001_2.outputs[0], mix_003_2.inputs[0])
        node_tree2.links.new(mix_004_2.outputs[0], mix_005_2.inputs[1])
        node_tree2.links.new(separate_rgb_001_2.outputs[1], mix_004_2.inputs[0])
        node_tree2.links.new(mix_005_2.outputs[0], mix_006_2.inputs[1])
        node_tree2.links.new(mix_006_2.outputs[0], mix_007_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[3], mix_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[4], mix_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[5], mix_001_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[6], mix_002_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[7], mix_003_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[8], mix_004_2.inputs[2])
        node_tree2.links.new(mix_007_2.outputs[0], group_output_2.inputs[0])
        node_tree2.links.new(separate_rgb_001_2.outputs[2], math_005_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[14], math_005_2.inputs[1])
        node_tree2.links.new(separate_rgb_2.outputs[2], mix_005_2.inputs[0])
        node_tree2.links.new(math_005_2.outputs[0], mix_006_2.inputs[0])
        node_tree2.links.new(math_2.outputs[0], mix_007_2.inputs[0])
        node_tree2.links.new(math_006_2.outputs[0], mix_005_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[11], mix_007_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[10], mix_006_2.inputs[2])
        node_tree2.links.new(separate_rgb_2.outputs[1], math_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[12], math_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[9], math_006_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[13], math_006_2.inputs[1])

    group_009_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_009_1, 'node_tree'):
        group_009_1.node_tree = bpy.data.node_groups.get('Infinite Matts')
    if hasattr(group_009_1, 'color'):
        group_009_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_009_1, 'hide'):
        group_009_1.hide = False
    if hasattr(group_009_1, 'label'):
        group_009_1.label = 'Roughness'
    if hasattr(group_009_1, 'location'):
        group_009_1.location = (-100.0, 380.0)
    if hasattr(group_009_1, 'mute'):
        group_009_1.mute = False
    if hasattr(group_009_1, 'name'):
        group_009_1.name = 'Group.009'
    if hasattr(group_009_1, 'use_custom_color'):
        group_009_1.use_custom_color = False
    if hasattr(group_009_1, 'width'):
        group_009_1.width = 216.826904296875
    if hasattr(group_009_1.inputs[0], 'default_value'):
        group_009_1.inputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_009_1.inputs[0], 'display_shape'):
        group_009_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[0], 'enabled'):
        group_009_1.inputs[0].enabled = True
    if hasattr(group_009_1.inputs[0], 'hide'):
        group_009_1.inputs[0].hide = False
    if hasattr(group_009_1.inputs[0], 'hide_value'):
        group_009_1.inputs[0].hide_value = False
    if hasattr(group_009_1.inputs[0], 'name'):
        group_009_1.inputs[0].name = 'ASG Control'
    if hasattr(group_009_1.inputs[0], 'show_expanded'):
        group_009_1.inputs[0].show_expanded = False
    if hasattr(group_009_1.inputs[1], 'default_value'):
        group_009_1.inputs[1].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_009_1.inputs[1], 'display_shape'):
        group_009_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[1], 'enabled'):
        group_009_1.inputs[1].enabled = True
    if hasattr(group_009_1.inputs[1], 'hide'):
        group_009_1.inputs[1].hide = False
    if hasattr(group_009_1.inputs[1], 'hide_value'):
        group_009_1.inputs[1].hide_value = False
    if hasattr(group_009_1.inputs[1], 'name'):
        group_009_1.inputs[1].name = 'RGB Control'
    if hasattr(group_009_1.inputs[1], 'show_expanded'):
        group_009_1.inputs[1].show_expanded = False
    if hasattr(group_009_1.inputs[2], 'default_value'):
        group_009_1.inputs[2].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_009_1.inputs[2], 'display_shape'):
        group_009_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[2], 'enabled'):
        group_009_1.inputs[2].enabled = True
    if hasattr(group_009_1.inputs[2], 'hide'):
        group_009_1.inputs[2].hide = False
    if hasattr(group_009_1.inputs[2], 'hide_value'):
        group_009_1.inputs[2].hide_value = False
    if hasattr(group_009_1.inputs[2], 'name'):
        group_009_1.inputs[2].name = 'Blue Control'
    if hasattr(group_009_1.inputs[2], 'show_expanded'):
        group_009_1.inputs[2].show_expanded = False
    if hasattr(group_009_1.inputs[3], 'default_value'):
        group_009_1.inputs[3].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_009_1.inputs[3], 'display_shape'):
        group_009_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[3], 'enabled'):
        group_009_1.inputs[3].enabled = True
    if hasattr(group_009_1.inputs[3], 'hide'):
        group_009_1.inputs[3].hide = False
    if hasattr(group_009_1.inputs[3], 'hide_value'):
        group_009_1.inputs[3].hide_value = False
    if hasattr(group_009_1.inputs[3], 'name'):
        group_009_1.inputs[3].name = 'Slot 1'
    if hasattr(group_009_1.inputs[3], 'show_expanded'):
        group_009_1.inputs[3].show_expanded = False
    if hasattr(group_009_1.inputs[4], 'default_value'):
        group_009_1.inputs[4].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_009_1.inputs[4], 'display_shape'):
        group_009_1.inputs[4].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[4], 'enabled'):
        group_009_1.inputs[4].enabled = True
    if hasattr(group_009_1.inputs[4], 'hide'):
        group_009_1.inputs[4].hide = False
    if hasattr(group_009_1.inputs[4], 'hide_value'):
        group_009_1.inputs[4].hide_value = False
    if hasattr(group_009_1.inputs[4], 'name'):
        group_009_1.inputs[4].name = 'Slot 2'
    if hasattr(group_009_1.inputs[4], 'show_expanded'):
        group_009_1.inputs[4].show_expanded = False
    if hasattr(group_009_1.inputs[5], 'default_value'):
        group_009_1.inputs[5].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_009_1.inputs[5], 'display_shape'):
        group_009_1.inputs[5].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[5], 'enabled'):
        group_009_1.inputs[5].enabled = True
    if hasattr(group_009_1.inputs[5], 'hide'):
        group_009_1.inputs[5].hide = False
    if hasattr(group_009_1.inputs[5], 'hide_value'):
        group_009_1.inputs[5].hide_value = False
    if hasattr(group_009_1.inputs[5], 'name'):
        group_009_1.inputs[5].name = 'Slot 3'
    if hasattr(group_009_1.inputs[5], 'show_expanded'):
        group_009_1.inputs[5].show_expanded = False
    if hasattr(group_009_1.inputs[6], 'default_value'):
        group_009_1.inputs[6].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_009_1.inputs[6], 'display_shape'):
        group_009_1.inputs[6].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[6], 'enabled'):
        group_009_1.inputs[6].enabled = True
    if hasattr(group_009_1.inputs[6], 'hide'):
        group_009_1.inputs[6].hide = False
    if hasattr(group_009_1.inputs[6], 'hide_value'):
        group_009_1.inputs[6].hide_value = False
    if hasattr(group_009_1.inputs[6], 'name'):
        group_009_1.inputs[6].name = 'Slot 4'
    if hasattr(group_009_1.inputs[6], 'show_expanded'):
        group_009_1.inputs[6].show_expanded = False
    if hasattr(group_009_1.inputs[7], 'default_value'):
        group_009_1.inputs[7].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_009_1.inputs[7], 'display_shape'):
        group_009_1.inputs[7].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[7], 'enabled'):
        group_009_1.inputs[7].enabled = True
    if hasattr(group_009_1.inputs[7], 'hide'):
        group_009_1.inputs[7].hide = False
    if hasattr(group_009_1.inputs[7], 'hide_value'):
        group_009_1.inputs[7].hide_value = False
    if hasattr(group_009_1.inputs[7], 'name'):
        group_009_1.inputs[7].name = 'Slot 5'
    if hasattr(group_009_1.inputs[7], 'show_expanded'):
        group_009_1.inputs[7].show_expanded = False
    if hasattr(group_009_1.inputs[8], 'default_value'):
        group_009_1.inputs[8].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_009_1.inputs[8], 'display_shape'):
        group_009_1.inputs[8].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[8], 'enabled'):
        group_009_1.inputs[8].enabled = True
    if hasattr(group_009_1.inputs[8], 'hide'):
        group_009_1.inputs[8].hide = False
    if hasattr(group_009_1.inputs[8], 'hide_value'):
        group_009_1.inputs[8].hide_value = False
    if hasattr(group_009_1.inputs[8], 'name'):
        group_009_1.inputs[8].name = 'Slot 6'
    if hasattr(group_009_1.inputs[8], 'show_expanded'):
        group_009_1.inputs[8].show_expanded = False
    if hasattr(group_009_1.inputs[9], 'default_value'):
        group_009_1.inputs[9].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_009_1.inputs[9], 'display_shape'):
        group_009_1.inputs[9].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[9], 'enabled'):
        group_009_1.inputs[9].enabled = True
    if hasattr(group_009_1.inputs[9], 'hide'):
        group_009_1.inputs[9].hide = False
    if hasattr(group_009_1.inputs[9], 'hide_value'):
        group_009_1.inputs[9].hide_value = False
    if hasattr(group_009_1.inputs[9], 'name'):
        group_009_1.inputs[9].name = 'Grime'
    if hasattr(group_009_1.inputs[9], 'show_expanded'):
        group_009_1.inputs[9].show_expanded = False
    if hasattr(group_009_1.inputs[10], 'default_value'):
        group_009_1.inputs[10].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_009_1.inputs[10], 'display_shape'):
        group_009_1.inputs[10].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[10], 'enabled'):
        group_009_1.inputs[10].enabled = True
    if hasattr(group_009_1.inputs[10], 'hide'):
        group_009_1.inputs[10].hide = False
    if hasattr(group_009_1.inputs[10], 'hide_value'):
        group_009_1.inputs[10].hide_value = False
    if hasattr(group_009_1.inputs[10], 'name'):
        group_009_1.inputs[10].name = 'Dust'
    if hasattr(group_009_1.inputs[10], 'show_expanded'):
        group_009_1.inputs[10].show_expanded = False
    if hasattr(group_009_1.inputs[11], 'default_value'):
        group_009_1.inputs[11].default_value = (0.3968116044998169, 0.3968116044998169, 0.3968116044998169, 1.0)
    if hasattr(group_009_1.inputs[11], 'display_shape'):
        group_009_1.inputs[11].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[11], 'enabled'):
        group_009_1.inputs[11].enabled = True
    if hasattr(group_009_1.inputs[11], 'hide'):
        group_009_1.inputs[11].hide = False
    if hasattr(group_009_1.inputs[11], 'hide_value'):
        group_009_1.inputs[11].hide_value = False
    if hasattr(group_009_1.inputs[11], 'name'):
        group_009_1.inputs[11].name = 'Scratch'
    if hasattr(group_009_1.inputs[11], 'show_expanded'):
        group_009_1.inputs[11].show_expanded = False
    if hasattr(group_009_1.inputs[12], 'default_value'):
        group_009_1.inputs[12].default_value = 0.5
    if hasattr(group_009_1.inputs[12], 'display_shape'):
        group_009_1.inputs[12].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[12], 'enabled'):
        group_009_1.inputs[12].enabled = True
    if hasattr(group_009_1.inputs[12], 'hide'):
        group_009_1.inputs[12].hide = False
    if hasattr(group_009_1.inputs[12], 'hide_value'):
        group_009_1.inputs[12].hide_value = False
    if hasattr(group_009_1.inputs[12], 'name'):
        group_009_1.inputs[12].name = 'Scratch Amount'
    if hasattr(group_009_1.inputs[12], 'show_expanded'):
        group_009_1.inputs[12].show_expanded = False
    if hasattr(group_009_1.inputs[13], 'default_value'):
        group_009_1.inputs[13].default_value = 1.0
    if hasattr(group_009_1.inputs[13], 'display_shape'):
        group_009_1.inputs[13].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[13], 'enabled'):
        group_009_1.inputs[13].enabled = True
    if hasattr(group_009_1.inputs[13], 'hide'):
        group_009_1.inputs[13].hide = False
    if hasattr(group_009_1.inputs[13], 'hide_value'):
        group_009_1.inputs[13].hide_value = False
    if hasattr(group_009_1.inputs[13], 'name'):
        group_009_1.inputs[13].name = 'Grime Amount'
    if hasattr(group_009_1.inputs[13], 'show_expanded'):
        group_009_1.inputs[13].show_expanded = False
    if hasattr(group_009_1.inputs[14], 'default_value'):
        group_009_1.inputs[14].default_value = 1.0
    if hasattr(group_009_1.inputs[14], 'display_shape'):
        group_009_1.inputs[14].display_shape = 'CIRCLE'
    if hasattr(group_009_1.inputs[14], 'enabled'):
        group_009_1.inputs[14].enabled = True
    if hasattr(group_009_1.inputs[14], 'hide'):
        group_009_1.inputs[14].hide = False
    if hasattr(group_009_1.inputs[14], 'hide_value'):
        group_009_1.inputs[14].hide_value = False
    if hasattr(group_009_1.inputs[14], 'name'):
        group_009_1.inputs[14].name = 'Dust Amount'
    if hasattr(group_009_1.inputs[14], 'show_expanded'):
        group_009_1.inputs[14].show_expanded = False
    if hasattr(group_009_1.outputs[0], 'default_value'):
        group_009_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_009_1.outputs[0], 'display_shape'):
        group_009_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_009_1.outputs[0], 'enabled'):
        group_009_1.outputs[0].enabled = True
    if hasattr(group_009_1.outputs[0], 'hide'):
        group_009_1.outputs[0].hide = False
    if hasattr(group_009_1.outputs[0], 'hide_value'):
        group_009_1.outputs[0].hide_value = False
    if hasattr(group_009_1.outputs[0], 'name'):
        group_009_1.outputs[0].name = 'Color'
    if hasattr(group_009_1.outputs[0], 'show_expanded'):
        group_009_1.outputs[0].show_expanded = False

    node_tree2 = bpy.data.node_groups.get('Emission')
    if not node_tree2:
        node_tree2 = bpy.data.node_groups.new('Emission', 'ShaderNodeTree')
        for node in node_tree2.nodes:
            node_tree2.nodes.remove(node)
        # INPUTS
        input = node_tree2.inputs.new('NodeSocketColor', 'ASG')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'ASG'
        input = node_tree2.inputs.new('NodeSocketColor', 'Mask_0')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Mask_0'
        input = node_tree2.inputs.new('NodeSocketColor', 'Mask_1')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Mask_1'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 1')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 1'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 2')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 2'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 3')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 3'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 4')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 4'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 5')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 5'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 6')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 6'
        input = node_tree2.inputs.new('NodeSocketColor', 'Grime')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Grime'
        input = node_tree2.inputs.new('NodeSocketColor', 'Dust')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Dust'
        input = node_tree2.inputs.new('NodeSocketFloat', 'Grime Amount')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 0.5
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 10000.0
        if hasattr(input, 'min_value'):
            input.min_value = -10000.0
        if hasattr(input, 'name'):
            input.name = 'Grime Amount'
        input = node_tree2.inputs.new('NodeSocketFloat', 'Dust Amount')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 0.5
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 10000.0
        if hasattr(input, 'min_value'):
            input.min_value = -10000.0
        if hasattr(input, 'name'):
            input.name = 'Dust Amount'
        # OUTPUTS
        output = node_tree2.outputs.new('NodeSocketColor', 'Color')
        if hasattr(output, 'attribute_domain'):
            output.attribute_domain = 'POINT'
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        # NODES
        group_input_2 = node_tree2.nodes.new('NodeGroupInput')
        if hasattr(group_input_2, 'color'):
            group_input_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_input_2, 'hide'):
            group_input_2.hide = False
        if hasattr(group_input_2, 'location'):
            group_input_2.location = (-1320.0, 20.0)
        if hasattr(group_input_2, 'mute'):
            group_input_2.mute = False
        if hasattr(group_input_2, 'name'):
            group_input_2.name = 'Group Input'
        if hasattr(group_input_2, 'use_custom_color'):
            group_input_2.use_custom_color = False
        if hasattr(group_input_2, 'width'):
            group_input_2.width = 145.58837890625
        if hasattr(group_input_2.outputs[0], 'default_value'):
            group_input_2.outputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[0], 'display_shape'):
            group_input_2.outputs[0].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[0], 'enabled'):
            group_input_2.outputs[0].enabled = True
        if hasattr(group_input_2.outputs[0], 'hide'):
            group_input_2.outputs[0].hide = False
        if hasattr(group_input_2.outputs[0], 'hide_value'):
            group_input_2.outputs[0].hide_value = False
        if hasattr(group_input_2.outputs[0], 'name'):
            group_input_2.outputs[0].name = 'ASG'
        if hasattr(group_input_2.outputs[0], 'show_expanded'):
            group_input_2.outputs[0].show_expanded = False
        if hasattr(group_input_2.outputs[1], 'default_value'):
            group_input_2.outputs[1].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[1], 'display_shape'):
            group_input_2.outputs[1].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[1], 'enabled'):
            group_input_2.outputs[1].enabled = True
        if hasattr(group_input_2.outputs[1], 'hide'):
            group_input_2.outputs[1].hide = False
        if hasattr(group_input_2.outputs[1], 'hide_value'):
            group_input_2.outputs[1].hide_value = False
        if hasattr(group_input_2.outputs[1], 'name'):
            group_input_2.outputs[1].name = 'Mask_0'
        if hasattr(group_input_2.outputs[1], 'show_expanded'):
            group_input_2.outputs[1].show_expanded = False
        if hasattr(group_input_2.outputs[2], 'default_value'):
            group_input_2.outputs[2].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[2], 'display_shape'):
            group_input_2.outputs[2].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[2], 'enabled'):
            group_input_2.outputs[2].enabled = True
        if hasattr(group_input_2.outputs[2], 'hide'):
            group_input_2.outputs[2].hide = False
        if hasattr(group_input_2.outputs[2], 'hide_value'):
            group_input_2.outputs[2].hide_value = False
        if hasattr(group_input_2.outputs[2], 'name'):
            group_input_2.outputs[2].name = 'Mask_1'
        if hasattr(group_input_2.outputs[2], 'show_expanded'):
            group_input_2.outputs[2].show_expanded = False
        if hasattr(group_input_2.outputs[3], 'default_value'):
            group_input_2.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[3], 'display_shape'):
            group_input_2.outputs[3].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[3], 'enabled'):
            group_input_2.outputs[3].enabled = True
        if hasattr(group_input_2.outputs[3], 'hide'):
            group_input_2.outputs[3].hide = False
        if hasattr(group_input_2.outputs[3], 'hide_value'):
            group_input_2.outputs[3].hide_value = False
        if hasattr(group_input_2.outputs[3], 'name'):
            group_input_2.outputs[3].name = 'Slot 1'
        if hasattr(group_input_2.outputs[3], 'show_expanded'):
            group_input_2.outputs[3].show_expanded = False
        if hasattr(group_input_2.outputs[4], 'default_value'):
            group_input_2.outputs[4].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[4], 'display_shape'):
            group_input_2.outputs[4].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[4], 'enabled'):
            group_input_2.outputs[4].enabled = True
        if hasattr(group_input_2.outputs[4], 'hide'):
            group_input_2.outputs[4].hide = False
        if hasattr(group_input_2.outputs[4], 'hide_value'):
            group_input_2.outputs[4].hide_value = False
        if hasattr(group_input_2.outputs[4], 'name'):
            group_input_2.outputs[4].name = 'Slot 2'
        if hasattr(group_input_2.outputs[4], 'show_expanded'):
            group_input_2.outputs[4].show_expanded = False
        if hasattr(group_input_2.outputs[5], 'default_value'):
            group_input_2.outputs[5].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[5], 'display_shape'):
            group_input_2.outputs[5].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[5], 'enabled'):
            group_input_2.outputs[5].enabled = True
        if hasattr(group_input_2.outputs[5], 'hide'):
            group_input_2.outputs[5].hide = False
        if hasattr(group_input_2.outputs[5], 'hide_value'):
            group_input_2.outputs[5].hide_value = False
        if hasattr(group_input_2.outputs[5], 'name'):
            group_input_2.outputs[5].name = 'Slot 3'
        if hasattr(group_input_2.outputs[5], 'show_expanded'):
            group_input_2.outputs[5].show_expanded = False
        if hasattr(group_input_2.outputs[6], 'default_value'):
            group_input_2.outputs[6].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[6], 'display_shape'):
            group_input_2.outputs[6].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[6], 'enabled'):
            group_input_2.outputs[6].enabled = True
        if hasattr(group_input_2.outputs[6], 'hide'):
            group_input_2.outputs[6].hide = False
        if hasattr(group_input_2.outputs[6], 'hide_value'):
            group_input_2.outputs[6].hide_value = False
        if hasattr(group_input_2.outputs[6], 'name'):
            group_input_2.outputs[6].name = 'Slot 4'
        if hasattr(group_input_2.outputs[6], 'show_expanded'):
            group_input_2.outputs[6].show_expanded = False
        if hasattr(group_input_2.outputs[7], 'default_value'):
            group_input_2.outputs[7].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[7], 'display_shape'):
            group_input_2.outputs[7].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[7], 'enabled'):
            group_input_2.outputs[7].enabled = True
        if hasattr(group_input_2.outputs[7], 'hide'):
            group_input_2.outputs[7].hide = False
        if hasattr(group_input_2.outputs[7], 'hide_value'):
            group_input_2.outputs[7].hide_value = False
        if hasattr(group_input_2.outputs[7], 'name'):
            group_input_2.outputs[7].name = 'Slot 5'
        if hasattr(group_input_2.outputs[7], 'show_expanded'):
            group_input_2.outputs[7].show_expanded = False
        if hasattr(group_input_2.outputs[8], 'default_value'):
            group_input_2.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[8], 'display_shape'):
            group_input_2.outputs[8].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[8], 'enabled'):
            group_input_2.outputs[8].enabled = True
        if hasattr(group_input_2.outputs[8], 'hide'):
            group_input_2.outputs[8].hide = False
        if hasattr(group_input_2.outputs[8], 'hide_value'):
            group_input_2.outputs[8].hide_value = False
        if hasattr(group_input_2.outputs[8], 'name'):
            group_input_2.outputs[8].name = 'Slot 6'
        if hasattr(group_input_2.outputs[8], 'show_expanded'):
            group_input_2.outputs[8].show_expanded = False
        if hasattr(group_input_2.outputs[9], 'default_value'):
            group_input_2.outputs[9].default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
        if hasattr(group_input_2.outputs[9], 'display_shape'):
            group_input_2.outputs[9].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[9], 'enabled'):
            group_input_2.outputs[9].enabled = True
        if hasattr(group_input_2.outputs[9], 'hide'):
            group_input_2.outputs[9].hide = False
        if hasattr(group_input_2.outputs[9], 'hide_value'):
            group_input_2.outputs[9].hide_value = False
        if hasattr(group_input_2.outputs[9], 'name'):
            group_input_2.outputs[9].name = 'Grime'
        if hasattr(group_input_2.outputs[9], 'show_expanded'):
            group_input_2.outputs[9].show_expanded = False
        if hasattr(group_input_2.outputs[10], 'default_value'):
            group_input_2.outputs[10].default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
        if hasattr(group_input_2.outputs[10], 'display_shape'):
            group_input_2.outputs[10].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[10], 'enabled'):
            group_input_2.outputs[10].enabled = True
        if hasattr(group_input_2.outputs[10], 'hide'):
            group_input_2.outputs[10].hide = False
        if hasattr(group_input_2.outputs[10], 'hide_value'):
            group_input_2.outputs[10].hide_value = False
        if hasattr(group_input_2.outputs[10], 'name'):
            group_input_2.outputs[10].name = 'Dust'
        if hasattr(group_input_2.outputs[10], 'show_expanded'):
            group_input_2.outputs[10].show_expanded = False
        if hasattr(group_input_2.outputs[11], 'default_value'):
            group_input_2.outputs[11].default_value = 0.5
        if hasattr(group_input_2.outputs[11], 'display_shape'):
            group_input_2.outputs[11].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[11], 'enabled'):
            group_input_2.outputs[11].enabled = True
        if hasattr(group_input_2.outputs[11], 'hide'):
            group_input_2.outputs[11].hide = False
        if hasattr(group_input_2.outputs[11], 'hide_value'):
            group_input_2.outputs[11].hide_value = False
        if hasattr(group_input_2.outputs[11], 'name'):
            group_input_2.outputs[11].name = 'Grime Amount'
        if hasattr(group_input_2.outputs[11], 'show_expanded'):
            group_input_2.outputs[11].show_expanded = False
        if hasattr(group_input_2.outputs[12], 'default_value'):
            group_input_2.outputs[12].default_value = 0.5
        if hasattr(group_input_2.outputs[12], 'display_shape'):
            group_input_2.outputs[12].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[12], 'enabled'):
            group_input_2.outputs[12].enabled = True
        if hasattr(group_input_2.outputs[12], 'hide'):
            group_input_2.outputs[12].hide = False
        if hasattr(group_input_2.outputs[12], 'hide_value'):
            group_input_2.outputs[12].hide_value = False
        if hasattr(group_input_2.outputs[12], 'name'):
            group_input_2.outputs[12].name = 'Dust Amount'
        if hasattr(group_input_2.outputs[12], 'show_expanded'):
            group_input_2.outputs[12].show_expanded = False

        group_output_2 = node_tree2.nodes.new('NodeGroupOutput')
        if hasattr(group_output_2, 'color'):
            group_output_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_output_2, 'hide'):
            group_output_2.hide = False
        if hasattr(group_output_2, 'is_active_output'):
            group_output_2.is_active_output = True
        if hasattr(group_output_2, 'location'):
            group_output_2.location = (1120.0, -280.0)
        if hasattr(group_output_2, 'mute'):
            group_output_2.mute = False
        if hasattr(group_output_2, 'name'):
            group_output_2.name = 'Group Output'
        if hasattr(group_output_2, 'use_custom_color'):
            group_output_2.use_custom_color = False
        if hasattr(group_output_2, 'width'):
            group_output_2.width = 140.0
        if hasattr(group_output_2.inputs[0], 'default_value'):
            group_output_2.inputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(group_output_2.inputs[0], 'display_shape'):
            group_output_2.inputs[0].display_shape = 'CIRCLE'
        if hasattr(group_output_2.inputs[0], 'enabled'):
            group_output_2.inputs[0].enabled = True
        if hasattr(group_output_2.inputs[0], 'hide'):
            group_output_2.inputs[0].hide = False
        if hasattr(group_output_2.inputs[0], 'hide_value'):
            group_output_2.inputs[0].hide_value = False
        if hasattr(group_output_2.inputs[0], 'name'):
            group_output_2.inputs[0].name = 'Color'
        if hasattr(group_output_2.inputs[0], 'show_expanded'):
            group_output_2.inputs[0].show_expanded = False

        mix_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_2, 'blend_type'):
            mix_2.blend_type = 'MIX'
        if hasattr(mix_2, 'color'):
            mix_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_2, 'hide'):
            mix_2.hide = False
        if hasattr(mix_2, 'label'):
            mix_2.label = 'Slot 1 and 2'
        if hasattr(mix_2, 'location'):
            mix_2.location = (-740.0, -340.0)
        if hasattr(mix_2, 'mute'):
            mix_2.mute = False
        if hasattr(mix_2, 'name'):
            mix_2.name = 'Mix'
        if hasattr(mix_2, 'use_alpha'):
            mix_2.use_alpha = False
        if hasattr(mix_2, 'use_clamp'):
            mix_2.use_clamp = False
        if hasattr(mix_2, 'use_custom_color'):
            mix_2.use_custom_color = False
        if hasattr(mix_2, 'width'):
            mix_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 1.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_001_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_001_2, 'blend_type'):
            mix_001_2.blend_type = 'MIX'
        if hasattr(mix_001_2, 'color'):
            mix_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_001_2, 'hide'):
            mix_001_2.hide = False
        if hasattr(mix_001_2, 'label'):
            mix_001_2.label = 'Slot 3'
        if hasattr(mix_001_2, 'location'):
            mix_001_2.location = (-500.0, -340.0)
        if hasattr(mix_001_2, 'mute'):
            mix_001_2.mute = False
        if hasattr(mix_001_2, 'name'):
            mix_001_2.name = 'Mix.001'
        if hasattr(mix_001_2, 'use_alpha'):
            mix_001_2.use_alpha = False
        if hasattr(mix_001_2, 'use_clamp'):
            mix_001_2.use_clamp = False
        if hasattr(mix_001_2, 'use_custom_color'):
            mix_001_2.use_custom_color = False
        if hasattr(mix_001_2, 'width'):
            mix_001_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.8411373496055603, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_001_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_002_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_002_2, 'blend_type'):
            mix_002_2.blend_type = 'MIX'
        if hasattr(mix_002_2, 'color'):
            mix_002_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_002_2, 'hide'):
            mix_002_2.hide = False
        if hasattr(mix_002_2, 'label'):
            mix_002_2.label = 'Slot 4'
        if hasattr(mix_002_2, 'location'):
            mix_002_2.location = (-260.0, -340.0000305175781)
        if hasattr(mix_002_2, 'mute'):
            mix_002_2.mute = False
        if hasattr(mix_002_2, 'name'):
            mix_002_2.name = 'Mix.002'
        if hasattr(mix_002_2, 'use_alpha'):
            mix_002_2.use_alpha = False
        if hasattr(mix_002_2, 'use_clamp'):
            mix_002_2.use_clamp = False
        if hasattr(mix_002_2, 'use_custom_color'):
            mix_002_2.use_custom_color = False
        if hasattr(mix_002_2, 'width'):
            mix_002_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.006658518221229315, 1.0, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_002_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_003_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_003_2, 'blend_type'):
            mix_003_2.blend_type = 'MIX'
        if hasattr(mix_003_2, 'color'):
            mix_003_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_003_2, 'hide'):
            mix_003_2.hide = False
        if hasattr(mix_003_2, 'label'):
            mix_003_2.label = 'Slot 5'
        if hasattr(mix_003_2, 'location'):
            mix_003_2.location = (-20.00006103515625, -340.0000305175781)
        if hasattr(mix_003_2, 'mute'):
            mix_003_2.mute = False
        if hasattr(mix_003_2, 'name'):
            mix_003_2.name = 'Mix.003'
        if hasattr(mix_003_2, 'use_alpha'):
            mix_003_2.use_alpha = False
        if hasattr(mix_003_2, 'use_clamp'):
            mix_003_2.use_clamp = False
        if hasattr(mix_003_2, 'use_custom_color'):
            mix_003_2.use_custom_color = False
        if hasattr(mix_003_2, 'width'):
            mix_003_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 1.0, 0.7098963856697083, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_003_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_004_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_004_2, 'blend_type'):
            mix_004_2.blend_type = 'MIX'
        if hasattr(mix_004_2, 'color'):
            mix_004_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_004_2, 'hide'):
            mix_004_2.hide = False
        if hasattr(mix_004_2, 'label'):
            mix_004_2.label = 'Slot 6'
        if hasattr(mix_004_2, 'location'):
            mix_004_2.location = (219.99993896484375, -340.0)
        if hasattr(mix_004_2, 'mute'):
            mix_004_2.mute = False
        if hasattr(mix_004_2, 'name'):
            mix_004_2.name = 'Mix.004'
        if hasattr(mix_004_2, 'use_alpha'):
            mix_004_2.use_alpha = False
        if hasattr(mix_004_2, 'use_clamp'):
            mix_004_2.use_clamp = False
        if hasattr(mix_004_2, 'use_custom_color'):
            mix_004_2.use_custom_color = False
        if hasattr(mix_004_2, 'width'):
            mix_004_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_004_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_005_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_005_2, 'blend_type'):
            mix_005_2.blend_type = 'MIX'
        if hasattr(mix_005_2, 'color'):
            mix_005_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_005_2, 'hide'):
            mix_005_2.hide = False
        if hasattr(mix_005_2, 'label'):
            mix_005_2.label = 'Grime'
        if hasattr(mix_005_2, 'location'):
            mix_005_2.location = (460.00006103515625, -340.0)
        if hasattr(mix_005_2, 'mute'):
            mix_005_2.mute = False
        if hasattr(mix_005_2, 'name'):
            mix_005_2.name = 'Mix.005'
        if hasattr(mix_005_2, 'use_alpha'):
            mix_005_2.use_alpha = False
        if hasattr(mix_005_2, 'use_clamp'):
            mix_005_2.use_clamp = False
        if hasattr(mix_005_2, 'use_custom_color'):
            mix_005_2.use_custom_color = False
        if hasattr(mix_005_2, 'width'):
            mix_005_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_005_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_006_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_006_2, 'blend_type'):
            mix_006_2.blend_type = 'MIX'
        if hasattr(mix_006_2, 'color'):
            mix_006_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_006_2, 'hide'):
            mix_006_2.hide = False
        if hasattr(mix_006_2, 'label'):
            mix_006_2.label = 'Dust'
        if hasattr(mix_006_2, 'location'):
            mix_006_2.location = (700.0, -340.0000305175781)
        if hasattr(mix_006_2, 'mute'):
            mix_006_2.mute = False
        if hasattr(mix_006_2, 'name'):
            mix_006_2.name = 'Mix.006'
        if hasattr(mix_006_2, 'use_alpha'):
            mix_006_2.use_alpha = False
        if hasattr(mix_006_2, 'use_clamp'):
            mix_006_2.use_clamp = False
        if hasattr(mix_006_2, 'use_custom_color'):
            mix_006_2.use_custom_color = False
        if hasattr(mix_006_2, 'width'):
            mix_006_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_006_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_2, 'color'):
            math_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_2, 'hide'):
            math_2.hide = False
        if hasattr(math_2, 'location'):
            math_2.location = (339.99993896484375, -79.99993896484375)
        if hasattr(math_2, 'mute'):
            math_2.mute = False
        if hasattr(math_2, 'name'):
            math_2.name = 'Math'
        if hasattr(math_2, 'operation'):
            math_2.operation = 'MULTIPLY'
        if hasattr(math_2, 'use_clamp'):
            math_2.use_clamp = False
        if hasattr(math_2, 'use_custom_color'):
            math_2.use_custom_color = False
        if hasattr(math_2, 'width'):
            math_2.width = 140.0
        input_ = next((input_ for input_ in math_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_001_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_001_2, 'color'):
            math_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_001_2, 'hide'):
            math_001_2.hide = False
        if hasattr(math_001_2, 'location'):
            math_001_2.location = (99.99993896484375, 60.0)
        if hasattr(math_001_2, 'mute'):
            math_001_2.mute = False
        if hasattr(math_001_2, 'name'):
            math_001_2.name = 'Math.001'
        if hasattr(math_001_2, 'operation'):
            math_001_2.operation = 'MULTIPLY'
        if hasattr(math_001_2, 'use_clamp'):
            math_001_2.use_clamp = False
        if hasattr(math_001_2, 'use_custom_color'):
            math_001_2.use_custom_color = False
        if hasattr(math_001_2, 'width'):
            math_001_2.width = 140.0
        input_ = next((input_ for input_ in math_001_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_001_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_001_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_001_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_001_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_001_2, 'color'):
            separate_rgb_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_001_2, 'hide'):
            separate_rgb_001_2.hide = False
        if hasattr(separate_rgb_001_2, 'location'):
            separate_rgb_001_2.location = (-340.0, -40.00006103515625)
        if hasattr(separate_rgb_001_2, 'mute'):
            separate_rgb_001_2.mute = False
        if hasattr(separate_rgb_001_2, 'name'):
            separate_rgb_001_2.name = 'Separate RGB.001'
        if hasattr(separate_rgb_001_2, 'use_custom_color'):
            separate_rgb_001_2.use_custom_color = False
        if hasattr(separate_rgb_001_2, 'width'):
            separate_rgb_001_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_001_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_003_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_003_2, 'color'):
            separate_rgb_003_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_003_2, 'hide'):
            separate_rgb_003_2.hide = False
        if hasattr(separate_rgb_003_2, 'location'):
            separate_rgb_003_2.location = (-340.0, 260.0)
        if hasattr(separate_rgb_003_2, 'mute'):
            separate_rgb_003_2.mute = False
        if hasattr(separate_rgb_003_2, 'name'):
            separate_rgb_003_2.name = 'Separate RGB.003'
        if hasattr(separate_rgb_003_2, 'use_custom_color'):
            separate_rgb_003_2.use_custom_color = False
        if hasattr(separate_rgb_003_2, 'width'):
            separate_rgb_003_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_003_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_003_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_003_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_003_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_002_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_002_2, 'color'):
            separate_rgb_002_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_002_2, 'hide'):
            separate_rgb_002_2.hide = False
        if hasattr(separate_rgb_002_2, 'location'):
            separate_rgb_002_2.location = (-880.0, -100.0)
        if hasattr(separate_rgb_002_2, 'mute'):
            separate_rgb_002_2.mute = False
        if hasattr(separate_rgb_002_2, 'name'):
            separate_rgb_002_2.name = 'Separate RGB.002'
        if hasattr(separate_rgb_002_2, 'use_custom_color'):
            separate_rgb_002_2.use_custom_color = False
        if hasattr(separate_rgb_002_2, 'width'):
            separate_rgb_002_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_002_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        # LINKS
        node_tree2.links.new(group_input_2.outputs[2], separate_rgb_001_2.inputs[0])
        node_tree2.links.new(mix_2.outputs[0], mix_001_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[0], mix_2.inputs[0])
        node_tree2.links.new(mix_001_2.outputs[0], mix_002_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[1], mix_001_2.inputs[0])
        node_tree2.links.new(mix_002_2.outputs[0], mix_003_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[2], mix_002_2.inputs[0])
        node_tree2.links.new(mix_003_2.outputs[0], mix_004_2.inputs[1])
        node_tree2.links.new(separate_rgb_001_2.outputs[0], mix_003_2.inputs[0])
        node_tree2.links.new(separate_rgb_001_2.outputs[1], mix_004_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[3], mix_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[4], mix_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[5], mix_001_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[6], mix_002_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[7], mix_003_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[8], mix_004_2.inputs[2])
        node_tree2.links.new(mix_006_2.outputs[0], group_output_2.inputs[0])
        node_tree2.links.new(mix_004_2.outputs[0], mix_005_2.inputs[1])
        node_tree2.links.new(mix_005_2.outputs[0], mix_006_2.inputs[1])
        node_tree2.links.new(math_2.outputs[0], mix_006_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[10], mix_006_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[1], separate_rgb_002_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[0], separate_rgb_003_2.inputs[0])
        node_tree2.links.new(math_001_2.outputs[0], mix_005_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[9], mix_005_2.inputs[2])
        node_tree2.links.new(separate_rgb_001_2.outputs[2], math_2.inputs[0])
        node_tree2.links.new(separate_rgb_003_2.outputs[2], math_001_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[11], math_001_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[12], math_2.inputs[1])

    group_013_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_013_1, 'node_tree'):
        group_013_1.node_tree = bpy.data.node_groups.get('Emission')
    if hasattr(group_013_1, 'color'):
        group_013_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_013_1, 'hide'):
        group_013_1.hide = False
    if hasattr(group_013_1, 'location'):
        group_013_1.location = (-100.0, -760.0)
    if hasattr(group_013_1, 'mute'):
        group_013_1.mute = False
    if hasattr(group_013_1, 'name'):
        group_013_1.name = 'Group.013'
    if hasattr(group_013_1, 'use_custom_color'):
        group_013_1.use_custom_color = False
    if hasattr(group_013_1, 'width'):
        group_013_1.width = 212.21826171875
    if hasattr(group_013_1.inputs[0], 'default_value'):
        group_013_1.inputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_013_1.inputs[0], 'display_shape'):
        group_013_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[0], 'enabled'):
        group_013_1.inputs[0].enabled = True
    if hasattr(group_013_1.inputs[0], 'hide'):
        group_013_1.inputs[0].hide = False
    if hasattr(group_013_1.inputs[0], 'hide_value'):
        group_013_1.inputs[0].hide_value = False
    if hasattr(group_013_1.inputs[0], 'name'):
        group_013_1.inputs[0].name = 'ASG'
    if hasattr(group_013_1.inputs[0], 'show_expanded'):
        group_013_1.inputs[0].show_expanded = False
    if hasattr(group_013_1.inputs[1], 'default_value'):
        group_013_1.inputs[1].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_013_1.inputs[1], 'display_shape'):
        group_013_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[1], 'enabled'):
        group_013_1.inputs[1].enabled = True
    if hasattr(group_013_1.inputs[1], 'hide'):
        group_013_1.inputs[1].hide = False
    if hasattr(group_013_1.inputs[1], 'hide_value'):
        group_013_1.inputs[1].hide_value = False
    if hasattr(group_013_1.inputs[1], 'name'):
        group_013_1.inputs[1].name = 'Mask_0'
    if hasattr(group_013_1.inputs[1], 'show_expanded'):
        group_013_1.inputs[1].show_expanded = False
    if hasattr(group_013_1.inputs[2], 'default_value'):
        group_013_1.inputs[2].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_013_1.inputs[2], 'display_shape'):
        group_013_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[2], 'enabled'):
        group_013_1.inputs[2].enabled = True
    if hasattr(group_013_1.inputs[2], 'hide'):
        group_013_1.inputs[2].hide = False
    if hasattr(group_013_1.inputs[2], 'hide_value'):
        group_013_1.inputs[2].hide_value = False
    if hasattr(group_013_1.inputs[2], 'name'):
        group_013_1.inputs[2].name = 'Mask_1'
    if hasattr(group_013_1.inputs[2], 'show_expanded'):
        group_013_1.inputs[2].show_expanded = False
    if hasattr(group_013_1.inputs[3], 'default_value'):
        group_013_1.inputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_013_1.inputs[3], 'display_shape'):
        group_013_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[3], 'enabled'):
        group_013_1.inputs[3].enabled = True
    if hasattr(group_013_1.inputs[3], 'hide'):
        group_013_1.inputs[3].hide = False
    if hasattr(group_013_1.inputs[3], 'hide_value'):
        group_013_1.inputs[3].hide_value = False
    if hasattr(group_013_1.inputs[3], 'name'):
        group_013_1.inputs[3].name = 'Slot 1'
    if hasattr(group_013_1.inputs[3], 'show_expanded'):
        group_013_1.inputs[3].show_expanded = False
    if hasattr(group_013_1.inputs[4], 'default_value'):
        group_013_1.inputs[4].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_013_1.inputs[4], 'display_shape'):
        group_013_1.inputs[4].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[4], 'enabled'):
        group_013_1.inputs[4].enabled = True
    if hasattr(group_013_1.inputs[4], 'hide'):
        group_013_1.inputs[4].hide = False
    if hasattr(group_013_1.inputs[4], 'hide_value'):
        group_013_1.inputs[4].hide_value = False
    if hasattr(group_013_1.inputs[4], 'name'):
        group_013_1.inputs[4].name = 'Slot 2'
    if hasattr(group_013_1.inputs[4], 'show_expanded'):
        group_013_1.inputs[4].show_expanded = False
    if hasattr(group_013_1.inputs[5], 'default_value'):
        group_013_1.inputs[5].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_013_1.inputs[5], 'display_shape'):
        group_013_1.inputs[5].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[5], 'enabled'):
        group_013_1.inputs[5].enabled = True
    if hasattr(group_013_1.inputs[5], 'hide'):
        group_013_1.inputs[5].hide = False
    if hasattr(group_013_1.inputs[5], 'hide_value'):
        group_013_1.inputs[5].hide_value = False
    if hasattr(group_013_1.inputs[5], 'name'):
        group_013_1.inputs[5].name = 'Slot 3'
    if hasattr(group_013_1.inputs[5], 'show_expanded'):
        group_013_1.inputs[5].show_expanded = False
    if hasattr(group_013_1.inputs[6], 'default_value'):
        group_013_1.inputs[6].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_013_1.inputs[6], 'display_shape'):
        group_013_1.inputs[6].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[6], 'enabled'):
        group_013_1.inputs[6].enabled = True
    if hasattr(group_013_1.inputs[6], 'hide'):
        group_013_1.inputs[6].hide = False
    if hasattr(group_013_1.inputs[6], 'hide_value'):
        group_013_1.inputs[6].hide_value = False
    if hasattr(group_013_1.inputs[6], 'name'):
        group_013_1.inputs[6].name = 'Slot 4'
    if hasattr(group_013_1.inputs[6], 'show_expanded'):
        group_013_1.inputs[6].show_expanded = False
    if hasattr(group_013_1.inputs[7], 'default_value'):
        group_013_1.inputs[7].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_013_1.inputs[7], 'display_shape'):
        group_013_1.inputs[7].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[7], 'enabled'):
        group_013_1.inputs[7].enabled = True
    if hasattr(group_013_1.inputs[7], 'hide'):
        group_013_1.inputs[7].hide = False
    if hasattr(group_013_1.inputs[7], 'hide_value'):
        group_013_1.inputs[7].hide_value = False
    if hasattr(group_013_1.inputs[7], 'name'):
        group_013_1.inputs[7].name = 'Slot 5'
    if hasattr(group_013_1.inputs[7], 'show_expanded'):
        group_013_1.inputs[7].show_expanded = False
    if hasattr(group_013_1.inputs[8], 'default_value'):
        group_013_1.inputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_013_1.inputs[8], 'display_shape'):
        group_013_1.inputs[8].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[8], 'enabled'):
        group_013_1.inputs[8].enabled = True
    if hasattr(group_013_1.inputs[8], 'hide'):
        group_013_1.inputs[8].hide = False
    if hasattr(group_013_1.inputs[8], 'hide_value'):
        group_013_1.inputs[8].hide_value = False
    if hasattr(group_013_1.inputs[8], 'name'):
        group_013_1.inputs[8].name = 'Slot 6'
    if hasattr(group_013_1.inputs[8], 'show_expanded'):
        group_013_1.inputs[8].show_expanded = False
    if hasattr(group_013_1.inputs[9], 'default_value'):
        group_013_1.inputs[9].default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
    if hasattr(group_013_1.inputs[9], 'display_shape'):
        group_013_1.inputs[9].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[9], 'enabled'):
        group_013_1.inputs[9].enabled = True
    if hasattr(group_013_1.inputs[9], 'hide'):
        group_013_1.inputs[9].hide = False
    if hasattr(group_013_1.inputs[9], 'hide_value'):
        group_013_1.inputs[9].hide_value = False
    if hasattr(group_013_1.inputs[9], 'name'):
        group_013_1.inputs[9].name = 'Grime'
    if hasattr(group_013_1.inputs[9], 'show_expanded'):
        group_013_1.inputs[9].show_expanded = False
    if hasattr(group_013_1.inputs[10], 'default_value'):
        group_013_1.inputs[10].default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
    if hasattr(group_013_1.inputs[10], 'display_shape'):
        group_013_1.inputs[10].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[10], 'enabled'):
        group_013_1.inputs[10].enabled = True
    if hasattr(group_013_1.inputs[10], 'hide'):
        group_013_1.inputs[10].hide = False
    if hasattr(group_013_1.inputs[10], 'hide_value'):
        group_013_1.inputs[10].hide_value = False
    if hasattr(group_013_1.inputs[10], 'name'):
        group_013_1.inputs[10].name = 'Dust'
    if hasattr(group_013_1.inputs[10], 'show_expanded'):
        group_013_1.inputs[10].show_expanded = False
    if hasattr(group_013_1.inputs[11], 'default_value'):
        group_013_1.inputs[11].default_value = 0.5
    if hasattr(group_013_1.inputs[11], 'display_shape'):
        group_013_1.inputs[11].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[11], 'enabled'):
        group_013_1.inputs[11].enabled = True
    if hasattr(group_013_1.inputs[11], 'hide'):
        group_013_1.inputs[11].hide = False
    if hasattr(group_013_1.inputs[11], 'hide_value'):
        group_013_1.inputs[11].hide_value = False
    if hasattr(group_013_1.inputs[11], 'name'):
        group_013_1.inputs[11].name = 'Grime Amount'
    if hasattr(group_013_1.inputs[11], 'show_expanded'):
        group_013_1.inputs[11].show_expanded = False
    if hasattr(group_013_1.inputs[12], 'default_value'):
        group_013_1.inputs[12].default_value = 0.5
    if hasattr(group_013_1.inputs[12], 'display_shape'):
        group_013_1.inputs[12].display_shape = 'CIRCLE'
    if hasattr(group_013_1.inputs[12], 'enabled'):
        group_013_1.inputs[12].enabled = True
    if hasattr(group_013_1.inputs[12], 'hide'):
        group_013_1.inputs[12].hide = False
    if hasattr(group_013_1.inputs[12], 'hide_value'):
        group_013_1.inputs[12].hide_value = False
    if hasattr(group_013_1.inputs[12], 'name'):
        group_013_1.inputs[12].name = 'Dust Amount'
    if hasattr(group_013_1.inputs[12], 'show_expanded'):
        group_013_1.inputs[12].show_expanded = False
    if hasattr(group_013_1.outputs[0], 'default_value'):
        group_013_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_013_1.outputs[0], 'display_shape'):
        group_013_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_013_1.outputs[0], 'enabled'):
        group_013_1.outputs[0].enabled = True
    if hasattr(group_013_1.outputs[0], 'hide'):
        group_013_1.outputs[0].hide = False
    if hasattr(group_013_1.outputs[0], 'hide_value'):
        group_013_1.outputs[0].hide_value = False
    if hasattr(group_013_1.outputs[0], 'name'):
        group_013_1.outputs[0].name = 'Color'
    if hasattr(group_013_1.outputs[0], 'show_expanded'):
        group_013_1.outputs[0].show_expanded = False

    group_020_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_020_1, 'node_tree'):
        group_020_1.node_tree = bpy.data.node_groups.get('Infinite Masking Sorter')
    if hasattr(group_020_1, 'color'):
        group_020_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_020_1, 'hide'):
        group_020_1.hide = False
    if hasattr(group_020_1, 'location'):
        group_020_1.location = (-1740.0, 80.0001220703125)
    if hasattr(group_020_1, 'mute'):
        group_020_1.mute = False
    if hasattr(group_020_1, 'name'):
        group_020_1.name = 'Group.020'
    if hasattr(group_020_1, 'use_custom_color'):
        group_020_1.use_custom_color = False
    if hasattr(group_020_1, 'width'):
        group_020_1.width = 239.4532470703125
    if hasattr(group_020_1.inputs[0], 'default_value'):
        group_020_1.inputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_020_1.inputs[0], 'display_shape'):
        group_020_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[0], 'enabled'):
        group_020_1.inputs[0].enabled = True
    if hasattr(group_020_1.inputs[0], 'hide'):
        group_020_1.inputs[0].hide = False
    if hasattr(group_020_1.inputs[0], 'hide_value'):
        group_020_1.inputs[0].hide_value = False
    if hasattr(group_020_1.inputs[0], 'name'):
        group_020_1.inputs[0].name = 'ASG'
    if hasattr(group_020_1.inputs[0], 'show_expanded'):
        group_020_1.inputs[0].show_expanded = False
    if hasattr(group_020_1.inputs[1], 'default_value'):
        group_020_1.inputs[1].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_020_1.inputs[1], 'display_shape'):
        group_020_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[1], 'enabled'):
        group_020_1.inputs[1].enabled = True
    if hasattr(group_020_1.inputs[1], 'hide'):
        group_020_1.inputs[1].hide = False
    if hasattr(group_020_1.inputs[1], 'hide_value'):
        group_020_1.inputs[1].hide_value = False
    if hasattr(group_020_1.inputs[1], 'name'):
        group_020_1.inputs[1].name = 'Mask_0'
    if hasattr(group_020_1.inputs[1], 'show_expanded'):
        group_020_1.inputs[1].show_expanded = False
    if hasattr(group_020_1.inputs[2], 'default_value'):
        group_020_1.inputs[2].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_020_1.inputs[2], 'display_shape'):
        group_020_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[2], 'enabled'):
        group_020_1.inputs[2].enabled = True
    if hasattr(group_020_1.inputs[2], 'hide'):
        group_020_1.inputs[2].hide = False
    if hasattr(group_020_1.inputs[2], 'hide_value'):
        group_020_1.inputs[2].hide_value = False
    if hasattr(group_020_1.inputs[2], 'name'):
        group_020_1.inputs[2].name = 'Mask_1'
    if hasattr(group_020_1.inputs[2], 'show_expanded'):
        group_020_1.inputs[2].show_expanded = False
    if hasattr(group_020_1.inputs[3], 'default_value'):
        group_020_1.inputs[3].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_020_1.inputs[3], 'display_shape'):
        group_020_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[3], 'enabled'):
        group_020_1.inputs[3].enabled = True
    if hasattr(group_020_1.inputs[3], 'hide'):
        group_020_1.inputs[3].hide = False
    if hasattr(group_020_1.inputs[3], 'hide_value'):
        group_020_1.inputs[3].hide_value = False
    if hasattr(group_020_1.inputs[3], 'name'):
        group_020_1.inputs[3].name = 'Slot 1'
    if hasattr(group_020_1.inputs[3], 'show_expanded'):
        group_020_1.inputs[3].show_expanded = False
    if hasattr(group_020_1.inputs[4], 'default_value'):
        group_020_1.inputs[4].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_020_1.inputs[4], 'display_shape'):
        group_020_1.inputs[4].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[4], 'enabled'):
        group_020_1.inputs[4].enabled = True
    if hasattr(group_020_1.inputs[4], 'hide'):
        group_020_1.inputs[4].hide = False
    if hasattr(group_020_1.inputs[4], 'hide_value'):
        group_020_1.inputs[4].hide_value = False
    if hasattr(group_020_1.inputs[4], 'name'):
        group_020_1.inputs[4].name = 'Slot 2'
    if hasattr(group_020_1.inputs[4], 'show_expanded'):
        group_020_1.inputs[4].show_expanded = False
    if hasattr(group_020_1.inputs[5], 'default_value'):
        group_020_1.inputs[5].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_020_1.inputs[5], 'display_shape'):
        group_020_1.inputs[5].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[5], 'enabled'):
        group_020_1.inputs[5].enabled = True
    if hasattr(group_020_1.inputs[5], 'hide'):
        group_020_1.inputs[5].hide = False
    if hasattr(group_020_1.inputs[5], 'hide_value'):
        group_020_1.inputs[5].hide_value = False
    if hasattr(group_020_1.inputs[5], 'name'):
        group_020_1.inputs[5].name = 'Slot 3'
    if hasattr(group_020_1.inputs[5], 'show_expanded'):
        group_020_1.inputs[5].show_expanded = False
    if hasattr(group_020_1.inputs[6], 'default_value'):
        group_020_1.inputs[6].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_020_1.inputs[6], 'display_shape'):
        group_020_1.inputs[6].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[6], 'enabled'):
        group_020_1.inputs[6].enabled = True
    if hasattr(group_020_1.inputs[6], 'hide'):
        group_020_1.inputs[6].hide = False
    if hasattr(group_020_1.inputs[6], 'hide_value'):
        group_020_1.inputs[6].hide_value = False
    if hasattr(group_020_1.inputs[6], 'name'):
        group_020_1.inputs[6].name = 'Slot 4'
    if hasattr(group_020_1.inputs[6], 'show_expanded'):
        group_020_1.inputs[6].show_expanded = False
    if hasattr(group_020_1.inputs[7], 'default_value'):
        group_020_1.inputs[7].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_020_1.inputs[7], 'display_shape'):
        group_020_1.inputs[7].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[7], 'enabled'):
        group_020_1.inputs[7].enabled = True
    if hasattr(group_020_1.inputs[7], 'hide'):
        group_020_1.inputs[7].hide = False
    if hasattr(group_020_1.inputs[7], 'hide_value'):
        group_020_1.inputs[7].hide_value = False
    if hasattr(group_020_1.inputs[7], 'name'):
        group_020_1.inputs[7].name = 'Slot 5'
    if hasattr(group_020_1.inputs[7], 'show_expanded'):
        group_020_1.inputs[7].show_expanded = False
    if hasattr(group_020_1.inputs[8], 'default_value'):
        group_020_1.inputs[8].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_020_1.inputs[8], 'display_shape'):
        group_020_1.inputs[8].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[8], 'enabled'):
        group_020_1.inputs[8].enabled = True
    if hasattr(group_020_1.inputs[8], 'hide'):
        group_020_1.inputs[8].hide = False
    if hasattr(group_020_1.inputs[8], 'hide_value'):
        group_020_1.inputs[8].hide_value = False
    if hasattr(group_020_1.inputs[8], 'name'):
        group_020_1.inputs[8].name = 'Slot 6'
    if hasattr(group_020_1.inputs[8], 'show_expanded'):
        group_020_1.inputs[8].show_expanded = False
    if hasattr(group_020_1.inputs[9], 'default_value'):
        group_020_1.inputs[9].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_020_1.inputs[9], 'display_shape'):
        group_020_1.inputs[9].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[9], 'enabled'):
        group_020_1.inputs[9].enabled = True
    if hasattr(group_020_1.inputs[9], 'hide'):
        group_020_1.inputs[9].hide = False
    if hasattr(group_020_1.inputs[9], 'hide_value'):
        group_020_1.inputs[9].hide_value = False
    if hasattr(group_020_1.inputs[9], 'name'):
        group_020_1.inputs[9].name = 'Grime'
    if hasattr(group_020_1.inputs[9], 'show_expanded'):
        group_020_1.inputs[9].show_expanded = False
    if hasattr(group_020_1.inputs[10], 'default_value'):
        group_020_1.inputs[10].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_020_1.inputs[10], 'display_shape'):
        group_020_1.inputs[10].display_shape = 'CIRCLE'
    if hasattr(group_020_1.inputs[10], 'enabled'):
        group_020_1.inputs[10].enabled = True
    if hasattr(group_020_1.inputs[10], 'hide'):
        group_020_1.inputs[10].hide = False
    if hasattr(group_020_1.inputs[10], 'hide_value'):
        group_020_1.inputs[10].hide_value = False
    if hasattr(group_020_1.inputs[10], 'name'):
        group_020_1.inputs[10].name = 'Dust'
    if hasattr(group_020_1.inputs[10], 'show_expanded'):
        group_020_1.inputs[10].show_expanded = False
    if hasattr(group_020_1.outputs[0], 'default_value'):
        group_020_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_020_1.outputs[0], 'display_shape'):
        group_020_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_020_1.outputs[0], 'enabled'):
        group_020_1.outputs[0].enabled = True
    if hasattr(group_020_1.outputs[0], 'hide'):
        group_020_1.outputs[0].hide = False
    if hasattr(group_020_1.outputs[0], 'hide_value'):
        group_020_1.outputs[0].hide_value = False
    if hasattr(group_020_1.outputs[0], 'name'):
        group_020_1.outputs[0].name = 'Color'
    if hasattr(group_020_1.outputs[0], 'show_expanded'):
        group_020_1.outputs[0].show_expanded = False

    node_tree2 = bpy.data.node_groups.get('Infinite Color')
    if not node_tree2:
        node_tree2 = bpy.data.node_groups.new('Infinite Color', 'ShaderNodeTree')
        for node in node_tree2.nodes:
            node_tree2.nodes.remove(node)
        # INPUTS
        input = node_tree2.inputs.new('NodeSocketColor', 'ASG Control')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'ASG Control'
        input = node_tree2.inputs.new('NodeSocketColor', 'Mask_0')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Mask_0'
        input = node_tree2.inputs.new('NodeSocketColor', 'Mask_1')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Mask_1'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 1')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 1'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 2')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 2'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 3')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 3'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 4')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 4'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 5')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 5'
        input = node_tree2.inputs.new('NodeSocketColor', 'Slot 6')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Slot 6'
        input = node_tree2.inputs.new('NodeSocketColor', 'Grime')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Grime'
        input = node_tree2.inputs.new('NodeSocketColor', 'Dust')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Dust'
        input = node_tree2.inputs.new('NodeSocketColor', 'Scratch')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (1.0, 1.0, 1.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Scratch'
        input = node_tree2.inputs.new('NodeSocketFloat', 'Grime Amount')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 0.0
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 3.4028234663852886e+38
        if hasattr(input, 'min_value'):
            input.min_value = -3.4028234663852886e+38
        if hasattr(input, 'name'):
            input.name = 'Grime Amount'
        input = node_tree2.inputs.new('NodeSocketFloat', 'Dust Amount')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 1.0
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 2.0
        if hasattr(input, 'min_value'):
            input.min_value = 0.0
        if hasattr(input, 'name'):
            input.name = 'Dust Amount'
        input = node_tree2.inputs.new('NodeSocketFloat', 'Scratch Amount')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 0.0
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 3.4028234663852886e+38
        if hasattr(input, 'min_value'):
            input.min_value = -3.4028234663852886e+38
        if hasattr(input, 'name'):
            input.name = 'Scratch Amount'
        # OUTPUTS
        output = node_tree2.outputs.new('NodeSocketColor', 'Dye Color')
        if hasattr(output, 'attribute_domain'):
            output.attribute_domain = 'POINT'
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Dye Color'
        output = node_tree2.outputs.new('NodeSocketColor', 'Emission Color')
        if hasattr(output, 'attribute_domain'):
            output.attribute_domain = 'POINT'
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Emission Color'
        # NODES
        group_output_2 = node_tree2.nodes.new('NodeGroupOutput')
        if hasattr(group_output_2, 'color'):
            group_output_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_output_2, 'hide'):
            group_output_2.hide = False
        if hasattr(group_output_2, 'is_active_output'):
            group_output_2.is_active_output = True
        if hasattr(group_output_2, 'location'):
            group_output_2.location = (2301.201904296875, -1.6859145164489746)
        if hasattr(group_output_2, 'mute'):
            group_output_2.mute = False
        if hasattr(group_output_2, 'name'):
            group_output_2.name = 'Group Output'
        if hasattr(group_output_2, 'use_custom_color'):
            group_output_2.use_custom_color = False
        if hasattr(group_output_2, 'width'):
            group_output_2.width = 140.0
        if hasattr(group_output_2.inputs[0], 'default_value'):
            group_output_2.inputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(group_output_2.inputs[0], 'display_shape'):
            group_output_2.inputs[0].display_shape = 'CIRCLE'
        if hasattr(group_output_2.inputs[0], 'enabled'):
            group_output_2.inputs[0].enabled = True
        if hasattr(group_output_2.inputs[0], 'hide'):
            group_output_2.inputs[0].hide = False
        if hasattr(group_output_2.inputs[0], 'hide_value'):
            group_output_2.inputs[0].hide_value = False
        if hasattr(group_output_2.inputs[0], 'name'):
            group_output_2.inputs[0].name = 'Dye Color'
        if hasattr(group_output_2.inputs[0], 'show_expanded'):
            group_output_2.inputs[0].show_expanded = False
        if hasattr(group_output_2.inputs[1], 'default_value'):
            group_output_2.inputs[1].default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(group_output_2.inputs[1], 'display_shape'):
            group_output_2.inputs[1].display_shape = 'CIRCLE'
        if hasattr(group_output_2.inputs[1], 'enabled'):
            group_output_2.inputs[1].enabled = True
        if hasattr(group_output_2.inputs[1], 'hide'):
            group_output_2.inputs[1].hide = False
        if hasattr(group_output_2.inputs[1], 'hide_value'):
            group_output_2.inputs[1].hide_value = False
        if hasattr(group_output_2.inputs[1], 'name'):
            group_output_2.inputs[1].name = 'Emission Color'
        if hasattr(group_output_2.inputs[1], 'show_expanded'):
            group_output_2.inputs[1].show_expanded = False

        mix_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_2, 'blend_type'):
            mix_2.blend_type = 'MIX'
        if hasattr(mix_2, 'color'):
            mix_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_2, 'hide'):
            mix_2.hide = False
        if hasattr(mix_2, 'label'):
            mix_2.label = 'Slot 1 and 2'
        if hasattr(mix_2, 'location'):
            mix_2.location = (-760.0, 0.0)
        if hasattr(mix_2, 'mute'):
            mix_2.mute = False
        if hasattr(mix_2, 'name'):
            mix_2.name = 'Mix'
        if hasattr(mix_2, 'use_alpha'):
            mix_2.use_alpha = False
        if hasattr(mix_2, 'use_clamp'):
            mix_2.use_clamp = False
        if hasattr(mix_2, 'use_custom_color'):
            mix_2.use_custom_color = False
        if hasattr(mix_2, 'width'):
            mix_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 1.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_001_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_001_2, 'blend_type'):
            mix_001_2.blend_type = 'MIX'
        if hasattr(mix_001_2, 'color'):
            mix_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_001_2, 'hide'):
            mix_001_2.hide = False
        if hasattr(mix_001_2, 'label'):
            mix_001_2.label = 'Slot 3'
        if hasattr(mix_001_2, 'location'):
            mix_001_2.location = (-520.0, 0.0)
        if hasattr(mix_001_2, 'mute'):
            mix_001_2.mute = False
        if hasattr(mix_001_2, 'name'):
            mix_001_2.name = 'Mix.001'
        if hasattr(mix_001_2, 'use_alpha'):
            mix_001_2.use_alpha = False
        if hasattr(mix_001_2, 'use_clamp'):
            mix_001_2.use_clamp = False
        if hasattr(mix_001_2, 'use_custom_color'):
            mix_001_2.use_custom_color = False
        if hasattr(mix_001_2, 'width'):
            mix_001_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.8411373496055603, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_001_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_002_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_002_2, 'blend_type'):
            mix_002_2.blend_type = 'MIX'
        if hasattr(mix_002_2, 'color'):
            mix_002_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_002_2, 'hide'):
            mix_002_2.hide = False
        if hasattr(mix_002_2, 'label'):
            mix_002_2.label = 'Slot 4'
        if hasattr(mix_002_2, 'location'):
            mix_002_2.location = (-280.0, 0.0)
        if hasattr(mix_002_2, 'mute'):
            mix_002_2.mute = False
        if hasattr(mix_002_2, 'name'):
            mix_002_2.name = 'Mix.002'
        if hasattr(mix_002_2, 'use_alpha'):
            mix_002_2.use_alpha = False
        if hasattr(mix_002_2, 'use_clamp'):
            mix_002_2.use_clamp = False
        if hasattr(mix_002_2, 'use_custom_color'):
            mix_002_2.use_custom_color = False
        if hasattr(mix_002_2, 'width'):
            mix_002_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.006658518221229315, 1.0, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_002_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_003_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_003_2, 'blend_type'):
            mix_003_2.blend_type = 'MIX'
        if hasattr(mix_003_2, 'color'):
            mix_003_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_003_2, 'hide'):
            mix_003_2.hide = False
        if hasattr(mix_003_2, 'label'):
            mix_003_2.label = 'Slot 5'
        if hasattr(mix_003_2, 'location'):
            mix_003_2.location = (-40.0, 0.0)
        if hasattr(mix_003_2, 'mute'):
            mix_003_2.mute = False
        if hasattr(mix_003_2, 'name'):
            mix_003_2.name = 'Mix.003'
        if hasattr(mix_003_2, 'use_alpha'):
            mix_003_2.use_alpha = False
        if hasattr(mix_003_2, 'use_clamp'):
            mix_003_2.use_clamp = False
        if hasattr(mix_003_2, 'use_custom_color'):
            mix_003_2.use_custom_color = False
        if hasattr(mix_003_2, 'width'):
            mix_003_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 1.0, 0.7098963856697083, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_003_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_004_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_004_2, 'blend_type'):
            mix_004_2.blend_type = 'MIX'
        if hasattr(mix_004_2, 'color'):
            mix_004_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_004_2, 'hide'):
            mix_004_2.hide = False
        if hasattr(mix_004_2, 'label'):
            mix_004_2.label = 'Slot 6'
        if hasattr(mix_004_2, 'location'):
            mix_004_2.location = (200.0, 0.0)
        if hasattr(mix_004_2, 'mute'):
            mix_004_2.mute = False
        if hasattr(mix_004_2, 'name'):
            mix_004_2.name = 'Mix.004'
        if hasattr(mix_004_2, 'use_alpha'):
            mix_004_2.use_alpha = False
        if hasattr(mix_004_2, 'use_clamp'):
            mix_004_2.use_clamp = False
        if hasattr(mix_004_2, 'use_custom_color'):
            mix_004_2.use_custom_color = False
        if hasattr(mix_004_2, 'width'):
            mix_004_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 0.7387133836746216, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_004_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_005_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_005_2, 'blend_type'):
            mix_005_2.blend_type = 'MIX'
        if hasattr(mix_005_2, 'color'):
            mix_005_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_005_2, 'hide'):
            mix_005_2.hide = False
        if hasattr(mix_005_2, 'label'):
            mix_005_2.label = 'Grime'
        if hasattr(mix_005_2, 'location'):
            mix_005_2.location = (440.00006103515625, 0.0)
        if hasattr(mix_005_2, 'mute'):
            mix_005_2.mute = False
        if hasattr(mix_005_2, 'name'):
            mix_005_2.name = 'Mix.005'
        if hasattr(mix_005_2, 'use_alpha'):
            mix_005_2.use_alpha = False
        if hasattr(mix_005_2, 'use_clamp'):
            mix_005_2.use_clamp = False
        if hasattr(mix_005_2, 'use_custom_color'):
            mix_005_2.use_custom_color = False
        if hasattr(mix_005_2, 'width'):
            mix_005_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 0.0, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_005_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_006_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_006_2, 'blend_type'):
            mix_006_2.blend_type = 'MIX'
        if hasattr(mix_006_2, 'color'):
            mix_006_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_006_2, 'hide'):
            mix_006_2.hide = False
        if hasattr(mix_006_2, 'label'):
            mix_006_2.label = 'Dust'
        if hasattr(mix_006_2, 'location'):
            mix_006_2.location = (679.9999389648438, 0.0)
        if hasattr(mix_006_2, 'mute'):
            mix_006_2.mute = False
        if hasattr(mix_006_2, 'name'):
            mix_006_2.name = 'Mix.006'
        if hasattr(mix_006_2, 'use_alpha'):
            mix_006_2.use_alpha = False
        if hasattr(mix_006_2, 'use_clamp'):
            mix_006_2.use_clamp = False
        if hasattr(mix_006_2, 'use_custom_color'):
            mix_006_2.use_custom_color = False
        if hasattr(mix_006_2, 'width'):
            mix_006_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_006_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 1.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_006_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_001_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_001_2, 'color'):
            separate_rgb_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_001_2, 'hide'):
            separate_rgb_001_2.hide = False
        if hasattr(separate_rgb_001_2, 'location'):
            separate_rgb_001_2.location = (-200.0, 319.99993896484375)
        if hasattr(separate_rgb_001_2, 'mute'):
            separate_rgb_001_2.mute = False
        if hasattr(separate_rgb_001_2, 'name'):
            separate_rgb_001_2.name = 'Separate RGB.001'
        if hasattr(separate_rgb_001_2, 'use_custom_color'):
            separate_rgb_001_2.use_custom_color = False
        if hasattr(separate_rgb_001_2, 'width'):
            separate_rgb_001_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_001_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_2, 'color'):
            separate_rgb_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_2, 'hide'):
            separate_rgb_2.hide = False
        if hasattr(separate_rgb_2, 'location'):
            separate_rgb_2.location = (-200.0, 439.99993896484375)
        if hasattr(separate_rgb_2, 'mute'):
            separate_rgb_2.mute = False
        if hasattr(separate_rgb_2, 'name'):
            separate_rgb_2.name = 'Separate RGB'
        if hasattr(separate_rgb_2, 'use_custom_color'):
            separate_rgb_2.use_custom_color = False
        if hasattr(separate_rgb_2, 'width'):
            separate_rgb_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_005_2 = node_tree2.nodes.new('ShaderNodeMath')
        math_005_2.location = (420.0, 280.0)
        math_005_2.name = 'Math.005'
        math_005_2.operation = 'MULTIPLY'
        
        GrimeColorMultiply = node_tree2.nodes.new('ShaderNodeMath')
        GrimeColorMultiply.location = (420.0, -200.0)
        GrimeColorMultiply.operation = 'MULTIPLY'
        
        ScratchColorMultiply = node_tree2.nodes.new('ShaderNodeMath')
        ScratchColorMultiply.location = (420.0, -400.0)
        ScratchColorMultiply.operation = 'MULTIPLY'

        separate_rgb_002_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_002_2, 'color'):
            separate_rgb_002_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_002_2, 'hide'):
            separate_rgb_002_2.hide = False
        if hasattr(separate_rgb_002_2, 'location'):
            separate_rgb_002_2.location = (-980.0, 139.99993896484375)
        if hasattr(separate_rgb_002_2, 'mute'):
            separate_rgb_002_2.mute = False
        if hasattr(separate_rgb_002_2, 'name'):
            separate_rgb_002_2.name = 'Separate RGB.002'
        if hasattr(separate_rgb_002_2, 'use_custom_color'):
            separate_rgb_002_2.use_custom_color = False
        if hasattr(separate_rgb_002_2, 'width'):
            separate_rgb_002_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_002_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_007_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_007_2, 'blend_type'):
            mix_007_2.blend_type = 'MIX'
        if hasattr(mix_007_2, 'color'):
            mix_007_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_007_2, 'hide'):
            mix_007_2.hide = False
        if hasattr(mix_007_2, 'label'):
            mix_007_2.label = 'Scratch'
        if hasattr(mix_007_2, 'location'):
            mix_007_2.location = (920.0, 0.0)
        if hasattr(mix_007_2, 'mute'):
            mix_007_2.mute = False
        if hasattr(mix_007_2, 'name'):
            mix_007_2.name = 'Mix.007'
        if hasattr(mix_007_2, 'use_alpha'):
            mix_007_2.use_alpha = False
        if hasattr(mix_007_2, 'use_clamp'):
            mix_007_2.use_clamp = False
        if hasattr(mix_007_2, 'use_custom_color'):
            mix_007_2.use_custom_color = False
        if hasattr(mix_007_2, 'width'):
            mix_007_2.width = 169.16949462890625
        input_ = next((input_ for input_ in mix_007_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_007_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.04283957928419113, 0.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_007_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 0.0, 0.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_007_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        group_input_2 = node_tree2.nodes.new('NodeGroupInput')
        if hasattr(group_input_2, 'color'):
            group_input_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_input_2, 'hide'):
            group_input_2.hide = False
        if hasattr(group_input_2, 'location'):
            group_input_2.location = (-1253.4727783203125, -12.166666984558105)
        if hasattr(group_input_2, 'mute'):
            group_input_2.mute = False
        if hasattr(group_input_2, 'name'):
            group_input_2.name = 'Group Input'
        if hasattr(group_input_2, 'use_custom_color'):
            group_input_2.use_custom_color = False
        if hasattr(group_input_2, 'width'):
            group_input_2.width = 145.58837890625
        if hasattr(group_input_2.outputs[0], 'default_value'):
            group_input_2.outputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[0], 'display_shape'):
            group_input_2.outputs[0].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[0], 'enabled'):
            group_input_2.outputs[0].enabled = True
        if hasattr(group_input_2.outputs[0], 'hide'):
            group_input_2.outputs[0].hide = False
        if hasattr(group_input_2.outputs[0], 'hide_value'):
            group_input_2.outputs[0].hide_value = False
        if hasattr(group_input_2.outputs[0], 'name'):
            group_input_2.outputs[0].name = 'ASG Control'
        if hasattr(group_input_2.outputs[0], 'show_expanded'):
            group_input_2.outputs[0].show_expanded = False
        if hasattr(group_input_2.outputs[1], 'default_value'):
            group_input_2.outputs[1].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[1], 'display_shape'):
            group_input_2.outputs[1].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[1], 'enabled'):
            group_input_2.outputs[1].enabled = True
        if hasattr(group_input_2.outputs[1], 'hide'):
            group_input_2.outputs[1].hide = False
        if hasattr(group_input_2.outputs[1], 'hide_value'):
            group_input_2.outputs[1].hide_value = False
        if hasattr(group_input_2.outputs[1], 'name'):
            group_input_2.outputs[1].name = 'Mask_0'
        if hasattr(group_input_2.outputs[1], 'show_expanded'):
            group_input_2.outputs[1].show_expanded = False
        if hasattr(group_input_2.outputs[2], 'default_value'):
            group_input_2.outputs[2].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[2], 'display_shape'):
            group_input_2.outputs[2].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[2], 'enabled'):
            group_input_2.outputs[2].enabled = True
        if hasattr(group_input_2.outputs[2], 'hide'):
            group_input_2.outputs[2].hide = False
        if hasattr(group_input_2.outputs[2], 'hide_value'):
            group_input_2.outputs[2].hide_value = False
        if hasattr(group_input_2.outputs[2], 'name'):
            group_input_2.outputs[2].name = 'Mask_1'
        if hasattr(group_input_2.outputs[2], 'show_expanded'):
            group_input_2.outputs[2].show_expanded = False
        if hasattr(group_input_2.outputs[3], 'default_value'):
            group_input_2.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[3], 'display_shape'):
            group_input_2.outputs[3].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[3], 'enabled'):
            group_input_2.outputs[3].enabled = True
        if hasattr(group_input_2.outputs[3], 'hide'):
            group_input_2.outputs[3].hide = False
        if hasattr(group_input_2.outputs[3], 'hide_value'):
            group_input_2.outputs[3].hide_value = False
        if hasattr(group_input_2.outputs[3], 'name'):
            group_input_2.outputs[3].name = 'Slot 1'
        if hasattr(group_input_2.outputs[3], 'show_expanded'):
            group_input_2.outputs[3].show_expanded = False
        if hasattr(group_input_2.outputs[4], 'default_value'):
            group_input_2.outputs[4].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[4], 'display_shape'):
            group_input_2.outputs[4].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[4], 'enabled'):
            group_input_2.outputs[4].enabled = True
        if hasattr(group_input_2.outputs[4], 'hide'):
            group_input_2.outputs[4].hide = False
        if hasattr(group_input_2.outputs[4], 'hide_value'):
            group_input_2.outputs[4].hide_value = False
        if hasattr(group_input_2.outputs[4], 'name'):
            group_input_2.outputs[4].name = 'Slot 2'
        if hasattr(group_input_2.outputs[4], 'show_expanded'):
            group_input_2.outputs[4].show_expanded = False
        if hasattr(group_input_2.outputs[5], 'default_value'):
            group_input_2.outputs[5].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[5], 'display_shape'):
            group_input_2.outputs[5].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[5], 'enabled'):
            group_input_2.outputs[5].enabled = True
        if hasattr(group_input_2.outputs[5], 'hide'):
            group_input_2.outputs[5].hide = False
        if hasattr(group_input_2.outputs[5], 'hide_value'):
            group_input_2.outputs[5].hide_value = False
        if hasattr(group_input_2.outputs[5], 'name'):
            group_input_2.outputs[5].name = 'Slot 3'
        if hasattr(group_input_2.outputs[5], 'show_expanded'):
            group_input_2.outputs[5].show_expanded = False
        if hasattr(group_input_2.outputs[6], 'default_value'):
            group_input_2.outputs[6].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[6], 'display_shape'):
            group_input_2.outputs[6].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[6], 'enabled'):
            group_input_2.outputs[6].enabled = True
        if hasattr(group_input_2.outputs[6], 'hide'):
            group_input_2.outputs[6].hide = False
        if hasattr(group_input_2.outputs[6], 'hide_value'):
            group_input_2.outputs[6].hide_value = False
        if hasattr(group_input_2.outputs[6], 'name'):
            group_input_2.outputs[6].name = 'Slot 4'
        if hasattr(group_input_2.outputs[6], 'show_expanded'):
            group_input_2.outputs[6].show_expanded = False
        if hasattr(group_input_2.outputs[7], 'default_value'):
            group_input_2.outputs[7].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[7], 'display_shape'):
            group_input_2.outputs[7].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[7], 'enabled'):
            group_input_2.outputs[7].enabled = True
        if hasattr(group_input_2.outputs[7], 'hide'):
            group_input_2.outputs[7].hide = False
        if hasattr(group_input_2.outputs[7], 'hide_value'):
            group_input_2.outputs[7].hide_value = False
        if hasattr(group_input_2.outputs[7], 'name'):
            group_input_2.outputs[7].name = 'Slot 5'
        if hasattr(group_input_2.outputs[7], 'show_expanded'):
            group_input_2.outputs[7].show_expanded = False
        if hasattr(group_input_2.outputs[8], 'default_value'):
            group_input_2.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[8], 'display_shape'):
            group_input_2.outputs[8].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[8], 'enabled'):
            group_input_2.outputs[8].enabled = True
        if hasattr(group_input_2.outputs[8], 'hide'):
            group_input_2.outputs[8].hide = False
        if hasattr(group_input_2.outputs[8], 'hide_value'):
            group_input_2.outputs[8].hide_value = False
        if hasattr(group_input_2.outputs[8], 'name'):
            group_input_2.outputs[8].name = 'Slot 6'
        if hasattr(group_input_2.outputs[8], 'show_expanded'):
            group_input_2.outputs[8].show_expanded = False
        if hasattr(group_input_2.outputs[9], 'default_value'):
            group_input_2.outputs[9].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[9], 'display_shape'):
            group_input_2.outputs[9].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[9], 'enabled'):
            group_input_2.outputs[9].enabled = True
        if hasattr(group_input_2.outputs[9], 'hide'):
            group_input_2.outputs[9].hide = False
        if hasattr(group_input_2.outputs[9], 'hide_value'):
            group_input_2.outputs[9].hide_value = False
        if hasattr(group_input_2.outputs[9], 'name'):
            group_input_2.outputs[9].name = 'Grime'
        if hasattr(group_input_2.outputs[9], 'show_expanded'):
            group_input_2.outputs[9].show_expanded = False
        if hasattr(group_input_2.outputs[10], 'default_value'):
            group_input_2.outputs[10].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[10], 'display_shape'):
            group_input_2.outputs[10].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[10], 'enabled'):
            group_input_2.outputs[10].enabled = True
        if hasattr(group_input_2.outputs[10], 'hide'):
            group_input_2.outputs[10].hide = False
        if hasattr(group_input_2.outputs[10], 'hide_value'):
            group_input_2.outputs[10].hide_value = False
        if hasattr(group_input_2.outputs[10], 'name'):
            group_input_2.outputs[10].name = 'Dust'
        if hasattr(group_input_2.outputs[10], 'show_expanded'):
            group_input_2.outputs[10].show_expanded = False
        if hasattr(group_input_2.outputs[11], 'default_value'):
            group_input_2.outputs[11].default_value = (1.0, 1.0, 1.0, 1.0)
        if hasattr(group_input_2.outputs[11], 'display_shape'):
            group_input_2.outputs[11].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[11], 'enabled'):
            group_input_2.outputs[11].enabled = True
        if hasattr(group_input_2.outputs[11], 'hide'):
            group_input_2.outputs[11].hide = False
        if hasattr(group_input_2.outputs[11], 'hide_value'):
            group_input_2.outputs[11].hide_value = False
        if hasattr(group_input_2.outputs[11], 'name'):
            group_input_2.outputs[11].name = 'Scratch'
        if hasattr(group_input_2.outputs[11], 'show_expanded'):
            group_input_2.outputs[11].show_expanded = False
        if hasattr(group_input_2.outputs[12], 'default_value'):
            group_input_2.outputs[12].default_value = 0.0
        if hasattr(group_input_2.outputs[12], 'display_shape'):
            group_input_2.outputs[12].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[12], 'enabled'):
            group_input_2.outputs[12].enabled = True
        if hasattr(group_input_2.outputs[12], 'hide'):
            group_input_2.outputs[12].hide = False
        if hasattr(group_input_2.outputs[12], 'hide_value'):
            group_input_2.outputs[12].hide_value = False
        if hasattr(group_input_2.outputs[12], 'name'):
            group_input_2.outputs[12].name = 'Grime Amount'
        if hasattr(group_input_2.outputs[12], 'show_expanded'):
            group_input_2.outputs[12].show_expanded = False
        if hasattr(group_input_2.outputs[13], 'default_value'):
            group_input_2.outputs[13].default_value = 1.0
        if hasattr(group_input_2.outputs[13], 'display_shape'):
            group_input_2.outputs[13].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[13], 'enabled'):
            group_input_2.outputs[13].enabled = True
        if hasattr(group_input_2.outputs[13], 'hide'):
            group_input_2.outputs[13].hide = False
        if hasattr(group_input_2.outputs[13], 'hide_value'):
            group_input_2.outputs[13].hide_value = False
        if hasattr(group_input_2.outputs[13], 'name'):
            group_input_2.outputs[13].name = 'Dust Amount'
        if hasattr(group_input_2.outputs[13], 'show_expanded'):
            group_input_2.outputs[13].show_expanded = False
        if hasattr(group_input_2.outputs[14], 'default_value'):
            group_input_2.outputs[14].default_value = 0.0
        if hasattr(group_input_2.outputs[14], 'display_shape'):
            group_input_2.outputs[14].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[14], 'enabled'):
            group_input_2.outputs[14].enabled = True
        if hasattr(group_input_2.outputs[14], 'hide'):
            group_input_2.outputs[14].hide = False
        if hasattr(group_input_2.outputs[14], 'hide_value'):
            group_input_2.outputs[14].hide_value = False
        if hasattr(group_input_2.outputs[14], 'name'):
            group_input_2.outputs[14].name = 'Scratch Amount'
        if hasattr(group_input_2.outputs[14], 'show_expanded'):
            group_input_2.outputs[14].show_expanded = False

        # LINKS
        node_tree2.links.new(group_input_2.outputs[0], separate_rgb_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[2], separate_rgb_001_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[1], separate_rgb_002_2.inputs[0])
        node_tree2.links.new(mix_2.outputs[0], mix_001_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[0], mix_2.inputs[0])
        node_tree2.links.new(mix_001_2.outputs[0], mix_002_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[1], mix_001_2.inputs[0])
        node_tree2.links.new(mix_002_2.outputs[0], mix_003_2.inputs[1])
        node_tree2.links.new(separate_rgb_002_2.outputs[2], mix_002_2.inputs[0])
        node_tree2.links.new(mix_003_2.outputs[0], mix_004_2.inputs[1])
        node_tree2.links.new(separate_rgb_001_2.outputs[0], mix_003_2.inputs[0])
        node_tree2.links.new(mix_004_2.outputs[0], mix_005_2.inputs[1])
        node_tree2.links.new(separate_rgb_001_2.outputs[1], mix_004_2.inputs[0])
        node_tree2.links.new(mix_005_2.outputs[0], mix_006_2.inputs[1])
        node_tree2.links.new(mix_006_2.outputs[0], mix_007_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[3], mix_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[4], mix_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[12], GrimeColorMultiply.inputs[1])
        node_tree2.links.new(group_input_2.outputs[14], ScratchColorMultiply.inputs[1])
        node_tree2.links.new(group_input_2.outputs[5], mix_001_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[6], mix_002_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[7], mix_003_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[8], mix_004_2.inputs[2])
        node_tree2.links.new(mix_007_2.outputs[0], group_output_2.inputs[0])
        node_tree2.links.new(mix_005_2.outputs[0], group_output_2.inputs[1])
        node_tree2.links.new(separate_rgb_001_2.outputs[2], math_005_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[13], math_005_2.inputs[1])
        node_tree2.links.new(separate_rgb_2.outputs[2], GrimeColorMultiply.inputs[0])
        node_tree2.links.new(math_005_2.outputs[0], mix_006_2.inputs[0])
        node_tree2.links.new(separate_rgb_2.outputs[1], ScratchColorMultiply.inputs[0])
        node_tree2.links.new(group_input_2.outputs[11], mix_007_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[10], mix_006_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[9], mix_005_2.inputs[2])
        node_tree2.links.new(GrimeColorMultiply.outputs[0], mix_005_2.inputs[0])
        node_tree2.links.new(ScratchColorMultiply.outputs[0], mix_007_2.inputs[0])
        

    group_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_1, 'node_tree'):
        group_1.node_tree = bpy.data.node_groups.get('Infinite Color')
    if hasattr(group_1, 'color'):
        group_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_1, 'hide'):
        group_1.hide = False
    if hasattr(group_1, 'label'):
        group_1.label = 'Color'
    if hasattr(group_1, 'location'):
        group_1.location = (-99.999755859375, 1400.0)
    if hasattr(group_1, 'mute'):
        group_1.mute = False
    if hasattr(group_1, 'name'):
        group_1.name = 'Group'
    if hasattr(group_1, 'use_custom_color'):
        group_1.use_custom_color = False
    if hasattr(group_1, 'width'):
        group_1.width = 212.21826171875
    if hasattr(group_1.inputs[0], 'default_value'):
        group_1.inputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_1.inputs[0], 'display_shape'):
        group_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[0], 'enabled'):
        group_1.inputs[0].enabled = True
    if hasattr(group_1.inputs[0], 'hide'):
        group_1.inputs[0].hide = False
    if hasattr(group_1.inputs[0], 'hide_value'):
        group_1.inputs[0].hide_value = False
    if hasattr(group_1.inputs[0], 'name'):
        group_1.inputs[0].name = 'ASG Control'
    if hasattr(group_1.inputs[0], 'show_expanded'):
        group_1.inputs[0].show_expanded = False
    if hasattr(group_1.inputs[1], 'default_value'):
        group_1.inputs[1].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_1.inputs[1], 'display_shape'):
        group_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[1], 'enabled'):
        group_1.inputs[1].enabled = True
    if hasattr(group_1.inputs[1], 'hide'):
        group_1.inputs[1].hide = False
    if hasattr(group_1.inputs[1], 'hide_value'):
        group_1.inputs[1].hide_value = False
    if hasattr(group_1.inputs[1], 'name'):
        group_1.inputs[1].name = 'Mask_0'
    if hasattr(group_1.inputs[1], 'show_expanded'):
        group_1.inputs[1].show_expanded = False
    if hasattr(group_1.inputs[2], 'default_value'):
        group_1.inputs[2].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_1.inputs[2], 'display_shape'):
        group_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[2], 'enabled'):
        group_1.inputs[2].enabled = True
    if hasattr(group_1.inputs[2], 'hide'):
        group_1.inputs[2].hide = False
    if hasattr(group_1.inputs[2], 'hide_value'):
        group_1.inputs[2].hide_value = False
    if hasattr(group_1.inputs[2], 'name'):
        group_1.inputs[2].name = 'Mask_1'
    if hasattr(group_1.inputs[2], 'show_expanded'):
        group_1.inputs[2].show_expanded = False
    if hasattr(group_1.inputs[3], 'default_value'):
        group_1.inputs[3].default_value = (0.14995989203453064, 0.20155631005764008, 0.06124607473611832, 1.0)
    if hasattr(group_1.inputs[3], 'display_shape'):
        group_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[3], 'enabled'):
        group_1.inputs[3].enabled = True
    if hasattr(group_1.inputs[3], 'hide'):
        group_1.inputs[3].hide = False
    if hasattr(group_1.inputs[3], 'hide_value'):
        group_1.inputs[3].hide_value = False
    if hasattr(group_1.inputs[3], 'name'):
        group_1.inputs[3].name = 'Slot 1'
    if hasattr(group_1.inputs[3], 'show_expanded'):
        group_1.inputs[3].show_expanded = False
    if hasattr(group_1.inputs[4], 'default_value'):
        group_1.inputs[4].default_value = (0.14995989203453064, 0.20155631005764008, 0.06124607473611832, 1.0)
    if hasattr(group_1.inputs[4], 'display_shape'):
        group_1.inputs[4].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[4], 'enabled'):
        group_1.inputs[4].enabled = True
    if hasattr(group_1.inputs[4], 'hide'):
        group_1.inputs[4].hide = False
    if hasattr(group_1.inputs[4], 'hide_value'):
        group_1.inputs[4].hide_value = False
    if hasattr(group_1.inputs[4], 'name'):
        group_1.inputs[4].name = 'Slot 2'
    if hasattr(group_1.inputs[4], 'show_expanded'):
        group_1.inputs[4].show_expanded = False
    if hasattr(group_1.inputs[5], 'default_value'):
        group_1.inputs[5].default_value = (0.05448029935359955, 0.04666509851813316, 0.030713459476828575, 1.0)
    if hasattr(group_1.inputs[5], 'display_shape'):
        group_1.inputs[5].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[5], 'enabled'):
        group_1.inputs[5].enabled = True
    if hasattr(group_1.inputs[5], 'hide'):
        group_1.inputs[5].hide = False
    if hasattr(group_1.inputs[5], 'hide_value'):
        group_1.inputs[5].hide_value = False
    if hasattr(group_1.inputs[5], 'name'):
        group_1.inputs[5].name = 'Slot 3'
    if hasattr(group_1.inputs[5], 'show_expanded'):
        group_1.inputs[5].show_expanded = False
    if hasattr(group_1.inputs[6], 'default_value'):
        group_1.inputs[6].default_value = (0.028426000848412514, 0.030713457614183426, 0.0284260381013155, 1.0)
    if hasattr(group_1.inputs[6], 'display_shape'):
        group_1.inputs[6].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[6], 'enabled'):
        group_1.inputs[6].enabled = True
    if hasattr(group_1.inputs[6], 'hide'):
        group_1.inputs[6].hide = False
    if hasattr(group_1.inputs[6], 'hide_value'):
        group_1.inputs[6].hide_value = False
    if hasattr(group_1.inputs[6], 'name'):
        group_1.inputs[6].name = 'Slot 4'
    if hasattr(group_1.inputs[6], 'show_expanded'):
        group_1.inputs[6].show_expanded = False
    if hasattr(group_1.inputs[7], 'default_value'):
        group_1.inputs[7].default_value = (0.3817319869995117, 0.3817319869995117, 0.3817319869995117, 1.0)
    if hasattr(group_1.inputs[7], 'display_shape'):
        group_1.inputs[7].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[7], 'enabled'):
        group_1.inputs[7].enabled = True
    if hasattr(group_1.inputs[7], 'hide'):
        group_1.inputs[7].hide = False
    if hasattr(group_1.inputs[7], 'hide_value'):
        group_1.inputs[7].hide_value = False
    if hasattr(group_1.inputs[7], 'name'):
        group_1.inputs[7].name = 'Slot 5'
    if hasattr(group_1.inputs[7], 'show_expanded'):
        group_1.inputs[7].show_expanded = False
    if hasattr(group_1.inputs[8], 'default_value'):
        group_1.inputs[8].default_value = (0.4280591905117035, 0.4280591905117035, 0.4280591905117035, 1.0)
    if hasattr(group_1.inputs[8], 'display_shape'):
        group_1.inputs[8].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[8], 'enabled'):
        group_1.inputs[8].enabled = True
    if hasattr(group_1.inputs[8], 'hide'):
        group_1.inputs[8].hide = False
    if hasattr(group_1.inputs[8], 'hide_value'):
        group_1.inputs[8].hide_value = False
    if hasattr(group_1.inputs[8], 'name'):
        group_1.inputs[8].name = 'Slot 6'
    if hasattr(group_1.inputs[8], 'show_expanded'):
        group_1.inputs[8].show_expanded = False
    if hasattr(group_1.inputs[9], 'default_value'):
        group_1.inputs[9].default_value = (0.051607925444841385, 0.039593372493982315, 0.031214507296681404, 1.0)
    if hasattr(group_1.inputs[9], 'display_shape'):
        group_1.inputs[9].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[9], 'enabled'):
        group_1.inputs[9].enabled = True
    if hasattr(group_1.inputs[9], 'hide'):
        group_1.inputs[9].hide = False
    if hasattr(group_1.inputs[9], 'hide_value'):
        group_1.inputs[9].hide_value = False
    if hasattr(group_1.inputs[9], 'name'):
        group_1.inputs[9].name = 'Grime'
    if hasattr(group_1.inputs[9], 'show_expanded'):
        group_1.inputs[9].show_expanded = False
    if hasattr(group_1.inputs[10], 'default_value'):
        group_1.inputs[10].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_1.inputs[10], 'display_shape'):
        group_1.inputs[10].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[10], 'enabled'):
        group_1.inputs[10].enabled = True
    if hasattr(group_1.inputs[10], 'hide'):
        group_1.inputs[10].hide = False
    if hasattr(group_1.inputs[10], 'hide_value'):
        group_1.inputs[10].hide_value = False
    if hasattr(group_1.inputs[10], 'name'):
        group_1.inputs[10].name = 'Dust'
    if hasattr(group_1.inputs[10], 'show_expanded'):
        group_1.inputs[10].show_expanded = False
    if hasattr(group_1.inputs[11], 'default_value'):
        group_1.inputs[11].default_value = (0.2961384057998657, 0.29613828659057617, 0.2874408960342407, 1.0)
    if hasattr(group_1.inputs[11], 'display_shape'):
        group_1.inputs[11].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[11], 'enabled'):
        group_1.inputs[11].enabled = True
    if hasattr(group_1.inputs[11], 'hide'):
        group_1.inputs[11].hide = False
    if hasattr(group_1.inputs[11], 'hide_value'):
        group_1.inputs[11].hide_value = False
    if hasattr(group_1.inputs[11], 'name'):
        group_1.inputs[11].name = 'Scratch'
    if hasattr(group_1.inputs[11], 'show_expanded'):
        group_1.inputs[11].show_expanded = False
    if hasattr(group_1.inputs[12], 'default_value'):
        group_1.inputs[12].default_value = 0.0
    if hasattr(group_1.inputs[12], 'display_shape'):
        group_1.inputs[12].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[12], 'enabled'):
        group_1.inputs[12].enabled = True
    if hasattr(group_1.inputs[12], 'hide'):
        group_1.inputs[12].hide = False
    if hasattr(group_1.inputs[12], 'hide_value'):
        group_1.inputs[12].hide_value = False
    if hasattr(group_1.inputs[12], 'name'):
        group_1.inputs[12].name = 'Grime Amount'
    if hasattr(group_1.inputs[12], 'show_expanded'):
        group_1.inputs[12].show_expanded = False
    if hasattr(group_1.inputs[13], 'default_value'):
        group_1.inputs[13].default_value = 1.0
    if hasattr(group_1.inputs[13], 'display_shape'):
        group_1.inputs[13].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[13], 'enabled'):
        group_1.inputs[13].enabled = True
    if hasattr(group_1.inputs[13], 'hide'):
        group_1.inputs[13].hide = False
    if hasattr(group_1.inputs[13], 'hide_value'):
        group_1.inputs[13].hide_value = False
    if hasattr(group_1.inputs[13], 'name'):
        group_1.inputs[13].name = 'Dust Amount'
    if hasattr(group_1.inputs[13], 'show_expanded'):
        group_1.inputs[13].show_expanded = False
    if hasattr(group_1.inputs[14], 'default_value'):
        group_1.inputs[14].default_value = 0.0
    if hasattr(group_1.inputs[14], 'display_shape'):
        group_1.inputs[14].display_shape = 'CIRCLE'
    if hasattr(group_1.inputs[14], 'enabled'):
        group_1.inputs[14].enabled = True
    if hasattr(group_1.inputs[14], 'hide'):
        group_1.inputs[14].hide = False
    if hasattr(group_1.inputs[14], 'hide_value'):
        group_1.inputs[14].hide_value = False
    if hasattr(group_1.inputs[14], 'name'):
        group_1.inputs[14].name = 'Scratch Amount'
    if hasattr(group_1.inputs[14], 'show_expanded'):
        group_1.inputs[14].show_expanded = False
    if hasattr(group_1.outputs[0], 'default_value'):
        group_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_1.outputs[0], 'display_shape'):
        group_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_1.outputs[0], 'enabled'):
        group_1.outputs[0].enabled = True
    if hasattr(group_1.outputs[0], 'hide'):
        group_1.outputs[0].hide = False
    if hasattr(group_1.outputs[0], 'hide_value'):
        group_1.outputs[0].hide_value = False
    if hasattr(group_1.outputs[0], 'name'):
        group_1.outputs[0].name = 'Dye Color'
    if hasattr(group_1.outputs[0], 'show_expanded'):
        group_1.outputs[0].show_expanded = False
    if hasattr(group_1.outputs[1], 'default_value'):
        group_1.outputs[1].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_1.outputs[1], 'display_shape'):
        group_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_1.outputs[1], 'enabled'):
        group_1.outputs[1].enabled = True
    if hasattr(group_1.outputs[1], 'hide'):
        group_1.outputs[1].hide = False
    if hasattr(group_1.outputs[1], 'hide_value'):
        group_1.outputs[1].hide_value = False
    if hasattr(group_1.outputs[1], 'name'):
        group_1.outputs[1].name = 'Emission Color'
    if hasattr(group_1.outputs[1], 'show_expanded'):
        group_1.outputs[1].show_expanded = False

    separate_rgb_1 = node_tree1.nodes.new('ShaderNodeSeparateRGB')
    if hasattr(separate_rgb_1, 'color'):
        separate_rgb_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(separate_rgb_1, 'hide'):
        separate_rgb_1.hide = False
    if hasattr(separate_rgb_1, 'location'):
        separate_rgb_1.location = (1160.0, 439.99993896484375)
    if hasattr(separate_rgb_1, 'mute'):
        separate_rgb_1.mute = False
    if hasattr(separate_rgb_1, 'name'):
        separate_rgb_1.name = 'Separate RGB'
    if hasattr(separate_rgb_1, 'use_custom_color'):
        separate_rgb_1.use_custom_color = False
    if hasattr(separate_rgb_1, 'width'):
        separate_rgb_1.width = 140.0
    input_ = next((input_ for input_ in separate_rgb_1.inputs if input_.identifier=='Image'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Image'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='R'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'R'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='G'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'G'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in separate_rgb_1.outputs if output.identifier=='B'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'B'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_001_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_001_1, 'node_tree'):
        group_001_1.node_tree = bpy.data.node_groups.get('Infinite Matts')
    if hasattr(group_001_1, 'color'):
        group_001_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_001_1, 'hide'):
        group_001_1.hide = False
    if hasattr(group_001_1, 'label'):
        group_001_1.label = 'Metalness'
    if hasattr(group_001_1, 'location'):
        group_001_1.location = (-100.0, 880.0)
    if hasattr(group_001_1, 'mute'):
        group_001_1.mute = False
    if hasattr(group_001_1, 'name'):
        group_001_1.name = 'Group.001'
    if hasattr(group_001_1, 'use_custom_color'):
        group_001_1.use_custom_color = False
    if hasattr(group_001_1, 'width'):
        group_001_1.width = 216.826904296875
    if hasattr(group_001_1.inputs[0], 'default_value'):
        group_001_1.inputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_001_1.inputs[0], 'display_shape'):
        group_001_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[0], 'enabled'):
        group_001_1.inputs[0].enabled = True
    if hasattr(group_001_1.inputs[0], 'hide'):
        group_001_1.inputs[0].hide = False
    if hasattr(group_001_1.inputs[0], 'hide_value'):
        group_001_1.inputs[0].hide_value = False
    if hasattr(group_001_1.inputs[0], 'name'):
        group_001_1.inputs[0].name = 'ASG Control'
    if hasattr(group_001_1.inputs[0], 'show_expanded'):
        group_001_1.inputs[0].show_expanded = False
    if hasattr(group_001_1.inputs[1], 'default_value'):
        group_001_1.inputs[1].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_001_1.inputs[1], 'display_shape'):
        group_001_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[1], 'enabled'):
        group_001_1.inputs[1].enabled = True
    if hasattr(group_001_1.inputs[1], 'hide'):
        group_001_1.inputs[1].hide = False
    if hasattr(group_001_1.inputs[1], 'hide_value'):
        group_001_1.inputs[1].hide_value = False
    if hasattr(group_001_1.inputs[1], 'name'):
        group_001_1.inputs[1].name = 'RGB Control'
    if hasattr(group_001_1.inputs[1], 'show_expanded'):
        group_001_1.inputs[1].show_expanded = False
    if hasattr(group_001_1.inputs[2], 'default_value'):
        group_001_1.inputs[2].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_001_1.inputs[2], 'display_shape'):
        group_001_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[2], 'enabled'):
        group_001_1.inputs[2].enabled = True
    if hasattr(group_001_1.inputs[2], 'hide'):
        group_001_1.inputs[2].hide = False
    if hasattr(group_001_1.inputs[2], 'hide_value'):
        group_001_1.inputs[2].hide_value = False
    if hasattr(group_001_1.inputs[2], 'name'):
        group_001_1.inputs[2].name = 'Blue Control'
    if hasattr(group_001_1.inputs[2], 'show_expanded'):
        group_001_1.inputs[2].show_expanded = False
    if hasattr(group_001_1.inputs[3], 'default_value'):
        group_001_1.inputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_001_1.inputs[3], 'display_shape'):
        group_001_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[3], 'enabled'):
        group_001_1.inputs[3].enabled = True
    if hasattr(group_001_1.inputs[3], 'hide'):
        group_001_1.inputs[3].hide = False
    if hasattr(group_001_1.inputs[3], 'hide_value'):
        group_001_1.inputs[3].hide_value = False
    if hasattr(group_001_1.inputs[3], 'name'):
        group_001_1.inputs[3].name = 'Slot 1'
    if hasattr(group_001_1.inputs[3], 'show_expanded'):
        group_001_1.inputs[3].show_expanded = False
    if hasattr(group_001_1.inputs[4], 'default_value'):
        group_001_1.inputs[4].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_001_1.inputs[4], 'display_shape'):
        group_001_1.inputs[4].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[4], 'enabled'):
        group_001_1.inputs[4].enabled = True
    if hasattr(group_001_1.inputs[4], 'hide'):
        group_001_1.inputs[4].hide = False
    if hasattr(group_001_1.inputs[4], 'hide_value'):
        group_001_1.inputs[4].hide_value = False
    if hasattr(group_001_1.inputs[4], 'name'):
        group_001_1.inputs[4].name = 'Slot 2'
    if hasattr(group_001_1.inputs[4], 'show_expanded'):
        group_001_1.inputs[4].show_expanded = False
    if hasattr(group_001_1.inputs[5], 'default_value'):
        group_001_1.inputs[5].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_001_1.inputs[5], 'display_shape'):
        group_001_1.inputs[5].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[5], 'enabled'):
        group_001_1.inputs[5].enabled = True
    if hasattr(group_001_1.inputs[5], 'hide'):
        group_001_1.inputs[5].hide = False
    if hasattr(group_001_1.inputs[5], 'hide_value'):
        group_001_1.inputs[5].hide_value = False
    if hasattr(group_001_1.inputs[5], 'name'):
        group_001_1.inputs[5].name = 'Slot 3'
    if hasattr(group_001_1.inputs[5], 'show_expanded'):
        group_001_1.inputs[5].show_expanded = False
    if hasattr(group_001_1.inputs[6], 'default_value'):
        group_001_1.inputs[6].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_001_1.inputs[6], 'display_shape'):
        group_001_1.inputs[6].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[6], 'enabled'):
        group_001_1.inputs[6].enabled = True
    if hasattr(group_001_1.inputs[6], 'hide'):
        group_001_1.inputs[6].hide = False
    if hasattr(group_001_1.inputs[6], 'hide_value'):
        group_001_1.inputs[6].hide_value = False
    if hasattr(group_001_1.inputs[6], 'name'):
        group_001_1.inputs[6].name = 'Slot 4'
    if hasattr(group_001_1.inputs[6], 'show_expanded'):
        group_001_1.inputs[6].show_expanded = False
    if hasattr(group_001_1.inputs[7], 'default_value'):
        group_001_1.inputs[7].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_001_1.inputs[7], 'display_shape'):
        group_001_1.inputs[7].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[7], 'enabled'):
        group_001_1.inputs[7].enabled = True
    if hasattr(group_001_1.inputs[7], 'hide'):
        group_001_1.inputs[7].hide = False
    if hasattr(group_001_1.inputs[7], 'hide_value'):
        group_001_1.inputs[7].hide_value = False
    if hasattr(group_001_1.inputs[7], 'name'):
        group_001_1.inputs[7].name = 'Slot 5'
    if hasattr(group_001_1.inputs[7], 'show_expanded'):
        group_001_1.inputs[7].show_expanded = False
    if hasattr(group_001_1.inputs[8], 'default_value'):
        group_001_1.inputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_001_1.inputs[8], 'display_shape'):
        group_001_1.inputs[8].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[8], 'enabled'):
        group_001_1.inputs[8].enabled = True
    if hasattr(group_001_1.inputs[8], 'hide'):
        group_001_1.inputs[8].hide = False
    if hasattr(group_001_1.inputs[8], 'hide_value'):
        group_001_1.inputs[8].hide_value = False
    if hasattr(group_001_1.inputs[8], 'name'):
        group_001_1.inputs[8].name = 'Slot 6'
    if hasattr(group_001_1.inputs[8], 'show_expanded'):
        group_001_1.inputs[8].show_expanded = False
    if hasattr(group_001_1.inputs[9], 'default_value'):
        group_001_1.inputs[9].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_001_1.inputs[9], 'display_shape'):
        group_001_1.inputs[9].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[9], 'enabled'):
        group_001_1.inputs[9].enabled = True
    if hasattr(group_001_1.inputs[9], 'hide'):
        group_001_1.inputs[9].hide = False
    if hasattr(group_001_1.inputs[9], 'hide_value'):
        group_001_1.inputs[9].hide_value = False
    if hasattr(group_001_1.inputs[9], 'name'):
        group_001_1.inputs[9].name = 'Grime'
    if hasattr(group_001_1.inputs[9], 'show_expanded'):
        group_001_1.inputs[9].show_expanded = False
    if hasattr(group_001_1.inputs[10], 'default_value'):
        group_001_1.inputs[10].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_001_1.inputs[10], 'display_shape'):
        group_001_1.inputs[10].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[10], 'enabled'):
        group_001_1.inputs[10].enabled = True
    if hasattr(group_001_1.inputs[10], 'hide'):
        group_001_1.inputs[10].hide = False
    if hasattr(group_001_1.inputs[10], 'hide_value'):
        group_001_1.inputs[10].hide_value = False
    if hasattr(group_001_1.inputs[10], 'name'):
        group_001_1.inputs[10].name = 'Dust'
    if hasattr(group_001_1.inputs[10], 'show_expanded'):
        group_001_1.inputs[10].show_expanded = False
    if hasattr(group_001_1.inputs[11], 'default_value'):
        group_001_1.inputs[11].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_001_1.inputs[11], 'display_shape'):
        group_001_1.inputs[11].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[11], 'enabled'):
        group_001_1.inputs[11].enabled = True
    if hasattr(group_001_1.inputs[11], 'hide'):
        group_001_1.inputs[11].hide = False
    if hasattr(group_001_1.inputs[11], 'hide_value'):
        group_001_1.inputs[11].hide_value = False
    if hasattr(group_001_1.inputs[11], 'name'):
        group_001_1.inputs[11].name = 'Scratch'
    if hasattr(group_001_1.inputs[11], 'show_expanded'):
        group_001_1.inputs[11].show_expanded = False
    if hasattr(group_001_1.inputs[12], 'default_value'):
        group_001_1.inputs[12].default_value = 0.5
    if hasattr(group_001_1.inputs[12], 'display_shape'):
        group_001_1.inputs[12].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[12], 'enabled'):
        group_001_1.inputs[12].enabled = True
    if hasattr(group_001_1.inputs[12], 'hide'):
        group_001_1.inputs[12].hide = False
    if hasattr(group_001_1.inputs[12], 'hide_value'):
        group_001_1.inputs[12].hide_value = False
    if hasattr(group_001_1.inputs[12], 'name'):
        group_001_1.inputs[12].name = 'Scratch Amount'
    if hasattr(group_001_1.inputs[12], 'show_expanded'):
        group_001_1.inputs[12].show_expanded = False
    if hasattr(group_001_1.inputs[13], 'default_value'):
        group_001_1.inputs[13].default_value = 1.0
    if hasattr(group_001_1.inputs[13], 'display_shape'):
        group_001_1.inputs[13].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[13], 'enabled'):
        group_001_1.inputs[13].enabled = True
    if hasattr(group_001_1.inputs[13], 'hide'):
        group_001_1.inputs[13].hide = False
    if hasattr(group_001_1.inputs[13], 'hide_value'):
        group_001_1.inputs[13].hide_value = False
    if hasattr(group_001_1.inputs[13], 'name'):
        group_001_1.inputs[13].name = 'Grime Amount'
    if hasattr(group_001_1.inputs[13], 'show_expanded'):
        group_001_1.inputs[13].show_expanded = False
    if hasattr(group_001_1.inputs[14], 'default_value'):
        group_001_1.inputs[14].default_value = 1.0
    if hasattr(group_001_1.inputs[14], 'display_shape'):
        group_001_1.inputs[14].display_shape = 'CIRCLE'
    if hasattr(group_001_1.inputs[14], 'enabled'):
        group_001_1.inputs[14].enabled = True
    if hasattr(group_001_1.inputs[14], 'hide'):
        group_001_1.inputs[14].hide = False
    if hasattr(group_001_1.inputs[14], 'hide_value'):
        group_001_1.inputs[14].hide_value = False
    if hasattr(group_001_1.inputs[14], 'name'):
        group_001_1.inputs[14].name = 'Dust Amount'
    if hasattr(group_001_1.inputs[14], 'show_expanded'):
        group_001_1.inputs[14].show_expanded = False
    if hasattr(group_001_1.outputs[0], 'default_value'):
        group_001_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_001_1.outputs[0], 'display_shape'):
        group_001_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_001_1.outputs[0], 'enabled'):
        group_001_1.outputs[0].enabled = True
    if hasattr(group_001_1.outputs[0], 'hide'):
        group_001_1.outputs[0].hide = False
    if hasattr(group_001_1.outputs[0], 'hide_value'):
        group_001_1.outputs[0].hide_value = False
    if hasattr(group_001_1.outputs[0], 'name'):
        group_001_1.outputs[0].name = 'Color'
    if hasattr(group_001_1.outputs[0], 'show_expanded'):
        group_001_1.outputs[0].show_expanded = False

    node_tree2 = bpy.data.node_groups.get('Detail Normals')
    if not node_tree2:
        node_tree2 = bpy.data.node_groups.new('Detail Normals', 'ShaderNodeTree')
        for node in node_tree2.nodes:
            node_tree2.nodes.remove(node)
        # INPUTS
        input = node_tree2.inputs.new('NodeSocketColor', 'ASG')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'ASG'
        input = node_tree2.inputs.new('NodeSocketColor', 'Mask_0')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Mask_0'
        input = node_tree2.inputs.new('NodeSocketColor', 'Mask_1')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Mask_1'
        input = node_tree2.inputs.new('NodeSocketColor', 'MainNormal')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'MainNormal'
        input = node_tree2.inputs.new('NodeSocketColor', 'Color-A')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Color-A'
        input = node_tree2.inputs.new('NodeSocketColor', 'Color-B')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Color-B'
        input = node_tree2.inputs.new('NodeSocketColor', 'Color-C')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Color-C'
        input = node_tree2.inputs.new('NodeSocketColor', 'Color-D')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Color-D'
        input = node_tree2.inputs.new('NodeSocketColor', 'Color-E')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Color-E'
        input = node_tree2.inputs.new('NodeSocketColor', 'Color-F')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Color-F'
        input = node_tree2.inputs.new('NodeSocketColor', 'Grime')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Grime'
        input = node_tree2.inputs.new('NodeSocketColor', 'Dust')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'name'):
            input.name = 'Dust'
        input = node_tree2.inputs.new('NodeSocketFloat', 'Grime Amount')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 1.0
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 10000.0
        if hasattr(input, 'min_value'):
            input.min_value = -10000.0
        if hasattr(input, 'name'):
            input.name = 'Grime Amount'
        input = node_tree2.inputs.new('NodeSocketFloat', 'Dust Amount')
        if hasattr(input, 'attribute_domain'):
            input.attribute_domain = 'POINT'
        if hasattr(input, 'default_value'):
            input.default_value = 1.0
        if hasattr(input, 'hide_value'):
            input.hide_value = False
        if hasattr(input, 'max_value'):
            input.max_value = 2.0
        if hasattr(input, 'min_value'):
            input.min_value = 0.0
        if hasattr(input, 'name'):
            input.name = 'Dust Amount'
        # OUTPUTS
        output = node_tree2.outputs.new('NodeSocketColor', 'Normal')
        if hasattr(output, 'attribute_domain'):
            output.attribute_domain = 'POINT'
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Normal'
        # NODES
        frame_2 = node_tree2.nodes.new('NodeFrame')
        if hasattr(frame_2, 'color'):
            frame_2.color = (0.5, 0.5, 1.0)
        if hasattr(frame_2, 'hide'):
            frame_2.hide = False
        if hasattr(frame_2, 'label'):
            frame_2.label = 'Normalizer'
        if hasattr(frame_2, 'label_size'):
            frame_2.label_size = 64
        if hasattr(frame_2, 'location'):
            frame_2.location = (1763.33544921875, 28.2186279296875)
        if hasattr(frame_2, 'mute'):
            frame_2.mute = False
        if hasattr(frame_2, 'name'):
            frame_2.name = 'Frame'
        if hasattr(frame_2, 'shrink'):
            frame_2.shrink = True
        if hasattr(frame_2, 'use_custom_color'):
            frame_2.use_custom_color = True
        if hasattr(frame_2, 'width'):
            frame_2.width = 1940.0

        separate_rgb_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_2, 'color'):
            separate_rgb_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_2, 'hide'):
            separate_rgb_2.hide = False
        if hasattr(separate_rgb_2, 'location'):
            separate_rgb_2.location = (-864.6644287109375, 1088.21875)
        if hasattr(separate_rgb_2, 'mute'):
            separate_rgb_2.mute = False
        if hasattr(separate_rgb_2, 'name'):
            separate_rgb_2.name = 'Separate RGB'
        if hasattr(separate_rgb_2, 'use_custom_color'):
            separate_rgb_2.use_custom_color = False
        if hasattr(separate_rgb_2, 'width'):
            separate_rgb_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_107_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_107_2, 'parent'):
            math_107_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(math_107_2, 'color'):
            math_107_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_107_2, 'hide'):
            math_107_2.hide = False
        if hasattr(math_107_2, 'location'):
            math_107_2.location = (220.0, 0.0)
        if hasattr(math_107_2, 'mute'):
            math_107_2.mute = False
        if hasattr(math_107_2, 'name'):
            math_107_2.name = 'Math.107'
        if hasattr(math_107_2, 'operation'):
            math_107_2.operation = 'MULTIPLY_ADD'
        if hasattr(math_107_2, 'use_clamp'):
            math_107_2.use_clamp = False
        if hasattr(math_107_2, 'use_custom_color'):
            math_107_2.use_custom_color = False
        if hasattr(math_107_2, 'width'):
            math_107_2.width = 140.0
        input_ = next((input_ for input_ in math_107_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_107_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 2.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_107_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = -1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_107_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_108_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_108_2, 'parent'):
            math_108_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(math_108_2, 'color'):
            math_108_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_108_2, 'hide'):
            math_108_2.hide = False
        if hasattr(math_108_2, 'location'):
            math_108_2.location = (220.0, -180.0)
        if hasattr(math_108_2, 'mute'):
            math_108_2.mute = False
        if hasattr(math_108_2, 'name'):
            math_108_2.name = 'Math.108'
        if hasattr(math_108_2, 'operation'):
            math_108_2.operation = 'MULTIPLY_ADD'
        if hasattr(math_108_2, 'use_clamp'):
            math_108_2.use_clamp = False
        if hasattr(math_108_2, 'use_custom_color'):
            math_108_2.use_custom_color = False
        if hasattr(math_108_2, 'width'):
            math_108_2.width = 140.0
        input_ = next((input_ for input_ in math_108_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_108_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 2.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_108_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = -1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_108_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_106_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_106_2, 'parent'):
            math_106_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(math_106_2, 'color'):
            math_106_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_106_2, 'hide'):
            math_106_2.hide = False
        if hasattr(math_106_2, 'location'):
            math_106_2.location = (960.0, -100.0001220703125)
        if hasattr(math_106_2, 'mute'):
            math_106_2.mute = False
        if hasattr(math_106_2, 'name'):
            math_106_2.name = 'Math.106'
        if hasattr(math_106_2, 'operation'):
            math_106_2.operation = 'SQRT'
        if hasattr(math_106_2, 'use_clamp'):
            math_106_2.use_clamp = False
        if hasattr(math_106_2, 'use_custom_color'):
            math_106_2.use_custom_color = False
        if hasattr(math_106_2, 'width'):
            math_106_2.width = 140.0
        input_ = next((input_ for input_ in math_106_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_106_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_106_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_106_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        combine_xyz_004_2 = node_tree2.nodes.new('ShaderNodeCombineXYZ')
        if hasattr(combine_xyz_004_2, 'parent'):
            combine_xyz_004_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(combine_xyz_004_2, 'color'):
            combine_xyz_004_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(combine_xyz_004_2, 'hide'):
            combine_xyz_004_2.hide = False
        if hasattr(combine_xyz_004_2, 'location'):
            combine_xyz_004_2.location = (1180.0, -140.0)
        if hasattr(combine_xyz_004_2, 'mute'):
            combine_xyz_004_2.mute = False
        if hasattr(combine_xyz_004_2, 'name'):
            combine_xyz_004_2.name = 'Combine XYZ.004'
        if hasattr(combine_xyz_004_2, 'use_custom_color'):
            combine_xyz_004_2.use_custom_color = False
        if hasattr(combine_xyz_004_2, 'width'):
            combine_xyz_004_2.width = 140.0
        input_ = next((input_ for input_ in combine_xyz_004_2.inputs if input_.identifier=='X'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'X'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in combine_xyz_004_2.inputs if input_.identifier=='Y'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Y'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in combine_xyz_004_2.inputs if input_.identifier=='Z'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Z'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in combine_xyz_004_2.outputs if output.identifier=='Vector'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Vector'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        vector_math_2 = node_tree2.nodes.new('ShaderNodeVectorMath')
        if hasattr(vector_math_2, 'parent'):
            vector_math_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(vector_math_2, 'color'):
            vector_math_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(vector_math_2, 'hide'):
            vector_math_2.hide = False
        if hasattr(vector_math_2, 'location'):
            vector_math_2.location = (1340.0, -140.0)
        if hasattr(vector_math_2, 'mute'):
            vector_math_2.mute = False
        if hasattr(vector_math_2, 'name'):
            vector_math_2.name = 'Vector Math'
        if hasattr(vector_math_2, 'operation'):
            vector_math_2.operation = 'NORMALIZE'
        if hasattr(vector_math_2, 'use_custom_color'):
            vector_math_2.use_custom_color = False
        if hasattr(vector_math_2, 'width'):
            vector_math_2.width = 140.0
        input_ = next((input_ for input_ in vector_math_2.inputs if input_.identifier=='Vector'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 0.0, 0.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Vector'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in vector_math_2.inputs if input_.identifier=='Vector_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 0.0, 0.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Vector'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in vector_math_2.inputs if input_.identifier=='Vector_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 0.0, 0.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Vector'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in vector_math_2.inputs if input_.identifier=='Scale'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Scale'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in vector_math_2.outputs if output.identifier=='Vector'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Vector'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in vector_math_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = False
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_028_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_028_2, 'parent'):
            mix_028_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(mix_028_2, 'blend_type'):
            mix_028_2.blend_type = 'ADD'
        if hasattr(mix_028_2, 'color'):
            mix_028_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_028_2, 'hide'):
            mix_028_2.hide = False
        if hasattr(mix_028_2, 'location'):
            mix_028_2.location = (1520.0, -140.0)
        if hasattr(mix_028_2, 'mute'):
            mix_028_2.mute = False
        if hasattr(mix_028_2, 'name'):
            mix_028_2.name = 'Mix.028'
        if hasattr(mix_028_2, 'use_alpha'):
            mix_028_2.use_alpha = False
        if hasattr(mix_028_2, 'use_clamp'):
            mix_028_2.use_clamp = False
        if hasattr(mix_028_2, 'use_custom_color'):
            mix_028_2.use_custom_color = False
        if hasattr(mix_028_2, 'width'):
            mix_028_2.width = 140.0
        input_ = next((input_ for input_ in mix_028_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_028_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_028_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (1.0, 1.0, 1.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_028_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_xyz_001_2 = node_tree2.nodes.new('ShaderNodeSeparateXYZ')
        if hasattr(separate_xyz_001_2, 'parent'):
            separate_xyz_001_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(separate_xyz_001_2, 'color'):
            separate_xyz_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_xyz_001_2, 'hide'):
            separate_xyz_001_2.hide = False
        if hasattr(separate_xyz_001_2, 'location'):
            separate_xyz_001_2.location = (-40.0, -100.0001220703125)
        if hasattr(separate_xyz_001_2, 'mute'):
            separate_xyz_001_2.mute = False
        if hasattr(separate_xyz_001_2, 'name'):
            separate_xyz_001_2.name = 'Separate XYZ.001'
        if hasattr(separate_xyz_001_2, 'use_custom_color'):
            separate_xyz_001_2.use_custom_color = False
        if hasattr(separate_xyz_001_2, 'width'):
            separate_xyz_001_2.width = 140.0
        input_ = next((input_ for input_ in separate_xyz_001_2.inputs if input_.identifier=='Vector'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.0, 0.0, 0.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Vector'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_xyz_001_2.outputs if output.identifier=='X'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'X'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_xyz_001_2.outputs if output.identifier=='Y'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Y'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_xyz_001_2.outputs if output.identifier=='Z'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Z'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_111_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_111_2, 'parent'):
            math_111_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(math_111_2, 'color'):
            math_111_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_111_2, 'hide'):
            math_111_2.hide = False
        if hasattr(math_111_2, 'location'):
            math_111_2.location = (780.0, -280.0)
        if hasattr(math_111_2, 'mute'):
            math_111_2.mute = False
        if hasattr(math_111_2, 'name'):
            math_111_2.name = 'Math.111'
        if hasattr(math_111_2, 'operation'):
            math_111_2.operation = 'MULTIPLY'
        if hasattr(math_111_2, 'use_clamp'):
            math_111_2.use_clamp = False
        if hasattr(math_111_2, 'use_custom_color'):
            math_111_2.use_custom_color = False
        if hasattr(math_111_2, 'width'):
            math_111_2.width = 140.0
        input_ = next((input_ for input_ in math_111_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_111_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = -1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_111_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_111_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_035_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_035_2, 'parent'):
            math_035_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(math_035_2, 'color'):
            math_035_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_035_2, 'hide'):
            math_035_2.hide = False
        if hasattr(math_035_2, 'location'):
            math_035_2.location = (780.0, -80.0)
        if hasattr(math_035_2, 'mute'):
            math_035_2.mute = False
        if hasattr(math_035_2, 'name'):
            math_035_2.name = 'Math.035'
        if hasattr(math_035_2, 'operation'):
            math_035_2.operation = 'SUBTRACT'
        if hasattr(math_035_2, 'use_clamp'):
            math_035_2.use_clamp = False
        if hasattr(math_035_2, 'use_custom_color'):
            math_035_2.use_custom_color = False
        if hasattr(math_035_2, 'width'):
            math_035_2.width = 140.0
        input_ = next((input_ for input_ in math_035_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_035_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_035_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_035_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_110_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_110_2, 'parent'):
            math_110_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(math_110_2, 'color'):
            math_110_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_110_2, 'hide'):
            math_110_2.hide = False
        if hasattr(math_110_2, 'location'):
            math_110_2.location = (600.0, -80.0)
        if hasattr(math_110_2, 'mute'):
            math_110_2.mute = False
        if hasattr(math_110_2, 'name'):
            math_110_2.name = 'Math.110'
        if hasattr(math_110_2, 'operation'):
            math_110_2.operation = 'MULTIPLY_ADD'
        if hasattr(math_110_2, 'use_clamp'):
            math_110_2.use_clamp = True
        if hasattr(math_110_2, 'use_custom_color'):
            math_110_2.use_custom_color = False
        if hasattr(math_110_2, 'width'):
            math_110_2.width = 140.0
        input_ = next((input_ for input_ in math_110_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_110_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_110_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_110_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_109_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_109_2, 'parent'):
            math_109_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(math_109_2, 'color'):
            math_109_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_109_2, 'hide'):
            math_109_2.hide = False
        if hasattr(math_109_2, 'location'):
            math_109_2.location = (400.0, -180.0)
        if hasattr(math_109_2, 'mute'):
            math_109_2.mute = False
        if hasattr(math_109_2, 'name'):
            math_109_2.name = 'Math.109'
        if hasattr(math_109_2, 'operation'):
            math_109_2.operation = 'MULTIPLY'
        if hasattr(math_109_2, 'use_clamp'):
            math_109_2.use_clamp = False
        if hasattr(math_109_2, 'use_custom_color'):
            math_109_2.use_custom_color = False
        if hasattr(math_109_2, 'width'):
            math_109_2.width = 140.0
        input_ = next((input_ for input_ in math_109_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_109_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_109_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_109_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        group_output_2 = node_tree2.nodes.new('NodeGroupOutput')
        if hasattr(group_output_2, 'color'):
            group_output_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_output_2, 'hide'):
            group_output_2.hide = False
        if hasattr(group_output_2, 'is_active_output'):
            group_output_2.is_active_output = True
        if hasattr(group_output_2, 'location'):
            group_output_2.location = (3943.33544921875, 188.2186279296875)
        if hasattr(group_output_2, 'mute'):
            group_output_2.mute = False
        if hasattr(group_output_2, 'name'):
            group_output_2.name = 'Group Output'
        if hasattr(group_output_2, 'use_custom_color'):
            group_output_2.use_custom_color = False
        if hasattr(group_output_2, 'width'):
            group_output_2.width = 140.0
        if hasattr(group_output_2.inputs[0], 'default_value'):
            group_output_2.inputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(group_output_2.inputs[0], 'display_shape'):
            group_output_2.inputs[0].display_shape = 'CIRCLE'
        if hasattr(group_output_2.inputs[0], 'enabled'):
            group_output_2.inputs[0].enabled = True
        if hasattr(group_output_2.inputs[0], 'hide'):
            group_output_2.inputs[0].hide = False
        if hasattr(group_output_2.inputs[0], 'hide_value'):
            group_output_2.inputs[0].hide_value = False
        if hasattr(group_output_2.inputs[0], 'name'):
            group_output_2.inputs[0].name = 'Normal'
        if hasattr(group_output_2.inputs[0], 'show_expanded'):
            group_output_2.inputs[0].show_expanded = False

        mix_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_2, 'blend_type'):
            mix_2.blend_type = 'MIX'
        if hasattr(mix_2, 'color'):
            mix_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_2, 'hide'):
            mix_2.hide = False
        if hasattr(mix_2, 'label'):
            mix_2.label = 'Slot 1 and 2'
        if hasattr(mix_2, 'location'):
            mix_2.location = (-544.6644287109375, 548.2186279296875)
        if hasattr(mix_2, 'mute'):
            mix_2.mute = False
        if hasattr(mix_2, 'name'):
            mix_2.name = 'Mix'
        if hasattr(mix_2, 'use_alpha'):
            mix_2.use_alpha = False
        if hasattr(mix_2, 'use_clamp'):
            mix_2.use_clamp = False
        if hasattr(mix_2, 'use_custom_color'):
            mix_2.use_custom_color = False
        if hasattr(mix_2, 'width'):
            mix_2.width = 140.0
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_001_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_001_2, 'blend_type'):
            mix_001_2.blend_type = 'MIX'
        if hasattr(mix_001_2, 'color'):
            mix_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_001_2, 'hide'):
            mix_001_2.hide = False
        if hasattr(mix_001_2, 'label'):
            mix_001_2.label = 'Slot 3'
        if hasattr(mix_001_2, 'location'):
            mix_001_2.location = (-284.6644592285156, 488.2186279296875)
        if hasattr(mix_001_2, 'mute'):
            mix_001_2.mute = False
        if hasattr(mix_001_2, 'name'):
            mix_001_2.name = 'Mix.001'
        if hasattr(mix_001_2, 'use_alpha'):
            mix_001_2.use_alpha = False
        if hasattr(mix_001_2, 'use_clamp'):
            mix_001_2.use_clamp = False
        if hasattr(mix_001_2, 'use_custom_color'):
            mix_001_2.use_custom_color = False
        if hasattr(mix_001_2, 'width'):
            mix_001_2.width = 140.0
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_001_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_001_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_002_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_002_2, 'blend_type'):
            mix_002_2.blend_type = 'MIX'
        if hasattr(mix_002_2, 'color'):
            mix_002_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_002_2, 'hide'):
            mix_002_2.hide = False
        if hasattr(mix_002_2, 'label'):
            mix_002_2.label = 'Slot 4'
        if hasattr(mix_002_2, 'location'):
            mix_002_2.location = (-64.66455078125, 348.2186279296875)
        if hasattr(mix_002_2, 'mute'):
            mix_002_2.mute = False
        if hasattr(mix_002_2, 'name'):
            mix_002_2.name = 'Mix.002'
        if hasattr(mix_002_2, 'use_alpha'):
            mix_002_2.use_alpha = False
        if hasattr(mix_002_2, 'use_clamp'):
            mix_002_2.use_clamp = False
        if hasattr(mix_002_2, 'use_custom_color'):
            mix_002_2.use_custom_color = False
        if hasattr(mix_002_2, 'width'):
            mix_002_2.width = 140.0
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_002_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_002_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_003_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_003_2, 'blend_type'):
            mix_003_2.blend_type = 'MIX'
        if hasattr(mix_003_2, 'color'):
            mix_003_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_003_2, 'hide'):
            mix_003_2.hide = False
        if hasattr(mix_003_2, 'label'):
            mix_003_2.label = 'Slot 5'
        if hasattr(mix_003_2, 'location'):
            mix_003_2.location = (175.3354949951172, 228.2186279296875)
        if hasattr(mix_003_2, 'mute'):
            mix_003_2.mute = False
        if hasattr(mix_003_2, 'name'):
            mix_003_2.name = 'Mix.003'
        if hasattr(mix_003_2, 'use_alpha'):
            mix_003_2.use_alpha = False
        if hasattr(mix_003_2, 'use_clamp'):
            mix_003_2.use_clamp = False
        if hasattr(mix_003_2, 'use_custom_color'):
            mix_003_2.use_custom_color = False
        if hasattr(mix_003_2, 'width'):
            mix_003_2.width = 140.0
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_003_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_003_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_007_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_007_2, 'blend_type'):
            mix_007_2.blend_type = 'MIX'
        if hasattr(mix_007_2, 'color'):
            mix_007_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_007_2, 'hide'):
            mix_007_2.hide = False
        if hasattr(mix_007_2, 'label'):
            mix_007_2.label = 'Dust'
        if hasattr(mix_007_2, 'location'):
            mix_007_2.location = (863.3765869140625, 128.21881103515625)
        if hasattr(mix_007_2, 'mute'):
            mix_007_2.mute = False
        if hasattr(mix_007_2, 'name'):
            mix_007_2.name = 'Mix.007'
        if hasattr(mix_007_2, 'use_alpha'):
            mix_007_2.use_alpha = False
        if hasattr(mix_007_2, 'use_clamp'):
            mix_007_2.use_clamp = False
        if hasattr(mix_007_2, 'use_custom_color'):
            mix_007_2.use_custom_color = False
        if hasattr(mix_007_2, 'width'):
            mix_007_2.width = 140.0
        input_ = next((input_ for input_ in mix_007_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_007_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_007_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_007_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_001_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_001_2, 'color'):
            separate_rgb_001_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_001_2, 'hide'):
            separate_rgb_001_2.hide = False
        if hasattr(separate_rgb_001_2, 'location'):
            separate_rgb_001_2.location = (-864.6644287109375, 948.2186279296875)
        if hasattr(separate_rgb_001_2, 'mute'):
            separate_rgb_001_2.mute = False
        if hasattr(separate_rgb_001_2, 'name'):
            separate_rgb_001_2.name = 'Separate RGB.001'
        if hasattr(separate_rgb_001_2, 'use_custom_color'):
            separate_rgb_001_2.use_custom_color = False
        if hasattr(separate_rgb_001_2, 'width'):
            separate_rgb_001_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_001_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_001_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        separate_rgb_002_2 = node_tree2.nodes.new('ShaderNodeSeparateRGB')
        if hasattr(separate_rgb_002_2, 'color'):
            separate_rgb_002_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(separate_rgb_002_2, 'hide'):
            separate_rgb_002_2.hide = False
        if hasattr(separate_rgb_002_2, 'location'):
            separate_rgb_002_2.location = (-864.6644287109375, 808.2186279296875)
        if hasattr(separate_rgb_002_2, 'mute'):
            separate_rgb_002_2.mute = False
        if hasattr(separate_rgb_002_2, 'name'):
            separate_rgb_002_2.name = 'Separate RGB.002'
        if hasattr(separate_rgb_002_2, 'use_custom_color'):
            separate_rgb_002_2.use_custom_color = False
        if hasattr(separate_rgb_002_2, 'width'):
            separate_rgb_002_2.width = 140.0
        input_ = next((input_ for input_ in separate_rgb_002_2.inputs if input_.identifier=='Image'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Image'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='R'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'R'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='G'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'G'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False
        output = next((output for output in separate_rgb_002_2.outputs if output.identifier=='B'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'B'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_008_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_008_2, 'blend_type'):
            mix_008_2.blend_type = 'OVERLAY'
        if hasattr(mix_008_2, 'color'):
            mix_008_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_008_2, 'hide'):
            mix_008_2.hide = False
        if hasattr(mix_008_2, 'location'):
            mix_008_2.location = (1303.33544921875, 48.2186279296875)
        if hasattr(mix_008_2, 'mute'):
            mix_008_2.mute = False
        if hasattr(mix_008_2, 'name'):
            mix_008_2.name = 'Mix.008'
        if hasattr(mix_008_2, 'use_alpha'):
            mix_008_2.use_alpha = False
        if hasattr(mix_008_2, 'use_clamp'):
            mix_008_2.use_clamp = False
        if hasattr(mix_008_2, 'use_custom_color'):
            mix_008_2.use_custom_color = False
        if hasattr(mix_008_2, 'width'):
            mix_008_2.width = 140.0
        input_ = next((input_ for input_ in mix_008_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_008_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_008_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_008_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_024_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_024_2, 'parent'):
            mix_024_2.parent = node_tree2.nodes.get('Frame')
        if hasattr(mix_024_2, 'blend_type'):
            mix_024_2.blend_type = 'DIVIDE'
        if hasattr(mix_024_2, 'color'):
            mix_024_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_024_2, 'hide'):
            mix_024_2.hide = False
        if hasattr(mix_024_2, 'location'):
            mix_024_2.location = (1700.0, -140.0)
        if hasattr(mix_024_2, 'mute'):
            mix_024_2.mute = False
        if hasattr(mix_024_2, 'name'):
            mix_024_2.name = 'Mix.024'
        if hasattr(mix_024_2, 'use_alpha'):
            mix_024_2.use_alpha = False
        if hasattr(mix_024_2, 'use_clamp'):
            mix_024_2.use_clamp = False
        if hasattr(mix_024_2, 'use_custom_color'):
            mix_024_2.use_custom_color = False
        if hasattr(mix_024_2, 'width'):
            mix_024_2.width = 140.0
        input_ = next((input_ for input_ in mix_024_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_024_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_024_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (2.0, 2.0, 2.0, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_024_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_005_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_005_2, 'blend_type'):
            mix_005_2.blend_type = 'MIX'
        if hasattr(mix_005_2, 'color'):
            mix_005_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_005_2, 'hide'):
            mix_005_2.hide = False
        if hasattr(mix_005_2, 'label'):
            mix_005_2.label = 'Grime'
        if hasattr(mix_005_2, 'location'):
            mix_005_2.location = (635.3355102539062, 8.2186279296875)
        if hasattr(mix_005_2, 'mute'):
            mix_005_2.mute = False
        if hasattr(mix_005_2, 'name'):
            mix_005_2.name = 'Mix.005'
        if hasattr(mix_005_2, 'use_alpha'):
            mix_005_2.use_alpha = False
        if hasattr(mix_005_2, 'use_clamp'):
            mix_005_2.use_clamp = False
        if hasattr(mix_005_2, 'use_custom_color'):
            mix_005_2.use_custom_color = False
        if hasattr(mix_005_2, 'width'):
            mix_005_2.width = 140.0
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_005_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_005_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        mix_004_2 = node_tree2.nodes.new('ShaderNodeMixRGB')
        if hasattr(mix_004_2, 'blend_type'):
            mix_004_2.blend_type = 'MIX'
        if hasattr(mix_004_2, 'color'):
            mix_004_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(mix_004_2, 'hide'):
            mix_004_2.hide = False
        if hasattr(mix_004_2, 'label'):
            mix_004_2.label = 'Slot 6'
        if hasattr(mix_004_2, 'location'):
            mix_004_2.location = (415.33551025390625, 88.2186279296875)
        if hasattr(mix_004_2, 'mute'):
            mix_004_2.mute = False
        if hasattr(mix_004_2, 'name'):
            mix_004_2.name = 'Mix.004'
        if hasattr(mix_004_2, 'use_alpha'):
            mix_004_2.use_alpha = False
        if hasattr(mix_004_2, 'use_clamp'):
            mix_004_2.use_clamp = False
        if hasattr(mix_004_2, 'use_custom_color'):
            mix_004_2.use_custom_color = False
        if hasattr(mix_004_2, 'width'):
            mix_004_2.width = 140.0
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Fac'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Fac'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Color1'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color1'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in mix_004_2.inputs if input_.identifier=='Color2'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = (0.5, 0.5, 0.5, 1.0)
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Color2'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in mix_004_2.outputs if output.identifier=='Color'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = (0.0, 0.0, 0.0, 0.0)
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Color'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        group_input_2 = node_tree2.nodes.new('NodeGroupInput')
        if hasattr(group_input_2, 'color'):
            group_input_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(group_input_2, 'hide'):
            group_input_2.hide = False
        if hasattr(group_input_2, 'location'):
            group_input_2.location = (-1484.66455078125, 488.2186279296875)
        if hasattr(group_input_2, 'mute'):
            group_input_2.mute = False
        if hasattr(group_input_2, 'name'):
            group_input_2.name = 'Group Input'
        if hasattr(group_input_2, 'use_custom_color'):
            group_input_2.use_custom_color = False
        if hasattr(group_input_2, 'width'):
            group_input_2.width = 184.6219940185547
        if hasattr(group_input_2.outputs[0], 'default_value'):
            group_input_2.outputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[0], 'display_shape'):
            group_input_2.outputs[0].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[0], 'enabled'):
            group_input_2.outputs[0].enabled = True
        if hasattr(group_input_2.outputs[0], 'hide'):
            group_input_2.outputs[0].hide = False
        if hasattr(group_input_2.outputs[0], 'hide_value'):
            group_input_2.outputs[0].hide_value = False
        if hasattr(group_input_2.outputs[0], 'name'):
            group_input_2.outputs[0].name = 'ASG'
        if hasattr(group_input_2.outputs[0], 'show_expanded'):
            group_input_2.outputs[0].show_expanded = False
        if hasattr(group_input_2.outputs[1], 'default_value'):
            group_input_2.outputs[1].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[1], 'display_shape'):
            group_input_2.outputs[1].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[1], 'enabled'):
            group_input_2.outputs[1].enabled = True
        if hasattr(group_input_2.outputs[1], 'hide'):
            group_input_2.outputs[1].hide = False
        if hasattr(group_input_2.outputs[1], 'hide_value'):
            group_input_2.outputs[1].hide_value = False
        if hasattr(group_input_2.outputs[1], 'name'):
            group_input_2.outputs[1].name = 'Mask_0'
        if hasattr(group_input_2.outputs[1], 'show_expanded'):
            group_input_2.outputs[1].show_expanded = False
        if hasattr(group_input_2.outputs[2], 'default_value'):
            group_input_2.outputs[2].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(group_input_2.outputs[2], 'display_shape'):
            group_input_2.outputs[2].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[2], 'enabled'):
            group_input_2.outputs[2].enabled = True
        if hasattr(group_input_2.outputs[2], 'hide'):
            group_input_2.outputs[2].hide = False
        if hasattr(group_input_2.outputs[2], 'hide_value'):
            group_input_2.outputs[2].hide_value = False
        if hasattr(group_input_2.outputs[2], 'name'):
            group_input_2.outputs[2].name = 'Mask_1'
        if hasattr(group_input_2.outputs[2], 'show_expanded'):
            group_input_2.outputs[2].show_expanded = False
        if hasattr(group_input_2.outputs[3], 'default_value'):
            group_input_2.outputs[3].default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(group_input_2.outputs[3], 'display_shape'):
            group_input_2.outputs[3].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[3], 'enabled'):
            group_input_2.outputs[3].enabled = True
        if hasattr(group_input_2.outputs[3], 'hide'):
            group_input_2.outputs[3].hide = False
        if hasattr(group_input_2.outputs[3], 'hide_value'):
            group_input_2.outputs[3].hide_value = False
        if hasattr(group_input_2.outputs[3], 'name'):
            group_input_2.outputs[3].name = 'MainNormal'
        if hasattr(group_input_2.outputs[3], 'show_expanded'):
            group_input_2.outputs[3].show_expanded = False
        if hasattr(group_input_2.outputs[4], 'default_value'):
            group_input_2.outputs[4].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[4], 'display_shape'):
            group_input_2.outputs[4].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[4], 'enabled'):
            group_input_2.outputs[4].enabled = True
        if hasattr(group_input_2.outputs[4], 'hide'):
            group_input_2.outputs[4].hide = False
        if hasattr(group_input_2.outputs[4], 'hide_value'):
            group_input_2.outputs[4].hide_value = False
        if hasattr(group_input_2.outputs[4], 'name'):
            group_input_2.outputs[4].name = 'Color-A'
        if hasattr(group_input_2.outputs[4], 'show_expanded'):
            group_input_2.outputs[4].show_expanded = False
        if hasattr(group_input_2.outputs[5], 'default_value'):
            group_input_2.outputs[5].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[5], 'display_shape'):
            group_input_2.outputs[5].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[5], 'enabled'):
            group_input_2.outputs[5].enabled = True
        if hasattr(group_input_2.outputs[5], 'hide'):
            group_input_2.outputs[5].hide = False
        if hasattr(group_input_2.outputs[5], 'hide_value'):
            group_input_2.outputs[5].hide_value = False
        if hasattr(group_input_2.outputs[5], 'name'):
            group_input_2.outputs[5].name = 'Color-B'
        if hasattr(group_input_2.outputs[5], 'show_expanded'):
            group_input_2.outputs[5].show_expanded = False
        if hasattr(group_input_2.outputs[6], 'default_value'):
            group_input_2.outputs[6].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[6], 'display_shape'):
            group_input_2.outputs[6].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[6], 'enabled'):
            group_input_2.outputs[6].enabled = True
        if hasattr(group_input_2.outputs[6], 'hide'):
            group_input_2.outputs[6].hide = False
        if hasattr(group_input_2.outputs[6], 'hide_value'):
            group_input_2.outputs[6].hide_value = False
        if hasattr(group_input_2.outputs[6], 'name'):
            group_input_2.outputs[6].name = 'Color-C'
        if hasattr(group_input_2.outputs[6], 'show_expanded'):
            group_input_2.outputs[6].show_expanded = False
        if hasattr(group_input_2.outputs[7], 'default_value'):
            group_input_2.outputs[7].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[7], 'display_shape'):
            group_input_2.outputs[7].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[7], 'enabled'):
            group_input_2.outputs[7].enabled = True
        if hasattr(group_input_2.outputs[7], 'hide'):
            group_input_2.outputs[7].hide = False
        if hasattr(group_input_2.outputs[7], 'hide_value'):
            group_input_2.outputs[7].hide_value = False
        if hasattr(group_input_2.outputs[7], 'name'):
            group_input_2.outputs[7].name = 'Color-D'
        if hasattr(group_input_2.outputs[7], 'show_expanded'):
            group_input_2.outputs[7].show_expanded = False
        if hasattr(group_input_2.outputs[8], 'default_value'):
            group_input_2.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[8], 'display_shape'):
            group_input_2.outputs[8].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[8], 'enabled'):
            group_input_2.outputs[8].enabled = True
        if hasattr(group_input_2.outputs[8], 'hide'):
            group_input_2.outputs[8].hide = False
        if hasattr(group_input_2.outputs[8], 'hide_value'):
            group_input_2.outputs[8].hide_value = False
        if hasattr(group_input_2.outputs[8], 'name'):
            group_input_2.outputs[8].name = 'Color-E'
        if hasattr(group_input_2.outputs[8], 'show_expanded'):
            group_input_2.outputs[8].show_expanded = False
        if hasattr(group_input_2.outputs[9], 'default_value'):
            group_input_2.outputs[9].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[9], 'display_shape'):
            group_input_2.outputs[9].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[9], 'enabled'):
            group_input_2.outputs[9].enabled = True
        if hasattr(group_input_2.outputs[9], 'hide'):
            group_input_2.outputs[9].hide = False
        if hasattr(group_input_2.outputs[9], 'hide_value'):
            group_input_2.outputs[9].hide_value = False
        if hasattr(group_input_2.outputs[9], 'name'):
            group_input_2.outputs[9].name = 'Color-F'
        if hasattr(group_input_2.outputs[9], 'show_expanded'):
            group_input_2.outputs[9].show_expanded = False
        if hasattr(group_input_2.outputs[10], 'default_value'):
            group_input_2.outputs[10].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[10], 'display_shape'):
            group_input_2.outputs[10].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[10], 'enabled'):
            group_input_2.outputs[10].enabled = True
        if hasattr(group_input_2.outputs[10], 'hide'):
            group_input_2.outputs[10].hide = False
        if hasattr(group_input_2.outputs[10], 'hide_value'):
            group_input_2.outputs[10].hide_value = False
        if hasattr(group_input_2.outputs[10], 'name'):
            group_input_2.outputs[10].name = 'Grime'
        if hasattr(group_input_2.outputs[10], 'show_expanded'):
            group_input_2.outputs[10].show_expanded = False
        if hasattr(group_input_2.outputs[11], 'default_value'):
            group_input_2.outputs[11].default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(group_input_2.outputs[11], 'display_shape'):
            group_input_2.outputs[11].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[11], 'enabled'):
            group_input_2.outputs[11].enabled = True
        if hasattr(group_input_2.outputs[11], 'hide'):
            group_input_2.outputs[11].hide = False
        if hasattr(group_input_2.outputs[11], 'hide_value'):
            group_input_2.outputs[11].hide_value = False
        if hasattr(group_input_2.outputs[11], 'name'):
            group_input_2.outputs[11].name = 'Dust'
        if hasattr(group_input_2.outputs[11], 'show_expanded'):
            group_input_2.outputs[11].show_expanded = False
        if hasattr(group_input_2.outputs[12], 'default_value'):
            group_input_2.outputs[12].default_value = 1.0
        if hasattr(group_input_2.outputs[12], 'display_shape'):
            group_input_2.outputs[12].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[12], 'enabled'):
            group_input_2.outputs[12].enabled = True
        if hasattr(group_input_2.outputs[12], 'hide'):
            group_input_2.outputs[12].hide = False
        if hasattr(group_input_2.outputs[12], 'hide_value'):
            group_input_2.outputs[12].hide_value = False
        if hasattr(group_input_2.outputs[12], 'name'):
            group_input_2.outputs[12].name = 'Grime Amount'
        if hasattr(group_input_2.outputs[12], 'show_expanded'):
            group_input_2.outputs[12].show_expanded = False
        if hasattr(group_input_2.outputs[13], 'default_value'):
            group_input_2.outputs[13].default_value = 1.0
        if hasattr(group_input_2.outputs[13], 'display_shape'):
            group_input_2.outputs[13].display_shape = 'CIRCLE'
        if hasattr(group_input_2.outputs[13], 'enabled'):
            group_input_2.outputs[13].enabled = True
        if hasattr(group_input_2.outputs[13], 'hide'):
            group_input_2.outputs[13].hide = False
        if hasattr(group_input_2.outputs[13], 'hide_value'):
            group_input_2.outputs[13].hide_value = False
        if hasattr(group_input_2.outputs[13], 'name'):
            group_input_2.outputs[13].name = 'Dust Amount'
        if hasattr(group_input_2.outputs[13], 'show_expanded'):
            group_input_2.outputs[13].show_expanded = False

        math_007_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_007_2, 'color'):
            math_007_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_007_2, 'hide'):
            math_007_2.hide = False
        if hasattr(math_007_2, 'location'):
            math_007_2.location = (-144.66455078125, 968.2186279296875)
        if hasattr(math_007_2, 'mute'):
            math_007_2.mute = False
        if hasattr(math_007_2, 'name'):
            math_007_2.name = 'Math.007'
        if hasattr(math_007_2, 'operation'):
            math_007_2.operation = 'MULTIPLY'
        if hasattr(math_007_2, 'use_clamp'):
            math_007_2.use_clamp = False
        if hasattr(math_007_2, 'use_custom_color'):
            math_007_2.use_custom_color = False
        if hasattr(math_007_2, 'width'):
            math_007_2.width = 140.0
        input_ = next((input_ for input_ in math_007_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_007_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_007_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_007_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        math_008_2 = node_tree2.nodes.new('ShaderNodeMath')
        if hasattr(math_008_2, 'color'):
            math_008_2.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
        if hasattr(math_008_2, 'hide'):
            math_008_2.hide = False
        if hasattr(math_008_2, 'location'):
            math_008_2.location = (-480.0, 80.0)
        if hasattr(math_008_2, 'mute'):
            math_008_2.mute = False
        if hasattr(math_008_2, 'name'):
            math_008_2.name = 'Math.008'
        if hasattr(math_008_2, 'operation'):
            math_008_2.operation = 'MULTIPLY'
        if hasattr(math_008_2, 'use_clamp'):
            math_008_2.use_clamp = False
        if hasattr(math_008_2, 'use_custom_color'):
            math_008_2.use_custom_color = False
        if hasattr(math_008_2, 'width'):
            math_008_2.width = 140.0
        input_ = next((input_ for input_ in math_008_2.inputs if input_.identifier=='Value'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_008_2.inputs if input_.identifier=='Value_001'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 1.0
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = True
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        input_ = next((input_ for input_ in math_008_2.inputs if input_.identifier=='Value_002'), None)
        if input_:
            if hasattr(input_, 'default_value'):
                input_.default_value = 0.5
            if hasattr(input_, 'display_shape'):
                input_.display_shape = 'CIRCLE'
            if hasattr(input_, 'enabled'):
                input_.enabled = False
            if hasattr(input_, 'hide'):
                input_.hide = False
            if hasattr(input_, 'hide_value'):
                input_.hide_value = False
            if hasattr(input_, 'name'):
                input_.name = 'Value'
            if hasattr(input_, 'show_expanded'):
                input_.show_expanded = False
        output = next((output for output in math_008_2.outputs if output.identifier=='Value'), None)
        if output:
            if hasattr(output, 'default_value'):
                output.default_value = 0.0
            if hasattr(output, 'display_shape'):
                output.display_shape = 'CIRCLE'
            if hasattr(output, 'enabled'):
                output.enabled = True
            if hasattr(output, 'hide'):
                output.hide = False
            if hasattr(output, 'hide_value'):
                output.hide_value = False
            if hasattr(output, 'name'):
                output.name = 'Value'
            if hasattr(output, 'show_expanded'):
                output.show_expanded = False

        # LINKS
        node_tree2.links.new(group_input_2.outputs[1], separate_rgb_2.inputs[0])
        node_tree2.links.new(separate_rgb_2.outputs[0], mix_2.inputs[0])
        node_tree2.links.new(mix_2.outputs[0], mix_001_2.inputs[1])
        node_tree2.links.new(mix_001_2.outputs[0], mix_002_2.inputs[1])
        node_tree2.links.new(separate_rgb_2.outputs[1], mix_001_2.inputs[0])
        node_tree2.links.new(mix_002_2.outputs[0], mix_003_2.inputs[1])
        node_tree2.links.new(separate_rgb_2.outputs[2], mix_002_2.inputs[0])
        node_tree2.links.new(mix_003_2.outputs[0], mix_004_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[2], separate_rgb_001_2.inputs[0])
        node_tree2.links.new(separate_rgb_001_2.outputs[0], mix_003_2.inputs[0])
        node_tree2.links.new(mix_004_2.outputs[0], mix_005_2.inputs[1])
        node_tree2.links.new(separate_rgb_001_2.outputs[1], mix_004_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[0], separate_rgb_002_2.inputs[0])
        node_tree2.links.new(mix_005_2.outputs[0], mix_007_2.inputs[1])
        node_tree2.links.new(separate_rgb_001_2.outputs[2], math_007_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[13], math_007_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[4], mix_2.inputs[1])
        node_tree2.links.new(group_input_2.outputs[5], mix_2.inputs[2])
        node_tree2.links.new(combine_xyz_004_2.outputs[0], vector_math_2.inputs[0])
        node_tree2.links.new(math_110_2.outputs[0], math_035_2.inputs[1])
        node_tree2.links.new(math_111_2.outputs[0], combine_xyz_004_2.inputs[1])
        node_tree2.links.new(math_035_2.outputs[0], math_106_2.inputs[0])
        node_tree2.links.new(math_106_2.outputs[0], combine_xyz_004_2.inputs[2])
        node_tree2.links.new(mix_028_2.outputs[0], mix_024_2.inputs[1])
        node_tree2.links.new(vector_math_2.outputs[0], mix_028_2.inputs[1])
        node_tree2.links.new(math_109_2.outputs[0], math_110_2.inputs[2])
        node_tree2.links.new(math_107_2.outputs[0], math_110_2.inputs[0])
        node_tree2.links.new(math_107_2.outputs[0], math_110_2.inputs[1])
        node_tree2.links.new(math_108_2.outputs[0], math_109_2.inputs[1])
        node_tree2.links.new(math_108_2.outputs[0], math_109_2.inputs[0])
        node_tree2.links.new(math_108_2.outputs[0], math_111_2.inputs[0])
        node_tree2.links.new(math_107_2.outputs[0], combine_xyz_004_2.inputs[0])
        node_tree2.links.new(separate_xyz_001_2.outputs[0], math_107_2.inputs[0])
        node_tree2.links.new(separate_xyz_001_2.outputs[1], math_108_2.inputs[0])
        node_tree2.links.new(mix_008_2.outputs[0], separate_xyz_001_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[6], mix_001_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[7], mix_002_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[8], mix_003_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[9], mix_004_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[11], mix_005_2.inputs[2])
        node_tree2.links.new(group_input_2.outputs[10], mix_007_2.inputs[2])
        node_tree2.links.new(mix_024_2.outputs[0], group_output_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[3], mix_008_2.inputs[1])
        node_tree2.links.new(math_008_2.outputs[0], mix_005_2.inputs[0])
        node_tree2.links.new(math_007_2.outputs[0], mix_007_2.inputs[0])
        node_tree2.links.new(mix_007_2.outputs[0], mix_008_2.inputs[2])
        node_tree2.links.new(separate_rgb_002_2.outputs[2], math_008_2.inputs[0])
        node_tree2.links.new(group_input_2.outputs[12], math_008_2.inputs[1])

    group_003_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_003_1, 'node_tree'):
        group_003_1.node_tree = bpy.data.node_groups.get('Detail Normals')
    if hasattr(group_003_1, 'color'):
        group_003_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_003_1, 'hide'):
        group_003_1.hide = False
    if hasattr(group_003_1, 'location'):
        group_003_1.location = (-99.8284912109375, -120.0)
    if hasattr(group_003_1, 'mute'):
        group_003_1.mute = False
    if hasattr(group_003_1, 'name'):
        group_003_1.name = 'Group.003'
    if hasattr(group_003_1, 'use_custom_color'):
        group_003_1.use_custom_color = False
    if hasattr(group_003_1, 'width'):
        group_003_1.width = 216.826904296875
    if hasattr(group_003_1.inputs[0], 'default_value'):
        group_003_1.inputs[0].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_003_1.inputs[0], 'display_shape'):
        group_003_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[0], 'enabled'):
        group_003_1.inputs[0].enabled = True
    if hasattr(group_003_1.inputs[0], 'hide'):
        group_003_1.inputs[0].hide = False
    if hasattr(group_003_1.inputs[0], 'hide_value'):
        group_003_1.inputs[0].hide_value = False
    if hasattr(group_003_1.inputs[0], 'name'):
        group_003_1.inputs[0].name = 'ASG'
    if hasattr(group_003_1.inputs[0], 'show_expanded'):
        group_003_1.inputs[0].show_expanded = False
    if hasattr(group_003_1.inputs[1], 'default_value'):
        group_003_1.inputs[1].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_003_1.inputs[1], 'display_shape'):
        group_003_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[1], 'enabled'):
        group_003_1.inputs[1].enabled = True
    if hasattr(group_003_1.inputs[1], 'hide'):
        group_003_1.inputs[1].hide = False
    if hasattr(group_003_1.inputs[1], 'hide_value'):
        group_003_1.inputs[1].hide_value = False
    if hasattr(group_003_1.inputs[1], 'name'):
        group_003_1.inputs[1].name = 'Mask_0'
    if hasattr(group_003_1.inputs[1], 'show_expanded'):
        group_003_1.inputs[1].show_expanded = False
    if hasattr(group_003_1.inputs[2], 'default_value'):
        group_003_1.inputs[2].default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
    if hasattr(group_003_1.inputs[2], 'display_shape'):
        group_003_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[2], 'enabled'):
        group_003_1.inputs[2].enabled = True
    if hasattr(group_003_1.inputs[2], 'hide'):
        group_003_1.inputs[2].hide = False
    if hasattr(group_003_1.inputs[2], 'hide_value'):
        group_003_1.inputs[2].hide_value = False
    if hasattr(group_003_1.inputs[2], 'name'):
        group_003_1.inputs[2].name = 'Mask_1'
    if hasattr(group_003_1.inputs[2], 'show_expanded'):
        group_003_1.inputs[2].show_expanded = False
    if hasattr(group_003_1.inputs[3], 'default_value'):
        group_003_1.inputs[3].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_003_1.inputs[3], 'display_shape'):
        group_003_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[3], 'enabled'):
        group_003_1.inputs[3].enabled = True
    if hasattr(group_003_1.inputs[3], 'hide'):
        group_003_1.inputs[3].hide = False
    if hasattr(group_003_1.inputs[3], 'hide_value'):
        group_003_1.inputs[3].hide_value = False
    if hasattr(group_003_1.inputs[3], 'name'):
        group_003_1.inputs[3].name = 'MainNormal'
    if hasattr(group_003_1.inputs[3], 'show_expanded'):
        group_003_1.inputs[3].show_expanded = False
    if hasattr(group_003_1.inputs[4], 'default_value'):
        group_003_1.inputs[4].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_003_1.inputs[4], 'display_shape'):
        group_003_1.inputs[4].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[4], 'enabled'):
        group_003_1.inputs[4].enabled = True
    if hasattr(group_003_1.inputs[4], 'hide'):
        group_003_1.inputs[4].hide = False
    if hasattr(group_003_1.inputs[4], 'hide_value'):
        group_003_1.inputs[4].hide_value = False
    if hasattr(group_003_1.inputs[4], 'name'):
        group_003_1.inputs[4].name = 'Color-A'
    if hasattr(group_003_1.inputs[4], 'show_expanded'):
        group_003_1.inputs[4].show_expanded = False
    if hasattr(group_003_1.inputs[5], 'default_value'):
        group_003_1.inputs[5].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_003_1.inputs[5], 'display_shape'):
        group_003_1.inputs[5].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[5], 'enabled'):
        group_003_1.inputs[5].enabled = True
    if hasattr(group_003_1.inputs[5], 'hide'):
        group_003_1.inputs[5].hide = False
    if hasattr(group_003_1.inputs[5], 'hide_value'):
        group_003_1.inputs[5].hide_value = False
    if hasattr(group_003_1.inputs[5], 'name'):
        group_003_1.inputs[5].name = 'Color-B'
    if hasattr(group_003_1.inputs[5], 'show_expanded'):
        group_003_1.inputs[5].show_expanded = False
    if hasattr(group_003_1.inputs[6], 'default_value'):
        group_003_1.inputs[6].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_003_1.inputs[6], 'display_shape'):
        group_003_1.inputs[6].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[6], 'enabled'):
        group_003_1.inputs[6].enabled = True
    if hasattr(group_003_1.inputs[6], 'hide'):
        group_003_1.inputs[6].hide = False
    if hasattr(group_003_1.inputs[6], 'hide_value'):
        group_003_1.inputs[6].hide_value = False
    if hasattr(group_003_1.inputs[6], 'name'):
        group_003_1.inputs[6].name = 'Color-C'
    if hasattr(group_003_1.inputs[6], 'show_expanded'):
        group_003_1.inputs[6].show_expanded = False
    if hasattr(group_003_1.inputs[7], 'default_value'):
        group_003_1.inputs[7].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_003_1.inputs[7], 'display_shape'):
        group_003_1.inputs[7].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[7], 'enabled'):
        group_003_1.inputs[7].enabled = True
    if hasattr(group_003_1.inputs[7], 'hide'):
        group_003_1.inputs[7].hide = False
    if hasattr(group_003_1.inputs[7], 'hide_value'):
        group_003_1.inputs[7].hide_value = False
    if hasattr(group_003_1.inputs[7], 'name'):
        group_003_1.inputs[7].name = 'Color-D'
    if hasattr(group_003_1.inputs[7], 'show_expanded'):
        group_003_1.inputs[7].show_expanded = False
    if hasattr(group_003_1.inputs[8], 'default_value'):
        group_003_1.inputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_003_1.inputs[8], 'display_shape'):
        group_003_1.inputs[8].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[8], 'enabled'):
        group_003_1.inputs[8].enabled = True
    if hasattr(group_003_1.inputs[8], 'hide'):
        group_003_1.inputs[8].hide = False
    if hasattr(group_003_1.inputs[8], 'hide_value'):
        group_003_1.inputs[8].hide_value = False
    if hasattr(group_003_1.inputs[8], 'name'):
        group_003_1.inputs[8].name = 'Color-E'
    if hasattr(group_003_1.inputs[8], 'show_expanded'):
        group_003_1.inputs[8].show_expanded = False
    if hasattr(group_003_1.inputs[9], 'default_value'):
        group_003_1.inputs[9].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_003_1.inputs[9], 'display_shape'):
        group_003_1.inputs[9].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[9], 'enabled'):
        group_003_1.inputs[9].enabled = True
    if hasattr(group_003_1.inputs[9], 'hide'):
        group_003_1.inputs[9].hide = False
    if hasattr(group_003_1.inputs[9], 'hide_value'):
        group_003_1.inputs[9].hide_value = False
    if hasattr(group_003_1.inputs[9], 'name'):
        group_003_1.inputs[9].name = 'Color-F'
    if hasattr(group_003_1.inputs[9], 'show_expanded'):
        group_003_1.inputs[9].show_expanded = False
    if hasattr(group_003_1.inputs[10], 'default_value'):
        group_003_1.inputs[10].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_003_1.inputs[10], 'display_shape'):
        group_003_1.inputs[10].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[10], 'enabled'):
        group_003_1.inputs[10].enabled = True
    if hasattr(group_003_1.inputs[10], 'hide'):
        group_003_1.inputs[10].hide = False
    if hasattr(group_003_1.inputs[10], 'hide_value'):
        group_003_1.inputs[10].hide_value = False
    if hasattr(group_003_1.inputs[10], 'name'):
        group_003_1.inputs[10].name = 'Grime'
    if hasattr(group_003_1.inputs[10], 'show_expanded'):
        group_003_1.inputs[10].show_expanded = False
    if hasattr(group_003_1.inputs[11], 'default_value'):
        group_003_1.inputs[11].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_003_1.inputs[11], 'display_shape'):
        group_003_1.inputs[11].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[11], 'enabled'):
        group_003_1.inputs[11].enabled = True
    if hasattr(group_003_1.inputs[11], 'hide'):
        group_003_1.inputs[11].hide = False
    if hasattr(group_003_1.inputs[11], 'hide_value'):
        group_003_1.inputs[11].hide_value = False
    if hasattr(group_003_1.inputs[11], 'name'):
        group_003_1.inputs[11].name = 'Dust'
    if hasattr(group_003_1.inputs[11], 'show_expanded'):
        group_003_1.inputs[11].show_expanded = False
    if hasattr(group_003_1.inputs[12], 'default_value'):
        group_003_1.inputs[12].default_value = 1.0
    if hasattr(group_003_1.inputs[12], 'display_shape'):
        group_003_1.inputs[12].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[12], 'enabled'):
        group_003_1.inputs[12].enabled = True
    if hasattr(group_003_1.inputs[12], 'hide'):
        group_003_1.inputs[12].hide = False
    if hasattr(group_003_1.inputs[12], 'hide_value'):
        group_003_1.inputs[12].hide_value = False
    if hasattr(group_003_1.inputs[12], 'name'):
        group_003_1.inputs[12].name = 'Grime Amount'
    if hasattr(group_003_1.inputs[12], 'show_expanded'):
        group_003_1.inputs[12].show_expanded = False
    if hasattr(group_003_1.inputs[13], 'default_value'):
        group_003_1.inputs[13].default_value = 1.0
    if hasattr(group_003_1.inputs[13], 'display_shape'):
        group_003_1.inputs[13].display_shape = 'CIRCLE'
    if hasattr(group_003_1.inputs[13], 'enabled'):
        group_003_1.inputs[13].enabled = True
    if hasattr(group_003_1.inputs[13], 'hide'):
        group_003_1.inputs[13].hide = False
    if hasattr(group_003_1.inputs[13], 'hide_value'):
        group_003_1.inputs[13].hide_value = False
    if hasattr(group_003_1.inputs[13], 'name'):
        group_003_1.inputs[13].name = 'Dust Amount'
    if hasattr(group_003_1.inputs[13], 'show_expanded'):
        group_003_1.inputs[13].show_expanded = False
    if hasattr(group_003_1.outputs[0], 'default_value'):
        group_003_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_003_1.outputs[0], 'display_shape'):
        group_003_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_003_1.outputs[0], 'enabled'):
        group_003_1.outputs[0].enabled = True
    if hasattr(group_003_1.outputs[0], 'hide'):
        group_003_1.outputs[0].hide = False
    if hasattr(group_003_1.outputs[0], 'hide_value'):
        group_003_1.outputs[0].hide_value = False
    if hasattr(group_003_1.outputs[0], 'name'):
        group_003_1.outputs[0].name = 'Normal'
    if hasattr(group_003_1.outputs[0], 'show_expanded'):
        group_003_1.outputs[0].show_expanded = False

    group_004_1 = node_tree1.nodes.new('ShaderNodeGroup')
    if hasattr(group_004_1, 'node_tree'):
        group_004_1.node_tree = bpy.data.node_groups.get('Color Mixer')
    if hasattr(group_004_1, 'color'):
        group_004_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_004_1, 'hide'):
        group_004_1.hide = False
    if hasattr(group_004_1, 'location'):
        group_004_1.location = (-1660.0, 2120.0)
    if hasattr(group_004_1, 'mute'):
        group_004_1.mute = False
    if hasattr(group_004_1, 'name'):
        group_004_1.name = 'Group.004'
    if hasattr(group_004_1, 'use_custom_color'):
        group_004_1.use_custom_color = False
    if hasattr(group_004_1, 'width'):
        group_004_1.width = 140.0
    if hasattr(group_004_1.inputs[0], 'default_value'):
        group_004_1.inputs[0].default_value = 0.0
    if hasattr(group_004_1.inputs[0], 'display_shape'):
        group_004_1.inputs[0].display_shape = 'CIRCLE'
    if hasattr(group_004_1.inputs[0], 'enabled'):
        group_004_1.inputs[0].enabled = True
    if hasattr(group_004_1.inputs[0], 'hide'):
        group_004_1.inputs[0].hide = False
    if hasattr(group_004_1.inputs[0], 'hide_value'):
        group_004_1.inputs[0].hide_value = False
    if hasattr(group_004_1.inputs[0], 'name'):
        group_004_1.inputs[0].name = 'Gradient Out'
    if hasattr(group_004_1.inputs[0], 'show_expanded'):
        group_004_1.inputs[0].show_expanded = False
    if hasattr(group_004_1.inputs[1], 'default_value'):
        group_004_1.inputs[1].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_004_1.inputs[1], 'display_shape'):
        group_004_1.inputs[1].display_shape = 'CIRCLE'
    if hasattr(group_004_1.inputs[1], 'enabled'):
        group_004_1.inputs[1].enabled = True
    if hasattr(group_004_1.inputs[1], 'hide'):
        group_004_1.inputs[1].hide = False
    if hasattr(group_004_1.inputs[1], 'hide_value'):
        group_004_1.inputs[1].hide_value = False
    if hasattr(group_004_1.inputs[1], 'name'):
        group_004_1.inputs[1].name = 'Top'
    if hasattr(group_004_1.inputs[1], 'show_expanded'):
        group_004_1.inputs[1].show_expanded = False
    if hasattr(group_004_1.inputs[2], 'default_value'):
        group_004_1.inputs[2].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_004_1.inputs[2], 'display_shape'):
        group_004_1.inputs[2].display_shape = 'CIRCLE'
    if hasattr(group_004_1.inputs[2], 'enabled'):
        group_004_1.inputs[2].enabled = True
    if hasattr(group_004_1.inputs[2], 'hide'):
        group_004_1.inputs[2].hide = False
    if hasattr(group_004_1.inputs[2], 'hide_value'):
        group_004_1.inputs[2].hide_value = False
    if hasattr(group_004_1.inputs[2], 'name'):
        group_004_1.inputs[2].name = 'Mid'
    if hasattr(group_004_1.inputs[2], 'show_expanded'):
        group_004_1.inputs[2].show_expanded = False
    if hasattr(group_004_1.inputs[3], 'default_value'):
        group_004_1.inputs[3].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_004_1.inputs[3], 'display_shape'):
        group_004_1.inputs[3].display_shape = 'CIRCLE'
    if hasattr(group_004_1.inputs[3], 'enabled'):
        group_004_1.inputs[3].enabled = True
    if hasattr(group_004_1.inputs[3], 'hide'):
        group_004_1.inputs[3].hide = False
    if hasattr(group_004_1.inputs[3], 'hide_value'):
        group_004_1.inputs[3].hide_value = False
    if hasattr(group_004_1.inputs[3], 'name'):
        group_004_1.inputs[3].name = 'Bot'
    if hasattr(group_004_1.inputs[3], 'show_expanded'):
        group_004_1.inputs[3].show_expanded = False
    if hasattr(group_004_1.outputs[0], 'default_value'):
        group_004_1.outputs[0].default_value = (0.0, 0.0, 0.0, 0.0)
    if hasattr(group_004_1.outputs[0], 'display_shape'):
        group_004_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_004_1.outputs[0], 'enabled'):
        group_004_1.outputs[0].enabled = True
    if hasattr(group_004_1.outputs[0], 'hide'):
        group_004_1.outputs[0].hide = False
    if hasattr(group_004_1.outputs[0], 'hide_value'):
        group_004_1.outputs[0].hide_value = False
    if hasattr(group_004_1.outputs[0], 'name'):
        group_004_1.outputs[0].name = 'Color'
    if hasattr(group_004_1.outputs[0], 'show_expanded'):
        group_004_1.outputs[0].show_expanded = False

    group_input_017_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_017_1, 'color'):
        group_input_017_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_017_1, 'hide'):
        group_input_017_1.hide = False
    if hasattr(group_input_017_1, 'location'):
        group_input_017_1.location = (-599.0513305664062, 1271.4449462890625)
    if hasattr(group_input_017_1, 'mute'):
        group_input_017_1.mute = False
    if hasattr(group_input_017_1, 'name'):
        group_input_017_1.name = 'Group Input.017'
    if hasattr(group_input_017_1, 'use_custom_color'):
        group_input_017_1.use_custom_color = False
    if hasattr(group_input_017_1, 'width'):
        group_input_017_1.width = 400.0
    if hasattr(group_input_017_1.outputs[0], 'default_value'):
        group_input_017_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[0], 'display_shape'):
        group_input_017_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[0], 'enabled'):
        group_input_017_1.outputs[0].enabled = True
    if hasattr(group_input_017_1.outputs[0], 'hide'):
        group_input_017_1.outputs[0].hide = False
    if hasattr(group_input_017_1.outputs[0], 'hide_value'):
        group_input_017_1.outputs[0].hide_value = False
    if hasattr(group_input_017_1.outputs[0], 'name'):
        group_input_017_1.outputs[0].name = 'ASG'
    if hasattr(group_input_017_1.outputs[0], 'show_expanded'):
        group_input_017_1.outputs[0].show_expanded = False
    if hasattr(group_input_017_1.outputs[1], 'default_value'):
        group_input_017_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[1], 'display_shape'):
        group_input_017_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[1], 'enabled'):
        group_input_017_1.outputs[1].enabled = True
    if hasattr(group_input_017_1.outputs[1], 'hide'):
        group_input_017_1.outputs[1].hide = False
    if hasattr(group_input_017_1.outputs[1], 'hide_value'):
        group_input_017_1.outputs[1].hide_value = False
    if hasattr(group_input_017_1.outputs[1], 'name'):
        group_input_017_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_017_1.outputs[1], 'show_expanded'):
        group_input_017_1.outputs[1].show_expanded = False
    if hasattr(group_input_017_1.outputs[2], 'default_value'):
        group_input_017_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[2], 'display_shape'):
        group_input_017_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[2], 'enabled'):
        group_input_017_1.outputs[2].enabled = True
    if hasattr(group_input_017_1.outputs[2], 'hide'):
        group_input_017_1.outputs[2].hide = False
    if hasattr(group_input_017_1.outputs[2], 'hide_value'):
        group_input_017_1.outputs[2].hide_value = False
    if hasattr(group_input_017_1.outputs[2], 'name'):
        group_input_017_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_017_1.outputs[2], 'show_expanded'):
        group_input_017_1.outputs[2].show_expanded = False
    if hasattr(group_input_017_1.outputs[3], 'default_value'):
        group_input_017_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[3], 'display_shape'):
        group_input_017_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[3], 'enabled'):
        group_input_017_1.outputs[3].enabled = True
    if hasattr(group_input_017_1.outputs[3], 'hide'):
        group_input_017_1.outputs[3].hide = True
    if hasattr(group_input_017_1.outputs[3], 'hide_value'):
        group_input_017_1.outputs[3].hide_value = False
    if hasattr(group_input_017_1.outputs[3], 'name'):
        group_input_017_1.outputs[3].name = 'Normal'
    if hasattr(group_input_017_1.outputs[3], 'show_expanded'):
        group_input_017_1.outputs[3].show_expanded = False
    if hasattr(group_input_017_1.outputs[4], 'default_value'):
        group_input_017_1.outputs[4].default_value = 0.0
    if hasattr(group_input_017_1.outputs[4], 'display_shape'):
        group_input_017_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[4], 'enabled'):
        group_input_017_1.outputs[4].enabled = True
    if hasattr(group_input_017_1.outputs[4], 'hide'):
        group_input_017_1.outputs[4].hide = False
    if hasattr(group_input_017_1.outputs[4], 'hide_value'):
        group_input_017_1.outputs[4].hide_value = False
    if hasattr(group_input_017_1.outputs[4], 'name'):
        group_input_017_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_017_1.outputs[4], 'show_expanded'):
        group_input_017_1.outputs[4].show_expanded = False
    if hasattr(group_input_017_1.outputs[5], 'default_value'):
        group_input_017_1.outputs[5].default_value = 1.0
    if hasattr(group_input_017_1.outputs[5], 'display_shape'):
        group_input_017_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[5], 'enabled'):
        group_input_017_1.outputs[5].enabled = True
    if hasattr(group_input_017_1.outputs[5], 'hide'):
        group_input_017_1.outputs[5].hide = False
    if hasattr(group_input_017_1.outputs[5], 'hide_value'):
        group_input_017_1.outputs[5].hide_value = False
    if hasattr(group_input_017_1.outputs[5], 'name'):
        group_input_017_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_017_1.outputs[5], 'show_expanded'):
        group_input_017_1.outputs[5].show_expanded = False
    if hasattr(group_input_017_1.outputs[6], 'default_value'):
        group_input_017_1.outputs[6].default_value = 0.0
    if hasattr(group_input_017_1.outputs[6], 'display_shape'):
        group_input_017_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[6], 'enabled'):
        group_input_017_1.outputs[6].enabled = True
    if hasattr(group_input_017_1.outputs[6], 'hide'):
        group_input_017_1.outputs[6].hide = True
    if hasattr(group_input_017_1.outputs[6], 'hide_value'):
        group_input_017_1.outputs[6].hide_value = False
    if hasattr(group_input_017_1.outputs[6], 'name'):
        group_input_017_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_017_1.outputs[6], 'show_expanded'):
        group_input_017_1.outputs[6].show_expanded = False
    if hasattr(group_input_017_1.outputs[7], 'default_value'):
        group_input_017_1.outputs[7].default_value = 0.0
    if hasattr(group_input_017_1.outputs[7], 'display_shape'):
        group_input_017_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[7], 'enabled'):
        group_input_017_1.outputs[7].enabled = True
    if hasattr(group_input_017_1.outputs[7], 'hide'):
        group_input_017_1.outputs[7].hide = True
    if hasattr(group_input_017_1.outputs[7], 'hide_value'):
        group_input_017_1.outputs[7].hide_value = False
    if hasattr(group_input_017_1.outputs[7], 'name'):
        group_input_017_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_017_1.outputs[7], 'show_expanded'):
        group_input_017_1.outputs[7].show_expanded = False
    if hasattr(group_input_017_1.outputs[8], 'default_value'):
        group_input_017_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[8], 'display_shape'):
        group_input_017_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[8], 'enabled'):
        group_input_017_1.outputs[8].enabled = True
    if hasattr(group_input_017_1.outputs[8], 'hide'):
        group_input_017_1.outputs[8].hide = True
    if hasattr(group_input_017_1.outputs[8], 'hide_value'):
        group_input_017_1.outputs[8].hide_value = False
    if hasattr(group_input_017_1.outputs[8], 'name'):
        group_input_017_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_017_1.outputs[8], 'show_expanded'):
        group_input_017_1.outputs[8].show_expanded = False
    if hasattr(group_input_017_1.outputs[9], 'default_value'):
        group_input_017_1.outputs[9].default_value = 0.0
    if hasattr(group_input_017_1.outputs[9], 'display_shape'):
        group_input_017_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[9], 'enabled'):
        group_input_017_1.outputs[9].enabled = True
    if hasattr(group_input_017_1.outputs[9], 'hide'):
        group_input_017_1.outputs[9].hide = True
    if hasattr(group_input_017_1.outputs[9], 'hide_value'):
        group_input_017_1.outputs[9].hide_value = False
    if hasattr(group_input_017_1.outputs[9], 'name'):
        group_input_017_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_017_1.outputs[9], 'show_expanded'):
        group_input_017_1.outputs[9].show_expanded = False
    if hasattr(group_input_017_1.outputs[10], 'default_value'):
        group_input_017_1.outputs[10].default_value = 0.0
    if hasattr(group_input_017_1.outputs[10], 'display_shape'):
        group_input_017_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[10], 'enabled'):
        group_input_017_1.outputs[10].enabled = True
    if hasattr(group_input_017_1.outputs[10], 'hide'):
        group_input_017_1.outputs[10].hide = True
    if hasattr(group_input_017_1.outputs[10], 'hide_value'):
        group_input_017_1.outputs[10].hide_value = False
    if hasattr(group_input_017_1.outputs[10], 'name'):
        group_input_017_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_017_1.outputs[10], 'show_expanded'):
        group_input_017_1.outputs[10].show_expanded = False
    if hasattr(group_input_017_1.outputs[11], 'default_value'):
        group_input_017_1.outputs[11].default_value = 0.0
    if hasattr(group_input_017_1.outputs[11], 'display_shape'):
        group_input_017_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[11], 'enabled'):
        group_input_017_1.outputs[11].enabled = True
    if hasattr(group_input_017_1.outputs[11], 'hide'):
        group_input_017_1.outputs[11].hide = True
    if hasattr(group_input_017_1.outputs[11], 'hide_value'):
        group_input_017_1.outputs[11].hide_value = False
    if hasattr(group_input_017_1.outputs[11], 'name'):
        group_input_017_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_017_1.outputs[11], 'show_expanded'):
        group_input_017_1.outputs[11].show_expanded = False
    if hasattr(group_input_017_1.outputs[12], 'default_value'):
        group_input_017_1.outputs[12].default_value = 0.0
    if hasattr(group_input_017_1.outputs[12], 'display_shape'):
        group_input_017_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[12], 'enabled'):
        group_input_017_1.outputs[12].enabled = True
    if hasattr(group_input_017_1.outputs[12], 'hide'):
        group_input_017_1.outputs[12].hide = True
    if hasattr(group_input_017_1.outputs[12], 'hide_value'):
        group_input_017_1.outputs[12].hide_value = False
    if hasattr(group_input_017_1.outputs[12], 'name'):
        group_input_017_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_017_1.outputs[12], 'show_expanded'):
        group_input_017_1.outputs[12].show_expanded = False
    if hasattr(group_input_017_1.outputs[13], 'default_value'):
        group_input_017_1.outputs[13].default_value = 0.0
    if hasattr(group_input_017_1.outputs[13], 'display_shape'):
        group_input_017_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[13], 'enabled'):
        group_input_017_1.outputs[13].enabled = True
    if hasattr(group_input_017_1.outputs[13], 'hide'):
        group_input_017_1.outputs[13].hide = True
    if hasattr(group_input_017_1.outputs[13], 'hide_value'):
        group_input_017_1.outputs[13].hide_value = False
    if hasattr(group_input_017_1.outputs[13], 'name'):
        group_input_017_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_017_1.outputs[13], 'show_expanded'):
        group_input_017_1.outputs[13].show_expanded = False
    if hasattr(group_input_017_1.outputs[14], 'default_value'):
        group_input_017_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_017_1.outputs[14], 'display_shape'):
        group_input_017_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[14], 'enabled'):
        group_input_017_1.outputs[14].enabled = True
    if hasattr(group_input_017_1.outputs[14], 'hide'):
        group_input_017_1.outputs[14].hide = True
    if hasattr(group_input_017_1.outputs[14], 'hide_value'):
        group_input_017_1.outputs[14].hide_value = False
    if hasattr(group_input_017_1.outputs[14], 'name'):
        group_input_017_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_017_1.outputs[14], 'show_expanded'):
        group_input_017_1.outputs[14].show_expanded = False
    if hasattr(group_input_017_1.outputs[15], 'default_value'):
        group_input_017_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_017_1.outputs[15], 'display_shape'):
        group_input_017_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[15], 'enabled'):
        group_input_017_1.outputs[15].enabled = True
    if hasattr(group_input_017_1.outputs[15], 'hide'):
        group_input_017_1.outputs[15].hide = True
    if hasattr(group_input_017_1.outputs[15], 'hide_value'):
        group_input_017_1.outputs[15].hide_value = False
    if hasattr(group_input_017_1.outputs[15], 'name'):
        group_input_017_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_017_1.outputs[15], 'show_expanded'):
        group_input_017_1.outputs[15].show_expanded = False
    if hasattr(group_input_017_1.outputs[16], 'default_value'):
        group_input_017_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_017_1.outputs[16], 'display_shape'):
        group_input_017_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[16], 'enabled'):
        group_input_017_1.outputs[16].enabled = True
    if hasattr(group_input_017_1.outputs[16], 'hide'):
        group_input_017_1.outputs[16].hide = True
    if hasattr(group_input_017_1.outputs[16], 'hide_value'):
        group_input_017_1.outputs[16].hide_value = False
    if hasattr(group_input_017_1.outputs[16], 'name'):
        group_input_017_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_017_1.outputs[16], 'show_expanded'):
        group_input_017_1.outputs[16].show_expanded = False
    if hasattr(group_input_017_1.outputs[17], 'default_value'):
        group_input_017_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_017_1.outputs[17], 'display_shape'):
        group_input_017_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[17], 'enabled'):
        group_input_017_1.outputs[17].enabled = True
    if hasattr(group_input_017_1.outputs[17], 'hide'):
        group_input_017_1.outputs[17].hide = True
    if hasattr(group_input_017_1.outputs[17], 'hide_value'):
        group_input_017_1.outputs[17].hide_value = False
    if hasattr(group_input_017_1.outputs[17], 'name'):
        group_input_017_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_017_1.outputs[17], 'show_expanded'):
        group_input_017_1.outputs[17].show_expanded = False
    if hasattr(group_input_017_1.outputs[18], 'default_value'):
        group_input_017_1.outputs[18].default_value = 0.0
    if hasattr(group_input_017_1.outputs[18], 'display_shape'):
        group_input_017_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[18], 'enabled'):
        group_input_017_1.outputs[18].enabled = True
    if hasattr(group_input_017_1.outputs[18], 'hide'):
        group_input_017_1.outputs[18].hide = True
    if hasattr(group_input_017_1.outputs[18], 'hide_value'):
        group_input_017_1.outputs[18].hide_value = False
    if hasattr(group_input_017_1.outputs[18], 'name'):
        group_input_017_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_017_1.outputs[18], 'show_expanded'):
        group_input_017_1.outputs[18].show_expanded = False
    if hasattr(group_input_017_1.outputs[19], 'default_value'):
        group_input_017_1.outputs[19].default_value = 0.0
    if hasattr(group_input_017_1.outputs[19], 'display_shape'):
        group_input_017_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[19], 'enabled'):
        group_input_017_1.outputs[19].enabled = True
    if hasattr(group_input_017_1.outputs[19], 'hide'):
        group_input_017_1.outputs[19].hide = True
    if hasattr(group_input_017_1.outputs[19], 'hide_value'):
        group_input_017_1.outputs[19].hide_value = False
    if hasattr(group_input_017_1.outputs[19], 'name'):
        group_input_017_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_017_1.outputs[19], 'show_expanded'):
        group_input_017_1.outputs[19].show_expanded = False
    if hasattr(group_input_017_1.outputs[20], 'default_value'):
        group_input_017_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[20], 'display_shape'):
        group_input_017_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[20], 'enabled'):
        group_input_017_1.outputs[20].enabled = True
    if hasattr(group_input_017_1.outputs[20], 'hide'):
        group_input_017_1.outputs[20].hide = True
    if hasattr(group_input_017_1.outputs[20], 'hide_value'):
        group_input_017_1.outputs[20].hide_value = False
    if hasattr(group_input_017_1.outputs[20], 'name'):
        group_input_017_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_017_1.outputs[20], 'show_expanded'):
        group_input_017_1.outputs[20].show_expanded = False
    if hasattr(group_input_017_1.outputs[21], 'default_value'):
        group_input_017_1.outputs[21].default_value = 0.0
    if hasattr(group_input_017_1.outputs[21], 'display_shape'):
        group_input_017_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[21], 'enabled'):
        group_input_017_1.outputs[21].enabled = True
    if hasattr(group_input_017_1.outputs[21], 'hide'):
        group_input_017_1.outputs[21].hide = True
    if hasattr(group_input_017_1.outputs[21], 'hide_value'):
        group_input_017_1.outputs[21].hide_value = False
    if hasattr(group_input_017_1.outputs[21], 'name'):
        group_input_017_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_017_1.outputs[21], 'show_expanded'):
        group_input_017_1.outputs[21].show_expanded = False
    if hasattr(group_input_017_1.outputs[22], 'default_value'):
        group_input_017_1.outputs[22].default_value = 0.0
    if hasattr(group_input_017_1.outputs[22], 'display_shape'):
        group_input_017_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[22], 'enabled'):
        group_input_017_1.outputs[22].enabled = True
    if hasattr(group_input_017_1.outputs[22], 'hide'):
        group_input_017_1.outputs[22].hide = True
    if hasattr(group_input_017_1.outputs[22], 'hide_value'):
        group_input_017_1.outputs[22].hide_value = False
    if hasattr(group_input_017_1.outputs[22], 'name'):
        group_input_017_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_017_1.outputs[22], 'show_expanded'):
        group_input_017_1.outputs[22].show_expanded = False
    if hasattr(group_input_017_1.outputs[23], 'default_value'):
        group_input_017_1.outputs[23].default_value = 0.0
    if hasattr(group_input_017_1.outputs[23], 'display_shape'):
        group_input_017_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[23], 'enabled'):
        group_input_017_1.outputs[23].enabled = True
    if hasattr(group_input_017_1.outputs[23], 'hide'):
        group_input_017_1.outputs[23].hide = True
    if hasattr(group_input_017_1.outputs[23], 'hide_value'):
        group_input_017_1.outputs[23].hide_value = False
    if hasattr(group_input_017_1.outputs[23], 'name'):
        group_input_017_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_017_1.outputs[23], 'show_expanded'):
        group_input_017_1.outputs[23].show_expanded = False
    if hasattr(group_input_017_1.outputs[24], 'default_value'):
        group_input_017_1.outputs[24].default_value = 0.0
    if hasattr(group_input_017_1.outputs[24], 'display_shape'):
        group_input_017_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[24], 'enabled'):
        group_input_017_1.outputs[24].enabled = True
    if hasattr(group_input_017_1.outputs[24], 'hide'):
        group_input_017_1.outputs[24].hide = True
    if hasattr(group_input_017_1.outputs[24], 'hide_value'):
        group_input_017_1.outputs[24].hide_value = False
    if hasattr(group_input_017_1.outputs[24], 'name'):
        group_input_017_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_017_1.outputs[24], 'show_expanded'):
        group_input_017_1.outputs[24].show_expanded = False
    if hasattr(group_input_017_1.outputs[25], 'default_value'):
        group_input_017_1.outputs[25].default_value = 0.0
    if hasattr(group_input_017_1.outputs[25], 'display_shape'):
        group_input_017_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[25], 'enabled'):
        group_input_017_1.outputs[25].enabled = True
    if hasattr(group_input_017_1.outputs[25], 'hide'):
        group_input_017_1.outputs[25].hide = True
    if hasattr(group_input_017_1.outputs[25], 'hide_value'):
        group_input_017_1.outputs[25].hide_value = False
    if hasattr(group_input_017_1.outputs[25], 'name'):
        group_input_017_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_017_1.outputs[25], 'show_expanded'):
        group_input_017_1.outputs[25].show_expanded = False
    if hasattr(group_input_017_1.outputs[26], 'default_value'):
        group_input_017_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_017_1.outputs[26], 'display_shape'):
        group_input_017_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[26], 'enabled'):
        group_input_017_1.outputs[26].enabled = True
    if hasattr(group_input_017_1.outputs[26], 'hide'):
        group_input_017_1.outputs[26].hide = True
    if hasattr(group_input_017_1.outputs[26], 'hide_value'):
        group_input_017_1.outputs[26].hide_value = False
    if hasattr(group_input_017_1.outputs[26], 'name'):
        group_input_017_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_017_1.outputs[26], 'show_expanded'):
        group_input_017_1.outputs[26].show_expanded = False
    if hasattr(group_input_017_1.outputs[27], 'default_value'):
        group_input_017_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_017_1.outputs[27], 'display_shape'):
        group_input_017_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[27], 'enabled'):
        group_input_017_1.outputs[27].enabled = True
    if hasattr(group_input_017_1.outputs[27], 'hide'):
        group_input_017_1.outputs[27].hide = True
    if hasattr(group_input_017_1.outputs[27], 'hide_value'):
        group_input_017_1.outputs[27].hide_value = False
    if hasattr(group_input_017_1.outputs[27], 'name'):
        group_input_017_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_017_1.outputs[27], 'show_expanded'):
        group_input_017_1.outputs[27].show_expanded = False
    if hasattr(group_input_017_1.outputs[28], 'default_value'):
        group_input_017_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_017_1.outputs[28], 'display_shape'):
        group_input_017_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[28], 'enabled'):
        group_input_017_1.outputs[28].enabled = True
    if hasattr(group_input_017_1.outputs[28], 'hide'):
        group_input_017_1.outputs[28].hide = True
    if hasattr(group_input_017_1.outputs[28], 'hide_value'):
        group_input_017_1.outputs[28].hide_value = False
    if hasattr(group_input_017_1.outputs[28], 'name'):
        group_input_017_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_017_1.outputs[28], 'show_expanded'):
        group_input_017_1.outputs[28].show_expanded = False
    if hasattr(group_input_017_1.outputs[29], 'default_value'):
        group_input_017_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_017_1.outputs[29], 'display_shape'):
        group_input_017_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[29], 'enabled'):
        group_input_017_1.outputs[29].enabled = True
    if hasattr(group_input_017_1.outputs[29], 'hide'):
        group_input_017_1.outputs[29].hide = True
    if hasattr(group_input_017_1.outputs[29], 'hide_value'):
        group_input_017_1.outputs[29].hide_value = False
    if hasattr(group_input_017_1.outputs[29], 'name'):
        group_input_017_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_017_1.outputs[29], 'show_expanded'):
        group_input_017_1.outputs[29].show_expanded = False
    if hasattr(group_input_017_1.outputs[30], 'default_value'):
        group_input_017_1.outputs[30].default_value = 0.0
    if hasattr(group_input_017_1.outputs[30], 'display_shape'):
        group_input_017_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[30], 'enabled'):
        group_input_017_1.outputs[30].enabled = True
    if hasattr(group_input_017_1.outputs[30], 'hide'):
        group_input_017_1.outputs[30].hide = True
    if hasattr(group_input_017_1.outputs[30], 'hide_value'):
        group_input_017_1.outputs[30].hide_value = False
    if hasattr(group_input_017_1.outputs[30], 'name'):
        group_input_017_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_017_1.outputs[30], 'show_expanded'):
        group_input_017_1.outputs[30].show_expanded = False
    if hasattr(group_input_017_1.outputs[31], 'default_value'):
        group_input_017_1.outputs[31].default_value = 0.0
    if hasattr(group_input_017_1.outputs[31], 'display_shape'):
        group_input_017_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[31], 'enabled'):
        group_input_017_1.outputs[31].enabled = True
    if hasattr(group_input_017_1.outputs[31], 'hide'):
        group_input_017_1.outputs[31].hide = True
    if hasattr(group_input_017_1.outputs[31], 'hide_value'):
        group_input_017_1.outputs[31].hide_value = False
    if hasattr(group_input_017_1.outputs[31], 'name'):
        group_input_017_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_017_1.outputs[31], 'show_expanded'):
        group_input_017_1.outputs[31].show_expanded = False
    if hasattr(group_input_017_1.outputs[32], 'default_value'):
        group_input_017_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[32], 'display_shape'):
        group_input_017_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[32], 'enabled'):
        group_input_017_1.outputs[32].enabled = True
    if hasattr(group_input_017_1.outputs[32], 'hide'):
        group_input_017_1.outputs[32].hide = True
    if hasattr(group_input_017_1.outputs[32], 'hide_value'):
        group_input_017_1.outputs[32].hide_value = False
    if hasattr(group_input_017_1.outputs[32], 'name'):
        group_input_017_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_017_1.outputs[32], 'show_expanded'):
        group_input_017_1.outputs[32].show_expanded = False
    if hasattr(group_input_017_1.outputs[33], 'default_value'):
        group_input_017_1.outputs[33].default_value = 0.0
    if hasattr(group_input_017_1.outputs[33], 'display_shape'):
        group_input_017_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[33], 'enabled'):
        group_input_017_1.outputs[33].enabled = True
    if hasattr(group_input_017_1.outputs[33], 'hide'):
        group_input_017_1.outputs[33].hide = True
    if hasattr(group_input_017_1.outputs[33], 'hide_value'):
        group_input_017_1.outputs[33].hide_value = False
    if hasattr(group_input_017_1.outputs[33], 'name'):
        group_input_017_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_017_1.outputs[33], 'show_expanded'):
        group_input_017_1.outputs[33].show_expanded = False
    if hasattr(group_input_017_1.outputs[34], 'default_value'):
        group_input_017_1.outputs[34].default_value = 0.0
    if hasattr(group_input_017_1.outputs[34], 'display_shape'):
        group_input_017_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[34], 'enabled'):
        group_input_017_1.outputs[34].enabled = True
    if hasattr(group_input_017_1.outputs[34], 'hide'):
        group_input_017_1.outputs[34].hide = True
    if hasattr(group_input_017_1.outputs[34], 'hide_value'):
        group_input_017_1.outputs[34].hide_value = False
    if hasattr(group_input_017_1.outputs[34], 'name'):
        group_input_017_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_017_1.outputs[34], 'show_expanded'):
        group_input_017_1.outputs[34].show_expanded = False
    if hasattr(group_input_017_1.outputs[35], 'default_value'):
        group_input_017_1.outputs[35].default_value = 0.0
    if hasattr(group_input_017_1.outputs[35], 'display_shape'):
        group_input_017_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[35], 'enabled'):
        group_input_017_1.outputs[35].enabled = True
    if hasattr(group_input_017_1.outputs[35], 'hide'):
        group_input_017_1.outputs[35].hide = True
    if hasattr(group_input_017_1.outputs[35], 'hide_value'):
        group_input_017_1.outputs[35].hide_value = False
    if hasattr(group_input_017_1.outputs[35], 'name'):
        group_input_017_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_017_1.outputs[35], 'show_expanded'):
        group_input_017_1.outputs[35].show_expanded = False
    if hasattr(group_input_017_1.outputs[36], 'default_value'):
        group_input_017_1.outputs[36].default_value = 0.0
    if hasattr(group_input_017_1.outputs[36], 'display_shape'):
        group_input_017_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[36], 'enabled'):
        group_input_017_1.outputs[36].enabled = True
    if hasattr(group_input_017_1.outputs[36], 'hide'):
        group_input_017_1.outputs[36].hide = True
    if hasattr(group_input_017_1.outputs[36], 'hide_value'):
        group_input_017_1.outputs[36].hide_value = False
    if hasattr(group_input_017_1.outputs[36], 'name'):
        group_input_017_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_017_1.outputs[36], 'show_expanded'):
        group_input_017_1.outputs[36].show_expanded = False
    if hasattr(group_input_017_1.outputs[37], 'default_value'):
        group_input_017_1.outputs[37].default_value = 0.0
    if hasattr(group_input_017_1.outputs[37], 'display_shape'):
        group_input_017_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[37], 'enabled'):
        group_input_017_1.outputs[37].enabled = True
    if hasattr(group_input_017_1.outputs[37], 'hide'):
        group_input_017_1.outputs[37].hide = True
    if hasattr(group_input_017_1.outputs[37], 'hide_value'):
        group_input_017_1.outputs[37].hide_value = False
    if hasattr(group_input_017_1.outputs[37], 'name'):
        group_input_017_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_017_1.outputs[37], 'show_expanded'):
        group_input_017_1.outputs[37].show_expanded = False
    if hasattr(group_input_017_1.outputs[38], 'default_value'):
        group_input_017_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_017_1.outputs[38], 'display_shape'):
        group_input_017_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[38], 'enabled'):
        group_input_017_1.outputs[38].enabled = True
    if hasattr(group_input_017_1.outputs[38], 'hide'):
        group_input_017_1.outputs[38].hide = True
    if hasattr(group_input_017_1.outputs[38], 'hide_value'):
        group_input_017_1.outputs[38].hide_value = False
    if hasattr(group_input_017_1.outputs[38], 'name'):
        group_input_017_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_017_1.outputs[38], 'show_expanded'):
        group_input_017_1.outputs[38].show_expanded = False
    if hasattr(group_input_017_1.outputs[39], 'default_value'):
        group_input_017_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_017_1.outputs[39], 'display_shape'):
        group_input_017_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[39], 'enabled'):
        group_input_017_1.outputs[39].enabled = True
    if hasattr(group_input_017_1.outputs[39], 'hide'):
        group_input_017_1.outputs[39].hide = True
    if hasattr(group_input_017_1.outputs[39], 'hide_value'):
        group_input_017_1.outputs[39].hide_value = False
    if hasattr(group_input_017_1.outputs[39], 'name'):
        group_input_017_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_017_1.outputs[39], 'show_expanded'):
        group_input_017_1.outputs[39].show_expanded = False
    if hasattr(group_input_017_1.outputs[40], 'default_value'):
        group_input_017_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_017_1.outputs[40], 'display_shape'):
        group_input_017_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[40], 'enabled'):
        group_input_017_1.outputs[40].enabled = True
    if hasattr(group_input_017_1.outputs[40], 'hide'):
        group_input_017_1.outputs[40].hide = True
    if hasattr(group_input_017_1.outputs[40], 'hide_value'):
        group_input_017_1.outputs[40].hide_value = False
    if hasattr(group_input_017_1.outputs[40], 'name'):
        group_input_017_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_017_1.outputs[40], 'show_expanded'):
        group_input_017_1.outputs[40].show_expanded = False
    if hasattr(group_input_017_1.outputs[41], 'default_value'):
        group_input_017_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_017_1.outputs[41], 'display_shape'):
        group_input_017_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[41], 'enabled'):
        group_input_017_1.outputs[41].enabled = True
    if hasattr(group_input_017_1.outputs[41], 'hide'):
        group_input_017_1.outputs[41].hide = True
    if hasattr(group_input_017_1.outputs[41], 'hide_value'):
        group_input_017_1.outputs[41].hide_value = False
    if hasattr(group_input_017_1.outputs[41], 'name'):
        group_input_017_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_017_1.outputs[41], 'show_expanded'):
        group_input_017_1.outputs[41].show_expanded = False
    if hasattr(group_input_017_1.outputs[42], 'default_value'):
        group_input_017_1.outputs[42].default_value = 0.0
    if hasattr(group_input_017_1.outputs[42], 'display_shape'):
        group_input_017_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[42], 'enabled'):
        group_input_017_1.outputs[42].enabled = True
    if hasattr(group_input_017_1.outputs[42], 'hide'):
        group_input_017_1.outputs[42].hide = True
    if hasattr(group_input_017_1.outputs[42], 'hide_value'):
        group_input_017_1.outputs[42].hide_value = False
    if hasattr(group_input_017_1.outputs[42], 'name'):
        group_input_017_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_017_1.outputs[42], 'show_expanded'):
        group_input_017_1.outputs[42].show_expanded = False
    if hasattr(group_input_017_1.outputs[43], 'default_value'):
        group_input_017_1.outputs[43].default_value = 0.0
    if hasattr(group_input_017_1.outputs[43], 'display_shape'):
        group_input_017_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[43], 'enabled'):
        group_input_017_1.outputs[43].enabled = True
    if hasattr(group_input_017_1.outputs[43], 'hide'):
        group_input_017_1.outputs[43].hide = True
    if hasattr(group_input_017_1.outputs[43], 'hide_value'):
        group_input_017_1.outputs[43].hide_value = False
    if hasattr(group_input_017_1.outputs[43], 'name'):
        group_input_017_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_017_1.outputs[43], 'show_expanded'):
        group_input_017_1.outputs[43].show_expanded = False
    if hasattr(group_input_017_1.outputs[44], 'default_value'):
        group_input_017_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[44], 'display_shape'):
        group_input_017_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[44], 'enabled'):
        group_input_017_1.outputs[44].enabled = True
    if hasattr(group_input_017_1.outputs[44], 'hide'):
        group_input_017_1.outputs[44].hide = True
    if hasattr(group_input_017_1.outputs[44], 'hide_value'):
        group_input_017_1.outputs[44].hide_value = False
    if hasattr(group_input_017_1.outputs[44], 'name'):
        group_input_017_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_017_1.outputs[44], 'show_expanded'):
        group_input_017_1.outputs[44].show_expanded = False
    if hasattr(group_input_017_1.outputs[45], 'default_value'):
        group_input_017_1.outputs[45].default_value = 0.0
    if hasattr(group_input_017_1.outputs[45], 'display_shape'):
        group_input_017_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[45], 'enabled'):
        group_input_017_1.outputs[45].enabled = True
    if hasattr(group_input_017_1.outputs[45], 'hide'):
        group_input_017_1.outputs[45].hide = True
    if hasattr(group_input_017_1.outputs[45], 'hide_value'):
        group_input_017_1.outputs[45].hide_value = False
    if hasattr(group_input_017_1.outputs[45], 'name'):
        group_input_017_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_017_1.outputs[45], 'show_expanded'):
        group_input_017_1.outputs[45].show_expanded = False
    if hasattr(group_input_017_1.outputs[46], 'default_value'):
        group_input_017_1.outputs[46].default_value = 0.0
    if hasattr(group_input_017_1.outputs[46], 'display_shape'):
        group_input_017_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[46], 'enabled'):
        group_input_017_1.outputs[46].enabled = True
    if hasattr(group_input_017_1.outputs[46], 'hide'):
        group_input_017_1.outputs[46].hide = True
    if hasattr(group_input_017_1.outputs[46], 'hide_value'):
        group_input_017_1.outputs[46].hide_value = False
    if hasattr(group_input_017_1.outputs[46], 'name'):
        group_input_017_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_017_1.outputs[46], 'show_expanded'):
        group_input_017_1.outputs[46].show_expanded = False
    if hasattr(group_input_017_1.outputs[47], 'default_value'):
        group_input_017_1.outputs[47].default_value = 0.0
    if hasattr(group_input_017_1.outputs[47], 'display_shape'):
        group_input_017_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[47], 'enabled'):
        group_input_017_1.outputs[47].enabled = True
    if hasattr(group_input_017_1.outputs[47], 'hide'):
        group_input_017_1.outputs[47].hide = True
    if hasattr(group_input_017_1.outputs[47], 'hide_value'):
        group_input_017_1.outputs[47].hide_value = False
    if hasattr(group_input_017_1.outputs[47], 'name'):
        group_input_017_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_017_1.outputs[47], 'show_expanded'):
        group_input_017_1.outputs[47].show_expanded = False
    if hasattr(group_input_017_1.outputs[48], 'default_value'):
        group_input_017_1.outputs[48].default_value = 0.0
    if hasattr(group_input_017_1.outputs[48], 'display_shape'):
        group_input_017_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[48], 'enabled'):
        group_input_017_1.outputs[48].enabled = True
    if hasattr(group_input_017_1.outputs[48], 'hide'):
        group_input_017_1.outputs[48].hide = True
    if hasattr(group_input_017_1.outputs[48], 'hide_value'):
        group_input_017_1.outputs[48].hide_value = False
    if hasattr(group_input_017_1.outputs[48], 'name'):
        group_input_017_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_017_1.outputs[48], 'show_expanded'):
        group_input_017_1.outputs[48].show_expanded = False
    if hasattr(group_input_017_1.outputs[49], 'default_value'):
        group_input_017_1.outputs[49].default_value = 0.0
    if hasattr(group_input_017_1.outputs[49], 'display_shape'):
        group_input_017_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[49], 'enabled'):
        group_input_017_1.outputs[49].enabled = True
    if hasattr(group_input_017_1.outputs[49], 'hide'):
        group_input_017_1.outputs[49].hide = True
    if hasattr(group_input_017_1.outputs[49], 'hide_value'):
        group_input_017_1.outputs[49].hide_value = False
    if hasattr(group_input_017_1.outputs[49], 'name'):
        group_input_017_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_017_1.outputs[49], 'show_expanded'):
        group_input_017_1.outputs[49].show_expanded = False
    if hasattr(group_input_017_1.outputs[50], 'default_value'):
        group_input_017_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_017_1.outputs[50], 'display_shape'):
        group_input_017_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[50], 'enabled'):
        group_input_017_1.outputs[50].enabled = True
    if hasattr(group_input_017_1.outputs[50], 'hide'):
        group_input_017_1.outputs[50].hide = True
    if hasattr(group_input_017_1.outputs[50], 'hide_value'):
        group_input_017_1.outputs[50].hide_value = False
    if hasattr(group_input_017_1.outputs[50], 'name'):
        group_input_017_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_017_1.outputs[50], 'show_expanded'):
        group_input_017_1.outputs[50].show_expanded = False
    if hasattr(group_input_017_1.outputs[51], 'default_value'):
        group_input_017_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_017_1.outputs[51], 'display_shape'):
        group_input_017_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[51], 'enabled'):
        group_input_017_1.outputs[51].enabled = True
    if hasattr(group_input_017_1.outputs[51], 'hide'):
        group_input_017_1.outputs[51].hide = True
    if hasattr(group_input_017_1.outputs[51], 'hide_value'):
        group_input_017_1.outputs[51].hide_value = False
    if hasattr(group_input_017_1.outputs[51], 'name'):
        group_input_017_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_017_1.outputs[51], 'show_expanded'):
        group_input_017_1.outputs[51].show_expanded = False
    if hasattr(group_input_017_1.outputs[52], 'default_value'):
        group_input_017_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_017_1.outputs[52], 'display_shape'):
        group_input_017_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[52], 'enabled'):
        group_input_017_1.outputs[52].enabled = True
    if hasattr(group_input_017_1.outputs[52], 'hide'):
        group_input_017_1.outputs[52].hide = True
    if hasattr(group_input_017_1.outputs[52], 'hide_value'):
        group_input_017_1.outputs[52].hide_value = False
    if hasattr(group_input_017_1.outputs[52], 'name'):
        group_input_017_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_017_1.outputs[52], 'show_expanded'):
        group_input_017_1.outputs[52].show_expanded = False
    if hasattr(group_input_017_1.outputs[53], 'default_value'):
        group_input_017_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_017_1.outputs[53], 'display_shape'):
        group_input_017_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[53], 'enabled'):
        group_input_017_1.outputs[53].enabled = True
    if hasattr(group_input_017_1.outputs[53], 'hide'):
        group_input_017_1.outputs[53].hide = True
    if hasattr(group_input_017_1.outputs[53], 'hide_value'):
        group_input_017_1.outputs[53].hide_value = False
    if hasattr(group_input_017_1.outputs[53], 'name'):
        group_input_017_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_017_1.outputs[53], 'show_expanded'):
        group_input_017_1.outputs[53].show_expanded = False
    if hasattr(group_input_017_1.outputs[54], 'default_value'):
        group_input_017_1.outputs[54].default_value = 0.0
    if hasattr(group_input_017_1.outputs[54], 'display_shape'):
        group_input_017_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[54], 'enabled'):
        group_input_017_1.outputs[54].enabled = True
    if hasattr(group_input_017_1.outputs[54], 'hide'):
        group_input_017_1.outputs[54].hide = True
    if hasattr(group_input_017_1.outputs[54], 'hide_value'):
        group_input_017_1.outputs[54].hide_value = False
    if hasattr(group_input_017_1.outputs[54], 'name'):
        group_input_017_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_017_1.outputs[54], 'show_expanded'):
        group_input_017_1.outputs[54].show_expanded = False
    if hasattr(group_input_017_1.outputs[55], 'default_value'):
        group_input_017_1.outputs[55].default_value = 0.0
    if hasattr(group_input_017_1.outputs[55], 'display_shape'):
        group_input_017_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[55], 'enabled'):
        group_input_017_1.outputs[55].enabled = True
    if hasattr(group_input_017_1.outputs[55], 'hide'):
        group_input_017_1.outputs[55].hide = True
    if hasattr(group_input_017_1.outputs[55], 'hide_value'):
        group_input_017_1.outputs[55].hide_value = False
    if hasattr(group_input_017_1.outputs[55], 'name'):
        group_input_017_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_017_1.outputs[55], 'show_expanded'):
        group_input_017_1.outputs[55].show_expanded = False
    if hasattr(group_input_017_1.outputs[56], 'default_value'):
        group_input_017_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[56], 'display_shape'):
        group_input_017_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[56], 'enabled'):
        group_input_017_1.outputs[56].enabled = True
    if hasattr(group_input_017_1.outputs[56], 'hide'):
        group_input_017_1.outputs[56].hide = True
    if hasattr(group_input_017_1.outputs[56], 'hide_value'):
        group_input_017_1.outputs[56].hide_value = False
    if hasattr(group_input_017_1.outputs[56], 'name'):
        group_input_017_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_017_1.outputs[56], 'show_expanded'):
        group_input_017_1.outputs[56].show_expanded = False
    if hasattr(group_input_017_1.outputs[57], 'default_value'):
        group_input_017_1.outputs[57].default_value = 0.0
    if hasattr(group_input_017_1.outputs[57], 'display_shape'):
        group_input_017_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[57], 'enabled'):
        group_input_017_1.outputs[57].enabled = True
    if hasattr(group_input_017_1.outputs[57], 'hide'):
        group_input_017_1.outputs[57].hide = True
    if hasattr(group_input_017_1.outputs[57], 'hide_value'):
        group_input_017_1.outputs[57].hide_value = False
    if hasattr(group_input_017_1.outputs[57], 'name'):
        group_input_017_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_017_1.outputs[57], 'show_expanded'):
        group_input_017_1.outputs[57].show_expanded = False
    if hasattr(group_input_017_1.outputs[58], 'default_value'):
        group_input_017_1.outputs[58].default_value = 0.0
    if hasattr(group_input_017_1.outputs[58], 'display_shape'):
        group_input_017_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[58], 'enabled'):
        group_input_017_1.outputs[58].enabled = True
    if hasattr(group_input_017_1.outputs[58], 'hide'):
        group_input_017_1.outputs[58].hide = True
    if hasattr(group_input_017_1.outputs[58], 'hide_value'):
        group_input_017_1.outputs[58].hide_value = False
    if hasattr(group_input_017_1.outputs[58], 'name'):
        group_input_017_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_017_1.outputs[58], 'show_expanded'):
        group_input_017_1.outputs[58].show_expanded = False
    if hasattr(group_input_017_1.outputs[59], 'default_value'):
        group_input_017_1.outputs[59].default_value = 0.0
    if hasattr(group_input_017_1.outputs[59], 'display_shape'):
        group_input_017_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[59], 'enabled'):
        group_input_017_1.outputs[59].enabled = True
    if hasattr(group_input_017_1.outputs[59], 'hide'):
        group_input_017_1.outputs[59].hide = True
    if hasattr(group_input_017_1.outputs[59], 'hide_value'):
        group_input_017_1.outputs[59].hide_value = False
    if hasattr(group_input_017_1.outputs[59], 'name'):
        group_input_017_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_017_1.outputs[59], 'show_expanded'):
        group_input_017_1.outputs[59].show_expanded = False
    if hasattr(group_input_017_1.outputs[60], 'default_value'):
        group_input_017_1.outputs[60].default_value = 0.0
    if hasattr(group_input_017_1.outputs[60], 'display_shape'):
        group_input_017_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[60], 'enabled'):
        group_input_017_1.outputs[60].enabled = True
    if hasattr(group_input_017_1.outputs[60], 'hide'):
        group_input_017_1.outputs[60].hide = True
    if hasattr(group_input_017_1.outputs[60], 'hide_value'):
        group_input_017_1.outputs[60].hide_value = False
    if hasattr(group_input_017_1.outputs[60], 'name'):
        group_input_017_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_017_1.outputs[60], 'show_expanded'):
        group_input_017_1.outputs[60].show_expanded = False
    if hasattr(group_input_017_1.outputs[61], 'default_value'):
        group_input_017_1.outputs[61].default_value = 0.0
    if hasattr(group_input_017_1.outputs[61], 'display_shape'):
        group_input_017_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[61], 'enabled'):
        group_input_017_1.outputs[61].enabled = True
    if hasattr(group_input_017_1.outputs[61], 'hide'):
        group_input_017_1.outputs[61].hide = True
    if hasattr(group_input_017_1.outputs[61], 'hide_value'):
        group_input_017_1.outputs[61].hide_value = False
    if hasattr(group_input_017_1.outputs[61], 'name'):
        group_input_017_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_017_1.outputs[61], 'show_expanded'):
        group_input_017_1.outputs[61].show_expanded = False
    if hasattr(group_input_017_1.outputs[62], 'default_value'):
        group_input_017_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_017_1.outputs[62], 'display_shape'):
        group_input_017_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[62], 'enabled'):
        group_input_017_1.outputs[62].enabled = True
    if hasattr(group_input_017_1.outputs[62], 'hide'):
        group_input_017_1.outputs[62].hide = True
    if hasattr(group_input_017_1.outputs[62], 'hide_value'):
        group_input_017_1.outputs[62].hide_value = False
    if hasattr(group_input_017_1.outputs[62], 'name'):
        group_input_017_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_017_1.outputs[62], 'show_expanded'):
        group_input_017_1.outputs[62].show_expanded = False
    if hasattr(group_input_017_1.outputs[63], 'default_value'):
        group_input_017_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_017_1.outputs[63], 'display_shape'):
        group_input_017_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[63], 'enabled'):
        group_input_017_1.outputs[63].enabled = True
    if hasattr(group_input_017_1.outputs[63], 'hide'):
        group_input_017_1.outputs[63].hide = True
    if hasattr(group_input_017_1.outputs[63], 'hide_value'):
        group_input_017_1.outputs[63].hide_value = False
    if hasattr(group_input_017_1.outputs[63], 'name'):
        group_input_017_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_017_1.outputs[63], 'show_expanded'):
        group_input_017_1.outputs[63].show_expanded = False
    if hasattr(group_input_017_1.outputs[64], 'default_value'):
        group_input_017_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_017_1.outputs[64], 'display_shape'):
        group_input_017_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[64], 'enabled'):
        group_input_017_1.outputs[64].enabled = True
    if hasattr(group_input_017_1.outputs[64], 'hide'):
        group_input_017_1.outputs[64].hide = True
    if hasattr(group_input_017_1.outputs[64], 'hide_value'):
        group_input_017_1.outputs[64].hide_value = False
    if hasattr(group_input_017_1.outputs[64], 'name'):
        group_input_017_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_017_1.outputs[64], 'show_expanded'):
        group_input_017_1.outputs[64].show_expanded = False
    if hasattr(group_input_017_1.outputs[65], 'default_value'):
        group_input_017_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_017_1.outputs[65], 'display_shape'):
        group_input_017_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[65], 'enabled'):
        group_input_017_1.outputs[65].enabled = True
    if hasattr(group_input_017_1.outputs[65], 'hide'):
        group_input_017_1.outputs[65].hide = True
    if hasattr(group_input_017_1.outputs[65], 'hide_value'):
        group_input_017_1.outputs[65].hide_value = False
    if hasattr(group_input_017_1.outputs[65], 'name'):
        group_input_017_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_017_1.outputs[65], 'show_expanded'):
        group_input_017_1.outputs[65].show_expanded = False
    if hasattr(group_input_017_1.outputs[66], 'default_value'):
        group_input_017_1.outputs[66].default_value = 0.0
    if hasattr(group_input_017_1.outputs[66], 'display_shape'):
        group_input_017_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[66], 'enabled'):
        group_input_017_1.outputs[66].enabled = True
    if hasattr(group_input_017_1.outputs[66], 'hide'):
        group_input_017_1.outputs[66].hide = True
    if hasattr(group_input_017_1.outputs[66], 'hide_value'):
        group_input_017_1.outputs[66].hide_value = False
    if hasattr(group_input_017_1.outputs[66], 'name'):
        group_input_017_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_017_1.outputs[66], 'show_expanded'):
        group_input_017_1.outputs[66].show_expanded = False
    if hasattr(group_input_017_1.outputs[67], 'default_value'):
        group_input_017_1.outputs[67].default_value = 0.0
    if hasattr(group_input_017_1.outputs[67], 'display_shape'):
        group_input_017_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[67], 'enabled'):
        group_input_017_1.outputs[67].enabled = True
    if hasattr(group_input_017_1.outputs[67], 'hide'):
        group_input_017_1.outputs[67].hide = True
    if hasattr(group_input_017_1.outputs[67], 'hide_value'):
        group_input_017_1.outputs[67].hide_value = False
    if hasattr(group_input_017_1.outputs[67], 'name'):
        group_input_017_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_017_1.outputs[67], 'show_expanded'):
        group_input_017_1.outputs[67].show_expanded = False
    if hasattr(group_input_017_1.outputs[68], 'default_value'):
        group_input_017_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[68], 'display_shape'):
        group_input_017_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[68], 'enabled'):
        group_input_017_1.outputs[68].enabled = True
    if hasattr(group_input_017_1.outputs[68], 'hide'):
        group_input_017_1.outputs[68].hide = True
    if hasattr(group_input_017_1.outputs[68], 'hide_value'):
        group_input_017_1.outputs[68].hide_value = False
    if hasattr(group_input_017_1.outputs[68], 'name'):
        group_input_017_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_017_1.outputs[68], 'show_expanded'):
        group_input_017_1.outputs[68].show_expanded = False
    if hasattr(group_input_017_1.outputs[69], 'default_value'):
        group_input_017_1.outputs[69].default_value = 0.0
    if hasattr(group_input_017_1.outputs[69], 'display_shape'):
        group_input_017_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[69], 'enabled'):
        group_input_017_1.outputs[69].enabled = True
    if hasattr(group_input_017_1.outputs[69], 'hide'):
        group_input_017_1.outputs[69].hide = True
    if hasattr(group_input_017_1.outputs[69], 'hide_value'):
        group_input_017_1.outputs[69].hide_value = False
    if hasattr(group_input_017_1.outputs[69], 'name'):
        group_input_017_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_017_1.outputs[69], 'show_expanded'):
        group_input_017_1.outputs[69].show_expanded = False
    if hasattr(group_input_017_1.outputs[70], 'default_value'):
        group_input_017_1.outputs[70].default_value = 0.0
    if hasattr(group_input_017_1.outputs[70], 'display_shape'):
        group_input_017_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[70], 'enabled'):
        group_input_017_1.outputs[70].enabled = True
    if hasattr(group_input_017_1.outputs[70], 'hide'):
        group_input_017_1.outputs[70].hide = True
    if hasattr(group_input_017_1.outputs[70], 'hide_value'):
        group_input_017_1.outputs[70].hide_value = False
    if hasattr(group_input_017_1.outputs[70], 'name'):
        group_input_017_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_017_1.outputs[70], 'show_expanded'):
        group_input_017_1.outputs[70].show_expanded = False
    if hasattr(group_input_017_1.outputs[71], 'default_value'):
        group_input_017_1.outputs[71].default_value = 0.0
    if hasattr(group_input_017_1.outputs[71], 'display_shape'):
        group_input_017_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[71], 'enabled'):
        group_input_017_1.outputs[71].enabled = True
    if hasattr(group_input_017_1.outputs[71], 'hide'):
        group_input_017_1.outputs[71].hide = True
    if hasattr(group_input_017_1.outputs[71], 'hide_value'):
        group_input_017_1.outputs[71].hide_value = False
    if hasattr(group_input_017_1.outputs[71], 'name'):
        group_input_017_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_017_1.outputs[71], 'show_expanded'):
        group_input_017_1.outputs[71].show_expanded = False
    if hasattr(group_input_017_1.outputs[72], 'default_value'):
        group_input_017_1.outputs[72].default_value = 0.0
    if hasattr(group_input_017_1.outputs[72], 'display_shape'):
        group_input_017_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[72], 'enabled'):
        group_input_017_1.outputs[72].enabled = True
    if hasattr(group_input_017_1.outputs[72], 'hide'):
        group_input_017_1.outputs[72].hide = True
    if hasattr(group_input_017_1.outputs[72], 'hide_value'):
        group_input_017_1.outputs[72].hide_value = False
    if hasattr(group_input_017_1.outputs[72], 'name'):
        group_input_017_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_017_1.outputs[72], 'show_expanded'):
        group_input_017_1.outputs[72].show_expanded = False
    if hasattr(group_input_017_1.outputs[73], 'default_value'):
        group_input_017_1.outputs[73].default_value = 0.0
    if hasattr(group_input_017_1.outputs[73], 'display_shape'):
        group_input_017_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[73], 'enabled'):
        group_input_017_1.outputs[73].enabled = True
    if hasattr(group_input_017_1.outputs[73], 'hide'):
        group_input_017_1.outputs[73].hide = True
    if hasattr(group_input_017_1.outputs[73], 'hide_value'):
        group_input_017_1.outputs[73].hide_value = False
    if hasattr(group_input_017_1.outputs[73], 'name'):
        group_input_017_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_017_1.outputs[73], 'show_expanded'):
        group_input_017_1.outputs[73].show_expanded = False
    if hasattr(group_input_017_1.outputs[74], 'default_value'):
        group_input_017_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_017_1.outputs[74], 'display_shape'):
        group_input_017_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[74], 'enabled'):
        group_input_017_1.outputs[74].enabled = True
    if hasattr(group_input_017_1.outputs[74], 'hide'):
        group_input_017_1.outputs[74].hide = True
    if hasattr(group_input_017_1.outputs[74], 'hide_value'):
        group_input_017_1.outputs[74].hide_value = False
    if hasattr(group_input_017_1.outputs[74], 'name'):
        group_input_017_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_017_1.outputs[74], 'show_expanded'):
        group_input_017_1.outputs[74].show_expanded = False
    if hasattr(group_input_017_1.outputs[75], 'default_value'):
        group_input_017_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_017_1.outputs[75], 'display_shape'):
        group_input_017_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[75], 'enabled'):
        group_input_017_1.outputs[75].enabled = True
    if hasattr(group_input_017_1.outputs[75], 'hide'):
        group_input_017_1.outputs[75].hide = True
    if hasattr(group_input_017_1.outputs[75], 'hide_value'):
        group_input_017_1.outputs[75].hide_value = False
    if hasattr(group_input_017_1.outputs[75], 'name'):
        group_input_017_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_017_1.outputs[75], 'show_expanded'):
        group_input_017_1.outputs[75].show_expanded = False
    if hasattr(group_input_017_1.outputs[76], 'default_value'):
        group_input_017_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_017_1.outputs[76], 'display_shape'):
        group_input_017_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[76], 'enabled'):
        group_input_017_1.outputs[76].enabled = True
    if hasattr(group_input_017_1.outputs[76], 'hide'):
        group_input_017_1.outputs[76].hide = True
    if hasattr(group_input_017_1.outputs[76], 'hide_value'):
        group_input_017_1.outputs[76].hide_value = False
    if hasattr(group_input_017_1.outputs[76], 'name'):
        group_input_017_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_017_1.outputs[76], 'show_expanded'):
        group_input_017_1.outputs[76].show_expanded = False
    if hasattr(group_input_017_1.outputs[77], 'default_value'):
        group_input_017_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_017_1.outputs[77], 'display_shape'):
        group_input_017_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[77], 'enabled'):
        group_input_017_1.outputs[77].enabled = True
    if hasattr(group_input_017_1.outputs[77], 'hide'):
        group_input_017_1.outputs[77].hide = True
    if hasattr(group_input_017_1.outputs[77], 'hide_value'):
        group_input_017_1.outputs[77].hide_value = False
    if hasattr(group_input_017_1.outputs[77], 'name'):
        group_input_017_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_017_1.outputs[77], 'show_expanded'):
        group_input_017_1.outputs[77].show_expanded = False
    if hasattr(group_input_017_1.outputs[78], 'default_value'):
        group_input_017_1.outputs[78].default_value = 0.0
    if hasattr(group_input_017_1.outputs[78], 'display_shape'):
        group_input_017_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[78], 'enabled'):
        group_input_017_1.outputs[78].enabled = True
    if hasattr(group_input_017_1.outputs[78], 'hide'):
        group_input_017_1.outputs[78].hide = True
    if hasattr(group_input_017_1.outputs[78], 'hide_value'):
        group_input_017_1.outputs[78].hide_value = False
    if hasattr(group_input_017_1.outputs[78], 'name'):
        group_input_017_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_017_1.outputs[78], 'show_expanded'):
        group_input_017_1.outputs[78].show_expanded = False
    if hasattr(group_input_017_1.outputs[79], 'default_value'):
        group_input_017_1.outputs[79].default_value = 0.0
    if hasattr(group_input_017_1.outputs[79], 'display_shape'):
        group_input_017_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[79], 'enabled'):
        group_input_017_1.outputs[79].enabled = True
    if hasattr(group_input_017_1.outputs[79], 'hide'):
        group_input_017_1.outputs[79].hide = True
    if hasattr(group_input_017_1.outputs[79], 'hide_value'):
        group_input_017_1.outputs[79].hide_value = False
    if hasattr(group_input_017_1.outputs[79], 'name'):
        group_input_017_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_017_1.outputs[79], 'show_expanded'):
        group_input_017_1.outputs[79].show_expanded = False
    if hasattr(group_input_017_1.outputs[80], 'default_value'):
        group_input_017_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[80], 'display_shape'):
        group_input_017_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[80], 'enabled'):
        group_input_017_1.outputs[80].enabled = True
    if hasattr(group_input_017_1.outputs[80], 'hide'):
        group_input_017_1.outputs[80].hide = True
    if hasattr(group_input_017_1.outputs[80], 'hide_value'):
        group_input_017_1.outputs[80].hide_value = False
    if hasattr(group_input_017_1.outputs[80], 'name'):
        group_input_017_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_017_1.outputs[80], 'show_expanded'):
        group_input_017_1.outputs[80].show_expanded = False
    if hasattr(group_input_017_1.outputs[81], 'default_value'):
        group_input_017_1.outputs[81].default_value = 0.0
    if hasattr(group_input_017_1.outputs[81], 'display_shape'):
        group_input_017_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[81], 'enabled'):
        group_input_017_1.outputs[81].enabled = True
    if hasattr(group_input_017_1.outputs[81], 'hide'):
        group_input_017_1.outputs[81].hide = True
    if hasattr(group_input_017_1.outputs[81], 'hide_value'):
        group_input_017_1.outputs[81].hide_value = False
    if hasattr(group_input_017_1.outputs[81], 'name'):
        group_input_017_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_017_1.outputs[81], 'show_expanded'):
        group_input_017_1.outputs[81].show_expanded = False
    if hasattr(group_input_017_1.outputs[82], 'default_value'):
        group_input_017_1.outputs[82].default_value = 0.0
    if hasattr(group_input_017_1.outputs[82], 'display_shape'):
        group_input_017_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[82], 'enabled'):
        group_input_017_1.outputs[82].enabled = True
    if hasattr(group_input_017_1.outputs[82], 'hide'):
        group_input_017_1.outputs[82].hide = True
    if hasattr(group_input_017_1.outputs[82], 'hide_value'):
        group_input_017_1.outputs[82].hide_value = False
    if hasattr(group_input_017_1.outputs[82], 'name'):
        group_input_017_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_017_1.outputs[82], 'show_expanded'):
        group_input_017_1.outputs[82].show_expanded = False
    if hasattr(group_input_017_1.outputs[83], 'default_value'):
        group_input_017_1.outputs[83].default_value = 0.0
    if hasattr(group_input_017_1.outputs[83], 'display_shape'):
        group_input_017_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[83], 'enabled'):
        group_input_017_1.outputs[83].enabled = True
    if hasattr(group_input_017_1.outputs[83], 'hide'):
        group_input_017_1.outputs[83].hide = True
    if hasattr(group_input_017_1.outputs[83], 'hide_value'):
        group_input_017_1.outputs[83].hide_value = False
    if hasattr(group_input_017_1.outputs[83], 'name'):
        group_input_017_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_017_1.outputs[83], 'show_expanded'):
        group_input_017_1.outputs[83].show_expanded = False
    if hasattr(group_input_017_1.outputs[84], 'default_value'):
        group_input_017_1.outputs[84].default_value = 0.0
    if hasattr(group_input_017_1.outputs[84], 'display_shape'):
        group_input_017_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[84], 'enabled'):
        group_input_017_1.outputs[84].enabled = True
    if hasattr(group_input_017_1.outputs[84], 'hide'):
        group_input_017_1.outputs[84].hide = True
    if hasattr(group_input_017_1.outputs[84], 'hide_value'):
        group_input_017_1.outputs[84].hide_value = False
    if hasattr(group_input_017_1.outputs[84], 'name'):
        group_input_017_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_017_1.outputs[84], 'show_expanded'):
        group_input_017_1.outputs[84].show_expanded = False
    if hasattr(group_input_017_1.outputs[85], 'default_value'):
        group_input_017_1.outputs[85].default_value = 0.0
    if hasattr(group_input_017_1.outputs[85], 'display_shape'):
        group_input_017_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[85], 'enabled'):
        group_input_017_1.outputs[85].enabled = True
    if hasattr(group_input_017_1.outputs[85], 'hide'):
        group_input_017_1.outputs[85].hide = True
    if hasattr(group_input_017_1.outputs[85], 'hide_value'):
        group_input_017_1.outputs[85].hide_value = False
    if hasattr(group_input_017_1.outputs[85], 'name'):
        group_input_017_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_017_1.outputs[85], 'show_expanded'):
        group_input_017_1.outputs[85].show_expanded = False
    if hasattr(group_input_017_1.outputs[86], 'default_value'):
        group_input_017_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_017_1.outputs[86], 'display_shape'):
        group_input_017_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[86], 'enabled'):
        group_input_017_1.outputs[86].enabled = True
    if hasattr(group_input_017_1.outputs[86], 'hide'):
        group_input_017_1.outputs[86].hide = True
    if hasattr(group_input_017_1.outputs[86], 'hide_value'):
        group_input_017_1.outputs[86].hide_value = False
    if hasattr(group_input_017_1.outputs[86], 'name'):
        group_input_017_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_017_1.outputs[86], 'show_expanded'):
        group_input_017_1.outputs[86].show_expanded = False
    if hasattr(group_input_017_1.outputs[87], 'default_value'):
        group_input_017_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_017_1.outputs[87], 'display_shape'):
        group_input_017_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[87], 'enabled'):
        group_input_017_1.outputs[87].enabled = True
    if hasattr(group_input_017_1.outputs[87], 'hide'):
        group_input_017_1.outputs[87].hide = True
    if hasattr(group_input_017_1.outputs[87], 'hide_value'):
        group_input_017_1.outputs[87].hide_value = False
    if hasattr(group_input_017_1.outputs[87], 'name'):
        group_input_017_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_017_1.outputs[87], 'show_expanded'):
        group_input_017_1.outputs[87].show_expanded = False
    if hasattr(group_input_017_1.outputs[88], 'default_value'):
        group_input_017_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_017_1.outputs[88], 'display_shape'):
        group_input_017_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[88], 'enabled'):
        group_input_017_1.outputs[88].enabled = True
    if hasattr(group_input_017_1.outputs[88], 'hide'):
        group_input_017_1.outputs[88].hide = True
    if hasattr(group_input_017_1.outputs[88], 'hide_value'):
        group_input_017_1.outputs[88].hide_value = False
    if hasattr(group_input_017_1.outputs[88], 'name'):
        group_input_017_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_017_1.outputs[88], 'show_expanded'):
        group_input_017_1.outputs[88].show_expanded = False
    if hasattr(group_input_017_1.outputs[89], 'default_value'):
        group_input_017_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_017_1.outputs[89], 'display_shape'):
        group_input_017_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[89], 'enabled'):
        group_input_017_1.outputs[89].enabled = True
    if hasattr(group_input_017_1.outputs[89], 'hide'):
        group_input_017_1.outputs[89].hide = True
    if hasattr(group_input_017_1.outputs[89], 'hide_value'):
        group_input_017_1.outputs[89].hide_value = False
    if hasattr(group_input_017_1.outputs[89], 'name'):
        group_input_017_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_017_1.outputs[89], 'show_expanded'):
        group_input_017_1.outputs[89].show_expanded = False
    if hasattr(group_input_017_1.outputs[90], 'default_value'):
        group_input_017_1.outputs[90].default_value = 0.0
    if hasattr(group_input_017_1.outputs[90], 'display_shape'):
        group_input_017_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[90], 'enabled'):
        group_input_017_1.outputs[90].enabled = True
    if hasattr(group_input_017_1.outputs[90], 'hide'):
        group_input_017_1.outputs[90].hide = True
    if hasattr(group_input_017_1.outputs[90], 'hide_value'):
        group_input_017_1.outputs[90].hide_value = False
    if hasattr(group_input_017_1.outputs[90], 'name'):
        group_input_017_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_017_1.outputs[90], 'show_expanded'):
        group_input_017_1.outputs[90].show_expanded = False
    if hasattr(group_input_017_1.outputs[91], 'default_value'):
        group_input_017_1.outputs[91].default_value = 0.0
    if hasattr(group_input_017_1.outputs[91], 'display_shape'):
        group_input_017_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[91], 'enabled'):
        group_input_017_1.outputs[91].enabled = True
    if hasattr(group_input_017_1.outputs[91], 'hide'):
        group_input_017_1.outputs[91].hide = True
    if hasattr(group_input_017_1.outputs[91], 'hide_value'):
        group_input_017_1.outputs[91].hide_value = False
    if hasattr(group_input_017_1.outputs[91], 'name'):
        group_input_017_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_017_1.outputs[91], 'show_expanded'):
        group_input_017_1.outputs[91].show_expanded = False
    if hasattr(group_input_017_1.outputs[92], 'default_value'):
        group_input_017_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_017_1.outputs[92], 'display_shape'):
        group_input_017_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[92], 'enabled'):
        group_input_017_1.outputs[92].enabled = True
    if hasattr(group_input_017_1.outputs[92], 'hide'):
        group_input_017_1.outputs[92].hide = True
    if hasattr(group_input_017_1.outputs[92], 'hide_value'):
        group_input_017_1.outputs[92].hide_value = False
    if hasattr(group_input_017_1.outputs[92], 'name'):
        group_input_017_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_017_1.outputs[92], 'show_expanded'):
        group_input_017_1.outputs[92].show_expanded = False
    if hasattr(group_input_017_1.outputs[93], 'default_value'):
        group_input_017_1.outputs[93].default_value = 0.0
    if hasattr(group_input_017_1.outputs[93], 'display_shape'):
        group_input_017_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[93], 'enabled'):
        group_input_017_1.outputs[93].enabled = True
    if hasattr(group_input_017_1.outputs[93], 'hide'):
        group_input_017_1.outputs[93].hide = True
    if hasattr(group_input_017_1.outputs[93], 'hide_value'):
        group_input_017_1.outputs[93].hide_value = False
    if hasattr(group_input_017_1.outputs[93], 'name'):
        group_input_017_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_017_1.outputs[93], 'show_expanded'):
        group_input_017_1.outputs[93].show_expanded = False
    if hasattr(group_input_017_1.outputs[94], 'default_value'):
        group_input_017_1.outputs[94].default_value = 0.0
    if hasattr(group_input_017_1.outputs[94], 'display_shape'):
        group_input_017_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[94], 'enabled'):
        group_input_017_1.outputs[94].enabled = True
    if hasattr(group_input_017_1.outputs[94], 'hide'):
        group_input_017_1.outputs[94].hide = True
    if hasattr(group_input_017_1.outputs[94], 'hide_value'):
        group_input_017_1.outputs[94].hide_value = False
    if hasattr(group_input_017_1.outputs[94], 'name'):
        group_input_017_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_017_1.outputs[94], 'show_expanded'):
        group_input_017_1.outputs[94].show_expanded = False
    if hasattr(group_input_017_1.outputs[95], 'default_value'):
        group_input_017_1.outputs[95].default_value = 0.0
    if hasattr(group_input_017_1.outputs[95], 'display_shape'):
        group_input_017_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[95], 'enabled'):
        group_input_017_1.outputs[95].enabled = True
    if hasattr(group_input_017_1.outputs[95], 'hide'):
        group_input_017_1.outputs[95].hide = True
    if hasattr(group_input_017_1.outputs[95], 'hide_value'):
        group_input_017_1.outputs[95].hide_value = False
    if hasattr(group_input_017_1.outputs[95], 'name'):
        group_input_017_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_017_1.outputs[95], 'show_expanded'):
        group_input_017_1.outputs[95].show_expanded = False
    if hasattr(group_input_017_1.outputs[96], 'default_value'):
        group_input_017_1.outputs[96].default_value = 0.0
    if hasattr(group_input_017_1.outputs[96], 'display_shape'):
        group_input_017_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[96], 'enabled'):
        group_input_017_1.outputs[96].enabled = True
    if hasattr(group_input_017_1.outputs[96], 'hide'):
        group_input_017_1.outputs[96].hide = True
    if hasattr(group_input_017_1.outputs[96], 'hide_value'):
        group_input_017_1.outputs[96].hide_value = False
    if hasattr(group_input_017_1.outputs[96], 'name'):
        group_input_017_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_017_1.outputs[96], 'show_expanded'):
        group_input_017_1.outputs[96].show_expanded = False
    if hasattr(group_input_017_1.outputs[97], 'default_value'):
        group_input_017_1.outputs[97].default_value = 0.0
    if hasattr(group_input_017_1.outputs[97], 'display_shape'):
        group_input_017_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[97], 'enabled'):
        group_input_017_1.outputs[97].enabled = True
    if hasattr(group_input_017_1.outputs[97], 'hide'):
        group_input_017_1.outputs[97].hide = True
    if hasattr(group_input_017_1.outputs[97], 'hide_value'):
        group_input_017_1.outputs[97].hide_value = False
    if hasattr(group_input_017_1.outputs[97], 'name'):
        group_input_017_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_017_1.outputs[97], 'show_expanded'):
        group_input_017_1.outputs[97].show_expanded = False
    if hasattr(group_input_017_1.outputs[98], 'default_value'):
        group_input_017_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_017_1.outputs[98], 'display_shape'):
        group_input_017_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[98], 'enabled'):
        group_input_017_1.outputs[98].enabled = True
    if hasattr(group_input_017_1.outputs[98], 'hide'):
        group_input_017_1.outputs[98].hide = True
    if hasattr(group_input_017_1.outputs[98], 'hide_value'):
        group_input_017_1.outputs[98].hide_value = False
    if hasattr(group_input_017_1.outputs[98], 'name'):
        group_input_017_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_017_1.outputs[98], 'show_expanded'):
        group_input_017_1.outputs[98].show_expanded = False
    if hasattr(group_input_017_1.outputs[99], 'default_value'):
        group_input_017_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_017_1.outputs[99], 'display_shape'):
        group_input_017_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[99], 'enabled'):
        group_input_017_1.outputs[99].enabled = True
    if hasattr(group_input_017_1.outputs[99], 'hide'):
        group_input_017_1.outputs[99].hide = True
    if hasattr(group_input_017_1.outputs[99], 'hide_value'):
        group_input_017_1.outputs[99].hide_value = False
    if hasattr(group_input_017_1.outputs[99], 'name'):
        group_input_017_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_017_1.outputs[99], 'show_expanded'):
        group_input_017_1.outputs[99].show_expanded = False
    if hasattr(group_input_017_1.outputs[100], 'default_value'):
        group_input_017_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_017_1.outputs[100], 'display_shape'):
        group_input_017_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[100], 'enabled'):
        group_input_017_1.outputs[100].enabled = True
    if hasattr(group_input_017_1.outputs[100], 'hide'):
        group_input_017_1.outputs[100].hide = True
    if hasattr(group_input_017_1.outputs[100], 'hide_value'):
        group_input_017_1.outputs[100].hide_value = False
    if hasattr(group_input_017_1.outputs[100], 'name'):
        group_input_017_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_017_1.outputs[100], 'show_expanded'):
        group_input_017_1.outputs[100].show_expanded = False
    if hasattr(group_input_017_1.outputs[101], 'default_value'):
        group_input_017_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_017_1.outputs[101], 'display_shape'):
        group_input_017_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_017_1.outputs[101], 'enabled'):
        group_input_017_1.outputs[101].enabled = True
    if hasattr(group_input_017_1.outputs[101], 'hide'):
        group_input_017_1.outputs[101].hide = True
    if hasattr(group_input_017_1.outputs[101], 'hide_value'):
        group_input_017_1.outputs[101].hide_value = False
    if hasattr(group_input_017_1.outputs[101], 'name'):
        group_input_017_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_017_1.outputs[101], 'show_expanded'):
        group_input_017_1.outputs[101].show_expanded = False

    group_input_016_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_016_1, 'color'):
        group_input_016_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_016_1, 'hide'):
        group_input_016_1.hide = False
    if hasattr(group_input_016_1, 'location'):
        group_input_016_1.location = (-583.015625, 847.75146484375)
    if hasattr(group_input_016_1, 'mute'):
        group_input_016_1.mute = False
    if hasattr(group_input_016_1, 'name'):
        group_input_016_1.name = 'Group Input.016'
    if hasattr(group_input_016_1, 'use_custom_color'):
        group_input_016_1.use_custom_color = False
    if hasattr(group_input_016_1, 'width'):
        group_input_016_1.width = 395.70654296875
    if hasattr(group_input_016_1.outputs[0], 'default_value'):
        group_input_016_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[0], 'display_shape'):
        group_input_016_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[0], 'enabled'):
        group_input_016_1.outputs[0].enabled = True
    if hasattr(group_input_016_1.outputs[0], 'hide'):
        group_input_016_1.outputs[0].hide = False
    if hasattr(group_input_016_1.outputs[0], 'hide_value'):
        group_input_016_1.outputs[0].hide_value = False
    if hasattr(group_input_016_1.outputs[0], 'name'):
        group_input_016_1.outputs[0].name = 'ASG'
    if hasattr(group_input_016_1.outputs[0], 'show_expanded'):
        group_input_016_1.outputs[0].show_expanded = False
    if hasattr(group_input_016_1.outputs[1], 'default_value'):
        group_input_016_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[1], 'display_shape'):
        group_input_016_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[1], 'enabled'):
        group_input_016_1.outputs[1].enabled = True
    if hasattr(group_input_016_1.outputs[1], 'hide'):
        group_input_016_1.outputs[1].hide = False
    if hasattr(group_input_016_1.outputs[1], 'hide_value'):
        group_input_016_1.outputs[1].hide_value = False
    if hasattr(group_input_016_1.outputs[1], 'name'):
        group_input_016_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_016_1.outputs[1], 'show_expanded'):
        group_input_016_1.outputs[1].show_expanded = False
    if hasattr(group_input_016_1.outputs[2], 'default_value'):
        group_input_016_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[2], 'display_shape'):
        group_input_016_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[2], 'enabled'):
        group_input_016_1.outputs[2].enabled = True
    if hasattr(group_input_016_1.outputs[2], 'hide'):
        group_input_016_1.outputs[2].hide = False
    if hasattr(group_input_016_1.outputs[2], 'hide_value'):
        group_input_016_1.outputs[2].hide_value = False
    if hasattr(group_input_016_1.outputs[2], 'name'):
        group_input_016_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_016_1.outputs[2], 'show_expanded'):
        group_input_016_1.outputs[2].show_expanded = False
    if hasattr(group_input_016_1.outputs[3], 'default_value'):
        group_input_016_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[3], 'display_shape'):
        group_input_016_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[3], 'enabled'):
        group_input_016_1.outputs[3].enabled = True
    if hasattr(group_input_016_1.outputs[3], 'hide'):
        group_input_016_1.outputs[3].hide = True
    if hasattr(group_input_016_1.outputs[3], 'hide_value'):
        group_input_016_1.outputs[3].hide_value = False
    if hasattr(group_input_016_1.outputs[3], 'name'):
        group_input_016_1.outputs[3].name = 'Normal'
    if hasattr(group_input_016_1.outputs[3], 'show_expanded'):
        group_input_016_1.outputs[3].show_expanded = False
    if hasattr(group_input_016_1.outputs[4], 'default_value'):
        group_input_016_1.outputs[4].default_value = 0.0
    if hasattr(group_input_016_1.outputs[4], 'display_shape'):
        group_input_016_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[4], 'enabled'):
        group_input_016_1.outputs[4].enabled = True
    if hasattr(group_input_016_1.outputs[4], 'hide'):
        group_input_016_1.outputs[4].hide = False
    if hasattr(group_input_016_1.outputs[4], 'hide_value'):
        group_input_016_1.outputs[4].hide_value = False
    if hasattr(group_input_016_1.outputs[4], 'name'):
        group_input_016_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_016_1.outputs[4], 'show_expanded'):
        group_input_016_1.outputs[4].show_expanded = False
    if hasattr(group_input_016_1.outputs[5], 'default_value'):
        group_input_016_1.outputs[5].default_value = 1.0
    if hasattr(group_input_016_1.outputs[5], 'display_shape'):
        group_input_016_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[5], 'enabled'):
        group_input_016_1.outputs[5].enabled = True
    if hasattr(group_input_016_1.outputs[5], 'hide'):
        group_input_016_1.outputs[5].hide = False
    if hasattr(group_input_016_1.outputs[5], 'hide_value'):
        group_input_016_1.outputs[5].hide_value = False
    if hasattr(group_input_016_1.outputs[5], 'name'):
        group_input_016_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_016_1.outputs[5], 'show_expanded'):
        group_input_016_1.outputs[5].show_expanded = False
    if hasattr(group_input_016_1.outputs[6], 'default_value'):
        group_input_016_1.outputs[6].default_value = 0.0
    if hasattr(group_input_016_1.outputs[6], 'display_shape'):
        group_input_016_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[6], 'enabled'):
        group_input_016_1.outputs[6].enabled = True
    if hasattr(group_input_016_1.outputs[6], 'hide'):
        group_input_016_1.outputs[6].hide = True
    if hasattr(group_input_016_1.outputs[6], 'hide_value'):
        group_input_016_1.outputs[6].hide_value = False
    if hasattr(group_input_016_1.outputs[6], 'name'):
        group_input_016_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_016_1.outputs[6], 'show_expanded'):
        group_input_016_1.outputs[6].show_expanded = False
    if hasattr(group_input_016_1.outputs[7], 'default_value'):
        group_input_016_1.outputs[7].default_value = 0.0
    if hasattr(group_input_016_1.outputs[7], 'display_shape'):
        group_input_016_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[7], 'enabled'):
        group_input_016_1.outputs[7].enabled = True
    if hasattr(group_input_016_1.outputs[7], 'hide'):
        group_input_016_1.outputs[7].hide = True
    if hasattr(group_input_016_1.outputs[7], 'hide_value'):
        group_input_016_1.outputs[7].hide_value = False
    if hasattr(group_input_016_1.outputs[7], 'name'):
        group_input_016_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_016_1.outputs[7], 'show_expanded'):
        group_input_016_1.outputs[7].show_expanded = False
    if hasattr(group_input_016_1.outputs[8], 'default_value'):
        group_input_016_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[8], 'display_shape'):
        group_input_016_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[8], 'enabled'):
        group_input_016_1.outputs[8].enabled = True
    if hasattr(group_input_016_1.outputs[8], 'hide'):
        group_input_016_1.outputs[8].hide = True
    if hasattr(group_input_016_1.outputs[8], 'hide_value'):
        group_input_016_1.outputs[8].hide_value = False
    if hasattr(group_input_016_1.outputs[8], 'name'):
        group_input_016_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_016_1.outputs[8], 'show_expanded'):
        group_input_016_1.outputs[8].show_expanded = False
    if hasattr(group_input_016_1.outputs[9], 'default_value'):
        group_input_016_1.outputs[9].default_value = 0.0
    if hasattr(group_input_016_1.outputs[9], 'display_shape'):
        group_input_016_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[9], 'enabled'):
        group_input_016_1.outputs[9].enabled = True
    if hasattr(group_input_016_1.outputs[9], 'hide'):
        group_input_016_1.outputs[9].hide = True
    if hasattr(group_input_016_1.outputs[9], 'hide_value'):
        group_input_016_1.outputs[9].hide_value = False
    if hasattr(group_input_016_1.outputs[9], 'name'):
        group_input_016_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_016_1.outputs[9], 'show_expanded'):
        group_input_016_1.outputs[9].show_expanded = False
    if hasattr(group_input_016_1.outputs[10], 'default_value'):
        group_input_016_1.outputs[10].default_value = 0.0
    if hasattr(group_input_016_1.outputs[10], 'display_shape'):
        group_input_016_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[10], 'enabled'):
        group_input_016_1.outputs[10].enabled = True
    if hasattr(group_input_016_1.outputs[10], 'hide'):
        group_input_016_1.outputs[10].hide = True
    if hasattr(group_input_016_1.outputs[10], 'hide_value'):
        group_input_016_1.outputs[10].hide_value = False
    if hasattr(group_input_016_1.outputs[10], 'name'):
        group_input_016_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_016_1.outputs[10], 'show_expanded'):
        group_input_016_1.outputs[10].show_expanded = False
    if hasattr(group_input_016_1.outputs[11], 'default_value'):
        group_input_016_1.outputs[11].default_value = 0.0
    if hasattr(group_input_016_1.outputs[11], 'display_shape'):
        group_input_016_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[11], 'enabled'):
        group_input_016_1.outputs[11].enabled = True
    if hasattr(group_input_016_1.outputs[11], 'hide'):
        group_input_016_1.outputs[11].hide = True
    if hasattr(group_input_016_1.outputs[11], 'hide_value'):
        group_input_016_1.outputs[11].hide_value = False
    if hasattr(group_input_016_1.outputs[11], 'name'):
        group_input_016_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_016_1.outputs[11], 'show_expanded'):
        group_input_016_1.outputs[11].show_expanded = False
    if hasattr(group_input_016_1.outputs[12], 'default_value'):
        group_input_016_1.outputs[12].default_value = 0.0
    if hasattr(group_input_016_1.outputs[12], 'display_shape'):
        group_input_016_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[12], 'enabled'):
        group_input_016_1.outputs[12].enabled = True
    if hasattr(group_input_016_1.outputs[12], 'hide'):
        group_input_016_1.outputs[12].hide = False
    if hasattr(group_input_016_1.outputs[12], 'hide_value'):
        group_input_016_1.outputs[12].hide_value = False
    if hasattr(group_input_016_1.outputs[12], 'name'):
        group_input_016_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_016_1.outputs[12], 'show_expanded'):
        group_input_016_1.outputs[12].show_expanded = False
    if hasattr(group_input_016_1.outputs[13], 'default_value'):
        group_input_016_1.outputs[13].default_value = 0.0
    if hasattr(group_input_016_1.outputs[13], 'display_shape'):
        group_input_016_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[13], 'enabled'):
        group_input_016_1.outputs[13].enabled = True
    if hasattr(group_input_016_1.outputs[13], 'hide'):
        group_input_016_1.outputs[13].hide = True
    if hasattr(group_input_016_1.outputs[13], 'hide_value'):
        group_input_016_1.outputs[13].hide_value = False
    if hasattr(group_input_016_1.outputs[13], 'name'):
        group_input_016_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_016_1.outputs[13], 'show_expanded'):
        group_input_016_1.outputs[13].show_expanded = False
    if hasattr(group_input_016_1.outputs[14], 'default_value'):
        group_input_016_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_016_1.outputs[14], 'display_shape'):
        group_input_016_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[14], 'enabled'):
        group_input_016_1.outputs[14].enabled = True
    if hasattr(group_input_016_1.outputs[14], 'hide'):
        group_input_016_1.outputs[14].hide = True
    if hasattr(group_input_016_1.outputs[14], 'hide_value'):
        group_input_016_1.outputs[14].hide_value = False
    if hasattr(group_input_016_1.outputs[14], 'name'):
        group_input_016_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_016_1.outputs[14], 'show_expanded'):
        group_input_016_1.outputs[14].show_expanded = False
    if hasattr(group_input_016_1.outputs[15], 'default_value'):
        group_input_016_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_016_1.outputs[15], 'display_shape'):
        group_input_016_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[15], 'enabled'):
        group_input_016_1.outputs[15].enabled = True
    if hasattr(group_input_016_1.outputs[15], 'hide'):
        group_input_016_1.outputs[15].hide = True
    if hasattr(group_input_016_1.outputs[15], 'hide_value'):
        group_input_016_1.outputs[15].hide_value = False
    if hasattr(group_input_016_1.outputs[15], 'name'):
        group_input_016_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_016_1.outputs[15], 'show_expanded'):
        group_input_016_1.outputs[15].show_expanded = False
    if hasattr(group_input_016_1.outputs[16], 'default_value'):
        group_input_016_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_016_1.outputs[16], 'display_shape'):
        group_input_016_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[16], 'enabled'):
        group_input_016_1.outputs[16].enabled = True
    if hasattr(group_input_016_1.outputs[16], 'hide'):
        group_input_016_1.outputs[16].hide = True
    if hasattr(group_input_016_1.outputs[16], 'hide_value'):
        group_input_016_1.outputs[16].hide_value = False
    if hasattr(group_input_016_1.outputs[16], 'name'):
        group_input_016_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_016_1.outputs[16], 'show_expanded'):
        group_input_016_1.outputs[16].show_expanded = False
    if hasattr(group_input_016_1.outputs[17], 'default_value'):
        group_input_016_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_016_1.outputs[17], 'display_shape'):
        group_input_016_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[17], 'enabled'):
        group_input_016_1.outputs[17].enabled = True
    if hasattr(group_input_016_1.outputs[17], 'hide'):
        group_input_016_1.outputs[17].hide = True
    if hasattr(group_input_016_1.outputs[17], 'hide_value'):
        group_input_016_1.outputs[17].hide_value = False
    if hasattr(group_input_016_1.outputs[17], 'name'):
        group_input_016_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_016_1.outputs[17], 'show_expanded'):
        group_input_016_1.outputs[17].show_expanded = False
    if hasattr(group_input_016_1.outputs[18], 'default_value'):
        group_input_016_1.outputs[18].default_value = 0.0
    if hasattr(group_input_016_1.outputs[18], 'display_shape'):
        group_input_016_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[18], 'enabled'):
        group_input_016_1.outputs[18].enabled = True
    if hasattr(group_input_016_1.outputs[18], 'hide'):
        group_input_016_1.outputs[18].hide = True
    if hasattr(group_input_016_1.outputs[18], 'hide_value'):
        group_input_016_1.outputs[18].hide_value = False
    if hasattr(group_input_016_1.outputs[18], 'name'):
        group_input_016_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_016_1.outputs[18], 'show_expanded'):
        group_input_016_1.outputs[18].show_expanded = False
    if hasattr(group_input_016_1.outputs[19], 'default_value'):
        group_input_016_1.outputs[19].default_value = 0.0
    if hasattr(group_input_016_1.outputs[19], 'display_shape'):
        group_input_016_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[19], 'enabled'):
        group_input_016_1.outputs[19].enabled = True
    if hasattr(group_input_016_1.outputs[19], 'hide'):
        group_input_016_1.outputs[19].hide = True
    if hasattr(group_input_016_1.outputs[19], 'hide_value'):
        group_input_016_1.outputs[19].hide_value = False
    if hasattr(group_input_016_1.outputs[19], 'name'):
        group_input_016_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_016_1.outputs[19], 'show_expanded'):
        group_input_016_1.outputs[19].show_expanded = False
    if hasattr(group_input_016_1.outputs[20], 'default_value'):
        group_input_016_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[20], 'display_shape'):
        group_input_016_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[20], 'enabled'):
        group_input_016_1.outputs[20].enabled = True
    if hasattr(group_input_016_1.outputs[20], 'hide'):
        group_input_016_1.outputs[20].hide = True
    if hasattr(group_input_016_1.outputs[20], 'hide_value'):
        group_input_016_1.outputs[20].hide_value = False
    if hasattr(group_input_016_1.outputs[20], 'name'):
        group_input_016_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_016_1.outputs[20], 'show_expanded'):
        group_input_016_1.outputs[20].show_expanded = False
    if hasattr(group_input_016_1.outputs[21], 'default_value'):
        group_input_016_1.outputs[21].default_value = 0.0
    if hasattr(group_input_016_1.outputs[21], 'display_shape'):
        group_input_016_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[21], 'enabled'):
        group_input_016_1.outputs[21].enabled = True
    if hasattr(group_input_016_1.outputs[21], 'hide'):
        group_input_016_1.outputs[21].hide = True
    if hasattr(group_input_016_1.outputs[21], 'hide_value'):
        group_input_016_1.outputs[21].hide_value = False
    if hasattr(group_input_016_1.outputs[21], 'name'):
        group_input_016_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_016_1.outputs[21], 'show_expanded'):
        group_input_016_1.outputs[21].show_expanded = False
    if hasattr(group_input_016_1.outputs[22], 'default_value'):
        group_input_016_1.outputs[22].default_value = 0.0
    if hasattr(group_input_016_1.outputs[22], 'display_shape'):
        group_input_016_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[22], 'enabled'):
        group_input_016_1.outputs[22].enabled = True
    if hasattr(group_input_016_1.outputs[22], 'hide'):
        group_input_016_1.outputs[22].hide = True
    if hasattr(group_input_016_1.outputs[22], 'hide_value'):
        group_input_016_1.outputs[22].hide_value = False
    if hasattr(group_input_016_1.outputs[22], 'name'):
        group_input_016_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_016_1.outputs[22], 'show_expanded'):
        group_input_016_1.outputs[22].show_expanded = False
    if hasattr(group_input_016_1.outputs[23], 'default_value'):
        group_input_016_1.outputs[23].default_value = 0.0
    if hasattr(group_input_016_1.outputs[23], 'display_shape'):
        group_input_016_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[23], 'enabled'):
        group_input_016_1.outputs[23].enabled = True
    if hasattr(group_input_016_1.outputs[23], 'hide'):
        group_input_016_1.outputs[23].hide = True
    if hasattr(group_input_016_1.outputs[23], 'hide_value'):
        group_input_016_1.outputs[23].hide_value = False
    if hasattr(group_input_016_1.outputs[23], 'name'):
        group_input_016_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_016_1.outputs[23], 'show_expanded'):
        group_input_016_1.outputs[23].show_expanded = False
    if hasattr(group_input_016_1.outputs[24], 'default_value'):
        group_input_016_1.outputs[24].default_value = 0.0
    if hasattr(group_input_016_1.outputs[24], 'display_shape'):
        group_input_016_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[24], 'enabled'):
        group_input_016_1.outputs[24].enabled = True
    if hasattr(group_input_016_1.outputs[24], 'hide'):
        group_input_016_1.outputs[24].hide = False
    if hasattr(group_input_016_1.outputs[24], 'hide_value'):
        group_input_016_1.outputs[24].hide_value = False
    if hasattr(group_input_016_1.outputs[24], 'name'):
        group_input_016_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_016_1.outputs[24], 'show_expanded'):
        group_input_016_1.outputs[24].show_expanded = False
    if hasattr(group_input_016_1.outputs[25], 'default_value'):
        group_input_016_1.outputs[25].default_value = 0.0
    if hasattr(group_input_016_1.outputs[25], 'display_shape'):
        group_input_016_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[25], 'enabled'):
        group_input_016_1.outputs[25].enabled = True
    if hasattr(group_input_016_1.outputs[25], 'hide'):
        group_input_016_1.outputs[25].hide = True
    if hasattr(group_input_016_1.outputs[25], 'hide_value'):
        group_input_016_1.outputs[25].hide_value = False
    if hasattr(group_input_016_1.outputs[25], 'name'):
        group_input_016_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_016_1.outputs[25], 'show_expanded'):
        group_input_016_1.outputs[25].show_expanded = False
    if hasattr(group_input_016_1.outputs[26], 'default_value'):
        group_input_016_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_016_1.outputs[26], 'display_shape'):
        group_input_016_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[26], 'enabled'):
        group_input_016_1.outputs[26].enabled = True
    if hasattr(group_input_016_1.outputs[26], 'hide'):
        group_input_016_1.outputs[26].hide = True
    if hasattr(group_input_016_1.outputs[26], 'hide_value'):
        group_input_016_1.outputs[26].hide_value = False
    if hasattr(group_input_016_1.outputs[26], 'name'):
        group_input_016_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_016_1.outputs[26], 'show_expanded'):
        group_input_016_1.outputs[26].show_expanded = False
    if hasattr(group_input_016_1.outputs[27], 'default_value'):
        group_input_016_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_016_1.outputs[27], 'display_shape'):
        group_input_016_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[27], 'enabled'):
        group_input_016_1.outputs[27].enabled = True
    if hasattr(group_input_016_1.outputs[27], 'hide'):
        group_input_016_1.outputs[27].hide = True
    if hasattr(group_input_016_1.outputs[27], 'hide_value'):
        group_input_016_1.outputs[27].hide_value = False
    if hasattr(group_input_016_1.outputs[27], 'name'):
        group_input_016_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_016_1.outputs[27], 'show_expanded'):
        group_input_016_1.outputs[27].show_expanded = False
    if hasattr(group_input_016_1.outputs[28], 'default_value'):
        group_input_016_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_016_1.outputs[28], 'display_shape'):
        group_input_016_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[28], 'enabled'):
        group_input_016_1.outputs[28].enabled = True
    if hasattr(group_input_016_1.outputs[28], 'hide'):
        group_input_016_1.outputs[28].hide = True
    if hasattr(group_input_016_1.outputs[28], 'hide_value'):
        group_input_016_1.outputs[28].hide_value = False
    if hasattr(group_input_016_1.outputs[28], 'name'):
        group_input_016_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_016_1.outputs[28], 'show_expanded'):
        group_input_016_1.outputs[28].show_expanded = False
    if hasattr(group_input_016_1.outputs[29], 'default_value'):
        group_input_016_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_016_1.outputs[29], 'display_shape'):
        group_input_016_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[29], 'enabled'):
        group_input_016_1.outputs[29].enabled = True
    if hasattr(group_input_016_1.outputs[29], 'hide'):
        group_input_016_1.outputs[29].hide = True
    if hasattr(group_input_016_1.outputs[29], 'hide_value'):
        group_input_016_1.outputs[29].hide_value = False
    if hasattr(group_input_016_1.outputs[29], 'name'):
        group_input_016_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_016_1.outputs[29], 'show_expanded'):
        group_input_016_1.outputs[29].show_expanded = False
    if hasattr(group_input_016_1.outputs[30], 'default_value'):
        group_input_016_1.outputs[30].default_value = 0.0
    if hasattr(group_input_016_1.outputs[30], 'display_shape'):
        group_input_016_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[30], 'enabled'):
        group_input_016_1.outputs[30].enabled = True
    if hasattr(group_input_016_1.outputs[30], 'hide'):
        group_input_016_1.outputs[30].hide = True
    if hasattr(group_input_016_1.outputs[30], 'hide_value'):
        group_input_016_1.outputs[30].hide_value = False
    if hasattr(group_input_016_1.outputs[30], 'name'):
        group_input_016_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_016_1.outputs[30], 'show_expanded'):
        group_input_016_1.outputs[30].show_expanded = False
    if hasattr(group_input_016_1.outputs[31], 'default_value'):
        group_input_016_1.outputs[31].default_value = 0.0
    if hasattr(group_input_016_1.outputs[31], 'display_shape'):
        group_input_016_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[31], 'enabled'):
        group_input_016_1.outputs[31].enabled = True
    if hasattr(group_input_016_1.outputs[31], 'hide'):
        group_input_016_1.outputs[31].hide = True
    if hasattr(group_input_016_1.outputs[31], 'hide_value'):
        group_input_016_1.outputs[31].hide_value = False
    if hasattr(group_input_016_1.outputs[31], 'name'):
        group_input_016_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_016_1.outputs[31], 'show_expanded'):
        group_input_016_1.outputs[31].show_expanded = False
    if hasattr(group_input_016_1.outputs[32], 'default_value'):
        group_input_016_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[32], 'display_shape'):
        group_input_016_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[32], 'enabled'):
        group_input_016_1.outputs[32].enabled = True
    if hasattr(group_input_016_1.outputs[32], 'hide'):
        group_input_016_1.outputs[32].hide = True
    if hasattr(group_input_016_1.outputs[32], 'hide_value'):
        group_input_016_1.outputs[32].hide_value = False
    if hasattr(group_input_016_1.outputs[32], 'name'):
        group_input_016_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_016_1.outputs[32], 'show_expanded'):
        group_input_016_1.outputs[32].show_expanded = False
    if hasattr(group_input_016_1.outputs[33], 'default_value'):
        group_input_016_1.outputs[33].default_value = 0.0
    if hasattr(group_input_016_1.outputs[33], 'display_shape'):
        group_input_016_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[33], 'enabled'):
        group_input_016_1.outputs[33].enabled = True
    if hasattr(group_input_016_1.outputs[33], 'hide'):
        group_input_016_1.outputs[33].hide = True
    if hasattr(group_input_016_1.outputs[33], 'hide_value'):
        group_input_016_1.outputs[33].hide_value = False
    if hasattr(group_input_016_1.outputs[33], 'name'):
        group_input_016_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_016_1.outputs[33], 'show_expanded'):
        group_input_016_1.outputs[33].show_expanded = False
    if hasattr(group_input_016_1.outputs[34], 'default_value'):
        group_input_016_1.outputs[34].default_value = 0.0
    if hasattr(group_input_016_1.outputs[34], 'display_shape'):
        group_input_016_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[34], 'enabled'):
        group_input_016_1.outputs[34].enabled = True
    if hasattr(group_input_016_1.outputs[34], 'hide'):
        group_input_016_1.outputs[34].hide = True
    if hasattr(group_input_016_1.outputs[34], 'hide_value'):
        group_input_016_1.outputs[34].hide_value = False
    if hasattr(group_input_016_1.outputs[34], 'name'):
        group_input_016_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_016_1.outputs[34], 'show_expanded'):
        group_input_016_1.outputs[34].show_expanded = False
    if hasattr(group_input_016_1.outputs[35], 'default_value'):
        group_input_016_1.outputs[35].default_value = 0.0
    if hasattr(group_input_016_1.outputs[35], 'display_shape'):
        group_input_016_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[35], 'enabled'):
        group_input_016_1.outputs[35].enabled = True
    if hasattr(group_input_016_1.outputs[35], 'hide'):
        group_input_016_1.outputs[35].hide = True
    if hasattr(group_input_016_1.outputs[35], 'hide_value'):
        group_input_016_1.outputs[35].hide_value = False
    if hasattr(group_input_016_1.outputs[35], 'name'):
        group_input_016_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_016_1.outputs[35], 'show_expanded'):
        group_input_016_1.outputs[35].show_expanded = False
    if hasattr(group_input_016_1.outputs[36], 'default_value'):
        group_input_016_1.outputs[36].default_value = 0.0
    if hasattr(group_input_016_1.outputs[36], 'display_shape'):
        group_input_016_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[36], 'enabled'):
        group_input_016_1.outputs[36].enabled = True
    if hasattr(group_input_016_1.outputs[36], 'hide'):
        group_input_016_1.outputs[36].hide = False
    if hasattr(group_input_016_1.outputs[36], 'hide_value'):
        group_input_016_1.outputs[36].hide_value = False
    if hasattr(group_input_016_1.outputs[36], 'name'):
        group_input_016_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_016_1.outputs[36], 'show_expanded'):
        group_input_016_1.outputs[36].show_expanded = False
    if hasattr(group_input_016_1.outputs[37], 'default_value'):
        group_input_016_1.outputs[37].default_value = 0.0
    if hasattr(group_input_016_1.outputs[37], 'display_shape'):
        group_input_016_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[37], 'enabled'):
        group_input_016_1.outputs[37].enabled = True
    if hasattr(group_input_016_1.outputs[37], 'hide'):
        group_input_016_1.outputs[37].hide = True
    if hasattr(group_input_016_1.outputs[37], 'hide_value'):
        group_input_016_1.outputs[37].hide_value = False
    if hasattr(group_input_016_1.outputs[37], 'name'):
        group_input_016_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_016_1.outputs[37], 'show_expanded'):
        group_input_016_1.outputs[37].show_expanded = False
    if hasattr(group_input_016_1.outputs[38], 'default_value'):
        group_input_016_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_016_1.outputs[38], 'display_shape'):
        group_input_016_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[38], 'enabled'):
        group_input_016_1.outputs[38].enabled = True
    if hasattr(group_input_016_1.outputs[38], 'hide'):
        group_input_016_1.outputs[38].hide = True
    if hasattr(group_input_016_1.outputs[38], 'hide_value'):
        group_input_016_1.outputs[38].hide_value = False
    if hasattr(group_input_016_1.outputs[38], 'name'):
        group_input_016_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_016_1.outputs[38], 'show_expanded'):
        group_input_016_1.outputs[38].show_expanded = False
    if hasattr(group_input_016_1.outputs[39], 'default_value'):
        group_input_016_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_016_1.outputs[39], 'display_shape'):
        group_input_016_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[39], 'enabled'):
        group_input_016_1.outputs[39].enabled = True
    if hasattr(group_input_016_1.outputs[39], 'hide'):
        group_input_016_1.outputs[39].hide = True
    if hasattr(group_input_016_1.outputs[39], 'hide_value'):
        group_input_016_1.outputs[39].hide_value = False
    if hasattr(group_input_016_1.outputs[39], 'name'):
        group_input_016_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_016_1.outputs[39], 'show_expanded'):
        group_input_016_1.outputs[39].show_expanded = False
    if hasattr(group_input_016_1.outputs[40], 'default_value'):
        group_input_016_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_016_1.outputs[40], 'display_shape'):
        group_input_016_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[40], 'enabled'):
        group_input_016_1.outputs[40].enabled = True
    if hasattr(group_input_016_1.outputs[40], 'hide'):
        group_input_016_1.outputs[40].hide = True
    if hasattr(group_input_016_1.outputs[40], 'hide_value'):
        group_input_016_1.outputs[40].hide_value = False
    if hasattr(group_input_016_1.outputs[40], 'name'):
        group_input_016_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_016_1.outputs[40], 'show_expanded'):
        group_input_016_1.outputs[40].show_expanded = False
    if hasattr(group_input_016_1.outputs[41], 'default_value'):
        group_input_016_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_016_1.outputs[41], 'display_shape'):
        group_input_016_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[41], 'enabled'):
        group_input_016_1.outputs[41].enabled = True
    if hasattr(group_input_016_1.outputs[41], 'hide'):
        group_input_016_1.outputs[41].hide = True
    if hasattr(group_input_016_1.outputs[41], 'hide_value'):
        group_input_016_1.outputs[41].hide_value = False
    if hasattr(group_input_016_1.outputs[41], 'name'):
        group_input_016_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_016_1.outputs[41], 'show_expanded'):
        group_input_016_1.outputs[41].show_expanded = False
    if hasattr(group_input_016_1.outputs[42], 'default_value'):
        group_input_016_1.outputs[42].default_value = 0.0
    if hasattr(group_input_016_1.outputs[42], 'display_shape'):
        group_input_016_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[42], 'enabled'):
        group_input_016_1.outputs[42].enabled = True
    if hasattr(group_input_016_1.outputs[42], 'hide'):
        group_input_016_1.outputs[42].hide = True
    if hasattr(group_input_016_1.outputs[42], 'hide_value'):
        group_input_016_1.outputs[42].hide_value = False
    if hasattr(group_input_016_1.outputs[42], 'name'):
        group_input_016_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_016_1.outputs[42], 'show_expanded'):
        group_input_016_1.outputs[42].show_expanded = False
    if hasattr(group_input_016_1.outputs[43], 'default_value'):
        group_input_016_1.outputs[43].default_value = 0.0
    if hasattr(group_input_016_1.outputs[43], 'display_shape'):
        group_input_016_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[43], 'enabled'):
        group_input_016_1.outputs[43].enabled = True
    if hasattr(group_input_016_1.outputs[43], 'hide'):
        group_input_016_1.outputs[43].hide = True
    if hasattr(group_input_016_1.outputs[43], 'hide_value'):
        group_input_016_1.outputs[43].hide_value = False
    if hasattr(group_input_016_1.outputs[43], 'name'):
        group_input_016_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_016_1.outputs[43], 'show_expanded'):
        group_input_016_1.outputs[43].show_expanded = False
    if hasattr(group_input_016_1.outputs[44], 'default_value'):
        group_input_016_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[44], 'display_shape'):
        group_input_016_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[44], 'enabled'):
        group_input_016_1.outputs[44].enabled = True
    if hasattr(group_input_016_1.outputs[44], 'hide'):
        group_input_016_1.outputs[44].hide = True
    if hasattr(group_input_016_1.outputs[44], 'hide_value'):
        group_input_016_1.outputs[44].hide_value = False
    if hasattr(group_input_016_1.outputs[44], 'name'):
        group_input_016_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_016_1.outputs[44], 'show_expanded'):
        group_input_016_1.outputs[44].show_expanded = False
    if hasattr(group_input_016_1.outputs[45], 'default_value'):
        group_input_016_1.outputs[45].default_value = 0.0
    if hasattr(group_input_016_1.outputs[45], 'display_shape'):
        group_input_016_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[45], 'enabled'):
        group_input_016_1.outputs[45].enabled = True
    if hasattr(group_input_016_1.outputs[45], 'hide'):
        group_input_016_1.outputs[45].hide = True
    if hasattr(group_input_016_1.outputs[45], 'hide_value'):
        group_input_016_1.outputs[45].hide_value = False
    if hasattr(group_input_016_1.outputs[45], 'name'):
        group_input_016_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_016_1.outputs[45], 'show_expanded'):
        group_input_016_1.outputs[45].show_expanded = False
    if hasattr(group_input_016_1.outputs[46], 'default_value'):
        group_input_016_1.outputs[46].default_value = 0.0
    if hasattr(group_input_016_1.outputs[46], 'display_shape'):
        group_input_016_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[46], 'enabled'):
        group_input_016_1.outputs[46].enabled = True
    if hasattr(group_input_016_1.outputs[46], 'hide'):
        group_input_016_1.outputs[46].hide = True
    if hasattr(group_input_016_1.outputs[46], 'hide_value'):
        group_input_016_1.outputs[46].hide_value = False
    if hasattr(group_input_016_1.outputs[46], 'name'):
        group_input_016_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_016_1.outputs[46], 'show_expanded'):
        group_input_016_1.outputs[46].show_expanded = False
    if hasattr(group_input_016_1.outputs[47], 'default_value'):
        group_input_016_1.outputs[47].default_value = 0.0
    if hasattr(group_input_016_1.outputs[47], 'display_shape'):
        group_input_016_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[47], 'enabled'):
        group_input_016_1.outputs[47].enabled = True
    if hasattr(group_input_016_1.outputs[47], 'hide'):
        group_input_016_1.outputs[47].hide = True
    if hasattr(group_input_016_1.outputs[47], 'hide_value'):
        group_input_016_1.outputs[47].hide_value = False
    if hasattr(group_input_016_1.outputs[47], 'name'):
        group_input_016_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_016_1.outputs[47], 'show_expanded'):
        group_input_016_1.outputs[47].show_expanded = False
    if hasattr(group_input_016_1.outputs[48], 'default_value'):
        group_input_016_1.outputs[48].default_value = 0.0
    if hasattr(group_input_016_1.outputs[48], 'display_shape'):
        group_input_016_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[48], 'enabled'):
        group_input_016_1.outputs[48].enabled = True
    if hasattr(group_input_016_1.outputs[48], 'hide'):
        group_input_016_1.outputs[48].hide = False
    if hasattr(group_input_016_1.outputs[48], 'hide_value'):
        group_input_016_1.outputs[48].hide_value = False
    if hasattr(group_input_016_1.outputs[48], 'name'):
        group_input_016_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_016_1.outputs[48], 'show_expanded'):
        group_input_016_1.outputs[48].show_expanded = False
    if hasattr(group_input_016_1.outputs[49], 'default_value'):
        group_input_016_1.outputs[49].default_value = 0.0
    if hasattr(group_input_016_1.outputs[49], 'display_shape'):
        group_input_016_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[49], 'enabled'):
        group_input_016_1.outputs[49].enabled = True
    if hasattr(group_input_016_1.outputs[49], 'hide'):
        group_input_016_1.outputs[49].hide = True
    if hasattr(group_input_016_1.outputs[49], 'hide_value'):
        group_input_016_1.outputs[49].hide_value = False
    if hasattr(group_input_016_1.outputs[49], 'name'):
        group_input_016_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_016_1.outputs[49], 'show_expanded'):
        group_input_016_1.outputs[49].show_expanded = False
    if hasattr(group_input_016_1.outputs[50], 'default_value'):
        group_input_016_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_016_1.outputs[50], 'display_shape'):
        group_input_016_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[50], 'enabled'):
        group_input_016_1.outputs[50].enabled = True
    if hasattr(group_input_016_1.outputs[50], 'hide'):
        group_input_016_1.outputs[50].hide = True
    if hasattr(group_input_016_1.outputs[50], 'hide_value'):
        group_input_016_1.outputs[50].hide_value = False
    if hasattr(group_input_016_1.outputs[50], 'name'):
        group_input_016_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_016_1.outputs[50], 'show_expanded'):
        group_input_016_1.outputs[50].show_expanded = False
    if hasattr(group_input_016_1.outputs[51], 'default_value'):
        group_input_016_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_016_1.outputs[51], 'display_shape'):
        group_input_016_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[51], 'enabled'):
        group_input_016_1.outputs[51].enabled = True
    if hasattr(group_input_016_1.outputs[51], 'hide'):
        group_input_016_1.outputs[51].hide = True
    if hasattr(group_input_016_1.outputs[51], 'hide_value'):
        group_input_016_1.outputs[51].hide_value = False
    if hasattr(group_input_016_1.outputs[51], 'name'):
        group_input_016_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_016_1.outputs[51], 'show_expanded'):
        group_input_016_1.outputs[51].show_expanded = False
    if hasattr(group_input_016_1.outputs[52], 'default_value'):
        group_input_016_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_016_1.outputs[52], 'display_shape'):
        group_input_016_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[52], 'enabled'):
        group_input_016_1.outputs[52].enabled = True
    if hasattr(group_input_016_1.outputs[52], 'hide'):
        group_input_016_1.outputs[52].hide = True
    if hasattr(group_input_016_1.outputs[52], 'hide_value'):
        group_input_016_1.outputs[52].hide_value = False
    if hasattr(group_input_016_1.outputs[52], 'name'):
        group_input_016_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_016_1.outputs[52], 'show_expanded'):
        group_input_016_1.outputs[52].show_expanded = False
    if hasattr(group_input_016_1.outputs[53], 'default_value'):
        group_input_016_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_016_1.outputs[53], 'display_shape'):
        group_input_016_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[53], 'enabled'):
        group_input_016_1.outputs[53].enabled = True
    if hasattr(group_input_016_1.outputs[53], 'hide'):
        group_input_016_1.outputs[53].hide = True
    if hasattr(group_input_016_1.outputs[53], 'hide_value'):
        group_input_016_1.outputs[53].hide_value = False
    if hasattr(group_input_016_1.outputs[53], 'name'):
        group_input_016_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_016_1.outputs[53], 'show_expanded'):
        group_input_016_1.outputs[53].show_expanded = False
    if hasattr(group_input_016_1.outputs[54], 'default_value'):
        group_input_016_1.outputs[54].default_value = 0.0
    if hasattr(group_input_016_1.outputs[54], 'display_shape'):
        group_input_016_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[54], 'enabled'):
        group_input_016_1.outputs[54].enabled = True
    if hasattr(group_input_016_1.outputs[54], 'hide'):
        group_input_016_1.outputs[54].hide = True
    if hasattr(group_input_016_1.outputs[54], 'hide_value'):
        group_input_016_1.outputs[54].hide_value = False
    if hasattr(group_input_016_1.outputs[54], 'name'):
        group_input_016_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_016_1.outputs[54], 'show_expanded'):
        group_input_016_1.outputs[54].show_expanded = False
    if hasattr(group_input_016_1.outputs[55], 'default_value'):
        group_input_016_1.outputs[55].default_value = 0.0
    if hasattr(group_input_016_1.outputs[55], 'display_shape'):
        group_input_016_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[55], 'enabled'):
        group_input_016_1.outputs[55].enabled = True
    if hasattr(group_input_016_1.outputs[55], 'hide'):
        group_input_016_1.outputs[55].hide = True
    if hasattr(group_input_016_1.outputs[55], 'hide_value'):
        group_input_016_1.outputs[55].hide_value = False
    if hasattr(group_input_016_1.outputs[55], 'name'):
        group_input_016_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_016_1.outputs[55], 'show_expanded'):
        group_input_016_1.outputs[55].show_expanded = False
    if hasattr(group_input_016_1.outputs[56], 'default_value'):
        group_input_016_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[56], 'display_shape'):
        group_input_016_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[56], 'enabled'):
        group_input_016_1.outputs[56].enabled = True
    if hasattr(group_input_016_1.outputs[56], 'hide'):
        group_input_016_1.outputs[56].hide = True
    if hasattr(group_input_016_1.outputs[56], 'hide_value'):
        group_input_016_1.outputs[56].hide_value = False
    if hasattr(group_input_016_1.outputs[56], 'name'):
        group_input_016_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_016_1.outputs[56], 'show_expanded'):
        group_input_016_1.outputs[56].show_expanded = False
    if hasattr(group_input_016_1.outputs[57], 'default_value'):
        group_input_016_1.outputs[57].default_value = 0.0
    if hasattr(group_input_016_1.outputs[57], 'display_shape'):
        group_input_016_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[57], 'enabled'):
        group_input_016_1.outputs[57].enabled = True
    if hasattr(group_input_016_1.outputs[57], 'hide'):
        group_input_016_1.outputs[57].hide = True
    if hasattr(group_input_016_1.outputs[57], 'hide_value'):
        group_input_016_1.outputs[57].hide_value = False
    if hasattr(group_input_016_1.outputs[57], 'name'):
        group_input_016_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_016_1.outputs[57], 'show_expanded'):
        group_input_016_1.outputs[57].show_expanded = False
    if hasattr(group_input_016_1.outputs[58], 'default_value'):
        group_input_016_1.outputs[58].default_value = 0.0
    if hasattr(group_input_016_1.outputs[58], 'display_shape'):
        group_input_016_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[58], 'enabled'):
        group_input_016_1.outputs[58].enabled = True
    if hasattr(group_input_016_1.outputs[58], 'hide'):
        group_input_016_1.outputs[58].hide = True
    if hasattr(group_input_016_1.outputs[58], 'hide_value'):
        group_input_016_1.outputs[58].hide_value = False
    if hasattr(group_input_016_1.outputs[58], 'name'):
        group_input_016_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_016_1.outputs[58], 'show_expanded'):
        group_input_016_1.outputs[58].show_expanded = False
    if hasattr(group_input_016_1.outputs[59], 'default_value'):
        group_input_016_1.outputs[59].default_value = 0.0
    if hasattr(group_input_016_1.outputs[59], 'display_shape'):
        group_input_016_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[59], 'enabled'):
        group_input_016_1.outputs[59].enabled = True
    if hasattr(group_input_016_1.outputs[59], 'hide'):
        group_input_016_1.outputs[59].hide = True
    if hasattr(group_input_016_1.outputs[59], 'hide_value'):
        group_input_016_1.outputs[59].hide_value = False
    if hasattr(group_input_016_1.outputs[59], 'name'):
        group_input_016_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_016_1.outputs[59], 'show_expanded'):
        group_input_016_1.outputs[59].show_expanded = False
    if hasattr(group_input_016_1.outputs[60], 'default_value'):
        group_input_016_1.outputs[60].default_value = 0.0
    if hasattr(group_input_016_1.outputs[60], 'display_shape'):
        group_input_016_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[60], 'enabled'):
        group_input_016_1.outputs[60].enabled = True
    if hasattr(group_input_016_1.outputs[60], 'hide'):
        group_input_016_1.outputs[60].hide = False
    if hasattr(group_input_016_1.outputs[60], 'hide_value'):
        group_input_016_1.outputs[60].hide_value = False
    if hasattr(group_input_016_1.outputs[60], 'name'):
        group_input_016_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_016_1.outputs[60], 'show_expanded'):
        group_input_016_1.outputs[60].show_expanded = False
    if hasattr(group_input_016_1.outputs[61], 'default_value'):
        group_input_016_1.outputs[61].default_value = 0.0
    if hasattr(group_input_016_1.outputs[61], 'display_shape'):
        group_input_016_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[61], 'enabled'):
        group_input_016_1.outputs[61].enabled = True
    if hasattr(group_input_016_1.outputs[61], 'hide'):
        group_input_016_1.outputs[61].hide = True
    if hasattr(group_input_016_1.outputs[61], 'hide_value'):
        group_input_016_1.outputs[61].hide_value = False
    if hasattr(group_input_016_1.outputs[61], 'name'):
        group_input_016_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_016_1.outputs[61], 'show_expanded'):
        group_input_016_1.outputs[61].show_expanded = False
    if hasattr(group_input_016_1.outputs[62], 'default_value'):
        group_input_016_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_016_1.outputs[62], 'display_shape'):
        group_input_016_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[62], 'enabled'):
        group_input_016_1.outputs[62].enabled = True
    if hasattr(group_input_016_1.outputs[62], 'hide'):
        group_input_016_1.outputs[62].hide = True
    if hasattr(group_input_016_1.outputs[62], 'hide_value'):
        group_input_016_1.outputs[62].hide_value = False
    if hasattr(group_input_016_1.outputs[62], 'name'):
        group_input_016_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_016_1.outputs[62], 'show_expanded'):
        group_input_016_1.outputs[62].show_expanded = False
    if hasattr(group_input_016_1.outputs[63], 'default_value'):
        group_input_016_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_016_1.outputs[63], 'display_shape'):
        group_input_016_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[63], 'enabled'):
        group_input_016_1.outputs[63].enabled = True
    if hasattr(group_input_016_1.outputs[63], 'hide'):
        group_input_016_1.outputs[63].hide = True
    if hasattr(group_input_016_1.outputs[63], 'hide_value'):
        group_input_016_1.outputs[63].hide_value = False
    if hasattr(group_input_016_1.outputs[63], 'name'):
        group_input_016_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_016_1.outputs[63], 'show_expanded'):
        group_input_016_1.outputs[63].show_expanded = False
    if hasattr(group_input_016_1.outputs[64], 'default_value'):
        group_input_016_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_016_1.outputs[64], 'display_shape'):
        group_input_016_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[64], 'enabled'):
        group_input_016_1.outputs[64].enabled = True
    if hasattr(group_input_016_1.outputs[64], 'hide'):
        group_input_016_1.outputs[64].hide = True
    if hasattr(group_input_016_1.outputs[64], 'hide_value'):
        group_input_016_1.outputs[64].hide_value = False
    if hasattr(group_input_016_1.outputs[64], 'name'):
        group_input_016_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_016_1.outputs[64], 'show_expanded'):
        group_input_016_1.outputs[64].show_expanded = False
    if hasattr(group_input_016_1.outputs[65], 'default_value'):
        group_input_016_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_016_1.outputs[65], 'display_shape'):
        group_input_016_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[65], 'enabled'):
        group_input_016_1.outputs[65].enabled = True
    if hasattr(group_input_016_1.outputs[65], 'hide'):
        group_input_016_1.outputs[65].hide = True
    if hasattr(group_input_016_1.outputs[65], 'hide_value'):
        group_input_016_1.outputs[65].hide_value = False
    if hasattr(group_input_016_1.outputs[65], 'name'):
        group_input_016_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_016_1.outputs[65], 'show_expanded'):
        group_input_016_1.outputs[65].show_expanded = False
    if hasattr(group_input_016_1.outputs[66], 'default_value'):
        group_input_016_1.outputs[66].default_value = 0.0
    if hasattr(group_input_016_1.outputs[66], 'display_shape'):
        group_input_016_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[66], 'enabled'):
        group_input_016_1.outputs[66].enabled = True
    if hasattr(group_input_016_1.outputs[66], 'hide'):
        group_input_016_1.outputs[66].hide = True
    if hasattr(group_input_016_1.outputs[66], 'hide_value'):
        group_input_016_1.outputs[66].hide_value = False
    if hasattr(group_input_016_1.outputs[66], 'name'):
        group_input_016_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_016_1.outputs[66], 'show_expanded'):
        group_input_016_1.outputs[66].show_expanded = False
    if hasattr(group_input_016_1.outputs[67], 'default_value'):
        group_input_016_1.outputs[67].default_value = 0.0
    if hasattr(group_input_016_1.outputs[67], 'display_shape'):
        group_input_016_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[67], 'enabled'):
        group_input_016_1.outputs[67].enabled = True
    if hasattr(group_input_016_1.outputs[67], 'hide'):
        group_input_016_1.outputs[67].hide = True
    if hasattr(group_input_016_1.outputs[67], 'hide_value'):
        group_input_016_1.outputs[67].hide_value = False
    if hasattr(group_input_016_1.outputs[67], 'name'):
        group_input_016_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_016_1.outputs[67], 'show_expanded'):
        group_input_016_1.outputs[67].show_expanded = False
    if hasattr(group_input_016_1.outputs[68], 'default_value'):
        group_input_016_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[68], 'display_shape'):
        group_input_016_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[68], 'enabled'):
        group_input_016_1.outputs[68].enabled = True
    if hasattr(group_input_016_1.outputs[68], 'hide'):
        group_input_016_1.outputs[68].hide = True
    if hasattr(group_input_016_1.outputs[68], 'hide_value'):
        group_input_016_1.outputs[68].hide_value = False
    if hasattr(group_input_016_1.outputs[68], 'name'):
        group_input_016_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_016_1.outputs[68], 'show_expanded'):
        group_input_016_1.outputs[68].show_expanded = False
    if hasattr(group_input_016_1.outputs[69], 'default_value'):
        group_input_016_1.outputs[69].default_value = 0.0
    if hasattr(group_input_016_1.outputs[69], 'display_shape'):
        group_input_016_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[69], 'enabled'):
        group_input_016_1.outputs[69].enabled = True
    if hasattr(group_input_016_1.outputs[69], 'hide'):
        group_input_016_1.outputs[69].hide = True
    if hasattr(group_input_016_1.outputs[69], 'hide_value'):
        group_input_016_1.outputs[69].hide_value = False
    if hasattr(group_input_016_1.outputs[69], 'name'):
        group_input_016_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_016_1.outputs[69], 'show_expanded'):
        group_input_016_1.outputs[69].show_expanded = False
    if hasattr(group_input_016_1.outputs[70], 'default_value'):
        group_input_016_1.outputs[70].default_value = 0.0
    if hasattr(group_input_016_1.outputs[70], 'display_shape'):
        group_input_016_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[70], 'enabled'):
        group_input_016_1.outputs[70].enabled = True
    if hasattr(group_input_016_1.outputs[70], 'hide'):
        group_input_016_1.outputs[70].hide = True
    if hasattr(group_input_016_1.outputs[70], 'hide_value'):
        group_input_016_1.outputs[70].hide_value = False
    if hasattr(group_input_016_1.outputs[70], 'name'):
        group_input_016_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_016_1.outputs[70], 'show_expanded'):
        group_input_016_1.outputs[70].show_expanded = False
    if hasattr(group_input_016_1.outputs[71], 'default_value'):
        group_input_016_1.outputs[71].default_value = 0.0
    if hasattr(group_input_016_1.outputs[71], 'display_shape'):
        group_input_016_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[71], 'enabled'):
        group_input_016_1.outputs[71].enabled = True
    if hasattr(group_input_016_1.outputs[71], 'hide'):
        group_input_016_1.outputs[71].hide = True
    if hasattr(group_input_016_1.outputs[71], 'hide_value'):
        group_input_016_1.outputs[71].hide_value = False
    if hasattr(group_input_016_1.outputs[71], 'name'):
        group_input_016_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_016_1.outputs[71], 'show_expanded'):
        group_input_016_1.outputs[71].show_expanded = False
    if hasattr(group_input_016_1.outputs[72], 'default_value'):
        group_input_016_1.outputs[72].default_value = 0.0
    if hasattr(group_input_016_1.outputs[72], 'display_shape'):
        group_input_016_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[72], 'enabled'):
        group_input_016_1.outputs[72].enabled = True
    if hasattr(group_input_016_1.outputs[72], 'hide'):
        group_input_016_1.outputs[72].hide = False
    if hasattr(group_input_016_1.outputs[72], 'hide_value'):
        group_input_016_1.outputs[72].hide_value = False
    if hasattr(group_input_016_1.outputs[72], 'name'):
        group_input_016_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_016_1.outputs[72], 'show_expanded'):
        group_input_016_1.outputs[72].show_expanded = False
    if hasattr(group_input_016_1.outputs[73], 'default_value'):
        group_input_016_1.outputs[73].default_value = 0.0
    if hasattr(group_input_016_1.outputs[73], 'display_shape'):
        group_input_016_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[73], 'enabled'):
        group_input_016_1.outputs[73].enabled = True
    if hasattr(group_input_016_1.outputs[73], 'hide'):
        group_input_016_1.outputs[73].hide = True
    if hasattr(group_input_016_1.outputs[73], 'hide_value'):
        group_input_016_1.outputs[73].hide_value = False
    if hasattr(group_input_016_1.outputs[73], 'name'):
        group_input_016_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_016_1.outputs[73], 'show_expanded'):
        group_input_016_1.outputs[73].show_expanded = False
    if hasattr(group_input_016_1.outputs[74], 'default_value'):
        group_input_016_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_016_1.outputs[74], 'display_shape'):
        group_input_016_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[74], 'enabled'):
        group_input_016_1.outputs[74].enabled = True
    if hasattr(group_input_016_1.outputs[74], 'hide'):
        group_input_016_1.outputs[74].hide = True
    if hasattr(group_input_016_1.outputs[74], 'hide_value'):
        group_input_016_1.outputs[74].hide_value = False
    if hasattr(group_input_016_1.outputs[74], 'name'):
        group_input_016_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_016_1.outputs[74], 'show_expanded'):
        group_input_016_1.outputs[74].show_expanded = False
    if hasattr(group_input_016_1.outputs[75], 'default_value'):
        group_input_016_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_016_1.outputs[75], 'display_shape'):
        group_input_016_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[75], 'enabled'):
        group_input_016_1.outputs[75].enabled = True
    if hasattr(group_input_016_1.outputs[75], 'hide'):
        group_input_016_1.outputs[75].hide = True
    if hasattr(group_input_016_1.outputs[75], 'hide_value'):
        group_input_016_1.outputs[75].hide_value = False
    if hasattr(group_input_016_1.outputs[75], 'name'):
        group_input_016_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_016_1.outputs[75], 'show_expanded'):
        group_input_016_1.outputs[75].show_expanded = False
    if hasattr(group_input_016_1.outputs[76], 'default_value'):
        group_input_016_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_016_1.outputs[76], 'display_shape'):
        group_input_016_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[76], 'enabled'):
        group_input_016_1.outputs[76].enabled = True
    if hasattr(group_input_016_1.outputs[76], 'hide'):
        group_input_016_1.outputs[76].hide = True
    if hasattr(group_input_016_1.outputs[76], 'hide_value'):
        group_input_016_1.outputs[76].hide_value = False
    if hasattr(group_input_016_1.outputs[76], 'name'):
        group_input_016_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_016_1.outputs[76], 'show_expanded'):
        group_input_016_1.outputs[76].show_expanded = False
    if hasattr(group_input_016_1.outputs[77], 'default_value'):
        group_input_016_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_016_1.outputs[77], 'display_shape'):
        group_input_016_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[77], 'enabled'):
        group_input_016_1.outputs[77].enabled = True
    if hasattr(group_input_016_1.outputs[77], 'hide'):
        group_input_016_1.outputs[77].hide = True
    if hasattr(group_input_016_1.outputs[77], 'hide_value'):
        group_input_016_1.outputs[77].hide_value = False
    if hasattr(group_input_016_1.outputs[77], 'name'):
        group_input_016_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_016_1.outputs[77], 'show_expanded'):
        group_input_016_1.outputs[77].show_expanded = False
    if hasattr(group_input_016_1.outputs[78], 'default_value'):
        group_input_016_1.outputs[78].default_value = 0.0
    if hasattr(group_input_016_1.outputs[78], 'display_shape'):
        group_input_016_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[78], 'enabled'):
        group_input_016_1.outputs[78].enabled = True
    if hasattr(group_input_016_1.outputs[78], 'hide'):
        group_input_016_1.outputs[78].hide = True
    if hasattr(group_input_016_1.outputs[78], 'hide_value'):
        group_input_016_1.outputs[78].hide_value = False
    if hasattr(group_input_016_1.outputs[78], 'name'):
        group_input_016_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_016_1.outputs[78], 'show_expanded'):
        group_input_016_1.outputs[78].show_expanded = False
    if hasattr(group_input_016_1.outputs[79], 'default_value'):
        group_input_016_1.outputs[79].default_value = 0.0
    if hasattr(group_input_016_1.outputs[79], 'display_shape'):
        group_input_016_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[79], 'enabled'):
        group_input_016_1.outputs[79].enabled = True
    if hasattr(group_input_016_1.outputs[79], 'hide'):
        group_input_016_1.outputs[79].hide = True
    if hasattr(group_input_016_1.outputs[79], 'hide_value'):
        group_input_016_1.outputs[79].hide_value = False
    if hasattr(group_input_016_1.outputs[79], 'name'):
        group_input_016_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_016_1.outputs[79], 'show_expanded'):
        group_input_016_1.outputs[79].show_expanded = False
    if hasattr(group_input_016_1.outputs[80], 'default_value'):
        group_input_016_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[80], 'display_shape'):
        group_input_016_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[80], 'enabled'):
        group_input_016_1.outputs[80].enabled = True
    if hasattr(group_input_016_1.outputs[80], 'hide'):
        group_input_016_1.outputs[80].hide = True
    if hasattr(group_input_016_1.outputs[80], 'hide_value'):
        group_input_016_1.outputs[80].hide_value = False
    if hasattr(group_input_016_1.outputs[80], 'name'):
        group_input_016_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_016_1.outputs[80], 'show_expanded'):
        group_input_016_1.outputs[80].show_expanded = False
    if hasattr(group_input_016_1.outputs[81], 'default_value'):
        group_input_016_1.outputs[81].default_value = 0.0
    if hasattr(group_input_016_1.outputs[81], 'display_shape'):
        group_input_016_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[81], 'enabled'):
        group_input_016_1.outputs[81].enabled = True
    if hasattr(group_input_016_1.outputs[81], 'hide'):
        group_input_016_1.outputs[81].hide = True
    if hasattr(group_input_016_1.outputs[81], 'hide_value'):
        group_input_016_1.outputs[81].hide_value = False
    if hasattr(group_input_016_1.outputs[81], 'name'):
        group_input_016_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_016_1.outputs[81], 'show_expanded'):
        group_input_016_1.outputs[81].show_expanded = False
    if hasattr(group_input_016_1.outputs[82], 'default_value'):
        group_input_016_1.outputs[82].default_value = 0.0
    if hasattr(group_input_016_1.outputs[82], 'display_shape'):
        group_input_016_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[82], 'enabled'):
        group_input_016_1.outputs[82].enabled = True
    if hasattr(group_input_016_1.outputs[82], 'hide'):
        group_input_016_1.outputs[82].hide = True
    if hasattr(group_input_016_1.outputs[82], 'hide_value'):
        group_input_016_1.outputs[82].hide_value = False
    if hasattr(group_input_016_1.outputs[82], 'name'):
        group_input_016_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_016_1.outputs[82], 'show_expanded'):
        group_input_016_1.outputs[82].show_expanded = False
    if hasattr(group_input_016_1.outputs[83], 'default_value'):
        group_input_016_1.outputs[83].default_value = 0.0
    if hasattr(group_input_016_1.outputs[83], 'display_shape'):
        group_input_016_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[83], 'enabled'):
        group_input_016_1.outputs[83].enabled = True
    if hasattr(group_input_016_1.outputs[83], 'hide'):
        group_input_016_1.outputs[83].hide = True
    if hasattr(group_input_016_1.outputs[83], 'hide_value'):
        group_input_016_1.outputs[83].hide_value = False
    if hasattr(group_input_016_1.outputs[83], 'name'):
        group_input_016_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_016_1.outputs[83], 'show_expanded'):
        group_input_016_1.outputs[83].show_expanded = False
    if hasattr(group_input_016_1.outputs[84], 'default_value'):
        group_input_016_1.outputs[84].default_value = 0.0
    if hasattr(group_input_016_1.outputs[84], 'display_shape'):
        group_input_016_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[84], 'enabled'):
        group_input_016_1.outputs[84].enabled = True
    if hasattr(group_input_016_1.outputs[84], 'hide'):
        group_input_016_1.outputs[84].hide = False
    if hasattr(group_input_016_1.outputs[84], 'hide_value'):
        group_input_016_1.outputs[84].hide_value = False
    if hasattr(group_input_016_1.outputs[84], 'name'):
        group_input_016_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_016_1.outputs[84], 'show_expanded'):
        group_input_016_1.outputs[84].show_expanded = False
    if hasattr(group_input_016_1.outputs[85], 'default_value'):
        group_input_016_1.outputs[85].default_value = 0.0
    if hasattr(group_input_016_1.outputs[85], 'display_shape'):
        group_input_016_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[85], 'enabled'):
        group_input_016_1.outputs[85].enabled = True
    if hasattr(group_input_016_1.outputs[85], 'hide'):
        group_input_016_1.outputs[85].hide = True
    if hasattr(group_input_016_1.outputs[85], 'hide_value'):
        group_input_016_1.outputs[85].hide_value = False
    if hasattr(group_input_016_1.outputs[85], 'name'):
        group_input_016_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_016_1.outputs[85], 'show_expanded'):
        group_input_016_1.outputs[85].show_expanded = False
    if hasattr(group_input_016_1.outputs[86], 'default_value'):
        group_input_016_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_016_1.outputs[86], 'display_shape'):
        group_input_016_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[86], 'enabled'):
        group_input_016_1.outputs[86].enabled = True
    if hasattr(group_input_016_1.outputs[86], 'hide'):
        group_input_016_1.outputs[86].hide = True
    if hasattr(group_input_016_1.outputs[86], 'hide_value'):
        group_input_016_1.outputs[86].hide_value = False
    if hasattr(group_input_016_1.outputs[86], 'name'):
        group_input_016_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_016_1.outputs[86], 'show_expanded'):
        group_input_016_1.outputs[86].show_expanded = False
    if hasattr(group_input_016_1.outputs[87], 'default_value'):
        group_input_016_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_016_1.outputs[87], 'display_shape'):
        group_input_016_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[87], 'enabled'):
        group_input_016_1.outputs[87].enabled = True
    if hasattr(group_input_016_1.outputs[87], 'hide'):
        group_input_016_1.outputs[87].hide = True
    if hasattr(group_input_016_1.outputs[87], 'hide_value'):
        group_input_016_1.outputs[87].hide_value = False
    if hasattr(group_input_016_1.outputs[87], 'name'):
        group_input_016_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_016_1.outputs[87], 'show_expanded'):
        group_input_016_1.outputs[87].show_expanded = False
    if hasattr(group_input_016_1.outputs[88], 'default_value'):
        group_input_016_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_016_1.outputs[88], 'display_shape'):
        group_input_016_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[88], 'enabled'):
        group_input_016_1.outputs[88].enabled = True
    if hasattr(group_input_016_1.outputs[88], 'hide'):
        group_input_016_1.outputs[88].hide = True
    if hasattr(group_input_016_1.outputs[88], 'hide_value'):
        group_input_016_1.outputs[88].hide_value = False
    if hasattr(group_input_016_1.outputs[88], 'name'):
        group_input_016_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_016_1.outputs[88], 'show_expanded'):
        group_input_016_1.outputs[88].show_expanded = False
    if hasattr(group_input_016_1.outputs[89], 'default_value'):
        group_input_016_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_016_1.outputs[89], 'display_shape'):
        group_input_016_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[89], 'enabled'):
        group_input_016_1.outputs[89].enabled = True
    if hasattr(group_input_016_1.outputs[89], 'hide'):
        group_input_016_1.outputs[89].hide = True
    if hasattr(group_input_016_1.outputs[89], 'hide_value'):
        group_input_016_1.outputs[89].hide_value = False
    if hasattr(group_input_016_1.outputs[89], 'name'):
        group_input_016_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_016_1.outputs[89], 'show_expanded'):
        group_input_016_1.outputs[89].show_expanded = False
    if hasattr(group_input_016_1.outputs[90], 'default_value'):
        group_input_016_1.outputs[90].default_value = 0.0
    if hasattr(group_input_016_1.outputs[90], 'display_shape'):
        group_input_016_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[90], 'enabled'):
        group_input_016_1.outputs[90].enabled = True
    if hasattr(group_input_016_1.outputs[90], 'hide'):
        group_input_016_1.outputs[90].hide = True
    if hasattr(group_input_016_1.outputs[90], 'hide_value'):
        group_input_016_1.outputs[90].hide_value = False
    if hasattr(group_input_016_1.outputs[90], 'name'):
        group_input_016_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_016_1.outputs[90], 'show_expanded'):
        group_input_016_1.outputs[90].show_expanded = False
    if hasattr(group_input_016_1.outputs[91], 'default_value'):
        group_input_016_1.outputs[91].default_value = 0.0
    if hasattr(group_input_016_1.outputs[91], 'display_shape'):
        group_input_016_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[91], 'enabled'):
        group_input_016_1.outputs[91].enabled = True
    if hasattr(group_input_016_1.outputs[91], 'hide'):
        group_input_016_1.outputs[91].hide = True
    if hasattr(group_input_016_1.outputs[91], 'hide_value'):
        group_input_016_1.outputs[91].hide_value = False
    if hasattr(group_input_016_1.outputs[91], 'name'):
        group_input_016_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_016_1.outputs[91], 'show_expanded'):
        group_input_016_1.outputs[91].show_expanded = False
    if hasattr(group_input_016_1.outputs[92], 'default_value'):
        group_input_016_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_016_1.outputs[92], 'display_shape'):
        group_input_016_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[92], 'enabled'):
        group_input_016_1.outputs[92].enabled = True
    if hasattr(group_input_016_1.outputs[92], 'hide'):
        group_input_016_1.outputs[92].hide = True
    if hasattr(group_input_016_1.outputs[92], 'hide_value'):
        group_input_016_1.outputs[92].hide_value = False
    if hasattr(group_input_016_1.outputs[92], 'name'):
        group_input_016_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_016_1.outputs[92], 'show_expanded'):
        group_input_016_1.outputs[92].show_expanded = False
    if hasattr(group_input_016_1.outputs[93], 'default_value'):
        group_input_016_1.outputs[93].default_value = 0.0
    if hasattr(group_input_016_1.outputs[93], 'display_shape'):
        group_input_016_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[93], 'enabled'):
        group_input_016_1.outputs[93].enabled = True
    if hasattr(group_input_016_1.outputs[93], 'hide'):
        group_input_016_1.outputs[93].hide = True
    if hasattr(group_input_016_1.outputs[93], 'hide_value'):
        group_input_016_1.outputs[93].hide_value = False
    if hasattr(group_input_016_1.outputs[93], 'name'):
        group_input_016_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_016_1.outputs[93], 'show_expanded'):
        group_input_016_1.outputs[93].show_expanded = False
    if hasattr(group_input_016_1.outputs[94], 'default_value'):
        group_input_016_1.outputs[94].default_value = 0.0
    if hasattr(group_input_016_1.outputs[94], 'display_shape'):
        group_input_016_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[94], 'enabled'):
        group_input_016_1.outputs[94].enabled = True
    if hasattr(group_input_016_1.outputs[94], 'hide'):
        group_input_016_1.outputs[94].hide = True
    if hasattr(group_input_016_1.outputs[94], 'hide_value'):
        group_input_016_1.outputs[94].hide_value = False
    if hasattr(group_input_016_1.outputs[94], 'name'):
        group_input_016_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_016_1.outputs[94], 'show_expanded'):
        group_input_016_1.outputs[94].show_expanded = False
    if hasattr(group_input_016_1.outputs[95], 'default_value'):
        group_input_016_1.outputs[95].default_value = 0.0
    if hasattr(group_input_016_1.outputs[95], 'display_shape'):
        group_input_016_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[95], 'enabled'):
        group_input_016_1.outputs[95].enabled = True
    if hasattr(group_input_016_1.outputs[95], 'hide'):
        group_input_016_1.outputs[95].hide = True
    if hasattr(group_input_016_1.outputs[95], 'hide_value'):
        group_input_016_1.outputs[95].hide_value = False
    if hasattr(group_input_016_1.outputs[95], 'name'):
        group_input_016_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_016_1.outputs[95], 'show_expanded'):
        group_input_016_1.outputs[95].show_expanded = False
    if hasattr(group_input_016_1.outputs[96], 'default_value'):
        group_input_016_1.outputs[96].default_value = 0.0
    if hasattr(group_input_016_1.outputs[96], 'display_shape'):
        group_input_016_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[96], 'enabled'):
        group_input_016_1.outputs[96].enabled = True
    if hasattr(group_input_016_1.outputs[96], 'hide'):
        group_input_016_1.outputs[96].hide = False
    if hasattr(group_input_016_1.outputs[96], 'hide_value'):
        group_input_016_1.outputs[96].hide_value = False
    if hasattr(group_input_016_1.outputs[96], 'name'):
        group_input_016_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_016_1.outputs[96], 'show_expanded'):
        group_input_016_1.outputs[96].show_expanded = False
    if hasattr(group_input_016_1.outputs[97], 'default_value'):
        group_input_016_1.outputs[97].default_value = 0.0
    if hasattr(group_input_016_1.outputs[97], 'display_shape'):
        group_input_016_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[97], 'enabled'):
        group_input_016_1.outputs[97].enabled = True
    if hasattr(group_input_016_1.outputs[97], 'hide'):
        group_input_016_1.outputs[97].hide = True
    if hasattr(group_input_016_1.outputs[97], 'hide_value'):
        group_input_016_1.outputs[97].hide_value = False
    if hasattr(group_input_016_1.outputs[97], 'name'):
        group_input_016_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_016_1.outputs[97], 'show_expanded'):
        group_input_016_1.outputs[97].show_expanded = False
    if hasattr(group_input_016_1.outputs[98], 'default_value'):
        group_input_016_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_016_1.outputs[98], 'display_shape'):
        group_input_016_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[98], 'enabled'):
        group_input_016_1.outputs[98].enabled = True
    if hasattr(group_input_016_1.outputs[98], 'hide'):
        group_input_016_1.outputs[98].hide = True
    if hasattr(group_input_016_1.outputs[98], 'hide_value'):
        group_input_016_1.outputs[98].hide_value = False
    if hasattr(group_input_016_1.outputs[98], 'name'):
        group_input_016_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_016_1.outputs[98], 'show_expanded'):
        group_input_016_1.outputs[98].show_expanded = False
    if hasattr(group_input_016_1.outputs[99], 'default_value'):
        group_input_016_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_016_1.outputs[99], 'display_shape'):
        group_input_016_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[99], 'enabled'):
        group_input_016_1.outputs[99].enabled = True
    if hasattr(group_input_016_1.outputs[99], 'hide'):
        group_input_016_1.outputs[99].hide = True
    if hasattr(group_input_016_1.outputs[99], 'hide_value'):
        group_input_016_1.outputs[99].hide_value = False
    if hasattr(group_input_016_1.outputs[99], 'name'):
        group_input_016_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_016_1.outputs[99], 'show_expanded'):
        group_input_016_1.outputs[99].show_expanded = False
    if hasattr(group_input_016_1.outputs[100], 'default_value'):
        group_input_016_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_016_1.outputs[100], 'display_shape'):
        group_input_016_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[100], 'enabled'):
        group_input_016_1.outputs[100].enabled = True
    if hasattr(group_input_016_1.outputs[100], 'hide'):
        group_input_016_1.outputs[100].hide = True
    if hasattr(group_input_016_1.outputs[100], 'hide_value'):
        group_input_016_1.outputs[100].hide_value = False
    if hasattr(group_input_016_1.outputs[100], 'name'):
        group_input_016_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_016_1.outputs[100], 'show_expanded'):
        group_input_016_1.outputs[100].show_expanded = False
    if hasattr(group_input_016_1.outputs[101], 'default_value'):
        group_input_016_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_016_1.outputs[101], 'display_shape'):
        group_input_016_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_016_1.outputs[101], 'enabled'):
        group_input_016_1.outputs[101].enabled = True
    if hasattr(group_input_016_1.outputs[101], 'hide'):
        group_input_016_1.outputs[101].hide = True
    if hasattr(group_input_016_1.outputs[101], 'hide_value'):
        group_input_016_1.outputs[101].hide_value = False
    if hasattr(group_input_016_1.outputs[101], 'name'):
        group_input_016_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_016_1.outputs[101], 'show_expanded'):
        group_input_016_1.outputs[101].show_expanded = False

    group_input_018_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_018_1, 'color'):
        group_input_018_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_018_1, 'hide'):
        group_input_018_1.hide = False
    if hasattr(group_input_018_1, 'location'):
        group_input_018_1.location = (-616.3279418945312, -142.17816162109375)
    if hasattr(group_input_018_1, 'mute'):
        group_input_018_1.mute = False
    if hasattr(group_input_018_1, 'name'):
        group_input_018_1.name = 'Group Input.018'
    if hasattr(group_input_018_1, 'use_custom_color'):
        group_input_018_1.use_custom_color = False
    if hasattr(group_input_018_1, 'width'):
        group_input_018_1.width = 400.0
    if hasattr(group_input_018_1.outputs[0], 'default_value'):
        group_input_018_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[0], 'display_shape'):
        group_input_018_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[0], 'enabled'):
        group_input_018_1.outputs[0].enabled = True
    if hasattr(group_input_018_1.outputs[0], 'hide'):
        group_input_018_1.outputs[0].hide = False
    if hasattr(group_input_018_1.outputs[0], 'hide_value'):
        group_input_018_1.outputs[0].hide_value = False
    if hasattr(group_input_018_1.outputs[0], 'name'):
        group_input_018_1.outputs[0].name = 'ASG'
    if hasattr(group_input_018_1.outputs[0], 'show_expanded'):
        group_input_018_1.outputs[0].show_expanded = False
    if hasattr(group_input_018_1.outputs[1], 'default_value'):
        group_input_018_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[1], 'display_shape'):
        group_input_018_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[1], 'enabled'):
        group_input_018_1.outputs[1].enabled = True
    if hasattr(group_input_018_1.outputs[1], 'hide'):
        group_input_018_1.outputs[1].hide = False
    if hasattr(group_input_018_1.outputs[1], 'hide_value'):
        group_input_018_1.outputs[1].hide_value = False
    if hasattr(group_input_018_1.outputs[1], 'name'):
        group_input_018_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_018_1.outputs[1], 'show_expanded'):
        group_input_018_1.outputs[1].show_expanded = False
    if hasattr(group_input_018_1.outputs[2], 'default_value'):
        group_input_018_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[2], 'display_shape'):
        group_input_018_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[2], 'enabled'):
        group_input_018_1.outputs[2].enabled = True
    if hasattr(group_input_018_1.outputs[2], 'hide'):
        group_input_018_1.outputs[2].hide = False
    if hasattr(group_input_018_1.outputs[2], 'hide_value'):
        group_input_018_1.outputs[2].hide_value = False
    if hasattr(group_input_018_1.outputs[2], 'name'):
        group_input_018_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_018_1.outputs[2], 'show_expanded'):
        group_input_018_1.outputs[2].show_expanded = False
    if hasattr(group_input_018_1.outputs[3], 'default_value'):
        group_input_018_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[3], 'display_shape'):
        group_input_018_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[3], 'enabled'):
        group_input_018_1.outputs[3].enabled = True
    if hasattr(group_input_018_1.outputs[3], 'hide'):
        group_input_018_1.outputs[3].hide = False
    if hasattr(group_input_018_1.outputs[3], 'hide_value'):
        group_input_018_1.outputs[3].hide_value = False
    if hasattr(group_input_018_1.outputs[3], 'name'):
        group_input_018_1.outputs[3].name = 'Normal'
    if hasattr(group_input_018_1.outputs[3], 'show_expanded'):
        group_input_018_1.outputs[3].show_expanded = False
    if hasattr(group_input_018_1.outputs[4], 'default_value'):
        group_input_018_1.outputs[4].default_value = 0.0
    if hasattr(group_input_018_1.outputs[4], 'display_shape'):
        group_input_018_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[4], 'enabled'):
        group_input_018_1.outputs[4].enabled = True
    if hasattr(group_input_018_1.outputs[4], 'hide'):
        group_input_018_1.outputs[4].hide = False
    if hasattr(group_input_018_1.outputs[4], 'hide_value'):
        group_input_018_1.outputs[4].hide_value = False
    if hasattr(group_input_018_1.outputs[4], 'name'):
        group_input_018_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_018_1.outputs[4], 'show_expanded'):
        group_input_018_1.outputs[4].show_expanded = False
    if hasattr(group_input_018_1.outputs[5], 'default_value'):
        group_input_018_1.outputs[5].default_value = 1.0
    if hasattr(group_input_018_1.outputs[5], 'display_shape'):
        group_input_018_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[5], 'enabled'):
        group_input_018_1.outputs[5].enabled = True
    if hasattr(group_input_018_1.outputs[5], 'hide'):
        group_input_018_1.outputs[5].hide = False
    if hasattr(group_input_018_1.outputs[5], 'hide_value'):
        group_input_018_1.outputs[5].hide_value = False
    if hasattr(group_input_018_1.outputs[5], 'name'):
        group_input_018_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_018_1.outputs[5], 'show_expanded'):
        group_input_018_1.outputs[5].show_expanded = False
    if hasattr(group_input_018_1.outputs[6], 'default_value'):
        group_input_018_1.outputs[6].default_value = 0.0
    if hasattr(group_input_018_1.outputs[6], 'display_shape'):
        group_input_018_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[6], 'enabled'):
        group_input_018_1.outputs[6].enabled = True
    if hasattr(group_input_018_1.outputs[6], 'hide'):
        group_input_018_1.outputs[6].hide = True
    if hasattr(group_input_018_1.outputs[6], 'hide_value'):
        group_input_018_1.outputs[6].hide_value = False
    if hasattr(group_input_018_1.outputs[6], 'name'):
        group_input_018_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_018_1.outputs[6], 'show_expanded'):
        group_input_018_1.outputs[6].show_expanded = False
    if hasattr(group_input_018_1.outputs[7], 'default_value'):
        group_input_018_1.outputs[7].default_value = 0.0
    if hasattr(group_input_018_1.outputs[7], 'display_shape'):
        group_input_018_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[7], 'enabled'):
        group_input_018_1.outputs[7].enabled = True
    if hasattr(group_input_018_1.outputs[7], 'hide'):
        group_input_018_1.outputs[7].hide = True
    if hasattr(group_input_018_1.outputs[7], 'hide_value'):
        group_input_018_1.outputs[7].hide_value = False
    if hasattr(group_input_018_1.outputs[7], 'name'):
        group_input_018_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_018_1.outputs[7], 'show_expanded'):
        group_input_018_1.outputs[7].show_expanded = False
    if hasattr(group_input_018_1.outputs[8], 'default_value'):
        group_input_018_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[8], 'display_shape'):
        group_input_018_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[8], 'enabled'):
        group_input_018_1.outputs[8].enabled = True
    if hasattr(group_input_018_1.outputs[8], 'hide'):
        group_input_018_1.outputs[8].hide = False
    if hasattr(group_input_018_1.outputs[8], 'hide_value'):
        group_input_018_1.outputs[8].hide_value = False
    if hasattr(group_input_018_1.outputs[8], 'name'):
        group_input_018_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_018_1.outputs[8], 'show_expanded'):
        group_input_018_1.outputs[8].show_expanded = False
    if hasattr(group_input_018_1.outputs[9], 'default_value'):
        group_input_018_1.outputs[9].default_value = 0.0
    if hasattr(group_input_018_1.outputs[9], 'display_shape'):
        group_input_018_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[9], 'enabled'):
        group_input_018_1.outputs[9].enabled = True
    if hasattr(group_input_018_1.outputs[9], 'hide'):
        group_input_018_1.outputs[9].hide = True
    if hasattr(group_input_018_1.outputs[9], 'hide_value'):
        group_input_018_1.outputs[9].hide_value = False
    if hasattr(group_input_018_1.outputs[9], 'name'):
        group_input_018_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_018_1.outputs[9], 'show_expanded'):
        group_input_018_1.outputs[9].show_expanded = False
    if hasattr(group_input_018_1.outputs[10], 'default_value'):
        group_input_018_1.outputs[10].default_value = 0.0
    if hasattr(group_input_018_1.outputs[10], 'display_shape'):
        group_input_018_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[10], 'enabled'):
        group_input_018_1.outputs[10].enabled = True
    if hasattr(group_input_018_1.outputs[10], 'hide'):
        group_input_018_1.outputs[10].hide = True
    if hasattr(group_input_018_1.outputs[10], 'hide_value'):
        group_input_018_1.outputs[10].hide_value = False
    if hasattr(group_input_018_1.outputs[10], 'name'):
        group_input_018_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_018_1.outputs[10], 'show_expanded'):
        group_input_018_1.outputs[10].show_expanded = False
    if hasattr(group_input_018_1.outputs[11], 'default_value'):
        group_input_018_1.outputs[11].default_value = 0.0
    if hasattr(group_input_018_1.outputs[11], 'display_shape'):
        group_input_018_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[11], 'enabled'):
        group_input_018_1.outputs[11].enabled = True
    if hasattr(group_input_018_1.outputs[11], 'hide'):
        group_input_018_1.outputs[11].hide = True
    if hasattr(group_input_018_1.outputs[11], 'hide_value'):
        group_input_018_1.outputs[11].hide_value = False
    if hasattr(group_input_018_1.outputs[11], 'name'):
        group_input_018_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_018_1.outputs[11], 'show_expanded'):
        group_input_018_1.outputs[11].show_expanded = False
    if hasattr(group_input_018_1.outputs[12], 'default_value'):
        group_input_018_1.outputs[12].default_value = 0.0
    if hasattr(group_input_018_1.outputs[12], 'display_shape'):
        group_input_018_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[12], 'enabled'):
        group_input_018_1.outputs[12].enabled = True
    if hasattr(group_input_018_1.outputs[12], 'hide'):
        group_input_018_1.outputs[12].hide = True
    if hasattr(group_input_018_1.outputs[12], 'hide_value'):
        group_input_018_1.outputs[12].hide_value = False
    if hasattr(group_input_018_1.outputs[12], 'name'):
        group_input_018_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_018_1.outputs[12], 'show_expanded'):
        group_input_018_1.outputs[12].show_expanded = False
    if hasattr(group_input_018_1.outputs[13], 'default_value'):
        group_input_018_1.outputs[13].default_value = 0.0
    if hasattr(group_input_018_1.outputs[13], 'display_shape'):
        group_input_018_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[13], 'enabled'):
        group_input_018_1.outputs[13].enabled = True
    if hasattr(group_input_018_1.outputs[13], 'hide'):
        group_input_018_1.outputs[13].hide = True
    if hasattr(group_input_018_1.outputs[13], 'hide_value'):
        group_input_018_1.outputs[13].hide_value = False
    if hasattr(group_input_018_1.outputs[13], 'name'):
        group_input_018_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_018_1.outputs[13], 'show_expanded'):
        group_input_018_1.outputs[13].show_expanded = False
    if hasattr(group_input_018_1.outputs[14], 'default_value'):
        group_input_018_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_018_1.outputs[14], 'display_shape'):
        group_input_018_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[14], 'enabled'):
        group_input_018_1.outputs[14].enabled = True
    if hasattr(group_input_018_1.outputs[14], 'hide'):
        group_input_018_1.outputs[14].hide = True
    if hasattr(group_input_018_1.outputs[14], 'hide_value'):
        group_input_018_1.outputs[14].hide_value = False
    if hasattr(group_input_018_1.outputs[14], 'name'):
        group_input_018_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_018_1.outputs[14], 'show_expanded'):
        group_input_018_1.outputs[14].show_expanded = False
    if hasattr(group_input_018_1.outputs[15], 'default_value'):
        group_input_018_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_018_1.outputs[15], 'display_shape'):
        group_input_018_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[15], 'enabled'):
        group_input_018_1.outputs[15].enabled = True
    if hasattr(group_input_018_1.outputs[15], 'hide'):
        group_input_018_1.outputs[15].hide = True
    if hasattr(group_input_018_1.outputs[15], 'hide_value'):
        group_input_018_1.outputs[15].hide_value = False
    if hasattr(group_input_018_1.outputs[15], 'name'):
        group_input_018_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_018_1.outputs[15], 'show_expanded'):
        group_input_018_1.outputs[15].show_expanded = False
    if hasattr(group_input_018_1.outputs[16], 'default_value'):
        group_input_018_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_018_1.outputs[16], 'display_shape'):
        group_input_018_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[16], 'enabled'):
        group_input_018_1.outputs[16].enabled = True
    if hasattr(group_input_018_1.outputs[16], 'hide'):
        group_input_018_1.outputs[16].hide = True
    if hasattr(group_input_018_1.outputs[16], 'hide_value'):
        group_input_018_1.outputs[16].hide_value = False
    if hasattr(group_input_018_1.outputs[16], 'name'):
        group_input_018_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_018_1.outputs[16], 'show_expanded'):
        group_input_018_1.outputs[16].show_expanded = False
    if hasattr(group_input_018_1.outputs[17], 'default_value'):
        group_input_018_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_018_1.outputs[17], 'display_shape'):
        group_input_018_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[17], 'enabled'):
        group_input_018_1.outputs[17].enabled = True
    if hasattr(group_input_018_1.outputs[17], 'hide'):
        group_input_018_1.outputs[17].hide = True
    if hasattr(group_input_018_1.outputs[17], 'hide_value'):
        group_input_018_1.outputs[17].hide_value = False
    if hasattr(group_input_018_1.outputs[17], 'name'):
        group_input_018_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_018_1.outputs[17], 'show_expanded'):
        group_input_018_1.outputs[17].show_expanded = False
    if hasattr(group_input_018_1.outputs[18], 'default_value'):
        group_input_018_1.outputs[18].default_value = 0.0
    if hasattr(group_input_018_1.outputs[18], 'display_shape'):
        group_input_018_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[18], 'enabled'):
        group_input_018_1.outputs[18].enabled = True
    if hasattr(group_input_018_1.outputs[18], 'hide'):
        group_input_018_1.outputs[18].hide = True
    if hasattr(group_input_018_1.outputs[18], 'hide_value'):
        group_input_018_1.outputs[18].hide_value = False
    if hasattr(group_input_018_1.outputs[18], 'name'):
        group_input_018_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_018_1.outputs[18], 'show_expanded'):
        group_input_018_1.outputs[18].show_expanded = False
    if hasattr(group_input_018_1.outputs[19], 'default_value'):
        group_input_018_1.outputs[19].default_value = 0.0
    if hasattr(group_input_018_1.outputs[19], 'display_shape'):
        group_input_018_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[19], 'enabled'):
        group_input_018_1.outputs[19].enabled = True
    if hasattr(group_input_018_1.outputs[19], 'hide'):
        group_input_018_1.outputs[19].hide = True
    if hasattr(group_input_018_1.outputs[19], 'hide_value'):
        group_input_018_1.outputs[19].hide_value = False
    if hasattr(group_input_018_1.outputs[19], 'name'):
        group_input_018_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_018_1.outputs[19], 'show_expanded'):
        group_input_018_1.outputs[19].show_expanded = False
    if hasattr(group_input_018_1.outputs[20], 'default_value'):
        group_input_018_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[20], 'display_shape'):
        group_input_018_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[20], 'enabled'):
        group_input_018_1.outputs[20].enabled = True
    if hasattr(group_input_018_1.outputs[20], 'hide'):
        group_input_018_1.outputs[20].hide = False
    if hasattr(group_input_018_1.outputs[20], 'hide_value'):
        group_input_018_1.outputs[20].hide_value = False
    if hasattr(group_input_018_1.outputs[20], 'name'):
        group_input_018_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_018_1.outputs[20], 'show_expanded'):
        group_input_018_1.outputs[20].show_expanded = False
    if hasattr(group_input_018_1.outputs[21], 'default_value'):
        group_input_018_1.outputs[21].default_value = 0.0
    if hasattr(group_input_018_1.outputs[21], 'display_shape'):
        group_input_018_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[21], 'enabled'):
        group_input_018_1.outputs[21].enabled = True
    if hasattr(group_input_018_1.outputs[21], 'hide'):
        group_input_018_1.outputs[21].hide = True
    if hasattr(group_input_018_1.outputs[21], 'hide_value'):
        group_input_018_1.outputs[21].hide_value = False
    if hasattr(group_input_018_1.outputs[21], 'name'):
        group_input_018_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_018_1.outputs[21], 'show_expanded'):
        group_input_018_1.outputs[21].show_expanded = False
    if hasattr(group_input_018_1.outputs[22], 'default_value'):
        group_input_018_1.outputs[22].default_value = 0.0
    if hasattr(group_input_018_1.outputs[22], 'display_shape'):
        group_input_018_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[22], 'enabled'):
        group_input_018_1.outputs[22].enabled = True
    if hasattr(group_input_018_1.outputs[22], 'hide'):
        group_input_018_1.outputs[22].hide = True
    if hasattr(group_input_018_1.outputs[22], 'hide_value'):
        group_input_018_1.outputs[22].hide_value = False
    if hasattr(group_input_018_1.outputs[22], 'name'):
        group_input_018_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_018_1.outputs[22], 'show_expanded'):
        group_input_018_1.outputs[22].show_expanded = False
    if hasattr(group_input_018_1.outputs[23], 'default_value'):
        group_input_018_1.outputs[23].default_value = 0.0
    if hasattr(group_input_018_1.outputs[23], 'display_shape'):
        group_input_018_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[23], 'enabled'):
        group_input_018_1.outputs[23].enabled = True
    if hasattr(group_input_018_1.outputs[23], 'hide'):
        group_input_018_1.outputs[23].hide = True
    if hasattr(group_input_018_1.outputs[23], 'hide_value'):
        group_input_018_1.outputs[23].hide_value = False
    if hasattr(group_input_018_1.outputs[23], 'name'):
        group_input_018_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_018_1.outputs[23], 'show_expanded'):
        group_input_018_1.outputs[23].show_expanded = False
    if hasattr(group_input_018_1.outputs[24], 'default_value'):
        group_input_018_1.outputs[24].default_value = 0.0
    if hasattr(group_input_018_1.outputs[24], 'display_shape'):
        group_input_018_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[24], 'enabled'):
        group_input_018_1.outputs[24].enabled = True
    if hasattr(group_input_018_1.outputs[24], 'hide'):
        group_input_018_1.outputs[24].hide = True
    if hasattr(group_input_018_1.outputs[24], 'hide_value'):
        group_input_018_1.outputs[24].hide_value = False
    if hasattr(group_input_018_1.outputs[24], 'name'):
        group_input_018_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_018_1.outputs[24], 'show_expanded'):
        group_input_018_1.outputs[24].show_expanded = False
    if hasattr(group_input_018_1.outputs[25], 'default_value'):
        group_input_018_1.outputs[25].default_value = 0.0
    if hasattr(group_input_018_1.outputs[25], 'display_shape'):
        group_input_018_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[25], 'enabled'):
        group_input_018_1.outputs[25].enabled = True
    if hasattr(group_input_018_1.outputs[25], 'hide'):
        group_input_018_1.outputs[25].hide = True
    if hasattr(group_input_018_1.outputs[25], 'hide_value'):
        group_input_018_1.outputs[25].hide_value = False
    if hasattr(group_input_018_1.outputs[25], 'name'):
        group_input_018_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_018_1.outputs[25], 'show_expanded'):
        group_input_018_1.outputs[25].show_expanded = False
    if hasattr(group_input_018_1.outputs[26], 'default_value'):
        group_input_018_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_018_1.outputs[26], 'display_shape'):
        group_input_018_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[26], 'enabled'):
        group_input_018_1.outputs[26].enabled = True
    if hasattr(group_input_018_1.outputs[26], 'hide'):
        group_input_018_1.outputs[26].hide = True
    if hasattr(group_input_018_1.outputs[26], 'hide_value'):
        group_input_018_1.outputs[26].hide_value = False
    if hasattr(group_input_018_1.outputs[26], 'name'):
        group_input_018_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_018_1.outputs[26], 'show_expanded'):
        group_input_018_1.outputs[26].show_expanded = False
    if hasattr(group_input_018_1.outputs[27], 'default_value'):
        group_input_018_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_018_1.outputs[27], 'display_shape'):
        group_input_018_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[27], 'enabled'):
        group_input_018_1.outputs[27].enabled = True
    if hasattr(group_input_018_1.outputs[27], 'hide'):
        group_input_018_1.outputs[27].hide = True
    if hasattr(group_input_018_1.outputs[27], 'hide_value'):
        group_input_018_1.outputs[27].hide_value = False
    if hasattr(group_input_018_1.outputs[27], 'name'):
        group_input_018_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_018_1.outputs[27], 'show_expanded'):
        group_input_018_1.outputs[27].show_expanded = False
    if hasattr(group_input_018_1.outputs[28], 'default_value'):
        group_input_018_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_018_1.outputs[28], 'display_shape'):
        group_input_018_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[28], 'enabled'):
        group_input_018_1.outputs[28].enabled = True
    if hasattr(group_input_018_1.outputs[28], 'hide'):
        group_input_018_1.outputs[28].hide = True
    if hasattr(group_input_018_1.outputs[28], 'hide_value'):
        group_input_018_1.outputs[28].hide_value = False
    if hasattr(group_input_018_1.outputs[28], 'name'):
        group_input_018_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_018_1.outputs[28], 'show_expanded'):
        group_input_018_1.outputs[28].show_expanded = False
    if hasattr(group_input_018_1.outputs[29], 'default_value'):
        group_input_018_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_018_1.outputs[29], 'display_shape'):
        group_input_018_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[29], 'enabled'):
        group_input_018_1.outputs[29].enabled = True
    if hasattr(group_input_018_1.outputs[29], 'hide'):
        group_input_018_1.outputs[29].hide = True
    if hasattr(group_input_018_1.outputs[29], 'hide_value'):
        group_input_018_1.outputs[29].hide_value = False
    if hasattr(group_input_018_1.outputs[29], 'name'):
        group_input_018_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_018_1.outputs[29], 'show_expanded'):
        group_input_018_1.outputs[29].show_expanded = False
    if hasattr(group_input_018_1.outputs[30], 'default_value'):
        group_input_018_1.outputs[30].default_value = 0.0
    if hasattr(group_input_018_1.outputs[30], 'display_shape'):
        group_input_018_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[30], 'enabled'):
        group_input_018_1.outputs[30].enabled = True
    if hasattr(group_input_018_1.outputs[30], 'hide'):
        group_input_018_1.outputs[30].hide = True
    if hasattr(group_input_018_1.outputs[30], 'hide_value'):
        group_input_018_1.outputs[30].hide_value = False
    if hasattr(group_input_018_1.outputs[30], 'name'):
        group_input_018_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_018_1.outputs[30], 'show_expanded'):
        group_input_018_1.outputs[30].show_expanded = False
    if hasattr(group_input_018_1.outputs[31], 'default_value'):
        group_input_018_1.outputs[31].default_value = 0.0
    if hasattr(group_input_018_1.outputs[31], 'display_shape'):
        group_input_018_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[31], 'enabled'):
        group_input_018_1.outputs[31].enabled = True
    if hasattr(group_input_018_1.outputs[31], 'hide'):
        group_input_018_1.outputs[31].hide = True
    if hasattr(group_input_018_1.outputs[31], 'hide_value'):
        group_input_018_1.outputs[31].hide_value = False
    if hasattr(group_input_018_1.outputs[31], 'name'):
        group_input_018_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_018_1.outputs[31], 'show_expanded'):
        group_input_018_1.outputs[31].show_expanded = False
    if hasattr(group_input_018_1.outputs[32], 'default_value'):
        group_input_018_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[32], 'display_shape'):
        group_input_018_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[32], 'enabled'):
        group_input_018_1.outputs[32].enabled = True
    if hasattr(group_input_018_1.outputs[32], 'hide'):
        group_input_018_1.outputs[32].hide = False
    if hasattr(group_input_018_1.outputs[32], 'hide_value'):
        group_input_018_1.outputs[32].hide_value = False
    if hasattr(group_input_018_1.outputs[32], 'name'):
        group_input_018_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_018_1.outputs[32], 'show_expanded'):
        group_input_018_1.outputs[32].show_expanded = False
    if hasattr(group_input_018_1.outputs[33], 'default_value'):
        group_input_018_1.outputs[33].default_value = 0.0
    if hasattr(group_input_018_1.outputs[33], 'display_shape'):
        group_input_018_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[33], 'enabled'):
        group_input_018_1.outputs[33].enabled = True
    if hasattr(group_input_018_1.outputs[33], 'hide'):
        group_input_018_1.outputs[33].hide = True
    if hasattr(group_input_018_1.outputs[33], 'hide_value'):
        group_input_018_1.outputs[33].hide_value = False
    if hasattr(group_input_018_1.outputs[33], 'name'):
        group_input_018_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_018_1.outputs[33], 'show_expanded'):
        group_input_018_1.outputs[33].show_expanded = False
    if hasattr(group_input_018_1.outputs[34], 'default_value'):
        group_input_018_1.outputs[34].default_value = 0.0
    if hasattr(group_input_018_1.outputs[34], 'display_shape'):
        group_input_018_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[34], 'enabled'):
        group_input_018_1.outputs[34].enabled = True
    if hasattr(group_input_018_1.outputs[34], 'hide'):
        group_input_018_1.outputs[34].hide = True
    if hasattr(group_input_018_1.outputs[34], 'hide_value'):
        group_input_018_1.outputs[34].hide_value = False
    if hasattr(group_input_018_1.outputs[34], 'name'):
        group_input_018_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_018_1.outputs[34], 'show_expanded'):
        group_input_018_1.outputs[34].show_expanded = False
    if hasattr(group_input_018_1.outputs[35], 'default_value'):
        group_input_018_1.outputs[35].default_value = 0.0
    if hasattr(group_input_018_1.outputs[35], 'display_shape'):
        group_input_018_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[35], 'enabled'):
        group_input_018_1.outputs[35].enabled = True
    if hasattr(group_input_018_1.outputs[35], 'hide'):
        group_input_018_1.outputs[35].hide = True
    if hasattr(group_input_018_1.outputs[35], 'hide_value'):
        group_input_018_1.outputs[35].hide_value = False
    if hasattr(group_input_018_1.outputs[35], 'name'):
        group_input_018_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_018_1.outputs[35], 'show_expanded'):
        group_input_018_1.outputs[35].show_expanded = False
    if hasattr(group_input_018_1.outputs[36], 'default_value'):
        group_input_018_1.outputs[36].default_value = 0.0
    if hasattr(group_input_018_1.outputs[36], 'display_shape'):
        group_input_018_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[36], 'enabled'):
        group_input_018_1.outputs[36].enabled = True
    if hasattr(group_input_018_1.outputs[36], 'hide'):
        group_input_018_1.outputs[36].hide = True
    if hasattr(group_input_018_1.outputs[36], 'hide_value'):
        group_input_018_1.outputs[36].hide_value = False
    if hasattr(group_input_018_1.outputs[36], 'name'):
        group_input_018_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_018_1.outputs[36], 'show_expanded'):
        group_input_018_1.outputs[36].show_expanded = False
    if hasattr(group_input_018_1.outputs[37], 'default_value'):
        group_input_018_1.outputs[37].default_value = 0.0
    if hasattr(group_input_018_1.outputs[37], 'display_shape'):
        group_input_018_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[37], 'enabled'):
        group_input_018_1.outputs[37].enabled = True
    if hasattr(group_input_018_1.outputs[37], 'hide'):
        group_input_018_1.outputs[37].hide = True
    if hasattr(group_input_018_1.outputs[37], 'hide_value'):
        group_input_018_1.outputs[37].hide_value = False
    if hasattr(group_input_018_1.outputs[37], 'name'):
        group_input_018_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_018_1.outputs[37], 'show_expanded'):
        group_input_018_1.outputs[37].show_expanded = False
    if hasattr(group_input_018_1.outputs[38], 'default_value'):
        group_input_018_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_018_1.outputs[38], 'display_shape'):
        group_input_018_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[38], 'enabled'):
        group_input_018_1.outputs[38].enabled = True
    if hasattr(group_input_018_1.outputs[38], 'hide'):
        group_input_018_1.outputs[38].hide = True
    if hasattr(group_input_018_1.outputs[38], 'hide_value'):
        group_input_018_1.outputs[38].hide_value = False
    if hasattr(group_input_018_1.outputs[38], 'name'):
        group_input_018_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_018_1.outputs[38], 'show_expanded'):
        group_input_018_1.outputs[38].show_expanded = False
    if hasattr(group_input_018_1.outputs[39], 'default_value'):
        group_input_018_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_018_1.outputs[39], 'display_shape'):
        group_input_018_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[39], 'enabled'):
        group_input_018_1.outputs[39].enabled = True
    if hasattr(group_input_018_1.outputs[39], 'hide'):
        group_input_018_1.outputs[39].hide = True
    if hasattr(group_input_018_1.outputs[39], 'hide_value'):
        group_input_018_1.outputs[39].hide_value = False
    if hasattr(group_input_018_1.outputs[39], 'name'):
        group_input_018_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_018_1.outputs[39], 'show_expanded'):
        group_input_018_1.outputs[39].show_expanded = False
    if hasattr(group_input_018_1.outputs[40], 'default_value'):
        group_input_018_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_018_1.outputs[40], 'display_shape'):
        group_input_018_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[40], 'enabled'):
        group_input_018_1.outputs[40].enabled = True
    if hasattr(group_input_018_1.outputs[40], 'hide'):
        group_input_018_1.outputs[40].hide = True
    if hasattr(group_input_018_1.outputs[40], 'hide_value'):
        group_input_018_1.outputs[40].hide_value = False
    if hasattr(group_input_018_1.outputs[40], 'name'):
        group_input_018_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_018_1.outputs[40], 'show_expanded'):
        group_input_018_1.outputs[40].show_expanded = False
    if hasattr(group_input_018_1.outputs[41], 'default_value'):
        group_input_018_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_018_1.outputs[41], 'display_shape'):
        group_input_018_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[41], 'enabled'):
        group_input_018_1.outputs[41].enabled = True
    if hasattr(group_input_018_1.outputs[41], 'hide'):
        group_input_018_1.outputs[41].hide = True
    if hasattr(group_input_018_1.outputs[41], 'hide_value'):
        group_input_018_1.outputs[41].hide_value = False
    if hasattr(group_input_018_1.outputs[41], 'name'):
        group_input_018_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_018_1.outputs[41], 'show_expanded'):
        group_input_018_1.outputs[41].show_expanded = False
    if hasattr(group_input_018_1.outputs[42], 'default_value'):
        group_input_018_1.outputs[42].default_value = 0.0
    if hasattr(group_input_018_1.outputs[42], 'display_shape'):
        group_input_018_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[42], 'enabled'):
        group_input_018_1.outputs[42].enabled = True
    if hasattr(group_input_018_1.outputs[42], 'hide'):
        group_input_018_1.outputs[42].hide = True
    if hasattr(group_input_018_1.outputs[42], 'hide_value'):
        group_input_018_1.outputs[42].hide_value = False
    if hasattr(group_input_018_1.outputs[42], 'name'):
        group_input_018_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_018_1.outputs[42], 'show_expanded'):
        group_input_018_1.outputs[42].show_expanded = False
    if hasattr(group_input_018_1.outputs[43], 'default_value'):
        group_input_018_1.outputs[43].default_value = 0.0
    if hasattr(group_input_018_1.outputs[43], 'display_shape'):
        group_input_018_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[43], 'enabled'):
        group_input_018_1.outputs[43].enabled = True
    if hasattr(group_input_018_1.outputs[43], 'hide'):
        group_input_018_1.outputs[43].hide = True
    if hasattr(group_input_018_1.outputs[43], 'hide_value'):
        group_input_018_1.outputs[43].hide_value = False
    if hasattr(group_input_018_1.outputs[43], 'name'):
        group_input_018_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_018_1.outputs[43], 'show_expanded'):
        group_input_018_1.outputs[43].show_expanded = False
    if hasattr(group_input_018_1.outputs[44], 'default_value'):
        group_input_018_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[44], 'display_shape'):
        group_input_018_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[44], 'enabled'):
        group_input_018_1.outputs[44].enabled = True
    if hasattr(group_input_018_1.outputs[44], 'hide'):
        group_input_018_1.outputs[44].hide = False
    if hasattr(group_input_018_1.outputs[44], 'hide_value'):
        group_input_018_1.outputs[44].hide_value = False
    if hasattr(group_input_018_1.outputs[44], 'name'):
        group_input_018_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_018_1.outputs[44], 'show_expanded'):
        group_input_018_1.outputs[44].show_expanded = False
    if hasattr(group_input_018_1.outputs[45], 'default_value'):
        group_input_018_1.outputs[45].default_value = 0.0
    if hasattr(group_input_018_1.outputs[45], 'display_shape'):
        group_input_018_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[45], 'enabled'):
        group_input_018_1.outputs[45].enabled = True
    if hasattr(group_input_018_1.outputs[45], 'hide'):
        group_input_018_1.outputs[45].hide = True
    if hasattr(group_input_018_1.outputs[45], 'hide_value'):
        group_input_018_1.outputs[45].hide_value = False
    if hasattr(group_input_018_1.outputs[45], 'name'):
        group_input_018_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_018_1.outputs[45], 'show_expanded'):
        group_input_018_1.outputs[45].show_expanded = False
    if hasattr(group_input_018_1.outputs[46], 'default_value'):
        group_input_018_1.outputs[46].default_value = 0.0
    if hasattr(group_input_018_1.outputs[46], 'display_shape'):
        group_input_018_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[46], 'enabled'):
        group_input_018_1.outputs[46].enabled = True
    if hasattr(group_input_018_1.outputs[46], 'hide'):
        group_input_018_1.outputs[46].hide = True
    if hasattr(group_input_018_1.outputs[46], 'hide_value'):
        group_input_018_1.outputs[46].hide_value = False
    if hasattr(group_input_018_1.outputs[46], 'name'):
        group_input_018_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_018_1.outputs[46], 'show_expanded'):
        group_input_018_1.outputs[46].show_expanded = False
    if hasattr(group_input_018_1.outputs[47], 'default_value'):
        group_input_018_1.outputs[47].default_value = 0.0
    if hasattr(group_input_018_1.outputs[47], 'display_shape'):
        group_input_018_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[47], 'enabled'):
        group_input_018_1.outputs[47].enabled = True
    if hasattr(group_input_018_1.outputs[47], 'hide'):
        group_input_018_1.outputs[47].hide = True
    if hasattr(group_input_018_1.outputs[47], 'hide_value'):
        group_input_018_1.outputs[47].hide_value = False
    if hasattr(group_input_018_1.outputs[47], 'name'):
        group_input_018_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_018_1.outputs[47], 'show_expanded'):
        group_input_018_1.outputs[47].show_expanded = False
    if hasattr(group_input_018_1.outputs[48], 'default_value'):
        group_input_018_1.outputs[48].default_value = 0.0
    if hasattr(group_input_018_1.outputs[48], 'display_shape'):
        group_input_018_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[48], 'enabled'):
        group_input_018_1.outputs[48].enabled = True
    if hasattr(group_input_018_1.outputs[48], 'hide'):
        group_input_018_1.outputs[48].hide = True
    if hasattr(group_input_018_1.outputs[48], 'hide_value'):
        group_input_018_1.outputs[48].hide_value = False
    if hasattr(group_input_018_1.outputs[48], 'name'):
        group_input_018_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_018_1.outputs[48], 'show_expanded'):
        group_input_018_1.outputs[48].show_expanded = False
    if hasattr(group_input_018_1.outputs[49], 'default_value'):
        group_input_018_1.outputs[49].default_value = 0.0
    if hasattr(group_input_018_1.outputs[49], 'display_shape'):
        group_input_018_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[49], 'enabled'):
        group_input_018_1.outputs[49].enabled = True
    if hasattr(group_input_018_1.outputs[49], 'hide'):
        group_input_018_1.outputs[49].hide = True
    if hasattr(group_input_018_1.outputs[49], 'hide_value'):
        group_input_018_1.outputs[49].hide_value = False
    if hasattr(group_input_018_1.outputs[49], 'name'):
        group_input_018_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_018_1.outputs[49], 'show_expanded'):
        group_input_018_1.outputs[49].show_expanded = False
    if hasattr(group_input_018_1.outputs[50], 'default_value'):
        group_input_018_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_018_1.outputs[50], 'display_shape'):
        group_input_018_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[50], 'enabled'):
        group_input_018_1.outputs[50].enabled = True
    if hasattr(group_input_018_1.outputs[50], 'hide'):
        group_input_018_1.outputs[50].hide = True
    if hasattr(group_input_018_1.outputs[50], 'hide_value'):
        group_input_018_1.outputs[50].hide_value = False
    if hasattr(group_input_018_1.outputs[50], 'name'):
        group_input_018_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_018_1.outputs[50], 'show_expanded'):
        group_input_018_1.outputs[50].show_expanded = False
    if hasattr(group_input_018_1.outputs[51], 'default_value'):
        group_input_018_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_018_1.outputs[51], 'display_shape'):
        group_input_018_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[51], 'enabled'):
        group_input_018_1.outputs[51].enabled = True
    if hasattr(group_input_018_1.outputs[51], 'hide'):
        group_input_018_1.outputs[51].hide = True
    if hasattr(group_input_018_1.outputs[51], 'hide_value'):
        group_input_018_1.outputs[51].hide_value = False
    if hasattr(group_input_018_1.outputs[51], 'name'):
        group_input_018_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_018_1.outputs[51], 'show_expanded'):
        group_input_018_1.outputs[51].show_expanded = False
    if hasattr(group_input_018_1.outputs[52], 'default_value'):
        group_input_018_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_018_1.outputs[52], 'display_shape'):
        group_input_018_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[52], 'enabled'):
        group_input_018_1.outputs[52].enabled = True
    if hasattr(group_input_018_1.outputs[52], 'hide'):
        group_input_018_1.outputs[52].hide = True
    if hasattr(group_input_018_1.outputs[52], 'hide_value'):
        group_input_018_1.outputs[52].hide_value = False
    if hasattr(group_input_018_1.outputs[52], 'name'):
        group_input_018_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_018_1.outputs[52], 'show_expanded'):
        group_input_018_1.outputs[52].show_expanded = False
    if hasattr(group_input_018_1.outputs[53], 'default_value'):
        group_input_018_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_018_1.outputs[53], 'display_shape'):
        group_input_018_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[53], 'enabled'):
        group_input_018_1.outputs[53].enabled = True
    if hasattr(group_input_018_1.outputs[53], 'hide'):
        group_input_018_1.outputs[53].hide = True
    if hasattr(group_input_018_1.outputs[53], 'hide_value'):
        group_input_018_1.outputs[53].hide_value = False
    if hasattr(group_input_018_1.outputs[53], 'name'):
        group_input_018_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_018_1.outputs[53], 'show_expanded'):
        group_input_018_1.outputs[53].show_expanded = False
    if hasattr(group_input_018_1.outputs[54], 'default_value'):
        group_input_018_1.outputs[54].default_value = 0.0
    if hasattr(group_input_018_1.outputs[54], 'display_shape'):
        group_input_018_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[54], 'enabled'):
        group_input_018_1.outputs[54].enabled = True
    if hasattr(group_input_018_1.outputs[54], 'hide'):
        group_input_018_1.outputs[54].hide = True
    if hasattr(group_input_018_1.outputs[54], 'hide_value'):
        group_input_018_1.outputs[54].hide_value = False
    if hasattr(group_input_018_1.outputs[54], 'name'):
        group_input_018_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_018_1.outputs[54], 'show_expanded'):
        group_input_018_1.outputs[54].show_expanded = False
    if hasattr(group_input_018_1.outputs[55], 'default_value'):
        group_input_018_1.outputs[55].default_value = 0.0
    if hasattr(group_input_018_1.outputs[55], 'display_shape'):
        group_input_018_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[55], 'enabled'):
        group_input_018_1.outputs[55].enabled = True
    if hasattr(group_input_018_1.outputs[55], 'hide'):
        group_input_018_1.outputs[55].hide = True
    if hasattr(group_input_018_1.outputs[55], 'hide_value'):
        group_input_018_1.outputs[55].hide_value = False
    if hasattr(group_input_018_1.outputs[55], 'name'):
        group_input_018_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_018_1.outputs[55], 'show_expanded'):
        group_input_018_1.outputs[55].show_expanded = False
    if hasattr(group_input_018_1.outputs[56], 'default_value'):
        group_input_018_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[56], 'display_shape'):
        group_input_018_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[56], 'enabled'):
        group_input_018_1.outputs[56].enabled = True
    if hasattr(group_input_018_1.outputs[56], 'hide'):
        group_input_018_1.outputs[56].hide = False
    if hasattr(group_input_018_1.outputs[56], 'hide_value'):
        group_input_018_1.outputs[56].hide_value = False
    if hasattr(group_input_018_1.outputs[56], 'name'):
        group_input_018_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_018_1.outputs[56], 'show_expanded'):
        group_input_018_1.outputs[56].show_expanded = False
    if hasattr(group_input_018_1.outputs[57], 'default_value'):
        group_input_018_1.outputs[57].default_value = 0.0
    if hasattr(group_input_018_1.outputs[57], 'display_shape'):
        group_input_018_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[57], 'enabled'):
        group_input_018_1.outputs[57].enabled = True
    if hasattr(group_input_018_1.outputs[57], 'hide'):
        group_input_018_1.outputs[57].hide = True
    if hasattr(group_input_018_1.outputs[57], 'hide_value'):
        group_input_018_1.outputs[57].hide_value = False
    if hasattr(group_input_018_1.outputs[57], 'name'):
        group_input_018_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_018_1.outputs[57], 'show_expanded'):
        group_input_018_1.outputs[57].show_expanded = False
    if hasattr(group_input_018_1.outputs[58], 'default_value'):
        group_input_018_1.outputs[58].default_value = 0.0
    if hasattr(group_input_018_1.outputs[58], 'display_shape'):
        group_input_018_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[58], 'enabled'):
        group_input_018_1.outputs[58].enabled = True
    if hasattr(group_input_018_1.outputs[58], 'hide'):
        group_input_018_1.outputs[58].hide = True
    if hasattr(group_input_018_1.outputs[58], 'hide_value'):
        group_input_018_1.outputs[58].hide_value = False
    if hasattr(group_input_018_1.outputs[58], 'name'):
        group_input_018_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_018_1.outputs[58], 'show_expanded'):
        group_input_018_1.outputs[58].show_expanded = False
    if hasattr(group_input_018_1.outputs[59], 'default_value'):
        group_input_018_1.outputs[59].default_value = 0.0
    if hasattr(group_input_018_1.outputs[59], 'display_shape'):
        group_input_018_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[59], 'enabled'):
        group_input_018_1.outputs[59].enabled = True
    if hasattr(group_input_018_1.outputs[59], 'hide'):
        group_input_018_1.outputs[59].hide = True
    if hasattr(group_input_018_1.outputs[59], 'hide_value'):
        group_input_018_1.outputs[59].hide_value = False
    if hasattr(group_input_018_1.outputs[59], 'name'):
        group_input_018_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_018_1.outputs[59], 'show_expanded'):
        group_input_018_1.outputs[59].show_expanded = False
    if hasattr(group_input_018_1.outputs[60], 'default_value'):
        group_input_018_1.outputs[60].default_value = 0.0
    if hasattr(group_input_018_1.outputs[60], 'display_shape'):
        group_input_018_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[60], 'enabled'):
        group_input_018_1.outputs[60].enabled = True
    if hasattr(group_input_018_1.outputs[60], 'hide'):
        group_input_018_1.outputs[60].hide = True
    if hasattr(group_input_018_1.outputs[60], 'hide_value'):
        group_input_018_1.outputs[60].hide_value = False
    if hasattr(group_input_018_1.outputs[60], 'name'):
        group_input_018_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_018_1.outputs[60], 'show_expanded'):
        group_input_018_1.outputs[60].show_expanded = False
    if hasattr(group_input_018_1.outputs[61], 'default_value'):
        group_input_018_1.outputs[61].default_value = 0.0
    if hasattr(group_input_018_1.outputs[61], 'display_shape'):
        group_input_018_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[61], 'enabled'):
        group_input_018_1.outputs[61].enabled = True
    if hasattr(group_input_018_1.outputs[61], 'hide'):
        group_input_018_1.outputs[61].hide = True
    if hasattr(group_input_018_1.outputs[61], 'hide_value'):
        group_input_018_1.outputs[61].hide_value = False
    if hasattr(group_input_018_1.outputs[61], 'name'):
        group_input_018_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_018_1.outputs[61], 'show_expanded'):
        group_input_018_1.outputs[61].show_expanded = False
    if hasattr(group_input_018_1.outputs[62], 'default_value'):
        group_input_018_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_018_1.outputs[62], 'display_shape'):
        group_input_018_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[62], 'enabled'):
        group_input_018_1.outputs[62].enabled = True
    if hasattr(group_input_018_1.outputs[62], 'hide'):
        group_input_018_1.outputs[62].hide = True
    if hasattr(group_input_018_1.outputs[62], 'hide_value'):
        group_input_018_1.outputs[62].hide_value = False
    if hasattr(group_input_018_1.outputs[62], 'name'):
        group_input_018_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_018_1.outputs[62], 'show_expanded'):
        group_input_018_1.outputs[62].show_expanded = False
    if hasattr(group_input_018_1.outputs[63], 'default_value'):
        group_input_018_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_018_1.outputs[63], 'display_shape'):
        group_input_018_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[63], 'enabled'):
        group_input_018_1.outputs[63].enabled = True
    if hasattr(group_input_018_1.outputs[63], 'hide'):
        group_input_018_1.outputs[63].hide = True
    if hasattr(group_input_018_1.outputs[63], 'hide_value'):
        group_input_018_1.outputs[63].hide_value = False
    if hasattr(group_input_018_1.outputs[63], 'name'):
        group_input_018_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_018_1.outputs[63], 'show_expanded'):
        group_input_018_1.outputs[63].show_expanded = False
    if hasattr(group_input_018_1.outputs[64], 'default_value'):
        group_input_018_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_018_1.outputs[64], 'display_shape'):
        group_input_018_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[64], 'enabled'):
        group_input_018_1.outputs[64].enabled = True
    if hasattr(group_input_018_1.outputs[64], 'hide'):
        group_input_018_1.outputs[64].hide = True
    if hasattr(group_input_018_1.outputs[64], 'hide_value'):
        group_input_018_1.outputs[64].hide_value = False
    if hasattr(group_input_018_1.outputs[64], 'name'):
        group_input_018_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_018_1.outputs[64], 'show_expanded'):
        group_input_018_1.outputs[64].show_expanded = False
    if hasattr(group_input_018_1.outputs[65], 'default_value'):
        group_input_018_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_018_1.outputs[65], 'display_shape'):
        group_input_018_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[65], 'enabled'):
        group_input_018_1.outputs[65].enabled = True
    if hasattr(group_input_018_1.outputs[65], 'hide'):
        group_input_018_1.outputs[65].hide = True
    if hasattr(group_input_018_1.outputs[65], 'hide_value'):
        group_input_018_1.outputs[65].hide_value = False
    if hasattr(group_input_018_1.outputs[65], 'name'):
        group_input_018_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_018_1.outputs[65], 'show_expanded'):
        group_input_018_1.outputs[65].show_expanded = False
    if hasattr(group_input_018_1.outputs[66], 'default_value'):
        group_input_018_1.outputs[66].default_value = 0.0
    if hasattr(group_input_018_1.outputs[66], 'display_shape'):
        group_input_018_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[66], 'enabled'):
        group_input_018_1.outputs[66].enabled = True
    if hasattr(group_input_018_1.outputs[66], 'hide'):
        group_input_018_1.outputs[66].hide = True
    if hasattr(group_input_018_1.outputs[66], 'hide_value'):
        group_input_018_1.outputs[66].hide_value = False
    if hasattr(group_input_018_1.outputs[66], 'name'):
        group_input_018_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_018_1.outputs[66], 'show_expanded'):
        group_input_018_1.outputs[66].show_expanded = False
    if hasattr(group_input_018_1.outputs[67], 'default_value'):
        group_input_018_1.outputs[67].default_value = 0.0
    if hasattr(group_input_018_1.outputs[67], 'display_shape'):
        group_input_018_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[67], 'enabled'):
        group_input_018_1.outputs[67].enabled = True
    if hasattr(group_input_018_1.outputs[67], 'hide'):
        group_input_018_1.outputs[67].hide = True
    if hasattr(group_input_018_1.outputs[67], 'hide_value'):
        group_input_018_1.outputs[67].hide_value = False
    if hasattr(group_input_018_1.outputs[67], 'name'):
        group_input_018_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_018_1.outputs[67], 'show_expanded'):
        group_input_018_1.outputs[67].show_expanded = False
    if hasattr(group_input_018_1.outputs[68], 'default_value'):
        group_input_018_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[68], 'display_shape'):
        group_input_018_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[68], 'enabled'):
        group_input_018_1.outputs[68].enabled = True
    if hasattr(group_input_018_1.outputs[68], 'hide'):
        group_input_018_1.outputs[68].hide = False
    if hasattr(group_input_018_1.outputs[68], 'hide_value'):
        group_input_018_1.outputs[68].hide_value = False
    if hasattr(group_input_018_1.outputs[68], 'name'):
        group_input_018_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_018_1.outputs[68], 'show_expanded'):
        group_input_018_1.outputs[68].show_expanded = False
    if hasattr(group_input_018_1.outputs[69], 'default_value'):
        group_input_018_1.outputs[69].default_value = 0.0
    if hasattr(group_input_018_1.outputs[69], 'display_shape'):
        group_input_018_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[69], 'enabled'):
        group_input_018_1.outputs[69].enabled = True
    if hasattr(group_input_018_1.outputs[69], 'hide'):
        group_input_018_1.outputs[69].hide = True
    if hasattr(group_input_018_1.outputs[69], 'hide_value'):
        group_input_018_1.outputs[69].hide_value = False
    if hasattr(group_input_018_1.outputs[69], 'name'):
        group_input_018_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_018_1.outputs[69], 'show_expanded'):
        group_input_018_1.outputs[69].show_expanded = False
    if hasattr(group_input_018_1.outputs[70], 'default_value'):
        group_input_018_1.outputs[70].default_value = 0.0
    if hasattr(group_input_018_1.outputs[70], 'display_shape'):
        group_input_018_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[70], 'enabled'):
        group_input_018_1.outputs[70].enabled = True
    if hasattr(group_input_018_1.outputs[70], 'hide'):
        group_input_018_1.outputs[70].hide = True
    if hasattr(group_input_018_1.outputs[70], 'hide_value'):
        group_input_018_1.outputs[70].hide_value = False
    if hasattr(group_input_018_1.outputs[70], 'name'):
        group_input_018_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_018_1.outputs[70], 'show_expanded'):
        group_input_018_1.outputs[70].show_expanded = False
    if hasattr(group_input_018_1.outputs[71], 'default_value'):
        group_input_018_1.outputs[71].default_value = 0.0
    if hasattr(group_input_018_1.outputs[71], 'display_shape'):
        group_input_018_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[71], 'enabled'):
        group_input_018_1.outputs[71].enabled = True
    if hasattr(group_input_018_1.outputs[71], 'hide'):
        group_input_018_1.outputs[71].hide = True
    if hasattr(group_input_018_1.outputs[71], 'hide_value'):
        group_input_018_1.outputs[71].hide_value = False
    if hasattr(group_input_018_1.outputs[71], 'name'):
        group_input_018_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_018_1.outputs[71], 'show_expanded'):
        group_input_018_1.outputs[71].show_expanded = False
    if hasattr(group_input_018_1.outputs[72], 'default_value'):
        group_input_018_1.outputs[72].default_value = 0.0
    if hasattr(group_input_018_1.outputs[72], 'display_shape'):
        group_input_018_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[72], 'enabled'):
        group_input_018_1.outputs[72].enabled = True
    if hasattr(group_input_018_1.outputs[72], 'hide'):
        group_input_018_1.outputs[72].hide = True
    if hasattr(group_input_018_1.outputs[72], 'hide_value'):
        group_input_018_1.outputs[72].hide_value = False
    if hasattr(group_input_018_1.outputs[72], 'name'):
        group_input_018_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_018_1.outputs[72], 'show_expanded'):
        group_input_018_1.outputs[72].show_expanded = False
    if hasattr(group_input_018_1.outputs[73], 'default_value'):
        group_input_018_1.outputs[73].default_value = 0.0
    if hasattr(group_input_018_1.outputs[73], 'display_shape'):
        group_input_018_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[73], 'enabled'):
        group_input_018_1.outputs[73].enabled = True
    if hasattr(group_input_018_1.outputs[73], 'hide'):
        group_input_018_1.outputs[73].hide = True
    if hasattr(group_input_018_1.outputs[73], 'hide_value'):
        group_input_018_1.outputs[73].hide_value = False
    if hasattr(group_input_018_1.outputs[73], 'name'):
        group_input_018_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_018_1.outputs[73], 'show_expanded'):
        group_input_018_1.outputs[73].show_expanded = False
    if hasattr(group_input_018_1.outputs[74], 'default_value'):
        group_input_018_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_018_1.outputs[74], 'display_shape'):
        group_input_018_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[74], 'enabled'):
        group_input_018_1.outputs[74].enabled = True
    if hasattr(group_input_018_1.outputs[74], 'hide'):
        group_input_018_1.outputs[74].hide = True
    if hasattr(group_input_018_1.outputs[74], 'hide_value'):
        group_input_018_1.outputs[74].hide_value = False
    if hasattr(group_input_018_1.outputs[74], 'name'):
        group_input_018_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_018_1.outputs[74], 'show_expanded'):
        group_input_018_1.outputs[74].show_expanded = False
    if hasattr(group_input_018_1.outputs[75], 'default_value'):
        group_input_018_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_018_1.outputs[75], 'display_shape'):
        group_input_018_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[75], 'enabled'):
        group_input_018_1.outputs[75].enabled = True
    if hasattr(group_input_018_1.outputs[75], 'hide'):
        group_input_018_1.outputs[75].hide = True
    if hasattr(group_input_018_1.outputs[75], 'hide_value'):
        group_input_018_1.outputs[75].hide_value = False
    if hasattr(group_input_018_1.outputs[75], 'name'):
        group_input_018_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_018_1.outputs[75], 'show_expanded'):
        group_input_018_1.outputs[75].show_expanded = False
    if hasattr(group_input_018_1.outputs[76], 'default_value'):
        group_input_018_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_018_1.outputs[76], 'display_shape'):
        group_input_018_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[76], 'enabled'):
        group_input_018_1.outputs[76].enabled = True
    if hasattr(group_input_018_1.outputs[76], 'hide'):
        group_input_018_1.outputs[76].hide = True
    if hasattr(group_input_018_1.outputs[76], 'hide_value'):
        group_input_018_1.outputs[76].hide_value = False
    if hasattr(group_input_018_1.outputs[76], 'name'):
        group_input_018_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_018_1.outputs[76], 'show_expanded'):
        group_input_018_1.outputs[76].show_expanded = False
    if hasattr(group_input_018_1.outputs[77], 'default_value'):
        group_input_018_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_018_1.outputs[77], 'display_shape'):
        group_input_018_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[77], 'enabled'):
        group_input_018_1.outputs[77].enabled = True
    if hasattr(group_input_018_1.outputs[77], 'hide'):
        group_input_018_1.outputs[77].hide = True
    if hasattr(group_input_018_1.outputs[77], 'hide_value'):
        group_input_018_1.outputs[77].hide_value = False
    if hasattr(group_input_018_1.outputs[77], 'name'):
        group_input_018_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_018_1.outputs[77], 'show_expanded'):
        group_input_018_1.outputs[77].show_expanded = False
    if hasattr(group_input_018_1.outputs[78], 'default_value'):
        group_input_018_1.outputs[78].default_value = 0.0
    if hasattr(group_input_018_1.outputs[78], 'display_shape'):
        group_input_018_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[78], 'enabled'):
        group_input_018_1.outputs[78].enabled = True
    if hasattr(group_input_018_1.outputs[78], 'hide'):
        group_input_018_1.outputs[78].hide = True
    if hasattr(group_input_018_1.outputs[78], 'hide_value'):
        group_input_018_1.outputs[78].hide_value = False
    if hasattr(group_input_018_1.outputs[78], 'name'):
        group_input_018_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_018_1.outputs[78], 'show_expanded'):
        group_input_018_1.outputs[78].show_expanded = False
    if hasattr(group_input_018_1.outputs[79], 'default_value'):
        group_input_018_1.outputs[79].default_value = 0.0
    if hasattr(group_input_018_1.outputs[79], 'display_shape'):
        group_input_018_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[79], 'enabled'):
        group_input_018_1.outputs[79].enabled = True
    if hasattr(group_input_018_1.outputs[79], 'hide'):
        group_input_018_1.outputs[79].hide = True
    if hasattr(group_input_018_1.outputs[79], 'hide_value'):
        group_input_018_1.outputs[79].hide_value = False
    if hasattr(group_input_018_1.outputs[79], 'name'):
        group_input_018_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_018_1.outputs[79], 'show_expanded'):
        group_input_018_1.outputs[79].show_expanded = False
    if hasattr(group_input_018_1.outputs[80], 'default_value'):
        group_input_018_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[80], 'display_shape'):
        group_input_018_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[80], 'enabled'):
        group_input_018_1.outputs[80].enabled = True
    if hasattr(group_input_018_1.outputs[80], 'hide'):
        group_input_018_1.outputs[80].hide = False
    if hasattr(group_input_018_1.outputs[80], 'hide_value'):
        group_input_018_1.outputs[80].hide_value = False
    if hasattr(group_input_018_1.outputs[80], 'name'):
        group_input_018_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_018_1.outputs[80], 'show_expanded'):
        group_input_018_1.outputs[80].show_expanded = False
    if hasattr(group_input_018_1.outputs[81], 'default_value'):
        group_input_018_1.outputs[81].default_value = 0.0
    if hasattr(group_input_018_1.outputs[81], 'display_shape'):
        group_input_018_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[81], 'enabled'):
        group_input_018_1.outputs[81].enabled = True
    if hasattr(group_input_018_1.outputs[81], 'hide'):
        group_input_018_1.outputs[81].hide = True
    if hasattr(group_input_018_1.outputs[81], 'hide_value'):
        group_input_018_1.outputs[81].hide_value = False
    if hasattr(group_input_018_1.outputs[81], 'name'):
        group_input_018_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_018_1.outputs[81], 'show_expanded'):
        group_input_018_1.outputs[81].show_expanded = False
    if hasattr(group_input_018_1.outputs[82], 'default_value'):
        group_input_018_1.outputs[82].default_value = 0.0
    if hasattr(group_input_018_1.outputs[82], 'display_shape'):
        group_input_018_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[82], 'enabled'):
        group_input_018_1.outputs[82].enabled = True
    if hasattr(group_input_018_1.outputs[82], 'hide'):
        group_input_018_1.outputs[82].hide = True
    if hasattr(group_input_018_1.outputs[82], 'hide_value'):
        group_input_018_1.outputs[82].hide_value = False
    if hasattr(group_input_018_1.outputs[82], 'name'):
        group_input_018_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_018_1.outputs[82], 'show_expanded'):
        group_input_018_1.outputs[82].show_expanded = False
    if hasattr(group_input_018_1.outputs[83], 'default_value'):
        group_input_018_1.outputs[83].default_value = 0.0
    if hasattr(group_input_018_1.outputs[83], 'display_shape'):
        group_input_018_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[83], 'enabled'):
        group_input_018_1.outputs[83].enabled = True
    if hasattr(group_input_018_1.outputs[83], 'hide'):
        group_input_018_1.outputs[83].hide = True
    if hasattr(group_input_018_1.outputs[83], 'hide_value'):
        group_input_018_1.outputs[83].hide_value = False
    if hasattr(group_input_018_1.outputs[83], 'name'):
        group_input_018_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_018_1.outputs[83], 'show_expanded'):
        group_input_018_1.outputs[83].show_expanded = False
    if hasattr(group_input_018_1.outputs[84], 'default_value'):
        group_input_018_1.outputs[84].default_value = 0.0
    if hasattr(group_input_018_1.outputs[84], 'display_shape'):
        group_input_018_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[84], 'enabled'):
        group_input_018_1.outputs[84].enabled = True
    if hasattr(group_input_018_1.outputs[84], 'hide'):
        group_input_018_1.outputs[84].hide = True
    if hasattr(group_input_018_1.outputs[84], 'hide_value'):
        group_input_018_1.outputs[84].hide_value = False
    if hasattr(group_input_018_1.outputs[84], 'name'):
        group_input_018_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_018_1.outputs[84], 'show_expanded'):
        group_input_018_1.outputs[84].show_expanded = False
    if hasattr(group_input_018_1.outputs[85], 'default_value'):
        group_input_018_1.outputs[85].default_value = 0.0
    if hasattr(group_input_018_1.outputs[85], 'display_shape'):
        group_input_018_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[85], 'enabled'):
        group_input_018_1.outputs[85].enabled = True
    if hasattr(group_input_018_1.outputs[85], 'hide'):
        group_input_018_1.outputs[85].hide = True
    if hasattr(group_input_018_1.outputs[85], 'hide_value'):
        group_input_018_1.outputs[85].hide_value = False
    if hasattr(group_input_018_1.outputs[85], 'name'):
        group_input_018_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_018_1.outputs[85], 'show_expanded'):
        group_input_018_1.outputs[85].show_expanded = False
    if hasattr(group_input_018_1.outputs[86], 'default_value'):
        group_input_018_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_018_1.outputs[86], 'display_shape'):
        group_input_018_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[86], 'enabled'):
        group_input_018_1.outputs[86].enabled = True
    if hasattr(group_input_018_1.outputs[86], 'hide'):
        group_input_018_1.outputs[86].hide = True
    if hasattr(group_input_018_1.outputs[86], 'hide_value'):
        group_input_018_1.outputs[86].hide_value = False
    if hasattr(group_input_018_1.outputs[86], 'name'):
        group_input_018_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_018_1.outputs[86], 'show_expanded'):
        group_input_018_1.outputs[86].show_expanded = False
    if hasattr(group_input_018_1.outputs[87], 'default_value'):
        group_input_018_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_018_1.outputs[87], 'display_shape'):
        group_input_018_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[87], 'enabled'):
        group_input_018_1.outputs[87].enabled = True
    if hasattr(group_input_018_1.outputs[87], 'hide'):
        group_input_018_1.outputs[87].hide = True
    if hasattr(group_input_018_1.outputs[87], 'hide_value'):
        group_input_018_1.outputs[87].hide_value = False
    if hasattr(group_input_018_1.outputs[87], 'name'):
        group_input_018_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_018_1.outputs[87], 'show_expanded'):
        group_input_018_1.outputs[87].show_expanded = False
    if hasattr(group_input_018_1.outputs[88], 'default_value'):
        group_input_018_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_018_1.outputs[88], 'display_shape'):
        group_input_018_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[88], 'enabled'):
        group_input_018_1.outputs[88].enabled = True
    if hasattr(group_input_018_1.outputs[88], 'hide'):
        group_input_018_1.outputs[88].hide = True
    if hasattr(group_input_018_1.outputs[88], 'hide_value'):
        group_input_018_1.outputs[88].hide_value = False
    if hasattr(group_input_018_1.outputs[88], 'name'):
        group_input_018_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_018_1.outputs[88], 'show_expanded'):
        group_input_018_1.outputs[88].show_expanded = False
    if hasattr(group_input_018_1.outputs[89], 'default_value'):
        group_input_018_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_018_1.outputs[89], 'display_shape'):
        group_input_018_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[89], 'enabled'):
        group_input_018_1.outputs[89].enabled = True
    if hasattr(group_input_018_1.outputs[89], 'hide'):
        group_input_018_1.outputs[89].hide = True
    if hasattr(group_input_018_1.outputs[89], 'hide_value'):
        group_input_018_1.outputs[89].hide_value = False
    if hasattr(group_input_018_1.outputs[89], 'name'):
        group_input_018_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_018_1.outputs[89], 'show_expanded'):
        group_input_018_1.outputs[89].show_expanded = False
    if hasattr(group_input_018_1.outputs[90], 'default_value'):
        group_input_018_1.outputs[90].default_value = 0.0
    if hasattr(group_input_018_1.outputs[90], 'display_shape'):
        group_input_018_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[90], 'enabled'):
        group_input_018_1.outputs[90].enabled = True
    if hasattr(group_input_018_1.outputs[90], 'hide'):
        group_input_018_1.outputs[90].hide = True
    if hasattr(group_input_018_1.outputs[90], 'hide_value'):
        group_input_018_1.outputs[90].hide_value = False
    if hasattr(group_input_018_1.outputs[90], 'name'):
        group_input_018_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_018_1.outputs[90], 'show_expanded'):
        group_input_018_1.outputs[90].show_expanded = False
    if hasattr(group_input_018_1.outputs[91], 'default_value'):
        group_input_018_1.outputs[91].default_value = 0.0
    if hasattr(group_input_018_1.outputs[91], 'display_shape'):
        group_input_018_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[91], 'enabled'):
        group_input_018_1.outputs[91].enabled = True
    if hasattr(group_input_018_1.outputs[91], 'hide'):
        group_input_018_1.outputs[91].hide = True
    if hasattr(group_input_018_1.outputs[91], 'hide_value'):
        group_input_018_1.outputs[91].hide_value = False
    if hasattr(group_input_018_1.outputs[91], 'name'):
        group_input_018_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_018_1.outputs[91], 'show_expanded'):
        group_input_018_1.outputs[91].show_expanded = False
    if hasattr(group_input_018_1.outputs[92], 'default_value'):
        group_input_018_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_018_1.outputs[92], 'display_shape'):
        group_input_018_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[92], 'enabled'):
        group_input_018_1.outputs[92].enabled = True
    if hasattr(group_input_018_1.outputs[92], 'hide'):
        group_input_018_1.outputs[92].hide = False
    if hasattr(group_input_018_1.outputs[92], 'hide_value'):
        group_input_018_1.outputs[92].hide_value = False
    if hasattr(group_input_018_1.outputs[92], 'name'):
        group_input_018_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_018_1.outputs[92], 'show_expanded'):
        group_input_018_1.outputs[92].show_expanded = False
    if hasattr(group_input_018_1.outputs[93], 'default_value'):
        group_input_018_1.outputs[93].default_value = 0.0
    if hasattr(group_input_018_1.outputs[93], 'display_shape'):
        group_input_018_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[93], 'enabled'):
        group_input_018_1.outputs[93].enabled = True
    if hasattr(group_input_018_1.outputs[93], 'hide'):
        group_input_018_1.outputs[93].hide = True
    if hasattr(group_input_018_1.outputs[93], 'hide_value'):
        group_input_018_1.outputs[93].hide_value = False
    if hasattr(group_input_018_1.outputs[93], 'name'):
        group_input_018_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_018_1.outputs[93], 'show_expanded'):
        group_input_018_1.outputs[93].show_expanded = False
    if hasattr(group_input_018_1.outputs[94], 'default_value'):
        group_input_018_1.outputs[94].default_value = 0.0
    if hasattr(group_input_018_1.outputs[94], 'display_shape'):
        group_input_018_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[94], 'enabled'):
        group_input_018_1.outputs[94].enabled = True
    if hasattr(group_input_018_1.outputs[94], 'hide'):
        group_input_018_1.outputs[94].hide = True
    if hasattr(group_input_018_1.outputs[94], 'hide_value'):
        group_input_018_1.outputs[94].hide_value = False
    if hasattr(group_input_018_1.outputs[94], 'name'):
        group_input_018_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_018_1.outputs[94], 'show_expanded'):
        group_input_018_1.outputs[94].show_expanded = False
    if hasattr(group_input_018_1.outputs[95], 'default_value'):
        group_input_018_1.outputs[95].default_value = 0.0
    if hasattr(group_input_018_1.outputs[95], 'display_shape'):
        group_input_018_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[95], 'enabled'):
        group_input_018_1.outputs[95].enabled = True
    if hasattr(group_input_018_1.outputs[95], 'hide'):
        group_input_018_1.outputs[95].hide = True
    if hasattr(group_input_018_1.outputs[95], 'hide_value'):
        group_input_018_1.outputs[95].hide_value = False
    if hasattr(group_input_018_1.outputs[95], 'name'):
        group_input_018_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_018_1.outputs[95], 'show_expanded'):
        group_input_018_1.outputs[95].show_expanded = False
    if hasattr(group_input_018_1.outputs[96], 'default_value'):
        group_input_018_1.outputs[96].default_value = 0.0
    if hasattr(group_input_018_1.outputs[96], 'display_shape'):
        group_input_018_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[96], 'enabled'):
        group_input_018_1.outputs[96].enabled = True
    if hasattr(group_input_018_1.outputs[96], 'hide'):
        group_input_018_1.outputs[96].hide = True
    if hasattr(group_input_018_1.outputs[96], 'hide_value'):
        group_input_018_1.outputs[96].hide_value = False
    if hasattr(group_input_018_1.outputs[96], 'name'):
        group_input_018_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_018_1.outputs[96], 'show_expanded'):
        group_input_018_1.outputs[96].show_expanded = False
    if hasattr(group_input_018_1.outputs[97], 'default_value'):
        group_input_018_1.outputs[97].default_value = 0.0
    if hasattr(group_input_018_1.outputs[97], 'display_shape'):
        group_input_018_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[97], 'enabled'):
        group_input_018_1.outputs[97].enabled = True
    if hasattr(group_input_018_1.outputs[97], 'hide'):
        group_input_018_1.outputs[97].hide = True
    if hasattr(group_input_018_1.outputs[97], 'hide_value'):
        group_input_018_1.outputs[97].hide_value = False
    if hasattr(group_input_018_1.outputs[97], 'name'):
        group_input_018_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_018_1.outputs[97], 'show_expanded'):
        group_input_018_1.outputs[97].show_expanded = False
    if hasattr(group_input_018_1.outputs[98], 'default_value'):
        group_input_018_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_018_1.outputs[98], 'display_shape'):
        group_input_018_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[98], 'enabled'):
        group_input_018_1.outputs[98].enabled = True
    if hasattr(group_input_018_1.outputs[98], 'hide'):
        group_input_018_1.outputs[98].hide = True
    if hasattr(group_input_018_1.outputs[98], 'hide_value'):
        group_input_018_1.outputs[98].hide_value = False
    if hasattr(group_input_018_1.outputs[98], 'name'):
        group_input_018_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_018_1.outputs[98], 'show_expanded'):
        group_input_018_1.outputs[98].show_expanded = False
    if hasattr(group_input_018_1.outputs[99], 'default_value'):
        group_input_018_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_018_1.outputs[99], 'display_shape'):
        group_input_018_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[99], 'enabled'):
        group_input_018_1.outputs[99].enabled = True
    if hasattr(group_input_018_1.outputs[99], 'hide'):
        group_input_018_1.outputs[99].hide = True
    if hasattr(group_input_018_1.outputs[99], 'hide_value'):
        group_input_018_1.outputs[99].hide_value = False
    if hasattr(group_input_018_1.outputs[99], 'name'):
        group_input_018_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_018_1.outputs[99], 'show_expanded'):
        group_input_018_1.outputs[99].show_expanded = False
    if hasattr(group_input_018_1.outputs[100], 'default_value'):
        group_input_018_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_018_1.outputs[100], 'display_shape'):
        group_input_018_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[100], 'enabled'):
        group_input_018_1.outputs[100].enabled = True
    if hasattr(group_input_018_1.outputs[100], 'hide'):
        group_input_018_1.outputs[100].hide = True
    if hasattr(group_input_018_1.outputs[100], 'hide_value'):
        group_input_018_1.outputs[100].hide_value = False
    if hasattr(group_input_018_1.outputs[100], 'name'):
        group_input_018_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_018_1.outputs[100], 'show_expanded'):
        group_input_018_1.outputs[100].show_expanded = False
    if hasattr(group_input_018_1.outputs[101], 'default_value'):
        group_input_018_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_018_1.outputs[101], 'display_shape'):
        group_input_018_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_018_1.outputs[101], 'enabled'):
        group_input_018_1.outputs[101].enabled = True
    if hasattr(group_input_018_1.outputs[101], 'hide'):
        group_input_018_1.outputs[101].hide = True
    if hasattr(group_input_018_1.outputs[101], 'hide_value'):
        group_input_018_1.outputs[101].hide_value = False
    if hasattr(group_input_018_1.outputs[101], 'name'):
        group_input_018_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_018_1.outputs[101], 'show_expanded'):
        group_input_018_1.outputs[101].show_expanded = False

    group_input_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_1, 'color'):
        group_input_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_1, 'hide'):
        group_input_1.hide = False
    if hasattr(group_input_1, 'location'):
        group_input_1.location = (-637.6503295898438, -798.7891845703125)
    if hasattr(group_input_1, 'mute'):
        group_input_1.mute = False
    if hasattr(group_input_1, 'name'):
        group_input_1.name = 'Group Input'
    if hasattr(group_input_1, 'use_custom_color'):
        group_input_1.use_custom_color = False
    if hasattr(group_input_1, 'width'):
        group_input_1.width = 400.0
    if hasattr(group_input_1.outputs[0], 'default_value'):
        group_input_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[0], 'display_shape'):
        group_input_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[0], 'enabled'):
        group_input_1.outputs[0].enabled = True
    if hasattr(group_input_1.outputs[0], 'hide'):
        group_input_1.outputs[0].hide = False
    if hasattr(group_input_1.outputs[0], 'hide_value'):
        group_input_1.outputs[0].hide_value = False
    if hasattr(group_input_1.outputs[0], 'name'):
        group_input_1.outputs[0].name = 'ASG'
    if hasattr(group_input_1.outputs[0], 'show_expanded'):
        group_input_1.outputs[0].show_expanded = False
    if hasattr(group_input_1.outputs[1], 'default_value'):
        group_input_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[1], 'display_shape'):
        group_input_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[1], 'enabled'):
        group_input_1.outputs[1].enabled = True
    if hasattr(group_input_1.outputs[1], 'hide'):
        group_input_1.outputs[1].hide = False
    if hasattr(group_input_1.outputs[1], 'hide_value'):
        group_input_1.outputs[1].hide_value = False
    if hasattr(group_input_1.outputs[1], 'name'):
        group_input_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_1.outputs[1], 'show_expanded'):
        group_input_1.outputs[1].show_expanded = False
    if hasattr(group_input_1.outputs[2], 'default_value'):
        group_input_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[2], 'display_shape'):
        group_input_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[2], 'enabled'):
        group_input_1.outputs[2].enabled = True
    if hasattr(group_input_1.outputs[2], 'hide'):
        group_input_1.outputs[2].hide = False
    if hasattr(group_input_1.outputs[2], 'hide_value'):
        group_input_1.outputs[2].hide_value = False
    if hasattr(group_input_1.outputs[2], 'name'):
        group_input_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_1.outputs[2], 'show_expanded'):
        group_input_1.outputs[2].show_expanded = False
    if hasattr(group_input_1.outputs[3], 'default_value'):
        group_input_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[3], 'display_shape'):
        group_input_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[3], 'enabled'):
        group_input_1.outputs[3].enabled = True
    if hasattr(group_input_1.outputs[3], 'hide'):
        group_input_1.outputs[3].hide = True
    if hasattr(group_input_1.outputs[3], 'hide_value'):
        group_input_1.outputs[3].hide_value = False
    if hasattr(group_input_1.outputs[3], 'name'):
        group_input_1.outputs[3].name = 'Normal'
    if hasattr(group_input_1.outputs[3], 'show_expanded'):
        group_input_1.outputs[3].show_expanded = False
    if hasattr(group_input_1.outputs[4], 'default_value'):
        group_input_1.outputs[4].default_value = 0.0
    if hasattr(group_input_1.outputs[4], 'display_shape'):
        group_input_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[4], 'enabled'):
        group_input_1.outputs[4].enabled = True
    if hasattr(group_input_1.outputs[4], 'hide'):
        group_input_1.outputs[4].hide = False
    if hasattr(group_input_1.outputs[4], 'hide_value'):
        group_input_1.outputs[4].hide_value = False
    if hasattr(group_input_1.outputs[4], 'name'):
        group_input_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_1.outputs[4], 'show_expanded'):
        group_input_1.outputs[4].show_expanded = False
    if hasattr(group_input_1.outputs[5], 'default_value'):
        group_input_1.outputs[5].default_value = 1.0
    if hasattr(group_input_1.outputs[5], 'display_shape'):
        group_input_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[5], 'enabled'):
        group_input_1.outputs[5].enabled = True
    if hasattr(group_input_1.outputs[5], 'hide'):
        group_input_1.outputs[5].hide = False
    if hasattr(group_input_1.outputs[5], 'hide_value'):
        group_input_1.outputs[5].hide_value = False
    if hasattr(group_input_1.outputs[5], 'name'):
        group_input_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_1.outputs[5], 'show_expanded'):
        group_input_1.outputs[5].show_expanded = False
    if hasattr(group_input_1.outputs[6], 'default_value'):
        group_input_1.outputs[6].default_value = 0.0
    if hasattr(group_input_1.outputs[6], 'display_shape'):
        group_input_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[6], 'enabled'):
        group_input_1.outputs[6].enabled = True
    if hasattr(group_input_1.outputs[6], 'hide'):
        group_input_1.outputs[6].hide = True
    if hasattr(group_input_1.outputs[6], 'hide_value'):
        group_input_1.outputs[6].hide_value = False
    if hasattr(group_input_1.outputs[6], 'name'):
        group_input_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_1.outputs[6], 'show_expanded'):
        group_input_1.outputs[6].show_expanded = False
    if hasattr(group_input_1.outputs[7], 'default_value'):
        group_input_1.outputs[7].default_value = 0.0
    if hasattr(group_input_1.outputs[7], 'display_shape'):
        group_input_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[7], 'enabled'):
        group_input_1.outputs[7].enabled = True
    if hasattr(group_input_1.outputs[7], 'hide'):
        group_input_1.outputs[7].hide = True
    if hasattr(group_input_1.outputs[7], 'hide_value'):
        group_input_1.outputs[7].hide_value = False
    if hasattr(group_input_1.outputs[7], 'name'):
        group_input_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_1.outputs[7], 'show_expanded'):
        group_input_1.outputs[7].show_expanded = False
    if hasattr(group_input_1.outputs[8], 'default_value'):
        group_input_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[8], 'display_shape'):
        group_input_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[8], 'enabled'):
        group_input_1.outputs[8].enabled = True
    if hasattr(group_input_1.outputs[8], 'hide'):
        group_input_1.outputs[8].hide = True
    if hasattr(group_input_1.outputs[8], 'hide_value'):
        group_input_1.outputs[8].hide_value = False
    if hasattr(group_input_1.outputs[8], 'name'):
        group_input_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_1.outputs[8], 'show_expanded'):
        group_input_1.outputs[8].show_expanded = False
    if hasattr(group_input_1.outputs[9], 'default_value'):
        group_input_1.outputs[9].default_value = 0.0
    if hasattr(group_input_1.outputs[9], 'display_shape'):
        group_input_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[9], 'enabled'):
        group_input_1.outputs[9].enabled = True
    if hasattr(group_input_1.outputs[9], 'hide'):
        group_input_1.outputs[9].hide = True
    if hasattr(group_input_1.outputs[9], 'hide_value'):
        group_input_1.outputs[9].hide_value = False
    if hasattr(group_input_1.outputs[9], 'name'):
        group_input_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_1.outputs[9], 'show_expanded'):
        group_input_1.outputs[9].show_expanded = False
    if hasattr(group_input_1.outputs[10], 'default_value'):
        group_input_1.outputs[10].default_value = 0.0
    if hasattr(group_input_1.outputs[10], 'display_shape'):
        group_input_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[10], 'enabled'):
        group_input_1.outputs[10].enabled = True
    if hasattr(group_input_1.outputs[10], 'hide'):
        group_input_1.outputs[10].hide = True
    if hasattr(group_input_1.outputs[10], 'hide_value'):
        group_input_1.outputs[10].hide_value = False
    if hasattr(group_input_1.outputs[10], 'name'):
        group_input_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_1.outputs[10], 'show_expanded'):
        group_input_1.outputs[10].show_expanded = False
    if hasattr(group_input_1.outputs[11], 'default_value'):
        group_input_1.outputs[11].default_value = 0.0
    if hasattr(group_input_1.outputs[11], 'display_shape'):
        group_input_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[11], 'enabled'):
        group_input_1.outputs[11].enabled = True
    if hasattr(group_input_1.outputs[11], 'hide'):
        group_input_1.outputs[11].hide = True
    if hasattr(group_input_1.outputs[11], 'hide_value'):
        group_input_1.outputs[11].hide_value = False
    if hasattr(group_input_1.outputs[11], 'name'):
        group_input_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_1.outputs[11], 'show_expanded'):
        group_input_1.outputs[11].show_expanded = False
    if hasattr(group_input_1.outputs[12], 'default_value'):
        group_input_1.outputs[12].default_value = 0.0
    if hasattr(group_input_1.outputs[12], 'display_shape'):
        group_input_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[12], 'enabled'):
        group_input_1.outputs[12].enabled = True
    if hasattr(group_input_1.outputs[12], 'hide'):
        group_input_1.outputs[12].hide = True
    if hasattr(group_input_1.outputs[12], 'hide_value'):
        group_input_1.outputs[12].hide_value = False
    if hasattr(group_input_1.outputs[12], 'name'):
        group_input_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_1.outputs[12], 'show_expanded'):
        group_input_1.outputs[12].show_expanded = False
    if hasattr(group_input_1.outputs[13], 'default_value'):
        group_input_1.outputs[13].default_value = 0.0
    if hasattr(group_input_1.outputs[13], 'display_shape'):
        group_input_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[13], 'enabled'):
        group_input_1.outputs[13].enabled = True
    if hasattr(group_input_1.outputs[13], 'hide'):
        group_input_1.outputs[13].hide = False
    if hasattr(group_input_1.outputs[13], 'hide_value'):
        group_input_1.outputs[13].hide_value = False
    if hasattr(group_input_1.outputs[13], 'name'):
        group_input_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_1.outputs[13], 'show_expanded'):
        group_input_1.outputs[13].show_expanded = False
    if hasattr(group_input_1.outputs[14], 'default_value'):
        group_input_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_1.outputs[14], 'display_shape'):
        group_input_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[14], 'enabled'):
        group_input_1.outputs[14].enabled = True
    if hasattr(group_input_1.outputs[14], 'hide'):
        group_input_1.outputs[14].hide = True
    if hasattr(group_input_1.outputs[14], 'hide_value'):
        group_input_1.outputs[14].hide_value = False
    if hasattr(group_input_1.outputs[14], 'name'):
        group_input_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_1.outputs[14], 'show_expanded'):
        group_input_1.outputs[14].show_expanded = False
    if hasattr(group_input_1.outputs[15], 'default_value'):
        group_input_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_1.outputs[15], 'display_shape'):
        group_input_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[15], 'enabled'):
        group_input_1.outputs[15].enabled = True
    if hasattr(group_input_1.outputs[15], 'hide'):
        group_input_1.outputs[15].hide = True
    if hasattr(group_input_1.outputs[15], 'hide_value'):
        group_input_1.outputs[15].hide_value = False
    if hasattr(group_input_1.outputs[15], 'name'):
        group_input_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_1.outputs[15], 'show_expanded'):
        group_input_1.outputs[15].show_expanded = False
    if hasattr(group_input_1.outputs[16], 'default_value'):
        group_input_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_1.outputs[16], 'display_shape'):
        group_input_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[16], 'enabled'):
        group_input_1.outputs[16].enabled = True
    if hasattr(group_input_1.outputs[16], 'hide'):
        group_input_1.outputs[16].hide = True
    if hasattr(group_input_1.outputs[16], 'hide_value'):
        group_input_1.outputs[16].hide_value = False
    if hasattr(group_input_1.outputs[16], 'name'):
        group_input_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_1.outputs[16], 'show_expanded'):
        group_input_1.outputs[16].show_expanded = False
    if hasattr(group_input_1.outputs[17], 'default_value'):
        group_input_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_1.outputs[17], 'display_shape'):
        group_input_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[17], 'enabled'):
        group_input_1.outputs[17].enabled = True
    if hasattr(group_input_1.outputs[17], 'hide'):
        group_input_1.outputs[17].hide = True
    if hasattr(group_input_1.outputs[17], 'hide_value'):
        group_input_1.outputs[17].hide_value = False
    if hasattr(group_input_1.outputs[17], 'name'):
        group_input_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_1.outputs[17], 'show_expanded'):
        group_input_1.outputs[17].show_expanded = False
    if hasattr(group_input_1.outputs[18], 'default_value'):
        group_input_1.outputs[18].default_value = 0.0
    if hasattr(group_input_1.outputs[18], 'display_shape'):
        group_input_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[18], 'enabled'):
        group_input_1.outputs[18].enabled = True
    if hasattr(group_input_1.outputs[18], 'hide'):
        group_input_1.outputs[18].hide = True
    if hasattr(group_input_1.outputs[18], 'hide_value'):
        group_input_1.outputs[18].hide_value = False
    if hasattr(group_input_1.outputs[18], 'name'):
        group_input_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_1.outputs[18], 'show_expanded'):
        group_input_1.outputs[18].show_expanded = False
    if hasattr(group_input_1.outputs[19], 'default_value'):
        group_input_1.outputs[19].default_value = 0.0
    if hasattr(group_input_1.outputs[19], 'display_shape'):
        group_input_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[19], 'enabled'):
        group_input_1.outputs[19].enabled = True
    if hasattr(group_input_1.outputs[19], 'hide'):
        group_input_1.outputs[19].hide = True
    if hasattr(group_input_1.outputs[19], 'hide_value'):
        group_input_1.outputs[19].hide_value = False
    if hasattr(group_input_1.outputs[19], 'name'):
        group_input_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_1.outputs[19], 'show_expanded'):
        group_input_1.outputs[19].show_expanded = False
    if hasattr(group_input_1.outputs[20], 'default_value'):
        group_input_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[20], 'display_shape'):
        group_input_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[20], 'enabled'):
        group_input_1.outputs[20].enabled = True
    if hasattr(group_input_1.outputs[20], 'hide'):
        group_input_1.outputs[20].hide = True
    if hasattr(group_input_1.outputs[20], 'hide_value'):
        group_input_1.outputs[20].hide_value = False
    if hasattr(group_input_1.outputs[20], 'name'):
        group_input_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_1.outputs[20], 'show_expanded'):
        group_input_1.outputs[20].show_expanded = False
    if hasattr(group_input_1.outputs[21], 'default_value'):
        group_input_1.outputs[21].default_value = 0.0
    if hasattr(group_input_1.outputs[21], 'display_shape'):
        group_input_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[21], 'enabled'):
        group_input_1.outputs[21].enabled = True
    if hasattr(group_input_1.outputs[21], 'hide'):
        group_input_1.outputs[21].hide = True
    if hasattr(group_input_1.outputs[21], 'hide_value'):
        group_input_1.outputs[21].hide_value = False
    if hasattr(group_input_1.outputs[21], 'name'):
        group_input_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_1.outputs[21], 'show_expanded'):
        group_input_1.outputs[21].show_expanded = False
    if hasattr(group_input_1.outputs[22], 'default_value'):
        group_input_1.outputs[22].default_value = 0.0
    if hasattr(group_input_1.outputs[22], 'display_shape'):
        group_input_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[22], 'enabled'):
        group_input_1.outputs[22].enabled = True
    if hasattr(group_input_1.outputs[22], 'hide'):
        group_input_1.outputs[22].hide = True
    if hasattr(group_input_1.outputs[22], 'hide_value'):
        group_input_1.outputs[22].hide_value = False
    if hasattr(group_input_1.outputs[22], 'name'):
        group_input_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_1.outputs[22], 'show_expanded'):
        group_input_1.outputs[22].show_expanded = False
    if hasattr(group_input_1.outputs[23], 'default_value'):
        group_input_1.outputs[23].default_value = 0.0
    if hasattr(group_input_1.outputs[23], 'display_shape'):
        group_input_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[23], 'enabled'):
        group_input_1.outputs[23].enabled = True
    if hasattr(group_input_1.outputs[23], 'hide'):
        group_input_1.outputs[23].hide = True
    if hasattr(group_input_1.outputs[23], 'hide_value'):
        group_input_1.outputs[23].hide_value = False
    if hasattr(group_input_1.outputs[23], 'name'):
        group_input_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_1.outputs[23], 'show_expanded'):
        group_input_1.outputs[23].show_expanded = False
    if hasattr(group_input_1.outputs[24], 'default_value'):
        group_input_1.outputs[24].default_value = 0.0
    if hasattr(group_input_1.outputs[24], 'display_shape'):
        group_input_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[24], 'enabled'):
        group_input_1.outputs[24].enabled = True
    if hasattr(group_input_1.outputs[24], 'hide'):
        group_input_1.outputs[24].hide = True
    if hasattr(group_input_1.outputs[24], 'hide_value'):
        group_input_1.outputs[24].hide_value = False
    if hasattr(group_input_1.outputs[24], 'name'):
        group_input_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_1.outputs[24], 'show_expanded'):
        group_input_1.outputs[24].show_expanded = False
    if hasattr(group_input_1.outputs[25], 'default_value'):
        group_input_1.outputs[25].default_value = 0.0
    if hasattr(group_input_1.outputs[25], 'display_shape'):
        group_input_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[25], 'enabled'):
        group_input_1.outputs[25].enabled = True
    if hasattr(group_input_1.outputs[25], 'hide'):
        group_input_1.outputs[25].hide = False
    if hasattr(group_input_1.outputs[25], 'hide_value'):
        group_input_1.outputs[25].hide_value = False
    if hasattr(group_input_1.outputs[25], 'name'):
        group_input_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_1.outputs[25], 'show_expanded'):
        group_input_1.outputs[25].show_expanded = False
    if hasattr(group_input_1.outputs[26], 'default_value'):
        group_input_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_1.outputs[26], 'display_shape'):
        group_input_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[26], 'enabled'):
        group_input_1.outputs[26].enabled = True
    if hasattr(group_input_1.outputs[26], 'hide'):
        group_input_1.outputs[26].hide = True
    if hasattr(group_input_1.outputs[26], 'hide_value'):
        group_input_1.outputs[26].hide_value = False
    if hasattr(group_input_1.outputs[26], 'name'):
        group_input_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_1.outputs[26], 'show_expanded'):
        group_input_1.outputs[26].show_expanded = False
    if hasattr(group_input_1.outputs[27], 'default_value'):
        group_input_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_1.outputs[27], 'display_shape'):
        group_input_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[27], 'enabled'):
        group_input_1.outputs[27].enabled = True
    if hasattr(group_input_1.outputs[27], 'hide'):
        group_input_1.outputs[27].hide = True
    if hasattr(group_input_1.outputs[27], 'hide_value'):
        group_input_1.outputs[27].hide_value = False
    if hasattr(group_input_1.outputs[27], 'name'):
        group_input_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_1.outputs[27], 'show_expanded'):
        group_input_1.outputs[27].show_expanded = False
    if hasattr(group_input_1.outputs[28], 'default_value'):
        group_input_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_1.outputs[28], 'display_shape'):
        group_input_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[28], 'enabled'):
        group_input_1.outputs[28].enabled = True
    if hasattr(group_input_1.outputs[28], 'hide'):
        group_input_1.outputs[28].hide = True
    if hasattr(group_input_1.outputs[28], 'hide_value'):
        group_input_1.outputs[28].hide_value = False
    if hasattr(group_input_1.outputs[28], 'name'):
        group_input_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_1.outputs[28], 'show_expanded'):
        group_input_1.outputs[28].show_expanded = False
    if hasattr(group_input_1.outputs[29], 'default_value'):
        group_input_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_1.outputs[29], 'display_shape'):
        group_input_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[29], 'enabled'):
        group_input_1.outputs[29].enabled = True
    if hasattr(group_input_1.outputs[29], 'hide'):
        group_input_1.outputs[29].hide = True
    if hasattr(group_input_1.outputs[29], 'hide_value'):
        group_input_1.outputs[29].hide_value = False
    if hasattr(group_input_1.outputs[29], 'name'):
        group_input_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_1.outputs[29], 'show_expanded'):
        group_input_1.outputs[29].show_expanded = False
    if hasattr(group_input_1.outputs[30], 'default_value'):
        group_input_1.outputs[30].default_value = 0.0
    if hasattr(group_input_1.outputs[30], 'display_shape'):
        group_input_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[30], 'enabled'):
        group_input_1.outputs[30].enabled = True
    if hasattr(group_input_1.outputs[30], 'hide'):
        group_input_1.outputs[30].hide = True
    if hasattr(group_input_1.outputs[30], 'hide_value'):
        group_input_1.outputs[30].hide_value = False
    if hasattr(group_input_1.outputs[30], 'name'):
        group_input_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_1.outputs[30], 'show_expanded'):
        group_input_1.outputs[30].show_expanded = False
    if hasattr(group_input_1.outputs[31], 'default_value'):
        group_input_1.outputs[31].default_value = 0.0
    if hasattr(group_input_1.outputs[31], 'display_shape'):
        group_input_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[31], 'enabled'):
        group_input_1.outputs[31].enabled = True
    if hasattr(group_input_1.outputs[31], 'hide'):
        group_input_1.outputs[31].hide = True
    if hasattr(group_input_1.outputs[31], 'hide_value'):
        group_input_1.outputs[31].hide_value = False
    if hasattr(group_input_1.outputs[31], 'name'):
        group_input_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_1.outputs[31], 'show_expanded'):
        group_input_1.outputs[31].show_expanded = False
    if hasattr(group_input_1.outputs[32], 'default_value'):
        group_input_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[32], 'display_shape'):
        group_input_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[32], 'enabled'):
        group_input_1.outputs[32].enabled = True
    if hasattr(group_input_1.outputs[32], 'hide'):
        group_input_1.outputs[32].hide = True
    if hasattr(group_input_1.outputs[32], 'hide_value'):
        group_input_1.outputs[32].hide_value = False
    if hasattr(group_input_1.outputs[32], 'name'):
        group_input_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_1.outputs[32], 'show_expanded'):
        group_input_1.outputs[32].show_expanded = False
    if hasattr(group_input_1.outputs[33], 'default_value'):
        group_input_1.outputs[33].default_value = 0.0
    if hasattr(group_input_1.outputs[33], 'display_shape'):
        group_input_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[33], 'enabled'):
        group_input_1.outputs[33].enabled = True
    if hasattr(group_input_1.outputs[33], 'hide'):
        group_input_1.outputs[33].hide = True
    if hasattr(group_input_1.outputs[33], 'hide_value'):
        group_input_1.outputs[33].hide_value = False
    if hasattr(group_input_1.outputs[33], 'name'):
        group_input_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_1.outputs[33], 'show_expanded'):
        group_input_1.outputs[33].show_expanded = False
    if hasattr(group_input_1.outputs[34], 'default_value'):
        group_input_1.outputs[34].default_value = 0.0
    if hasattr(group_input_1.outputs[34], 'display_shape'):
        group_input_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[34], 'enabled'):
        group_input_1.outputs[34].enabled = True
    if hasattr(group_input_1.outputs[34], 'hide'):
        group_input_1.outputs[34].hide = True
    if hasattr(group_input_1.outputs[34], 'hide_value'):
        group_input_1.outputs[34].hide_value = False
    if hasattr(group_input_1.outputs[34], 'name'):
        group_input_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_1.outputs[34], 'show_expanded'):
        group_input_1.outputs[34].show_expanded = False
    if hasattr(group_input_1.outputs[35], 'default_value'):
        group_input_1.outputs[35].default_value = 0.0
    if hasattr(group_input_1.outputs[35], 'display_shape'):
        group_input_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[35], 'enabled'):
        group_input_1.outputs[35].enabled = True
    if hasattr(group_input_1.outputs[35], 'hide'):
        group_input_1.outputs[35].hide = True
    if hasattr(group_input_1.outputs[35], 'hide_value'):
        group_input_1.outputs[35].hide_value = False
    if hasattr(group_input_1.outputs[35], 'name'):
        group_input_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_1.outputs[35], 'show_expanded'):
        group_input_1.outputs[35].show_expanded = False
    if hasattr(group_input_1.outputs[36], 'default_value'):
        group_input_1.outputs[36].default_value = 0.0
    if hasattr(group_input_1.outputs[36], 'display_shape'):
        group_input_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[36], 'enabled'):
        group_input_1.outputs[36].enabled = True
    if hasattr(group_input_1.outputs[36], 'hide'):
        group_input_1.outputs[36].hide = True
    if hasattr(group_input_1.outputs[36], 'hide_value'):
        group_input_1.outputs[36].hide_value = False
    if hasattr(group_input_1.outputs[36], 'name'):
        group_input_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_1.outputs[36], 'show_expanded'):
        group_input_1.outputs[36].show_expanded = False
    if hasattr(group_input_1.outputs[37], 'default_value'):
        group_input_1.outputs[37].default_value = 0.0
    if hasattr(group_input_1.outputs[37], 'display_shape'):
        group_input_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[37], 'enabled'):
        group_input_1.outputs[37].enabled = True
    if hasattr(group_input_1.outputs[37], 'hide'):
        group_input_1.outputs[37].hide = False
    if hasattr(group_input_1.outputs[37], 'hide_value'):
        group_input_1.outputs[37].hide_value = False
    if hasattr(group_input_1.outputs[37], 'name'):
        group_input_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_1.outputs[37], 'show_expanded'):
        group_input_1.outputs[37].show_expanded = False
    if hasattr(group_input_1.outputs[38], 'default_value'):
        group_input_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_1.outputs[38], 'display_shape'):
        group_input_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[38], 'enabled'):
        group_input_1.outputs[38].enabled = True
    if hasattr(group_input_1.outputs[38], 'hide'):
        group_input_1.outputs[38].hide = True
    if hasattr(group_input_1.outputs[38], 'hide_value'):
        group_input_1.outputs[38].hide_value = False
    if hasattr(group_input_1.outputs[38], 'name'):
        group_input_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_1.outputs[38], 'show_expanded'):
        group_input_1.outputs[38].show_expanded = False
    if hasattr(group_input_1.outputs[39], 'default_value'):
        group_input_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_1.outputs[39], 'display_shape'):
        group_input_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[39], 'enabled'):
        group_input_1.outputs[39].enabled = True
    if hasattr(group_input_1.outputs[39], 'hide'):
        group_input_1.outputs[39].hide = True
    if hasattr(group_input_1.outputs[39], 'hide_value'):
        group_input_1.outputs[39].hide_value = False
    if hasattr(group_input_1.outputs[39], 'name'):
        group_input_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_1.outputs[39], 'show_expanded'):
        group_input_1.outputs[39].show_expanded = False
    if hasattr(group_input_1.outputs[40], 'default_value'):
        group_input_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_1.outputs[40], 'display_shape'):
        group_input_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[40], 'enabled'):
        group_input_1.outputs[40].enabled = True
    if hasattr(group_input_1.outputs[40], 'hide'):
        group_input_1.outputs[40].hide = True
    if hasattr(group_input_1.outputs[40], 'hide_value'):
        group_input_1.outputs[40].hide_value = False
    if hasattr(group_input_1.outputs[40], 'name'):
        group_input_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_1.outputs[40], 'show_expanded'):
        group_input_1.outputs[40].show_expanded = False
    if hasattr(group_input_1.outputs[41], 'default_value'):
        group_input_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_1.outputs[41], 'display_shape'):
        group_input_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[41], 'enabled'):
        group_input_1.outputs[41].enabled = True
    if hasattr(group_input_1.outputs[41], 'hide'):
        group_input_1.outputs[41].hide = True
    if hasattr(group_input_1.outputs[41], 'hide_value'):
        group_input_1.outputs[41].hide_value = False
    if hasattr(group_input_1.outputs[41], 'name'):
        group_input_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_1.outputs[41], 'show_expanded'):
        group_input_1.outputs[41].show_expanded = False
    if hasattr(group_input_1.outputs[42], 'default_value'):
        group_input_1.outputs[42].default_value = 0.0
    if hasattr(group_input_1.outputs[42], 'display_shape'):
        group_input_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[42], 'enabled'):
        group_input_1.outputs[42].enabled = True
    if hasattr(group_input_1.outputs[42], 'hide'):
        group_input_1.outputs[42].hide = True
    if hasattr(group_input_1.outputs[42], 'hide_value'):
        group_input_1.outputs[42].hide_value = False
    if hasattr(group_input_1.outputs[42], 'name'):
        group_input_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_1.outputs[42], 'show_expanded'):
        group_input_1.outputs[42].show_expanded = False
    if hasattr(group_input_1.outputs[43], 'default_value'):
        group_input_1.outputs[43].default_value = 0.0
    if hasattr(group_input_1.outputs[43], 'display_shape'):
        group_input_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[43], 'enabled'):
        group_input_1.outputs[43].enabled = True
    if hasattr(group_input_1.outputs[43], 'hide'):
        group_input_1.outputs[43].hide = True
    if hasattr(group_input_1.outputs[43], 'hide_value'):
        group_input_1.outputs[43].hide_value = False
    if hasattr(group_input_1.outputs[43], 'name'):
        group_input_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_1.outputs[43], 'show_expanded'):
        group_input_1.outputs[43].show_expanded = False
    if hasattr(group_input_1.outputs[44], 'default_value'):
        group_input_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[44], 'display_shape'):
        group_input_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[44], 'enabled'):
        group_input_1.outputs[44].enabled = True
    if hasattr(group_input_1.outputs[44], 'hide'):
        group_input_1.outputs[44].hide = True
    if hasattr(group_input_1.outputs[44], 'hide_value'):
        group_input_1.outputs[44].hide_value = False
    if hasattr(group_input_1.outputs[44], 'name'):
        group_input_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_1.outputs[44], 'show_expanded'):
        group_input_1.outputs[44].show_expanded = False
    if hasattr(group_input_1.outputs[45], 'default_value'):
        group_input_1.outputs[45].default_value = 0.0
    if hasattr(group_input_1.outputs[45], 'display_shape'):
        group_input_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[45], 'enabled'):
        group_input_1.outputs[45].enabled = True
    if hasattr(group_input_1.outputs[45], 'hide'):
        group_input_1.outputs[45].hide = True
    if hasattr(group_input_1.outputs[45], 'hide_value'):
        group_input_1.outputs[45].hide_value = False
    if hasattr(group_input_1.outputs[45], 'name'):
        group_input_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_1.outputs[45], 'show_expanded'):
        group_input_1.outputs[45].show_expanded = False
    if hasattr(group_input_1.outputs[46], 'default_value'):
        group_input_1.outputs[46].default_value = 0.0
    if hasattr(group_input_1.outputs[46], 'display_shape'):
        group_input_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[46], 'enabled'):
        group_input_1.outputs[46].enabled = True
    if hasattr(group_input_1.outputs[46], 'hide'):
        group_input_1.outputs[46].hide = True
    if hasattr(group_input_1.outputs[46], 'hide_value'):
        group_input_1.outputs[46].hide_value = False
    if hasattr(group_input_1.outputs[46], 'name'):
        group_input_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_1.outputs[46], 'show_expanded'):
        group_input_1.outputs[46].show_expanded = False
    if hasattr(group_input_1.outputs[47], 'default_value'):
        group_input_1.outputs[47].default_value = 0.0
    if hasattr(group_input_1.outputs[47], 'display_shape'):
        group_input_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[47], 'enabled'):
        group_input_1.outputs[47].enabled = True
    if hasattr(group_input_1.outputs[47], 'hide'):
        group_input_1.outputs[47].hide = True
    if hasattr(group_input_1.outputs[47], 'hide_value'):
        group_input_1.outputs[47].hide_value = False
    if hasattr(group_input_1.outputs[47], 'name'):
        group_input_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_1.outputs[47], 'show_expanded'):
        group_input_1.outputs[47].show_expanded = False
    if hasattr(group_input_1.outputs[48], 'default_value'):
        group_input_1.outputs[48].default_value = 0.0
    if hasattr(group_input_1.outputs[48], 'display_shape'):
        group_input_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[48], 'enabled'):
        group_input_1.outputs[48].enabled = True
    if hasattr(group_input_1.outputs[48], 'hide'):
        group_input_1.outputs[48].hide = True
    if hasattr(group_input_1.outputs[48], 'hide_value'):
        group_input_1.outputs[48].hide_value = False
    if hasattr(group_input_1.outputs[48], 'name'):
        group_input_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_1.outputs[48], 'show_expanded'):
        group_input_1.outputs[48].show_expanded = False
    if hasattr(group_input_1.outputs[49], 'default_value'):
        group_input_1.outputs[49].default_value = 0.0
    if hasattr(group_input_1.outputs[49], 'display_shape'):
        group_input_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[49], 'enabled'):
        group_input_1.outputs[49].enabled = True
    if hasattr(group_input_1.outputs[49], 'hide'):
        group_input_1.outputs[49].hide = False
    if hasattr(group_input_1.outputs[49], 'hide_value'):
        group_input_1.outputs[49].hide_value = False
    if hasattr(group_input_1.outputs[49], 'name'):
        group_input_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_1.outputs[49], 'show_expanded'):
        group_input_1.outputs[49].show_expanded = False
    if hasattr(group_input_1.outputs[50], 'default_value'):
        group_input_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_1.outputs[50], 'display_shape'):
        group_input_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[50], 'enabled'):
        group_input_1.outputs[50].enabled = True
    if hasattr(group_input_1.outputs[50], 'hide'):
        group_input_1.outputs[50].hide = True
    if hasattr(group_input_1.outputs[50], 'hide_value'):
        group_input_1.outputs[50].hide_value = False
    if hasattr(group_input_1.outputs[50], 'name'):
        group_input_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_1.outputs[50], 'show_expanded'):
        group_input_1.outputs[50].show_expanded = False
    if hasattr(group_input_1.outputs[51], 'default_value'):
        group_input_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_1.outputs[51], 'display_shape'):
        group_input_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[51], 'enabled'):
        group_input_1.outputs[51].enabled = True
    if hasattr(group_input_1.outputs[51], 'hide'):
        group_input_1.outputs[51].hide = True
    if hasattr(group_input_1.outputs[51], 'hide_value'):
        group_input_1.outputs[51].hide_value = False
    if hasattr(group_input_1.outputs[51], 'name'):
        group_input_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_1.outputs[51], 'show_expanded'):
        group_input_1.outputs[51].show_expanded = False
    if hasattr(group_input_1.outputs[52], 'default_value'):
        group_input_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_1.outputs[52], 'display_shape'):
        group_input_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[52], 'enabled'):
        group_input_1.outputs[52].enabled = True
    if hasattr(group_input_1.outputs[52], 'hide'):
        group_input_1.outputs[52].hide = True
    if hasattr(group_input_1.outputs[52], 'hide_value'):
        group_input_1.outputs[52].hide_value = False
    if hasattr(group_input_1.outputs[52], 'name'):
        group_input_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_1.outputs[52], 'show_expanded'):
        group_input_1.outputs[52].show_expanded = False
    if hasattr(group_input_1.outputs[53], 'default_value'):
        group_input_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_1.outputs[53], 'display_shape'):
        group_input_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[53], 'enabled'):
        group_input_1.outputs[53].enabled = True
    if hasattr(group_input_1.outputs[53], 'hide'):
        group_input_1.outputs[53].hide = True
    if hasattr(group_input_1.outputs[53], 'hide_value'):
        group_input_1.outputs[53].hide_value = False
    if hasattr(group_input_1.outputs[53], 'name'):
        group_input_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_1.outputs[53], 'show_expanded'):
        group_input_1.outputs[53].show_expanded = False
    if hasattr(group_input_1.outputs[54], 'default_value'):
        group_input_1.outputs[54].default_value = 0.0
    if hasattr(group_input_1.outputs[54], 'display_shape'):
        group_input_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[54], 'enabled'):
        group_input_1.outputs[54].enabled = True
    if hasattr(group_input_1.outputs[54], 'hide'):
        group_input_1.outputs[54].hide = True
    if hasattr(group_input_1.outputs[54], 'hide_value'):
        group_input_1.outputs[54].hide_value = False
    if hasattr(group_input_1.outputs[54], 'name'):
        group_input_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_1.outputs[54], 'show_expanded'):
        group_input_1.outputs[54].show_expanded = False
    if hasattr(group_input_1.outputs[55], 'default_value'):
        group_input_1.outputs[55].default_value = 0.0
    if hasattr(group_input_1.outputs[55], 'display_shape'):
        group_input_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[55], 'enabled'):
        group_input_1.outputs[55].enabled = True
    if hasattr(group_input_1.outputs[55], 'hide'):
        group_input_1.outputs[55].hide = True
    if hasattr(group_input_1.outputs[55], 'hide_value'):
        group_input_1.outputs[55].hide_value = False
    if hasattr(group_input_1.outputs[55], 'name'):
        group_input_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_1.outputs[55], 'show_expanded'):
        group_input_1.outputs[55].show_expanded = False
    if hasattr(group_input_1.outputs[56], 'default_value'):
        group_input_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[56], 'display_shape'):
        group_input_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[56], 'enabled'):
        group_input_1.outputs[56].enabled = True
    if hasattr(group_input_1.outputs[56], 'hide'):
        group_input_1.outputs[56].hide = True
    if hasattr(group_input_1.outputs[56], 'hide_value'):
        group_input_1.outputs[56].hide_value = False
    if hasattr(group_input_1.outputs[56], 'name'):
        group_input_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_1.outputs[56], 'show_expanded'):
        group_input_1.outputs[56].show_expanded = False
    if hasattr(group_input_1.outputs[57], 'default_value'):
        group_input_1.outputs[57].default_value = 0.0
    if hasattr(group_input_1.outputs[57], 'display_shape'):
        group_input_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[57], 'enabled'):
        group_input_1.outputs[57].enabled = True
    if hasattr(group_input_1.outputs[57], 'hide'):
        group_input_1.outputs[57].hide = True
    if hasattr(group_input_1.outputs[57], 'hide_value'):
        group_input_1.outputs[57].hide_value = False
    if hasattr(group_input_1.outputs[57], 'name'):
        group_input_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_1.outputs[57], 'show_expanded'):
        group_input_1.outputs[57].show_expanded = False
    if hasattr(group_input_1.outputs[58], 'default_value'):
        group_input_1.outputs[58].default_value = 0.0
    if hasattr(group_input_1.outputs[58], 'display_shape'):
        group_input_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[58], 'enabled'):
        group_input_1.outputs[58].enabled = True
    if hasattr(group_input_1.outputs[58], 'hide'):
        group_input_1.outputs[58].hide = True
    if hasattr(group_input_1.outputs[58], 'hide_value'):
        group_input_1.outputs[58].hide_value = False
    if hasattr(group_input_1.outputs[58], 'name'):
        group_input_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_1.outputs[58], 'show_expanded'):
        group_input_1.outputs[58].show_expanded = False
    if hasattr(group_input_1.outputs[59], 'default_value'):
        group_input_1.outputs[59].default_value = 0.0
    if hasattr(group_input_1.outputs[59], 'display_shape'):
        group_input_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[59], 'enabled'):
        group_input_1.outputs[59].enabled = True
    if hasattr(group_input_1.outputs[59], 'hide'):
        group_input_1.outputs[59].hide = True
    if hasattr(group_input_1.outputs[59], 'hide_value'):
        group_input_1.outputs[59].hide_value = False
    if hasattr(group_input_1.outputs[59], 'name'):
        group_input_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_1.outputs[59], 'show_expanded'):
        group_input_1.outputs[59].show_expanded = False
    if hasattr(group_input_1.outputs[60], 'default_value'):
        group_input_1.outputs[60].default_value = 0.0
    if hasattr(group_input_1.outputs[60], 'display_shape'):
        group_input_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[60], 'enabled'):
        group_input_1.outputs[60].enabled = True
    if hasattr(group_input_1.outputs[60], 'hide'):
        group_input_1.outputs[60].hide = True
    if hasattr(group_input_1.outputs[60], 'hide_value'):
        group_input_1.outputs[60].hide_value = False
    if hasattr(group_input_1.outputs[60], 'name'):
        group_input_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_1.outputs[60], 'show_expanded'):
        group_input_1.outputs[60].show_expanded = False
    if hasattr(group_input_1.outputs[61], 'default_value'):
        group_input_1.outputs[61].default_value = 0.0
    if hasattr(group_input_1.outputs[61], 'display_shape'):
        group_input_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[61], 'enabled'):
        group_input_1.outputs[61].enabled = True
    if hasattr(group_input_1.outputs[61], 'hide'):
        group_input_1.outputs[61].hide = False
    if hasattr(group_input_1.outputs[61], 'hide_value'):
        group_input_1.outputs[61].hide_value = False
    if hasattr(group_input_1.outputs[61], 'name'):
        group_input_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_1.outputs[61], 'show_expanded'):
        group_input_1.outputs[61].show_expanded = False
    if hasattr(group_input_1.outputs[62], 'default_value'):
        group_input_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_1.outputs[62], 'display_shape'):
        group_input_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[62], 'enabled'):
        group_input_1.outputs[62].enabled = True
    if hasattr(group_input_1.outputs[62], 'hide'):
        group_input_1.outputs[62].hide = True
    if hasattr(group_input_1.outputs[62], 'hide_value'):
        group_input_1.outputs[62].hide_value = False
    if hasattr(group_input_1.outputs[62], 'name'):
        group_input_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_1.outputs[62], 'show_expanded'):
        group_input_1.outputs[62].show_expanded = False
    if hasattr(group_input_1.outputs[63], 'default_value'):
        group_input_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_1.outputs[63], 'display_shape'):
        group_input_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[63], 'enabled'):
        group_input_1.outputs[63].enabled = True
    if hasattr(group_input_1.outputs[63], 'hide'):
        group_input_1.outputs[63].hide = True
    if hasattr(group_input_1.outputs[63], 'hide_value'):
        group_input_1.outputs[63].hide_value = False
    if hasattr(group_input_1.outputs[63], 'name'):
        group_input_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_1.outputs[63], 'show_expanded'):
        group_input_1.outputs[63].show_expanded = False
    if hasattr(group_input_1.outputs[64], 'default_value'):
        group_input_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_1.outputs[64], 'display_shape'):
        group_input_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[64], 'enabled'):
        group_input_1.outputs[64].enabled = True
    if hasattr(group_input_1.outputs[64], 'hide'):
        group_input_1.outputs[64].hide = True
    if hasattr(group_input_1.outputs[64], 'hide_value'):
        group_input_1.outputs[64].hide_value = False
    if hasattr(group_input_1.outputs[64], 'name'):
        group_input_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_1.outputs[64], 'show_expanded'):
        group_input_1.outputs[64].show_expanded = False
    if hasattr(group_input_1.outputs[65], 'default_value'):
        group_input_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_1.outputs[65], 'display_shape'):
        group_input_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[65], 'enabled'):
        group_input_1.outputs[65].enabled = True
    if hasattr(group_input_1.outputs[65], 'hide'):
        group_input_1.outputs[65].hide = True
    if hasattr(group_input_1.outputs[65], 'hide_value'):
        group_input_1.outputs[65].hide_value = False
    if hasattr(group_input_1.outputs[65], 'name'):
        group_input_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_1.outputs[65], 'show_expanded'):
        group_input_1.outputs[65].show_expanded = False
    if hasattr(group_input_1.outputs[66], 'default_value'):
        group_input_1.outputs[66].default_value = 0.0
    if hasattr(group_input_1.outputs[66], 'display_shape'):
        group_input_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[66], 'enabled'):
        group_input_1.outputs[66].enabled = True
    if hasattr(group_input_1.outputs[66], 'hide'):
        group_input_1.outputs[66].hide = True
    if hasattr(group_input_1.outputs[66], 'hide_value'):
        group_input_1.outputs[66].hide_value = False
    if hasattr(group_input_1.outputs[66], 'name'):
        group_input_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_1.outputs[66], 'show_expanded'):
        group_input_1.outputs[66].show_expanded = False
    if hasattr(group_input_1.outputs[67], 'default_value'):
        group_input_1.outputs[67].default_value = 0.0
    if hasattr(group_input_1.outputs[67], 'display_shape'):
        group_input_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[67], 'enabled'):
        group_input_1.outputs[67].enabled = True
    if hasattr(group_input_1.outputs[67], 'hide'):
        group_input_1.outputs[67].hide = True
    if hasattr(group_input_1.outputs[67], 'hide_value'):
        group_input_1.outputs[67].hide_value = False
    if hasattr(group_input_1.outputs[67], 'name'):
        group_input_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_1.outputs[67], 'show_expanded'):
        group_input_1.outputs[67].show_expanded = False
    if hasattr(group_input_1.outputs[68], 'default_value'):
        group_input_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[68], 'display_shape'):
        group_input_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[68], 'enabled'):
        group_input_1.outputs[68].enabled = True
    if hasattr(group_input_1.outputs[68], 'hide'):
        group_input_1.outputs[68].hide = True
    if hasattr(group_input_1.outputs[68], 'hide_value'):
        group_input_1.outputs[68].hide_value = False
    if hasattr(group_input_1.outputs[68], 'name'):
        group_input_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_1.outputs[68], 'show_expanded'):
        group_input_1.outputs[68].show_expanded = False
    if hasattr(group_input_1.outputs[69], 'default_value'):
        group_input_1.outputs[69].default_value = 0.0
    if hasattr(group_input_1.outputs[69], 'display_shape'):
        group_input_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[69], 'enabled'):
        group_input_1.outputs[69].enabled = True
    if hasattr(group_input_1.outputs[69], 'hide'):
        group_input_1.outputs[69].hide = True
    if hasattr(group_input_1.outputs[69], 'hide_value'):
        group_input_1.outputs[69].hide_value = False
    if hasattr(group_input_1.outputs[69], 'name'):
        group_input_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_1.outputs[69], 'show_expanded'):
        group_input_1.outputs[69].show_expanded = False
    if hasattr(group_input_1.outputs[70], 'default_value'):
        group_input_1.outputs[70].default_value = 0.0
    if hasattr(group_input_1.outputs[70], 'display_shape'):
        group_input_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[70], 'enabled'):
        group_input_1.outputs[70].enabled = True
    if hasattr(group_input_1.outputs[70], 'hide'):
        group_input_1.outputs[70].hide = True
    if hasattr(group_input_1.outputs[70], 'hide_value'):
        group_input_1.outputs[70].hide_value = False
    if hasattr(group_input_1.outputs[70], 'name'):
        group_input_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_1.outputs[70], 'show_expanded'):
        group_input_1.outputs[70].show_expanded = False
    if hasattr(group_input_1.outputs[71], 'default_value'):
        group_input_1.outputs[71].default_value = 0.0
    if hasattr(group_input_1.outputs[71], 'display_shape'):
        group_input_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[71], 'enabled'):
        group_input_1.outputs[71].enabled = True
    if hasattr(group_input_1.outputs[71], 'hide'):
        group_input_1.outputs[71].hide = True
    if hasattr(group_input_1.outputs[71], 'hide_value'):
        group_input_1.outputs[71].hide_value = False
    if hasattr(group_input_1.outputs[71], 'name'):
        group_input_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_1.outputs[71], 'show_expanded'):
        group_input_1.outputs[71].show_expanded = False
    if hasattr(group_input_1.outputs[72], 'default_value'):
        group_input_1.outputs[72].default_value = 0.0
    if hasattr(group_input_1.outputs[72], 'display_shape'):
        group_input_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[72], 'enabled'):
        group_input_1.outputs[72].enabled = True
    if hasattr(group_input_1.outputs[72], 'hide'):
        group_input_1.outputs[72].hide = True
    if hasattr(group_input_1.outputs[72], 'hide_value'):
        group_input_1.outputs[72].hide_value = False
    if hasattr(group_input_1.outputs[72], 'name'):
        group_input_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_1.outputs[72], 'show_expanded'):
        group_input_1.outputs[72].show_expanded = False
    if hasattr(group_input_1.outputs[73], 'default_value'):
        group_input_1.outputs[73].default_value = 0.0
    if hasattr(group_input_1.outputs[73], 'display_shape'):
        group_input_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[73], 'enabled'):
        group_input_1.outputs[73].enabled = True
    if hasattr(group_input_1.outputs[73], 'hide'):
        group_input_1.outputs[73].hide = False
    if hasattr(group_input_1.outputs[73], 'hide_value'):
        group_input_1.outputs[73].hide_value = False
    if hasattr(group_input_1.outputs[73], 'name'):
        group_input_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_1.outputs[73], 'show_expanded'):
        group_input_1.outputs[73].show_expanded = False
    if hasattr(group_input_1.outputs[74], 'default_value'):
        group_input_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_1.outputs[74], 'display_shape'):
        group_input_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[74], 'enabled'):
        group_input_1.outputs[74].enabled = True
    if hasattr(group_input_1.outputs[74], 'hide'):
        group_input_1.outputs[74].hide = True
    if hasattr(group_input_1.outputs[74], 'hide_value'):
        group_input_1.outputs[74].hide_value = False
    if hasattr(group_input_1.outputs[74], 'name'):
        group_input_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_1.outputs[74], 'show_expanded'):
        group_input_1.outputs[74].show_expanded = False
    if hasattr(group_input_1.outputs[75], 'default_value'):
        group_input_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_1.outputs[75], 'display_shape'):
        group_input_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[75], 'enabled'):
        group_input_1.outputs[75].enabled = True
    if hasattr(group_input_1.outputs[75], 'hide'):
        group_input_1.outputs[75].hide = True
    if hasattr(group_input_1.outputs[75], 'hide_value'):
        group_input_1.outputs[75].hide_value = False
    if hasattr(group_input_1.outputs[75], 'name'):
        group_input_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_1.outputs[75], 'show_expanded'):
        group_input_1.outputs[75].show_expanded = False
    if hasattr(group_input_1.outputs[76], 'default_value'):
        group_input_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_1.outputs[76], 'display_shape'):
        group_input_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[76], 'enabled'):
        group_input_1.outputs[76].enabled = True
    if hasattr(group_input_1.outputs[76], 'hide'):
        group_input_1.outputs[76].hide = True
    if hasattr(group_input_1.outputs[76], 'hide_value'):
        group_input_1.outputs[76].hide_value = False
    if hasattr(group_input_1.outputs[76], 'name'):
        group_input_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_1.outputs[76], 'show_expanded'):
        group_input_1.outputs[76].show_expanded = False
    if hasattr(group_input_1.outputs[77], 'default_value'):
        group_input_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_1.outputs[77], 'display_shape'):
        group_input_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[77], 'enabled'):
        group_input_1.outputs[77].enabled = True
    if hasattr(group_input_1.outputs[77], 'hide'):
        group_input_1.outputs[77].hide = True
    if hasattr(group_input_1.outputs[77], 'hide_value'):
        group_input_1.outputs[77].hide_value = False
    if hasattr(group_input_1.outputs[77], 'name'):
        group_input_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_1.outputs[77], 'show_expanded'):
        group_input_1.outputs[77].show_expanded = False
    if hasattr(group_input_1.outputs[78], 'default_value'):
        group_input_1.outputs[78].default_value = 0.0
    if hasattr(group_input_1.outputs[78], 'display_shape'):
        group_input_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[78], 'enabled'):
        group_input_1.outputs[78].enabled = True
    if hasattr(group_input_1.outputs[78], 'hide'):
        group_input_1.outputs[78].hide = True
    if hasattr(group_input_1.outputs[78], 'hide_value'):
        group_input_1.outputs[78].hide_value = False
    if hasattr(group_input_1.outputs[78], 'name'):
        group_input_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_1.outputs[78], 'show_expanded'):
        group_input_1.outputs[78].show_expanded = False
    if hasattr(group_input_1.outputs[79], 'default_value'):
        group_input_1.outputs[79].default_value = 0.0
    if hasattr(group_input_1.outputs[79], 'display_shape'):
        group_input_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[79], 'enabled'):
        group_input_1.outputs[79].enabled = True
    if hasattr(group_input_1.outputs[79], 'hide'):
        group_input_1.outputs[79].hide = True
    if hasattr(group_input_1.outputs[79], 'hide_value'):
        group_input_1.outputs[79].hide_value = False
    if hasattr(group_input_1.outputs[79], 'name'):
        group_input_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_1.outputs[79], 'show_expanded'):
        group_input_1.outputs[79].show_expanded = False
    if hasattr(group_input_1.outputs[80], 'default_value'):
        group_input_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[80], 'display_shape'):
        group_input_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[80], 'enabled'):
        group_input_1.outputs[80].enabled = True
    if hasattr(group_input_1.outputs[80], 'hide'):
        group_input_1.outputs[80].hide = True
    if hasattr(group_input_1.outputs[80], 'hide_value'):
        group_input_1.outputs[80].hide_value = False
    if hasattr(group_input_1.outputs[80], 'name'):
        group_input_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_1.outputs[80], 'show_expanded'):
        group_input_1.outputs[80].show_expanded = False
    if hasattr(group_input_1.outputs[81], 'default_value'):
        group_input_1.outputs[81].default_value = 0.0
    if hasattr(group_input_1.outputs[81], 'display_shape'):
        group_input_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[81], 'enabled'):
        group_input_1.outputs[81].enabled = True
    if hasattr(group_input_1.outputs[81], 'hide'):
        group_input_1.outputs[81].hide = True
    if hasattr(group_input_1.outputs[81], 'hide_value'):
        group_input_1.outputs[81].hide_value = False
    if hasattr(group_input_1.outputs[81], 'name'):
        group_input_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_1.outputs[81], 'show_expanded'):
        group_input_1.outputs[81].show_expanded = False
    if hasattr(group_input_1.outputs[82], 'default_value'):
        group_input_1.outputs[82].default_value = 0.0
    if hasattr(group_input_1.outputs[82], 'display_shape'):
        group_input_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[82], 'enabled'):
        group_input_1.outputs[82].enabled = True
    if hasattr(group_input_1.outputs[82], 'hide'):
        group_input_1.outputs[82].hide = True
    if hasattr(group_input_1.outputs[82], 'hide_value'):
        group_input_1.outputs[82].hide_value = False
    if hasattr(group_input_1.outputs[82], 'name'):
        group_input_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_1.outputs[82], 'show_expanded'):
        group_input_1.outputs[82].show_expanded = False
    if hasattr(group_input_1.outputs[83], 'default_value'):
        group_input_1.outputs[83].default_value = 0.0
    if hasattr(group_input_1.outputs[83], 'display_shape'):
        group_input_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[83], 'enabled'):
        group_input_1.outputs[83].enabled = True
    if hasattr(group_input_1.outputs[83], 'hide'):
        group_input_1.outputs[83].hide = True
    if hasattr(group_input_1.outputs[83], 'hide_value'):
        group_input_1.outputs[83].hide_value = False
    if hasattr(group_input_1.outputs[83], 'name'):
        group_input_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_1.outputs[83], 'show_expanded'):
        group_input_1.outputs[83].show_expanded = False
    if hasattr(group_input_1.outputs[84], 'default_value'):
        group_input_1.outputs[84].default_value = 0.0
    if hasattr(group_input_1.outputs[84], 'display_shape'):
        group_input_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[84], 'enabled'):
        group_input_1.outputs[84].enabled = True
    if hasattr(group_input_1.outputs[84], 'hide'):
        group_input_1.outputs[84].hide = True
    if hasattr(group_input_1.outputs[84], 'hide_value'):
        group_input_1.outputs[84].hide_value = False
    if hasattr(group_input_1.outputs[84], 'name'):
        group_input_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_1.outputs[84], 'show_expanded'):
        group_input_1.outputs[84].show_expanded = False
    if hasattr(group_input_1.outputs[85], 'default_value'):
        group_input_1.outputs[85].default_value = 0.0
    if hasattr(group_input_1.outputs[85], 'display_shape'):
        group_input_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[85], 'enabled'):
        group_input_1.outputs[85].enabled = True
    if hasattr(group_input_1.outputs[85], 'hide'):
        group_input_1.outputs[85].hide = False
    if hasattr(group_input_1.outputs[85], 'hide_value'):
        group_input_1.outputs[85].hide_value = False
    if hasattr(group_input_1.outputs[85], 'name'):
        group_input_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_1.outputs[85], 'show_expanded'):
        group_input_1.outputs[85].show_expanded = False
    if hasattr(group_input_1.outputs[86], 'default_value'):
        group_input_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_1.outputs[86], 'display_shape'):
        group_input_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[86], 'enabled'):
        group_input_1.outputs[86].enabled = True
    if hasattr(group_input_1.outputs[86], 'hide'):
        group_input_1.outputs[86].hide = True
    if hasattr(group_input_1.outputs[86], 'hide_value'):
        group_input_1.outputs[86].hide_value = False
    if hasattr(group_input_1.outputs[86], 'name'):
        group_input_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_1.outputs[86], 'show_expanded'):
        group_input_1.outputs[86].show_expanded = False
    if hasattr(group_input_1.outputs[87], 'default_value'):
        group_input_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_1.outputs[87], 'display_shape'):
        group_input_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[87], 'enabled'):
        group_input_1.outputs[87].enabled = True
    if hasattr(group_input_1.outputs[87], 'hide'):
        group_input_1.outputs[87].hide = True
    if hasattr(group_input_1.outputs[87], 'hide_value'):
        group_input_1.outputs[87].hide_value = False
    if hasattr(group_input_1.outputs[87], 'name'):
        group_input_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_1.outputs[87], 'show_expanded'):
        group_input_1.outputs[87].show_expanded = False
    if hasattr(group_input_1.outputs[88], 'default_value'):
        group_input_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_1.outputs[88], 'display_shape'):
        group_input_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[88], 'enabled'):
        group_input_1.outputs[88].enabled = True
    if hasattr(group_input_1.outputs[88], 'hide'):
        group_input_1.outputs[88].hide = True
    if hasattr(group_input_1.outputs[88], 'hide_value'):
        group_input_1.outputs[88].hide_value = False
    if hasattr(group_input_1.outputs[88], 'name'):
        group_input_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_1.outputs[88], 'show_expanded'):
        group_input_1.outputs[88].show_expanded = False
    if hasattr(group_input_1.outputs[89], 'default_value'):
        group_input_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_1.outputs[89], 'display_shape'):
        group_input_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[89], 'enabled'):
        group_input_1.outputs[89].enabled = True
    if hasattr(group_input_1.outputs[89], 'hide'):
        group_input_1.outputs[89].hide = True
    if hasattr(group_input_1.outputs[89], 'hide_value'):
        group_input_1.outputs[89].hide_value = False
    if hasattr(group_input_1.outputs[89], 'name'):
        group_input_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_1.outputs[89], 'show_expanded'):
        group_input_1.outputs[89].show_expanded = False
    if hasattr(group_input_1.outputs[90], 'default_value'):
        group_input_1.outputs[90].default_value = 0.0
    if hasattr(group_input_1.outputs[90], 'display_shape'):
        group_input_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[90], 'enabled'):
        group_input_1.outputs[90].enabled = True
    if hasattr(group_input_1.outputs[90], 'hide'):
        group_input_1.outputs[90].hide = True
    if hasattr(group_input_1.outputs[90], 'hide_value'):
        group_input_1.outputs[90].hide_value = False
    if hasattr(group_input_1.outputs[90], 'name'):
        group_input_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_1.outputs[90], 'show_expanded'):
        group_input_1.outputs[90].show_expanded = False
    if hasattr(group_input_1.outputs[91], 'default_value'):
        group_input_1.outputs[91].default_value = 0.0
    if hasattr(group_input_1.outputs[91], 'display_shape'):
        group_input_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[91], 'enabled'):
        group_input_1.outputs[91].enabled = True
    if hasattr(group_input_1.outputs[91], 'hide'):
        group_input_1.outputs[91].hide = True
    if hasattr(group_input_1.outputs[91], 'hide_value'):
        group_input_1.outputs[91].hide_value = False
    if hasattr(group_input_1.outputs[91], 'name'):
        group_input_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_1.outputs[91], 'show_expanded'):
        group_input_1.outputs[91].show_expanded = False
    if hasattr(group_input_1.outputs[92], 'default_value'):
        group_input_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_1.outputs[92], 'display_shape'):
        group_input_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[92], 'enabled'):
        group_input_1.outputs[92].enabled = True
    if hasattr(group_input_1.outputs[92], 'hide'):
        group_input_1.outputs[92].hide = True
    if hasattr(group_input_1.outputs[92], 'hide_value'):
        group_input_1.outputs[92].hide_value = False
    if hasattr(group_input_1.outputs[92], 'name'):
        group_input_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_1.outputs[92], 'show_expanded'):
        group_input_1.outputs[92].show_expanded = False
    if hasattr(group_input_1.outputs[93], 'default_value'):
        group_input_1.outputs[93].default_value = 0.0
    if hasattr(group_input_1.outputs[93], 'display_shape'):
        group_input_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[93], 'enabled'):
        group_input_1.outputs[93].enabled = True
    if hasattr(group_input_1.outputs[93], 'hide'):
        group_input_1.outputs[93].hide = True
    if hasattr(group_input_1.outputs[93], 'hide_value'):
        group_input_1.outputs[93].hide_value = False
    if hasattr(group_input_1.outputs[93], 'name'):
        group_input_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_1.outputs[93], 'show_expanded'):
        group_input_1.outputs[93].show_expanded = False
    if hasattr(group_input_1.outputs[94], 'default_value'):
        group_input_1.outputs[94].default_value = 0.0
    if hasattr(group_input_1.outputs[94], 'display_shape'):
        group_input_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[94], 'enabled'):
        group_input_1.outputs[94].enabled = True
    if hasattr(group_input_1.outputs[94], 'hide'):
        group_input_1.outputs[94].hide = True
    if hasattr(group_input_1.outputs[94], 'hide_value'):
        group_input_1.outputs[94].hide_value = False
    if hasattr(group_input_1.outputs[94], 'name'):
        group_input_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_1.outputs[94], 'show_expanded'):
        group_input_1.outputs[94].show_expanded = False
    if hasattr(group_input_1.outputs[95], 'default_value'):
        group_input_1.outputs[95].default_value = 0.0
    if hasattr(group_input_1.outputs[95], 'display_shape'):
        group_input_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[95], 'enabled'):
        group_input_1.outputs[95].enabled = True
    if hasattr(group_input_1.outputs[95], 'hide'):
        group_input_1.outputs[95].hide = True
    if hasattr(group_input_1.outputs[95], 'hide_value'):
        group_input_1.outputs[95].hide_value = False
    if hasattr(group_input_1.outputs[95], 'name'):
        group_input_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_1.outputs[95], 'show_expanded'):
        group_input_1.outputs[95].show_expanded = False
    if hasattr(group_input_1.outputs[96], 'default_value'):
        group_input_1.outputs[96].default_value = 0.0
    if hasattr(group_input_1.outputs[96], 'display_shape'):
        group_input_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[96], 'enabled'):
        group_input_1.outputs[96].enabled = True
    if hasattr(group_input_1.outputs[96], 'hide'):
        group_input_1.outputs[96].hide = True
    if hasattr(group_input_1.outputs[96], 'hide_value'):
        group_input_1.outputs[96].hide_value = False
    if hasattr(group_input_1.outputs[96], 'name'):
        group_input_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_1.outputs[96], 'show_expanded'):
        group_input_1.outputs[96].show_expanded = False
    if hasattr(group_input_1.outputs[97], 'default_value'):
        group_input_1.outputs[97].default_value = 0.0
    if hasattr(group_input_1.outputs[97], 'display_shape'):
        group_input_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[97], 'enabled'):
        group_input_1.outputs[97].enabled = True
    if hasattr(group_input_1.outputs[97], 'hide'):
        group_input_1.outputs[97].hide = False
    if hasattr(group_input_1.outputs[97], 'hide_value'):
        group_input_1.outputs[97].hide_value = False
    if hasattr(group_input_1.outputs[97], 'name'):
        group_input_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_1.outputs[97], 'show_expanded'):
        group_input_1.outputs[97].show_expanded = False
    if hasattr(group_input_1.outputs[98], 'default_value'):
        group_input_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_1.outputs[98], 'display_shape'):
        group_input_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[98], 'enabled'):
        group_input_1.outputs[98].enabled = True
    if hasattr(group_input_1.outputs[98], 'hide'):
        group_input_1.outputs[98].hide = True
    if hasattr(group_input_1.outputs[98], 'hide_value'):
        group_input_1.outputs[98].hide_value = False
    if hasattr(group_input_1.outputs[98], 'name'):
        group_input_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_1.outputs[98], 'show_expanded'):
        group_input_1.outputs[98].show_expanded = False
    if hasattr(group_input_1.outputs[99], 'default_value'):
        group_input_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_1.outputs[99], 'display_shape'):
        group_input_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[99], 'enabled'):
        group_input_1.outputs[99].enabled = True
    if hasattr(group_input_1.outputs[99], 'hide'):
        group_input_1.outputs[99].hide = True
    if hasattr(group_input_1.outputs[99], 'hide_value'):
        group_input_1.outputs[99].hide_value = False
    if hasattr(group_input_1.outputs[99], 'name'):
        group_input_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_1.outputs[99], 'show_expanded'):
        group_input_1.outputs[99].show_expanded = False
    if hasattr(group_input_1.outputs[100], 'default_value'):
        group_input_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_1.outputs[100], 'display_shape'):
        group_input_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[100], 'enabled'):
        group_input_1.outputs[100].enabled = True
    if hasattr(group_input_1.outputs[100], 'hide'):
        group_input_1.outputs[100].hide = True
    if hasattr(group_input_1.outputs[100], 'hide_value'):
        group_input_1.outputs[100].hide_value = False
    if hasattr(group_input_1.outputs[100], 'name'):
        group_input_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_1.outputs[100], 'show_expanded'):
        group_input_1.outputs[100].show_expanded = False
    if hasattr(group_input_1.outputs[101], 'default_value'):
        group_input_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_1.outputs[101], 'display_shape'):
        group_input_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_1.outputs[101], 'enabled'):
        group_input_1.outputs[101].enabled = True
    if hasattr(group_input_1.outputs[101], 'hide'):
        group_input_1.outputs[101].hide = True
    if hasattr(group_input_1.outputs[101], 'hide_value'):
        group_input_1.outputs[101].hide_value = False
    if hasattr(group_input_1.outputs[101], 'name'):
        group_input_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_1.outputs[101], 'show_expanded'):
        group_input_1.outputs[101].show_expanded = False

    group_input_015_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_015_1, 'color'):
        group_input_015_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(group_input_015_1, 'hide'):
        group_input_015_1.hide = False
    if hasattr(group_input_015_1, 'location'):
        group_input_015_1.location = (-592.3930053710938, 329.58502197265625)
    if hasattr(group_input_015_1, 'mute'):
        group_input_015_1.mute = False
    if hasattr(group_input_015_1, 'name'):
        group_input_015_1.name = 'Group Input.015'
    if hasattr(group_input_015_1, 'use_custom_color'):
        group_input_015_1.use_custom_color = False
    if hasattr(group_input_015_1, 'width'):
        group_input_015_1.width = 400.0
    if hasattr(group_input_015_1.outputs[0], 'default_value'):
        group_input_015_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[0], 'display_shape'):
        group_input_015_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[0], 'enabled'):
        group_input_015_1.outputs[0].enabled = True
    if hasattr(group_input_015_1.outputs[0], 'hide'):
        group_input_015_1.outputs[0].hide = False
    if hasattr(group_input_015_1.outputs[0], 'hide_value'):
        group_input_015_1.outputs[0].hide_value = False
    if hasattr(group_input_015_1.outputs[0], 'name'):
        group_input_015_1.outputs[0].name = 'ASG'
    if hasattr(group_input_015_1.outputs[0], 'show_expanded'):
        group_input_015_1.outputs[0].show_expanded = False
    if hasattr(group_input_015_1.outputs[1], 'default_value'):
        group_input_015_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[1], 'display_shape'):
        group_input_015_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[1], 'enabled'):
        group_input_015_1.outputs[1].enabled = True
    if hasattr(group_input_015_1.outputs[1], 'hide'):
        group_input_015_1.outputs[1].hide = False
    if hasattr(group_input_015_1.outputs[1], 'hide_value'):
        group_input_015_1.outputs[1].hide_value = False
    if hasattr(group_input_015_1.outputs[1], 'name'):
        group_input_015_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_015_1.outputs[1], 'show_expanded'):
        group_input_015_1.outputs[1].show_expanded = False
    if hasattr(group_input_015_1.outputs[2], 'default_value'):
        group_input_015_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[2], 'display_shape'):
        group_input_015_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[2], 'enabled'):
        group_input_015_1.outputs[2].enabled = True
    if hasattr(group_input_015_1.outputs[2], 'hide'):
        group_input_015_1.outputs[2].hide = False
    if hasattr(group_input_015_1.outputs[2], 'hide_value'):
        group_input_015_1.outputs[2].hide_value = False
    if hasattr(group_input_015_1.outputs[2], 'name'):
        group_input_015_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_015_1.outputs[2], 'show_expanded'):
        group_input_015_1.outputs[2].show_expanded = False
    if hasattr(group_input_015_1.outputs[3], 'default_value'):
        group_input_015_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[3], 'display_shape'):
        group_input_015_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[3], 'enabled'):
        group_input_015_1.outputs[3].enabled = True
    if hasattr(group_input_015_1.outputs[3], 'hide'):
        group_input_015_1.outputs[3].hide = True
    if hasattr(group_input_015_1.outputs[3], 'hide_value'):
        group_input_015_1.outputs[3].hide_value = False
    if hasattr(group_input_015_1.outputs[3], 'name'):
        group_input_015_1.outputs[3].name = 'Normal'
    if hasattr(group_input_015_1.outputs[3], 'show_expanded'):
        group_input_015_1.outputs[3].show_expanded = False
    if hasattr(group_input_015_1.outputs[4], 'default_value'):
        group_input_015_1.outputs[4].default_value = 0.0
    if hasattr(group_input_015_1.outputs[4], 'display_shape'):
        group_input_015_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[4], 'enabled'):
        group_input_015_1.outputs[4].enabled = True
    if hasattr(group_input_015_1.outputs[4], 'hide'):
        group_input_015_1.outputs[4].hide = False
    if hasattr(group_input_015_1.outputs[4], 'hide_value'):
        group_input_015_1.outputs[4].hide_value = False
    if hasattr(group_input_015_1.outputs[4], 'name'):
        group_input_015_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_015_1.outputs[4], 'show_expanded'):
        group_input_015_1.outputs[4].show_expanded = False
    if hasattr(group_input_015_1.outputs[5], 'default_value'):
        group_input_015_1.outputs[5].default_value = 1.0
    if hasattr(group_input_015_1.outputs[5], 'display_shape'):
        group_input_015_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[5], 'enabled'):
        group_input_015_1.outputs[5].enabled = True
    if hasattr(group_input_015_1.outputs[5], 'hide'):
        group_input_015_1.outputs[5].hide = False
    if hasattr(group_input_015_1.outputs[5], 'hide_value'):
        group_input_015_1.outputs[5].hide_value = False
    if hasattr(group_input_015_1.outputs[5], 'name'):
        group_input_015_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_015_1.outputs[5], 'show_expanded'):
        group_input_015_1.outputs[5].show_expanded = False
    if hasattr(group_input_015_1.outputs[6], 'default_value'):
        group_input_015_1.outputs[6].default_value = 0.0
    if hasattr(group_input_015_1.outputs[6], 'display_shape'):
        group_input_015_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[6], 'enabled'):
        group_input_015_1.outputs[6].enabled = True
    if hasattr(group_input_015_1.outputs[6], 'hide'):
        group_input_015_1.outputs[6].hide = True
    if hasattr(group_input_015_1.outputs[6], 'hide_value'):
        group_input_015_1.outputs[6].hide_value = False
    if hasattr(group_input_015_1.outputs[6], 'name'):
        group_input_015_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_015_1.outputs[6], 'show_expanded'):
        group_input_015_1.outputs[6].show_expanded = False
    if hasattr(group_input_015_1.outputs[7], 'default_value'):
        group_input_015_1.outputs[7].default_value = 0.0
    if hasattr(group_input_015_1.outputs[7], 'display_shape'):
        group_input_015_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[7], 'enabled'):
        group_input_015_1.outputs[7].enabled = True
    if hasattr(group_input_015_1.outputs[7], 'hide'):
        group_input_015_1.outputs[7].hide = False
    if hasattr(group_input_015_1.outputs[7], 'hide_value'):
        group_input_015_1.outputs[7].hide_value = False
    if hasattr(group_input_015_1.outputs[7], 'name'):
        group_input_015_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_015_1.outputs[7], 'show_expanded'):
        group_input_015_1.outputs[7].show_expanded = False
    if hasattr(group_input_015_1.outputs[8], 'default_value'):
        group_input_015_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[8], 'display_shape'):
        group_input_015_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[8], 'enabled'):
        group_input_015_1.outputs[8].enabled = True
    if hasattr(group_input_015_1.outputs[8], 'hide'):
        group_input_015_1.outputs[8].hide = True
    if hasattr(group_input_015_1.outputs[8], 'hide_value'):
        group_input_015_1.outputs[8].hide_value = False
    if hasattr(group_input_015_1.outputs[8], 'name'):
        group_input_015_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_015_1.outputs[8], 'show_expanded'):
        group_input_015_1.outputs[8].show_expanded = False
    if hasattr(group_input_015_1.outputs[9], 'default_value'):
        group_input_015_1.outputs[9].default_value = 0.0
    if hasattr(group_input_015_1.outputs[9], 'display_shape'):
        group_input_015_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[9], 'enabled'):
        group_input_015_1.outputs[9].enabled = True
    if hasattr(group_input_015_1.outputs[9], 'hide'):
        group_input_015_1.outputs[9].hide = True
    if hasattr(group_input_015_1.outputs[9], 'hide_value'):
        group_input_015_1.outputs[9].hide_value = False
    if hasattr(group_input_015_1.outputs[9], 'name'):
        group_input_015_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_015_1.outputs[9], 'show_expanded'):
        group_input_015_1.outputs[9].show_expanded = False
    if hasattr(group_input_015_1.outputs[10], 'default_value'):
        group_input_015_1.outputs[10].default_value = 0.0
    if hasattr(group_input_015_1.outputs[10], 'display_shape'):
        group_input_015_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[10], 'enabled'):
        group_input_015_1.outputs[10].enabled = True
    if hasattr(group_input_015_1.outputs[10], 'hide'):
        group_input_015_1.outputs[10].hide = True
    if hasattr(group_input_015_1.outputs[10], 'hide_value'):
        group_input_015_1.outputs[10].hide_value = False
    if hasattr(group_input_015_1.outputs[10], 'name'):
        group_input_015_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_015_1.outputs[10], 'show_expanded'):
        group_input_015_1.outputs[10].show_expanded = False
    if hasattr(group_input_015_1.outputs[11], 'default_value'):
        group_input_015_1.outputs[11].default_value = 0.0
    if hasattr(group_input_015_1.outputs[11], 'display_shape'):
        group_input_015_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[11], 'enabled'):
        group_input_015_1.outputs[11].enabled = True
    if hasattr(group_input_015_1.outputs[11], 'hide'):
        group_input_015_1.outputs[11].hide = True
    if hasattr(group_input_015_1.outputs[11], 'hide_value'):
        group_input_015_1.outputs[11].hide_value = False
    if hasattr(group_input_015_1.outputs[11], 'name'):
        group_input_015_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_015_1.outputs[11], 'show_expanded'):
        group_input_015_1.outputs[11].show_expanded = False
    if hasattr(group_input_015_1.outputs[12], 'default_value'):
        group_input_015_1.outputs[12].default_value = 0.0
    if hasattr(group_input_015_1.outputs[12], 'display_shape'):
        group_input_015_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[12], 'enabled'):
        group_input_015_1.outputs[12].enabled = True
    if hasattr(group_input_015_1.outputs[12], 'hide'):
        group_input_015_1.outputs[12].hide = True
    if hasattr(group_input_015_1.outputs[12], 'hide_value'):
        group_input_015_1.outputs[12].hide_value = False
    if hasattr(group_input_015_1.outputs[12], 'name'):
        group_input_015_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_015_1.outputs[12], 'show_expanded'):
        group_input_015_1.outputs[12].show_expanded = False
    if hasattr(group_input_015_1.outputs[13], 'default_value'):
        group_input_015_1.outputs[13].default_value = 0.0
    if hasattr(group_input_015_1.outputs[13], 'display_shape'):
        group_input_015_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[13], 'enabled'):
        group_input_015_1.outputs[13].enabled = True
    if hasattr(group_input_015_1.outputs[13], 'hide'):
        group_input_015_1.outputs[13].hide = True
    if hasattr(group_input_015_1.outputs[13], 'hide_value'):
        group_input_015_1.outputs[13].hide_value = False
    if hasattr(group_input_015_1.outputs[13], 'name'):
        group_input_015_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_015_1.outputs[13], 'show_expanded'):
        group_input_015_1.outputs[13].show_expanded = False
    if hasattr(group_input_015_1.outputs[14], 'default_value'):
        group_input_015_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_015_1.outputs[14], 'display_shape'):
        group_input_015_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[14], 'enabled'):
        group_input_015_1.outputs[14].enabled = True
    if hasattr(group_input_015_1.outputs[14], 'hide'):
        group_input_015_1.outputs[14].hide = True
    if hasattr(group_input_015_1.outputs[14], 'hide_value'):
        group_input_015_1.outputs[14].hide_value = False
    if hasattr(group_input_015_1.outputs[14], 'name'):
        group_input_015_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_015_1.outputs[14], 'show_expanded'):
        group_input_015_1.outputs[14].show_expanded = False
    if hasattr(group_input_015_1.outputs[15], 'default_value'):
        group_input_015_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_015_1.outputs[15], 'display_shape'):
        group_input_015_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[15], 'enabled'):
        group_input_015_1.outputs[15].enabled = True
    if hasattr(group_input_015_1.outputs[15], 'hide'):
        group_input_015_1.outputs[15].hide = True
    if hasattr(group_input_015_1.outputs[15], 'hide_value'):
        group_input_015_1.outputs[15].hide_value = False
    if hasattr(group_input_015_1.outputs[15], 'name'):
        group_input_015_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_015_1.outputs[15], 'show_expanded'):
        group_input_015_1.outputs[15].show_expanded = False
    if hasattr(group_input_015_1.outputs[16], 'default_value'):
        group_input_015_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_015_1.outputs[16], 'display_shape'):
        group_input_015_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[16], 'enabled'):
        group_input_015_1.outputs[16].enabled = True
    if hasattr(group_input_015_1.outputs[16], 'hide'):
        group_input_015_1.outputs[16].hide = True
    if hasattr(group_input_015_1.outputs[16], 'hide_value'):
        group_input_015_1.outputs[16].hide_value = False
    if hasattr(group_input_015_1.outputs[16], 'name'):
        group_input_015_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_015_1.outputs[16], 'show_expanded'):
        group_input_015_1.outputs[16].show_expanded = False
    if hasattr(group_input_015_1.outputs[17], 'default_value'):
        group_input_015_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_015_1.outputs[17], 'display_shape'):
        group_input_015_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[17], 'enabled'):
        group_input_015_1.outputs[17].enabled = True
    if hasattr(group_input_015_1.outputs[17], 'hide'):
        group_input_015_1.outputs[17].hide = True
    if hasattr(group_input_015_1.outputs[17], 'hide_value'):
        group_input_015_1.outputs[17].hide_value = False
    if hasattr(group_input_015_1.outputs[17], 'name'):
        group_input_015_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_015_1.outputs[17], 'show_expanded'):
        group_input_015_1.outputs[17].show_expanded = False
    if hasattr(group_input_015_1.outputs[18], 'default_value'):
        group_input_015_1.outputs[18].default_value = 0.0
    if hasattr(group_input_015_1.outputs[18], 'display_shape'):
        group_input_015_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[18], 'enabled'):
        group_input_015_1.outputs[18].enabled = True
    if hasattr(group_input_015_1.outputs[18], 'hide'):
        group_input_015_1.outputs[18].hide = True
    if hasattr(group_input_015_1.outputs[18], 'hide_value'):
        group_input_015_1.outputs[18].hide_value = False
    if hasattr(group_input_015_1.outputs[18], 'name'):
        group_input_015_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_015_1.outputs[18], 'show_expanded'):
        group_input_015_1.outputs[18].show_expanded = False
    if hasattr(group_input_015_1.outputs[19], 'default_value'):
        group_input_015_1.outputs[19].default_value = 0.0
    if hasattr(group_input_015_1.outputs[19], 'display_shape'):
        group_input_015_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[19], 'enabled'):
        group_input_015_1.outputs[19].enabled = True
    if hasattr(group_input_015_1.outputs[19], 'hide'):
        group_input_015_1.outputs[19].hide = False
    if hasattr(group_input_015_1.outputs[19], 'hide_value'):
        group_input_015_1.outputs[19].hide_value = False
    if hasattr(group_input_015_1.outputs[19], 'name'):
        group_input_015_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_015_1.outputs[19], 'show_expanded'):
        group_input_015_1.outputs[19].show_expanded = False
    if hasattr(group_input_015_1.outputs[20], 'default_value'):
        group_input_015_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[20], 'display_shape'):
        group_input_015_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[20], 'enabled'):
        group_input_015_1.outputs[20].enabled = True
    if hasattr(group_input_015_1.outputs[20], 'hide'):
        group_input_015_1.outputs[20].hide = True
    if hasattr(group_input_015_1.outputs[20], 'hide_value'):
        group_input_015_1.outputs[20].hide_value = False
    if hasattr(group_input_015_1.outputs[20], 'name'):
        group_input_015_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_015_1.outputs[20], 'show_expanded'):
        group_input_015_1.outputs[20].show_expanded = False
    if hasattr(group_input_015_1.outputs[21], 'default_value'):
        group_input_015_1.outputs[21].default_value = 0.0
    if hasattr(group_input_015_1.outputs[21], 'display_shape'):
        group_input_015_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[21], 'enabled'):
        group_input_015_1.outputs[21].enabled = True
    if hasattr(group_input_015_1.outputs[21], 'hide'):
        group_input_015_1.outputs[21].hide = True
    if hasattr(group_input_015_1.outputs[21], 'hide_value'):
        group_input_015_1.outputs[21].hide_value = False
    if hasattr(group_input_015_1.outputs[21], 'name'):
        group_input_015_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_015_1.outputs[21], 'show_expanded'):
        group_input_015_1.outputs[21].show_expanded = False
    if hasattr(group_input_015_1.outputs[22], 'default_value'):
        group_input_015_1.outputs[22].default_value = 0.0
    if hasattr(group_input_015_1.outputs[22], 'display_shape'):
        group_input_015_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[22], 'enabled'):
        group_input_015_1.outputs[22].enabled = True
    if hasattr(group_input_015_1.outputs[22], 'hide'):
        group_input_015_1.outputs[22].hide = True
    if hasattr(group_input_015_1.outputs[22], 'hide_value'):
        group_input_015_1.outputs[22].hide_value = False
    if hasattr(group_input_015_1.outputs[22], 'name'):
        group_input_015_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_015_1.outputs[22], 'show_expanded'):
        group_input_015_1.outputs[22].show_expanded = False
    if hasattr(group_input_015_1.outputs[23], 'default_value'):
        group_input_015_1.outputs[23].default_value = 0.0
    if hasattr(group_input_015_1.outputs[23], 'display_shape'):
        group_input_015_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[23], 'enabled'):
        group_input_015_1.outputs[23].enabled = True
    if hasattr(group_input_015_1.outputs[23], 'hide'):
        group_input_015_1.outputs[23].hide = True
    if hasattr(group_input_015_1.outputs[23], 'hide_value'):
        group_input_015_1.outputs[23].hide_value = False
    if hasattr(group_input_015_1.outputs[23], 'name'):
        group_input_015_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_015_1.outputs[23], 'show_expanded'):
        group_input_015_1.outputs[23].show_expanded = False
    if hasattr(group_input_015_1.outputs[24], 'default_value'):
        group_input_015_1.outputs[24].default_value = 0.0
    if hasattr(group_input_015_1.outputs[24], 'display_shape'):
        group_input_015_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[24], 'enabled'):
        group_input_015_1.outputs[24].enabled = True
    if hasattr(group_input_015_1.outputs[24], 'hide'):
        group_input_015_1.outputs[24].hide = True
    if hasattr(group_input_015_1.outputs[24], 'hide_value'):
        group_input_015_1.outputs[24].hide_value = False
    if hasattr(group_input_015_1.outputs[24], 'name'):
        group_input_015_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_015_1.outputs[24], 'show_expanded'):
        group_input_015_1.outputs[24].show_expanded = False
    if hasattr(group_input_015_1.outputs[25], 'default_value'):
        group_input_015_1.outputs[25].default_value = 0.0
    if hasattr(group_input_015_1.outputs[25], 'display_shape'):
        group_input_015_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[25], 'enabled'):
        group_input_015_1.outputs[25].enabled = True
    if hasattr(group_input_015_1.outputs[25], 'hide'):
        group_input_015_1.outputs[25].hide = True
    if hasattr(group_input_015_1.outputs[25], 'hide_value'):
        group_input_015_1.outputs[25].hide_value = False
    if hasattr(group_input_015_1.outputs[25], 'name'):
        group_input_015_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_015_1.outputs[25], 'show_expanded'):
        group_input_015_1.outputs[25].show_expanded = False
    if hasattr(group_input_015_1.outputs[26], 'default_value'):
        group_input_015_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_015_1.outputs[26], 'display_shape'):
        group_input_015_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[26], 'enabled'):
        group_input_015_1.outputs[26].enabled = True
    if hasattr(group_input_015_1.outputs[26], 'hide'):
        group_input_015_1.outputs[26].hide = True
    if hasattr(group_input_015_1.outputs[26], 'hide_value'):
        group_input_015_1.outputs[26].hide_value = False
    if hasattr(group_input_015_1.outputs[26], 'name'):
        group_input_015_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_015_1.outputs[26], 'show_expanded'):
        group_input_015_1.outputs[26].show_expanded = False
    if hasattr(group_input_015_1.outputs[27], 'default_value'):
        group_input_015_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_015_1.outputs[27], 'display_shape'):
        group_input_015_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[27], 'enabled'):
        group_input_015_1.outputs[27].enabled = True
    if hasattr(group_input_015_1.outputs[27], 'hide'):
        group_input_015_1.outputs[27].hide = True
    if hasattr(group_input_015_1.outputs[27], 'hide_value'):
        group_input_015_1.outputs[27].hide_value = False
    if hasattr(group_input_015_1.outputs[27], 'name'):
        group_input_015_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_015_1.outputs[27], 'show_expanded'):
        group_input_015_1.outputs[27].show_expanded = False
    if hasattr(group_input_015_1.outputs[28], 'default_value'):
        group_input_015_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_015_1.outputs[28], 'display_shape'):
        group_input_015_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[28], 'enabled'):
        group_input_015_1.outputs[28].enabled = True
    if hasattr(group_input_015_1.outputs[28], 'hide'):
        group_input_015_1.outputs[28].hide = True
    if hasattr(group_input_015_1.outputs[28], 'hide_value'):
        group_input_015_1.outputs[28].hide_value = False
    if hasattr(group_input_015_1.outputs[28], 'name'):
        group_input_015_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_015_1.outputs[28], 'show_expanded'):
        group_input_015_1.outputs[28].show_expanded = False
    if hasattr(group_input_015_1.outputs[29], 'default_value'):
        group_input_015_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_015_1.outputs[29], 'display_shape'):
        group_input_015_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[29], 'enabled'):
        group_input_015_1.outputs[29].enabled = True
    if hasattr(group_input_015_1.outputs[29], 'hide'):
        group_input_015_1.outputs[29].hide = True
    if hasattr(group_input_015_1.outputs[29], 'hide_value'):
        group_input_015_1.outputs[29].hide_value = False
    if hasattr(group_input_015_1.outputs[29], 'name'):
        group_input_015_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_015_1.outputs[29], 'show_expanded'):
        group_input_015_1.outputs[29].show_expanded = False
    if hasattr(group_input_015_1.outputs[30], 'default_value'):
        group_input_015_1.outputs[30].default_value = 0.0
    if hasattr(group_input_015_1.outputs[30], 'display_shape'):
        group_input_015_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[30], 'enabled'):
        group_input_015_1.outputs[30].enabled = True
    if hasattr(group_input_015_1.outputs[30], 'hide'):
        group_input_015_1.outputs[30].hide = True
    if hasattr(group_input_015_1.outputs[30], 'hide_value'):
        group_input_015_1.outputs[30].hide_value = False
    if hasattr(group_input_015_1.outputs[30], 'name'):
        group_input_015_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_015_1.outputs[30], 'show_expanded'):
        group_input_015_1.outputs[30].show_expanded = False
    if hasattr(group_input_015_1.outputs[31], 'default_value'):
        group_input_015_1.outputs[31].default_value = 0.0
    if hasattr(group_input_015_1.outputs[31], 'display_shape'):
        group_input_015_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[31], 'enabled'):
        group_input_015_1.outputs[31].enabled = True
    if hasattr(group_input_015_1.outputs[31], 'hide'):
        group_input_015_1.outputs[31].hide = False
    if hasattr(group_input_015_1.outputs[31], 'hide_value'):
        group_input_015_1.outputs[31].hide_value = False
    if hasattr(group_input_015_1.outputs[31], 'name'):
        group_input_015_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_015_1.outputs[31], 'show_expanded'):
        group_input_015_1.outputs[31].show_expanded = False
    if hasattr(group_input_015_1.outputs[32], 'default_value'):
        group_input_015_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[32], 'display_shape'):
        group_input_015_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[32], 'enabled'):
        group_input_015_1.outputs[32].enabled = True
    if hasattr(group_input_015_1.outputs[32], 'hide'):
        group_input_015_1.outputs[32].hide = True
    if hasattr(group_input_015_1.outputs[32], 'hide_value'):
        group_input_015_1.outputs[32].hide_value = False
    if hasattr(group_input_015_1.outputs[32], 'name'):
        group_input_015_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_015_1.outputs[32], 'show_expanded'):
        group_input_015_1.outputs[32].show_expanded = False
    if hasattr(group_input_015_1.outputs[33], 'default_value'):
        group_input_015_1.outputs[33].default_value = 0.0
    if hasattr(group_input_015_1.outputs[33], 'display_shape'):
        group_input_015_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[33], 'enabled'):
        group_input_015_1.outputs[33].enabled = True
    if hasattr(group_input_015_1.outputs[33], 'hide'):
        group_input_015_1.outputs[33].hide = True
    if hasattr(group_input_015_1.outputs[33], 'hide_value'):
        group_input_015_1.outputs[33].hide_value = False
    if hasattr(group_input_015_1.outputs[33], 'name'):
        group_input_015_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_015_1.outputs[33], 'show_expanded'):
        group_input_015_1.outputs[33].show_expanded = False
    if hasattr(group_input_015_1.outputs[34], 'default_value'):
        group_input_015_1.outputs[34].default_value = 0.0
    if hasattr(group_input_015_1.outputs[34], 'display_shape'):
        group_input_015_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[34], 'enabled'):
        group_input_015_1.outputs[34].enabled = True
    if hasattr(group_input_015_1.outputs[34], 'hide'):
        group_input_015_1.outputs[34].hide = True
    if hasattr(group_input_015_1.outputs[34], 'hide_value'):
        group_input_015_1.outputs[34].hide_value = False
    if hasattr(group_input_015_1.outputs[34], 'name'):
        group_input_015_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_015_1.outputs[34], 'show_expanded'):
        group_input_015_1.outputs[34].show_expanded = False
    if hasattr(group_input_015_1.outputs[35], 'default_value'):
        group_input_015_1.outputs[35].default_value = 0.0
    if hasattr(group_input_015_1.outputs[35], 'display_shape'):
        group_input_015_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[35], 'enabled'):
        group_input_015_1.outputs[35].enabled = True
    if hasattr(group_input_015_1.outputs[35], 'hide'):
        group_input_015_1.outputs[35].hide = True
    if hasattr(group_input_015_1.outputs[35], 'hide_value'):
        group_input_015_1.outputs[35].hide_value = False
    if hasattr(group_input_015_1.outputs[35], 'name'):
        group_input_015_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_015_1.outputs[35], 'show_expanded'):
        group_input_015_1.outputs[35].show_expanded = False
    if hasattr(group_input_015_1.outputs[36], 'default_value'):
        group_input_015_1.outputs[36].default_value = 0.0
    if hasattr(group_input_015_1.outputs[36], 'display_shape'):
        group_input_015_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[36], 'enabled'):
        group_input_015_1.outputs[36].enabled = True
    if hasattr(group_input_015_1.outputs[36], 'hide'):
        group_input_015_1.outputs[36].hide = True
    if hasattr(group_input_015_1.outputs[36], 'hide_value'):
        group_input_015_1.outputs[36].hide_value = False
    if hasattr(group_input_015_1.outputs[36], 'name'):
        group_input_015_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_015_1.outputs[36], 'show_expanded'):
        group_input_015_1.outputs[36].show_expanded = False
    if hasattr(group_input_015_1.outputs[37], 'default_value'):
        group_input_015_1.outputs[37].default_value = 0.0
    if hasattr(group_input_015_1.outputs[37], 'display_shape'):
        group_input_015_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[37], 'enabled'):
        group_input_015_1.outputs[37].enabled = True
    if hasattr(group_input_015_1.outputs[37], 'hide'):
        group_input_015_1.outputs[37].hide = True
    if hasattr(group_input_015_1.outputs[37], 'hide_value'):
        group_input_015_1.outputs[37].hide_value = False
    if hasattr(group_input_015_1.outputs[37], 'name'):
        group_input_015_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_015_1.outputs[37], 'show_expanded'):
        group_input_015_1.outputs[37].show_expanded = False
    if hasattr(group_input_015_1.outputs[38], 'default_value'):
        group_input_015_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_015_1.outputs[38], 'display_shape'):
        group_input_015_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[38], 'enabled'):
        group_input_015_1.outputs[38].enabled = True
    if hasattr(group_input_015_1.outputs[38], 'hide'):
        group_input_015_1.outputs[38].hide = True
    if hasattr(group_input_015_1.outputs[38], 'hide_value'):
        group_input_015_1.outputs[38].hide_value = False
    if hasattr(group_input_015_1.outputs[38], 'name'):
        group_input_015_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_015_1.outputs[38], 'show_expanded'):
        group_input_015_1.outputs[38].show_expanded = False
    if hasattr(group_input_015_1.outputs[39], 'default_value'):
        group_input_015_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_015_1.outputs[39], 'display_shape'):
        group_input_015_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[39], 'enabled'):
        group_input_015_1.outputs[39].enabled = True
    if hasattr(group_input_015_1.outputs[39], 'hide'):
        group_input_015_1.outputs[39].hide = True
    if hasattr(group_input_015_1.outputs[39], 'hide_value'):
        group_input_015_1.outputs[39].hide_value = False
    if hasattr(group_input_015_1.outputs[39], 'name'):
        group_input_015_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_015_1.outputs[39], 'show_expanded'):
        group_input_015_1.outputs[39].show_expanded = False
    if hasattr(group_input_015_1.outputs[40], 'default_value'):
        group_input_015_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_015_1.outputs[40], 'display_shape'):
        group_input_015_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[40], 'enabled'):
        group_input_015_1.outputs[40].enabled = True
    if hasattr(group_input_015_1.outputs[40], 'hide'):
        group_input_015_1.outputs[40].hide = True
    if hasattr(group_input_015_1.outputs[40], 'hide_value'):
        group_input_015_1.outputs[40].hide_value = False
    if hasattr(group_input_015_1.outputs[40], 'name'):
        group_input_015_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_015_1.outputs[40], 'show_expanded'):
        group_input_015_1.outputs[40].show_expanded = False
    if hasattr(group_input_015_1.outputs[41], 'default_value'):
        group_input_015_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_015_1.outputs[41], 'display_shape'):
        group_input_015_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[41], 'enabled'):
        group_input_015_1.outputs[41].enabled = True
    if hasattr(group_input_015_1.outputs[41], 'hide'):
        group_input_015_1.outputs[41].hide = True
    if hasattr(group_input_015_1.outputs[41], 'hide_value'):
        group_input_015_1.outputs[41].hide_value = False
    if hasattr(group_input_015_1.outputs[41], 'name'):
        group_input_015_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_015_1.outputs[41], 'show_expanded'):
        group_input_015_1.outputs[41].show_expanded = False
    if hasattr(group_input_015_1.outputs[42], 'default_value'):
        group_input_015_1.outputs[42].default_value = 0.0
    if hasattr(group_input_015_1.outputs[42], 'display_shape'):
        group_input_015_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[42], 'enabled'):
        group_input_015_1.outputs[42].enabled = True
    if hasattr(group_input_015_1.outputs[42], 'hide'):
        group_input_015_1.outputs[42].hide = True
    if hasattr(group_input_015_1.outputs[42], 'hide_value'):
        group_input_015_1.outputs[42].hide_value = False
    if hasattr(group_input_015_1.outputs[42], 'name'):
        group_input_015_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_015_1.outputs[42], 'show_expanded'):
        group_input_015_1.outputs[42].show_expanded = False
    if hasattr(group_input_015_1.outputs[43], 'default_value'):
        group_input_015_1.outputs[43].default_value = 0.0
    if hasattr(group_input_015_1.outputs[43], 'display_shape'):
        group_input_015_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[43], 'enabled'):
        group_input_015_1.outputs[43].enabled = True
    if hasattr(group_input_015_1.outputs[43], 'hide'):
        group_input_015_1.outputs[43].hide = False
    if hasattr(group_input_015_1.outputs[43], 'hide_value'):
        group_input_015_1.outputs[43].hide_value = False
    if hasattr(group_input_015_1.outputs[43], 'name'):
        group_input_015_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_015_1.outputs[43], 'show_expanded'):
        group_input_015_1.outputs[43].show_expanded = False
    if hasattr(group_input_015_1.outputs[44], 'default_value'):
        group_input_015_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[44], 'display_shape'):
        group_input_015_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[44], 'enabled'):
        group_input_015_1.outputs[44].enabled = True
    if hasattr(group_input_015_1.outputs[44], 'hide'):
        group_input_015_1.outputs[44].hide = True
    if hasattr(group_input_015_1.outputs[44], 'hide_value'):
        group_input_015_1.outputs[44].hide_value = False
    if hasattr(group_input_015_1.outputs[44], 'name'):
        group_input_015_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_015_1.outputs[44], 'show_expanded'):
        group_input_015_1.outputs[44].show_expanded = False
    if hasattr(group_input_015_1.outputs[45], 'default_value'):
        group_input_015_1.outputs[45].default_value = 0.0
    if hasattr(group_input_015_1.outputs[45], 'display_shape'):
        group_input_015_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[45], 'enabled'):
        group_input_015_1.outputs[45].enabled = True
    if hasattr(group_input_015_1.outputs[45], 'hide'):
        group_input_015_1.outputs[45].hide = True
    if hasattr(group_input_015_1.outputs[45], 'hide_value'):
        group_input_015_1.outputs[45].hide_value = False
    if hasattr(group_input_015_1.outputs[45], 'name'):
        group_input_015_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_015_1.outputs[45], 'show_expanded'):
        group_input_015_1.outputs[45].show_expanded = False
    if hasattr(group_input_015_1.outputs[46], 'default_value'):
        group_input_015_1.outputs[46].default_value = 0.0
    if hasattr(group_input_015_1.outputs[46], 'display_shape'):
        group_input_015_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[46], 'enabled'):
        group_input_015_1.outputs[46].enabled = True
    if hasattr(group_input_015_1.outputs[46], 'hide'):
        group_input_015_1.outputs[46].hide = True
    if hasattr(group_input_015_1.outputs[46], 'hide_value'):
        group_input_015_1.outputs[46].hide_value = False
    if hasattr(group_input_015_1.outputs[46], 'name'):
        group_input_015_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_015_1.outputs[46], 'show_expanded'):
        group_input_015_1.outputs[46].show_expanded = False
    if hasattr(group_input_015_1.outputs[47], 'default_value'):
        group_input_015_1.outputs[47].default_value = 0.0
    if hasattr(group_input_015_1.outputs[47], 'display_shape'):
        group_input_015_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[47], 'enabled'):
        group_input_015_1.outputs[47].enabled = True
    if hasattr(group_input_015_1.outputs[47], 'hide'):
        group_input_015_1.outputs[47].hide = True
    if hasattr(group_input_015_1.outputs[47], 'hide_value'):
        group_input_015_1.outputs[47].hide_value = False
    if hasattr(group_input_015_1.outputs[47], 'name'):
        group_input_015_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_015_1.outputs[47], 'show_expanded'):
        group_input_015_1.outputs[47].show_expanded = False
    if hasattr(group_input_015_1.outputs[48], 'default_value'):
        group_input_015_1.outputs[48].default_value = 0.0
    if hasattr(group_input_015_1.outputs[48], 'display_shape'):
        group_input_015_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[48], 'enabled'):
        group_input_015_1.outputs[48].enabled = True
    if hasattr(group_input_015_1.outputs[48], 'hide'):
        group_input_015_1.outputs[48].hide = True
    if hasattr(group_input_015_1.outputs[48], 'hide_value'):
        group_input_015_1.outputs[48].hide_value = False
    if hasattr(group_input_015_1.outputs[48], 'name'):
        group_input_015_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_015_1.outputs[48], 'show_expanded'):
        group_input_015_1.outputs[48].show_expanded = False
    if hasattr(group_input_015_1.outputs[49], 'default_value'):
        group_input_015_1.outputs[49].default_value = 0.0
    if hasattr(group_input_015_1.outputs[49], 'display_shape'):
        group_input_015_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[49], 'enabled'):
        group_input_015_1.outputs[49].enabled = True
    if hasattr(group_input_015_1.outputs[49], 'hide'):
        group_input_015_1.outputs[49].hide = True
    if hasattr(group_input_015_1.outputs[49], 'hide_value'):
        group_input_015_1.outputs[49].hide_value = False
    if hasattr(group_input_015_1.outputs[49], 'name'):
        group_input_015_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_015_1.outputs[49], 'show_expanded'):
        group_input_015_1.outputs[49].show_expanded = False
    if hasattr(group_input_015_1.outputs[50], 'default_value'):
        group_input_015_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_015_1.outputs[50], 'display_shape'):
        group_input_015_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[50], 'enabled'):
        group_input_015_1.outputs[50].enabled = True
    if hasattr(group_input_015_1.outputs[50], 'hide'):
        group_input_015_1.outputs[50].hide = True
    if hasattr(group_input_015_1.outputs[50], 'hide_value'):
        group_input_015_1.outputs[50].hide_value = False
    if hasattr(group_input_015_1.outputs[50], 'name'):
        group_input_015_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_015_1.outputs[50], 'show_expanded'):
        group_input_015_1.outputs[50].show_expanded = False
    if hasattr(group_input_015_1.outputs[51], 'default_value'):
        group_input_015_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_015_1.outputs[51], 'display_shape'):
        group_input_015_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[51], 'enabled'):
        group_input_015_1.outputs[51].enabled = True
    if hasattr(group_input_015_1.outputs[51], 'hide'):
        group_input_015_1.outputs[51].hide = True
    if hasattr(group_input_015_1.outputs[51], 'hide_value'):
        group_input_015_1.outputs[51].hide_value = False
    if hasattr(group_input_015_1.outputs[51], 'name'):
        group_input_015_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_015_1.outputs[51], 'show_expanded'):
        group_input_015_1.outputs[51].show_expanded = False
    if hasattr(group_input_015_1.outputs[52], 'default_value'):
        group_input_015_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_015_1.outputs[52], 'display_shape'):
        group_input_015_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[52], 'enabled'):
        group_input_015_1.outputs[52].enabled = True
    if hasattr(group_input_015_1.outputs[52], 'hide'):
        group_input_015_1.outputs[52].hide = True
    if hasattr(group_input_015_1.outputs[52], 'hide_value'):
        group_input_015_1.outputs[52].hide_value = False
    if hasattr(group_input_015_1.outputs[52], 'name'):
        group_input_015_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_015_1.outputs[52], 'show_expanded'):
        group_input_015_1.outputs[52].show_expanded = False
    if hasattr(group_input_015_1.outputs[53], 'default_value'):
        group_input_015_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_015_1.outputs[53], 'display_shape'):
        group_input_015_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[53], 'enabled'):
        group_input_015_1.outputs[53].enabled = True
    if hasattr(group_input_015_1.outputs[53], 'hide'):
        group_input_015_1.outputs[53].hide = True
    if hasattr(group_input_015_1.outputs[53], 'hide_value'):
        group_input_015_1.outputs[53].hide_value = False
    if hasattr(group_input_015_1.outputs[53], 'name'):
        group_input_015_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_015_1.outputs[53], 'show_expanded'):
        group_input_015_1.outputs[53].show_expanded = False
    if hasattr(group_input_015_1.outputs[54], 'default_value'):
        group_input_015_1.outputs[54].default_value = 0.0
    if hasattr(group_input_015_1.outputs[54], 'display_shape'):
        group_input_015_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[54], 'enabled'):
        group_input_015_1.outputs[54].enabled = True
    if hasattr(group_input_015_1.outputs[54], 'hide'):
        group_input_015_1.outputs[54].hide = True
    if hasattr(group_input_015_1.outputs[54], 'hide_value'):
        group_input_015_1.outputs[54].hide_value = False
    if hasattr(group_input_015_1.outputs[54], 'name'):
        group_input_015_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_015_1.outputs[54], 'show_expanded'):
        group_input_015_1.outputs[54].show_expanded = False
    if hasattr(group_input_015_1.outputs[55], 'default_value'):
        group_input_015_1.outputs[55].default_value = 0.0
    if hasattr(group_input_015_1.outputs[55], 'display_shape'):
        group_input_015_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[55], 'enabled'):
        group_input_015_1.outputs[55].enabled = True
    if hasattr(group_input_015_1.outputs[55], 'hide'):
        group_input_015_1.outputs[55].hide = False
    if hasattr(group_input_015_1.outputs[55], 'hide_value'):
        group_input_015_1.outputs[55].hide_value = False
    if hasattr(group_input_015_1.outputs[55], 'name'):
        group_input_015_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_015_1.outputs[55], 'show_expanded'):
        group_input_015_1.outputs[55].show_expanded = False
    if hasattr(group_input_015_1.outputs[56], 'default_value'):
        group_input_015_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[56], 'display_shape'):
        group_input_015_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[56], 'enabled'):
        group_input_015_1.outputs[56].enabled = True
    if hasattr(group_input_015_1.outputs[56], 'hide'):
        group_input_015_1.outputs[56].hide = True
    if hasattr(group_input_015_1.outputs[56], 'hide_value'):
        group_input_015_1.outputs[56].hide_value = False
    if hasattr(group_input_015_1.outputs[56], 'name'):
        group_input_015_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_015_1.outputs[56], 'show_expanded'):
        group_input_015_1.outputs[56].show_expanded = False
    if hasattr(group_input_015_1.outputs[57], 'default_value'):
        group_input_015_1.outputs[57].default_value = 0.0
    if hasattr(group_input_015_1.outputs[57], 'display_shape'):
        group_input_015_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[57], 'enabled'):
        group_input_015_1.outputs[57].enabled = True
    if hasattr(group_input_015_1.outputs[57], 'hide'):
        group_input_015_1.outputs[57].hide = True
    if hasattr(group_input_015_1.outputs[57], 'hide_value'):
        group_input_015_1.outputs[57].hide_value = False
    if hasattr(group_input_015_1.outputs[57], 'name'):
        group_input_015_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_015_1.outputs[57], 'show_expanded'):
        group_input_015_1.outputs[57].show_expanded = False
    if hasattr(group_input_015_1.outputs[58], 'default_value'):
        group_input_015_1.outputs[58].default_value = 0.0
    if hasattr(group_input_015_1.outputs[58], 'display_shape'):
        group_input_015_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[58], 'enabled'):
        group_input_015_1.outputs[58].enabled = True
    if hasattr(group_input_015_1.outputs[58], 'hide'):
        group_input_015_1.outputs[58].hide = True
    if hasattr(group_input_015_1.outputs[58], 'hide_value'):
        group_input_015_1.outputs[58].hide_value = False
    if hasattr(group_input_015_1.outputs[58], 'name'):
        group_input_015_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_015_1.outputs[58], 'show_expanded'):
        group_input_015_1.outputs[58].show_expanded = False
    if hasattr(group_input_015_1.outputs[59], 'default_value'):
        group_input_015_1.outputs[59].default_value = 0.0
    if hasattr(group_input_015_1.outputs[59], 'display_shape'):
        group_input_015_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[59], 'enabled'):
        group_input_015_1.outputs[59].enabled = True
    if hasattr(group_input_015_1.outputs[59], 'hide'):
        group_input_015_1.outputs[59].hide = True
    if hasattr(group_input_015_1.outputs[59], 'hide_value'):
        group_input_015_1.outputs[59].hide_value = False
    if hasattr(group_input_015_1.outputs[59], 'name'):
        group_input_015_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_015_1.outputs[59], 'show_expanded'):
        group_input_015_1.outputs[59].show_expanded = False
    if hasattr(group_input_015_1.outputs[60], 'default_value'):
        group_input_015_1.outputs[60].default_value = 0.0
    if hasattr(group_input_015_1.outputs[60], 'display_shape'):
        group_input_015_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[60], 'enabled'):
        group_input_015_1.outputs[60].enabled = True
    if hasattr(group_input_015_1.outputs[60], 'hide'):
        group_input_015_1.outputs[60].hide = True
    if hasattr(group_input_015_1.outputs[60], 'hide_value'):
        group_input_015_1.outputs[60].hide_value = False
    if hasattr(group_input_015_1.outputs[60], 'name'):
        group_input_015_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_015_1.outputs[60], 'show_expanded'):
        group_input_015_1.outputs[60].show_expanded = False
    if hasattr(group_input_015_1.outputs[61], 'default_value'):
        group_input_015_1.outputs[61].default_value = 0.0
    if hasattr(group_input_015_1.outputs[61], 'display_shape'):
        group_input_015_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[61], 'enabled'):
        group_input_015_1.outputs[61].enabled = True
    if hasattr(group_input_015_1.outputs[61], 'hide'):
        group_input_015_1.outputs[61].hide = True
    if hasattr(group_input_015_1.outputs[61], 'hide_value'):
        group_input_015_1.outputs[61].hide_value = False
    if hasattr(group_input_015_1.outputs[61], 'name'):
        group_input_015_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_015_1.outputs[61], 'show_expanded'):
        group_input_015_1.outputs[61].show_expanded = False
    if hasattr(group_input_015_1.outputs[62], 'default_value'):
        group_input_015_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_015_1.outputs[62], 'display_shape'):
        group_input_015_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[62], 'enabled'):
        group_input_015_1.outputs[62].enabled = True
    if hasattr(group_input_015_1.outputs[62], 'hide'):
        group_input_015_1.outputs[62].hide = True
    if hasattr(group_input_015_1.outputs[62], 'hide_value'):
        group_input_015_1.outputs[62].hide_value = False
    if hasattr(group_input_015_1.outputs[62], 'name'):
        group_input_015_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_015_1.outputs[62], 'show_expanded'):
        group_input_015_1.outputs[62].show_expanded = False
    if hasattr(group_input_015_1.outputs[63], 'default_value'):
        group_input_015_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_015_1.outputs[63], 'display_shape'):
        group_input_015_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[63], 'enabled'):
        group_input_015_1.outputs[63].enabled = True
    if hasattr(group_input_015_1.outputs[63], 'hide'):
        group_input_015_1.outputs[63].hide = True
    if hasattr(group_input_015_1.outputs[63], 'hide_value'):
        group_input_015_1.outputs[63].hide_value = False
    if hasattr(group_input_015_1.outputs[63], 'name'):
        group_input_015_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_015_1.outputs[63], 'show_expanded'):
        group_input_015_1.outputs[63].show_expanded = False
    if hasattr(group_input_015_1.outputs[64], 'default_value'):
        group_input_015_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_015_1.outputs[64], 'display_shape'):
        group_input_015_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[64], 'enabled'):
        group_input_015_1.outputs[64].enabled = True
    if hasattr(group_input_015_1.outputs[64], 'hide'):
        group_input_015_1.outputs[64].hide = True
    if hasattr(group_input_015_1.outputs[64], 'hide_value'):
        group_input_015_1.outputs[64].hide_value = False
    if hasattr(group_input_015_1.outputs[64], 'name'):
        group_input_015_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_015_1.outputs[64], 'show_expanded'):
        group_input_015_1.outputs[64].show_expanded = False
    if hasattr(group_input_015_1.outputs[65], 'default_value'):
        group_input_015_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_015_1.outputs[65], 'display_shape'):
        group_input_015_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[65], 'enabled'):
        group_input_015_1.outputs[65].enabled = True
    if hasattr(group_input_015_1.outputs[65], 'hide'):
        group_input_015_1.outputs[65].hide = True
    if hasattr(group_input_015_1.outputs[65], 'hide_value'):
        group_input_015_1.outputs[65].hide_value = False
    if hasattr(group_input_015_1.outputs[65], 'name'):
        group_input_015_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_015_1.outputs[65], 'show_expanded'):
        group_input_015_1.outputs[65].show_expanded = False
    if hasattr(group_input_015_1.outputs[66], 'default_value'):
        group_input_015_1.outputs[66].default_value = 0.0
    if hasattr(group_input_015_1.outputs[66], 'display_shape'):
        group_input_015_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[66], 'enabled'):
        group_input_015_1.outputs[66].enabled = True
    if hasattr(group_input_015_1.outputs[66], 'hide'):
        group_input_015_1.outputs[66].hide = True
    if hasattr(group_input_015_1.outputs[66], 'hide_value'):
        group_input_015_1.outputs[66].hide_value = False
    if hasattr(group_input_015_1.outputs[66], 'name'):
        group_input_015_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_015_1.outputs[66], 'show_expanded'):
        group_input_015_1.outputs[66].show_expanded = False
    if hasattr(group_input_015_1.outputs[67], 'default_value'):
        group_input_015_1.outputs[67].default_value = 0.0
    if hasattr(group_input_015_1.outputs[67], 'display_shape'):
        group_input_015_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[67], 'enabled'):
        group_input_015_1.outputs[67].enabled = True
    if hasattr(group_input_015_1.outputs[67], 'hide'):
        group_input_015_1.outputs[67].hide = False
    if hasattr(group_input_015_1.outputs[67], 'hide_value'):
        group_input_015_1.outputs[67].hide_value = False
    if hasattr(group_input_015_1.outputs[67], 'name'):
        group_input_015_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_015_1.outputs[67], 'show_expanded'):
        group_input_015_1.outputs[67].show_expanded = False
    if hasattr(group_input_015_1.outputs[68], 'default_value'):
        group_input_015_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[68], 'display_shape'):
        group_input_015_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[68], 'enabled'):
        group_input_015_1.outputs[68].enabled = True
    if hasattr(group_input_015_1.outputs[68], 'hide'):
        group_input_015_1.outputs[68].hide = True
    if hasattr(group_input_015_1.outputs[68], 'hide_value'):
        group_input_015_1.outputs[68].hide_value = False
    if hasattr(group_input_015_1.outputs[68], 'name'):
        group_input_015_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_015_1.outputs[68], 'show_expanded'):
        group_input_015_1.outputs[68].show_expanded = False
    if hasattr(group_input_015_1.outputs[69], 'default_value'):
        group_input_015_1.outputs[69].default_value = 0.0
    if hasattr(group_input_015_1.outputs[69], 'display_shape'):
        group_input_015_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[69], 'enabled'):
        group_input_015_1.outputs[69].enabled = True
    if hasattr(group_input_015_1.outputs[69], 'hide'):
        group_input_015_1.outputs[69].hide = True
    if hasattr(group_input_015_1.outputs[69], 'hide_value'):
        group_input_015_1.outputs[69].hide_value = False
    if hasattr(group_input_015_1.outputs[69], 'name'):
        group_input_015_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_015_1.outputs[69], 'show_expanded'):
        group_input_015_1.outputs[69].show_expanded = False
    if hasattr(group_input_015_1.outputs[70], 'default_value'):
        group_input_015_1.outputs[70].default_value = 0.0
    if hasattr(group_input_015_1.outputs[70], 'display_shape'):
        group_input_015_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[70], 'enabled'):
        group_input_015_1.outputs[70].enabled = True
    if hasattr(group_input_015_1.outputs[70], 'hide'):
        group_input_015_1.outputs[70].hide = True
    if hasattr(group_input_015_1.outputs[70], 'hide_value'):
        group_input_015_1.outputs[70].hide_value = False
    if hasattr(group_input_015_1.outputs[70], 'name'):
        group_input_015_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_015_1.outputs[70], 'show_expanded'):
        group_input_015_1.outputs[70].show_expanded = False
    if hasattr(group_input_015_1.outputs[71], 'default_value'):
        group_input_015_1.outputs[71].default_value = 0.0
    if hasattr(group_input_015_1.outputs[71], 'display_shape'):
        group_input_015_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[71], 'enabled'):
        group_input_015_1.outputs[71].enabled = True
    if hasattr(group_input_015_1.outputs[71], 'hide'):
        group_input_015_1.outputs[71].hide = True
    if hasattr(group_input_015_1.outputs[71], 'hide_value'):
        group_input_015_1.outputs[71].hide_value = False
    if hasattr(group_input_015_1.outputs[71], 'name'):
        group_input_015_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_015_1.outputs[71], 'show_expanded'):
        group_input_015_1.outputs[71].show_expanded = False
    if hasattr(group_input_015_1.outputs[72], 'default_value'):
        group_input_015_1.outputs[72].default_value = 0.0
    if hasattr(group_input_015_1.outputs[72], 'display_shape'):
        group_input_015_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[72], 'enabled'):
        group_input_015_1.outputs[72].enabled = True
    if hasattr(group_input_015_1.outputs[72], 'hide'):
        group_input_015_1.outputs[72].hide = True
    if hasattr(group_input_015_1.outputs[72], 'hide_value'):
        group_input_015_1.outputs[72].hide_value = False
    if hasattr(group_input_015_1.outputs[72], 'name'):
        group_input_015_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_015_1.outputs[72], 'show_expanded'):
        group_input_015_1.outputs[72].show_expanded = False
    if hasattr(group_input_015_1.outputs[73], 'default_value'):
        group_input_015_1.outputs[73].default_value = 0.0
    if hasattr(group_input_015_1.outputs[73], 'display_shape'):
        group_input_015_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[73], 'enabled'):
        group_input_015_1.outputs[73].enabled = True
    if hasattr(group_input_015_1.outputs[73], 'hide'):
        group_input_015_1.outputs[73].hide = True
    if hasattr(group_input_015_1.outputs[73], 'hide_value'):
        group_input_015_1.outputs[73].hide_value = False
    if hasattr(group_input_015_1.outputs[73], 'name'):
        group_input_015_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_015_1.outputs[73], 'show_expanded'):
        group_input_015_1.outputs[73].show_expanded = False
    if hasattr(group_input_015_1.outputs[74], 'default_value'):
        group_input_015_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_015_1.outputs[74], 'display_shape'):
        group_input_015_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[74], 'enabled'):
        group_input_015_1.outputs[74].enabled = True
    if hasattr(group_input_015_1.outputs[74], 'hide'):
        group_input_015_1.outputs[74].hide = True
    if hasattr(group_input_015_1.outputs[74], 'hide_value'):
        group_input_015_1.outputs[74].hide_value = False
    if hasattr(group_input_015_1.outputs[74], 'name'):
        group_input_015_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_015_1.outputs[74], 'show_expanded'):
        group_input_015_1.outputs[74].show_expanded = False
    if hasattr(group_input_015_1.outputs[75], 'default_value'):
        group_input_015_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_015_1.outputs[75], 'display_shape'):
        group_input_015_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[75], 'enabled'):
        group_input_015_1.outputs[75].enabled = True
    if hasattr(group_input_015_1.outputs[75], 'hide'):
        group_input_015_1.outputs[75].hide = True
    if hasattr(group_input_015_1.outputs[75], 'hide_value'):
        group_input_015_1.outputs[75].hide_value = False
    if hasattr(group_input_015_1.outputs[75], 'name'):
        group_input_015_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_015_1.outputs[75], 'show_expanded'):
        group_input_015_1.outputs[75].show_expanded = False
    if hasattr(group_input_015_1.outputs[76], 'default_value'):
        group_input_015_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_015_1.outputs[76], 'display_shape'):
        group_input_015_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[76], 'enabled'):
        group_input_015_1.outputs[76].enabled = True
    if hasattr(group_input_015_1.outputs[76], 'hide'):
        group_input_015_1.outputs[76].hide = True
    if hasattr(group_input_015_1.outputs[76], 'hide_value'):
        group_input_015_1.outputs[76].hide_value = False
    if hasattr(group_input_015_1.outputs[76], 'name'):
        group_input_015_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_015_1.outputs[76], 'show_expanded'):
        group_input_015_1.outputs[76].show_expanded = False
    if hasattr(group_input_015_1.outputs[77], 'default_value'):
        group_input_015_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_015_1.outputs[77], 'display_shape'):
        group_input_015_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[77], 'enabled'):
        group_input_015_1.outputs[77].enabled = True
    if hasattr(group_input_015_1.outputs[77], 'hide'):
        group_input_015_1.outputs[77].hide = True
    if hasattr(group_input_015_1.outputs[77], 'hide_value'):
        group_input_015_1.outputs[77].hide_value = False
    if hasattr(group_input_015_1.outputs[77], 'name'):
        group_input_015_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_015_1.outputs[77], 'show_expanded'):
        group_input_015_1.outputs[77].show_expanded = False
    if hasattr(group_input_015_1.outputs[78], 'default_value'):
        group_input_015_1.outputs[78].default_value = 0.0
    if hasattr(group_input_015_1.outputs[78], 'display_shape'):
        group_input_015_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[78], 'enabled'):
        group_input_015_1.outputs[78].enabled = True
    if hasattr(group_input_015_1.outputs[78], 'hide'):
        group_input_015_1.outputs[78].hide = True
    if hasattr(group_input_015_1.outputs[78], 'hide_value'):
        group_input_015_1.outputs[78].hide_value = False
    if hasattr(group_input_015_1.outputs[78], 'name'):
        group_input_015_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_015_1.outputs[78], 'show_expanded'):
        group_input_015_1.outputs[78].show_expanded = False
    if hasattr(group_input_015_1.outputs[79], 'default_value'):
        group_input_015_1.outputs[79].default_value = 0.0
    if hasattr(group_input_015_1.outputs[79], 'display_shape'):
        group_input_015_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[79], 'enabled'):
        group_input_015_1.outputs[79].enabled = True
    if hasattr(group_input_015_1.outputs[79], 'hide'):
        group_input_015_1.outputs[79].hide = False
    if hasattr(group_input_015_1.outputs[79], 'hide_value'):
        group_input_015_1.outputs[79].hide_value = False
    if hasattr(group_input_015_1.outputs[79], 'name'):
        group_input_015_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_015_1.outputs[79], 'show_expanded'):
        group_input_015_1.outputs[79].show_expanded = False
    if hasattr(group_input_015_1.outputs[80], 'default_value'):
        group_input_015_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[80], 'display_shape'):
        group_input_015_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[80], 'enabled'):
        group_input_015_1.outputs[80].enabled = True
    if hasattr(group_input_015_1.outputs[80], 'hide'):
        group_input_015_1.outputs[80].hide = True
    if hasattr(group_input_015_1.outputs[80], 'hide_value'):
        group_input_015_1.outputs[80].hide_value = False
    if hasattr(group_input_015_1.outputs[80], 'name'):
        group_input_015_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_015_1.outputs[80], 'show_expanded'):
        group_input_015_1.outputs[80].show_expanded = False
    if hasattr(group_input_015_1.outputs[81], 'default_value'):
        group_input_015_1.outputs[81].default_value = 0.0
    if hasattr(group_input_015_1.outputs[81], 'display_shape'):
        group_input_015_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[81], 'enabled'):
        group_input_015_1.outputs[81].enabled = True
    if hasattr(group_input_015_1.outputs[81], 'hide'):
        group_input_015_1.outputs[81].hide = True
    if hasattr(group_input_015_1.outputs[81], 'hide_value'):
        group_input_015_1.outputs[81].hide_value = False
    if hasattr(group_input_015_1.outputs[81], 'name'):
        group_input_015_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_015_1.outputs[81], 'show_expanded'):
        group_input_015_1.outputs[81].show_expanded = False
    if hasattr(group_input_015_1.outputs[82], 'default_value'):
        group_input_015_1.outputs[82].default_value = 0.0
    if hasattr(group_input_015_1.outputs[82], 'display_shape'):
        group_input_015_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[82], 'enabled'):
        group_input_015_1.outputs[82].enabled = True
    if hasattr(group_input_015_1.outputs[82], 'hide'):
        group_input_015_1.outputs[82].hide = True
    if hasattr(group_input_015_1.outputs[82], 'hide_value'):
        group_input_015_1.outputs[82].hide_value = False
    if hasattr(group_input_015_1.outputs[82], 'name'):
        group_input_015_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_015_1.outputs[82], 'show_expanded'):
        group_input_015_1.outputs[82].show_expanded = False
    if hasattr(group_input_015_1.outputs[83], 'default_value'):
        group_input_015_1.outputs[83].default_value = 0.0
    if hasattr(group_input_015_1.outputs[83], 'display_shape'):
        group_input_015_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[83], 'enabled'):
        group_input_015_1.outputs[83].enabled = True
    if hasattr(group_input_015_1.outputs[83], 'hide'):
        group_input_015_1.outputs[83].hide = True
    if hasattr(group_input_015_1.outputs[83], 'hide_value'):
        group_input_015_1.outputs[83].hide_value = False
    if hasattr(group_input_015_1.outputs[83], 'name'):
        group_input_015_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_015_1.outputs[83], 'show_expanded'):
        group_input_015_1.outputs[83].show_expanded = False
    if hasattr(group_input_015_1.outputs[84], 'default_value'):
        group_input_015_1.outputs[84].default_value = 0.0
    if hasattr(group_input_015_1.outputs[84], 'display_shape'):
        group_input_015_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[84], 'enabled'):
        group_input_015_1.outputs[84].enabled = True
    if hasattr(group_input_015_1.outputs[84], 'hide'):
        group_input_015_1.outputs[84].hide = True
    if hasattr(group_input_015_1.outputs[84], 'hide_value'):
        group_input_015_1.outputs[84].hide_value = False
    if hasattr(group_input_015_1.outputs[84], 'name'):
        group_input_015_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_015_1.outputs[84], 'show_expanded'):
        group_input_015_1.outputs[84].show_expanded = False
    if hasattr(group_input_015_1.outputs[85], 'default_value'):
        group_input_015_1.outputs[85].default_value = 0.0
    if hasattr(group_input_015_1.outputs[85], 'display_shape'):
        group_input_015_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[85], 'enabled'):
        group_input_015_1.outputs[85].enabled = True
    if hasattr(group_input_015_1.outputs[85], 'hide'):
        group_input_015_1.outputs[85].hide = True
    if hasattr(group_input_015_1.outputs[85], 'hide_value'):
        group_input_015_1.outputs[85].hide_value = False
    if hasattr(group_input_015_1.outputs[85], 'name'):
        group_input_015_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_015_1.outputs[85], 'show_expanded'):
        group_input_015_1.outputs[85].show_expanded = False
    if hasattr(group_input_015_1.outputs[86], 'default_value'):
        group_input_015_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_015_1.outputs[86], 'display_shape'):
        group_input_015_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[86], 'enabled'):
        group_input_015_1.outputs[86].enabled = True
    if hasattr(group_input_015_1.outputs[86], 'hide'):
        group_input_015_1.outputs[86].hide = True
    if hasattr(group_input_015_1.outputs[86], 'hide_value'):
        group_input_015_1.outputs[86].hide_value = False
    if hasattr(group_input_015_1.outputs[86], 'name'):
        group_input_015_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_015_1.outputs[86], 'show_expanded'):
        group_input_015_1.outputs[86].show_expanded = False
    if hasattr(group_input_015_1.outputs[87], 'default_value'):
        group_input_015_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_015_1.outputs[87], 'display_shape'):
        group_input_015_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[87], 'enabled'):
        group_input_015_1.outputs[87].enabled = True
    if hasattr(group_input_015_1.outputs[87], 'hide'):
        group_input_015_1.outputs[87].hide = True
    if hasattr(group_input_015_1.outputs[87], 'hide_value'):
        group_input_015_1.outputs[87].hide_value = False
    if hasattr(group_input_015_1.outputs[87], 'name'):
        group_input_015_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_015_1.outputs[87], 'show_expanded'):
        group_input_015_1.outputs[87].show_expanded = False
    if hasattr(group_input_015_1.outputs[88], 'default_value'):
        group_input_015_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_015_1.outputs[88], 'display_shape'):
        group_input_015_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[88], 'enabled'):
        group_input_015_1.outputs[88].enabled = True
    if hasattr(group_input_015_1.outputs[88], 'hide'):
        group_input_015_1.outputs[88].hide = True
    if hasattr(group_input_015_1.outputs[88], 'hide_value'):
        group_input_015_1.outputs[88].hide_value = False
    if hasattr(group_input_015_1.outputs[88], 'name'):
        group_input_015_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_015_1.outputs[88], 'show_expanded'):
        group_input_015_1.outputs[88].show_expanded = False
    if hasattr(group_input_015_1.outputs[89], 'default_value'):
        group_input_015_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_015_1.outputs[89], 'display_shape'):
        group_input_015_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[89], 'enabled'):
        group_input_015_1.outputs[89].enabled = True
    if hasattr(group_input_015_1.outputs[89], 'hide'):
        group_input_015_1.outputs[89].hide = True
    if hasattr(group_input_015_1.outputs[89], 'hide_value'):
        group_input_015_1.outputs[89].hide_value = False
    if hasattr(group_input_015_1.outputs[89], 'name'):
        group_input_015_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_015_1.outputs[89], 'show_expanded'):
        group_input_015_1.outputs[89].show_expanded = False
    if hasattr(group_input_015_1.outputs[90], 'default_value'):
        group_input_015_1.outputs[90].default_value = 0.0
    if hasattr(group_input_015_1.outputs[90], 'display_shape'):
        group_input_015_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[90], 'enabled'):
        group_input_015_1.outputs[90].enabled = True
    if hasattr(group_input_015_1.outputs[90], 'hide'):
        group_input_015_1.outputs[90].hide = True
    if hasattr(group_input_015_1.outputs[90], 'hide_value'):
        group_input_015_1.outputs[90].hide_value = False
    if hasattr(group_input_015_1.outputs[90], 'name'):
        group_input_015_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_015_1.outputs[90], 'show_expanded'):
        group_input_015_1.outputs[90].show_expanded = False
    if hasattr(group_input_015_1.outputs[91], 'default_value'):
        group_input_015_1.outputs[91].default_value = 0.0
    if hasattr(group_input_015_1.outputs[91], 'display_shape'):
        group_input_015_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[91], 'enabled'):
        group_input_015_1.outputs[91].enabled = True
    if hasattr(group_input_015_1.outputs[91], 'hide'):
        group_input_015_1.outputs[91].hide = False
    if hasattr(group_input_015_1.outputs[91], 'hide_value'):
        group_input_015_1.outputs[91].hide_value = False
    if hasattr(group_input_015_1.outputs[91], 'name'):
        group_input_015_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_015_1.outputs[91], 'show_expanded'):
        group_input_015_1.outputs[91].show_expanded = False
    if hasattr(group_input_015_1.outputs[92], 'default_value'):
        group_input_015_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_015_1.outputs[92], 'display_shape'):
        group_input_015_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[92], 'enabled'):
        group_input_015_1.outputs[92].enabled = True
    if hasattr(group_input_015_1.outputs[92], 'hide'):
        group_input_015_1.outputs[92].hide = True
    if hasattr(group_input_015_1.outputs[92], 'hide_value'):
        group_input_015_1.outputs[92].hide_value = False
    if hasattr(group_input_015_1.outputs[92], 'name'):
        group_input_015_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_015_1.outputs[92], 'show_expanded'):
        group_input_015_1.outputs[92].show_expanded = False
    if hasattr(group_input_015_1.outputs[93], 'default_value'):
        group_input_015_1.outputs[93].default_value = 0.0
    if hasattr(group_input_015_1.outputs[93], 'display_shape'):
        group_input_015_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[93], 'enabled'):
        group_input_015_1.outputs[93].enabled = True
    if hasattr(group_input_015_1.outputs[93], 'hide'):
        group_input_015_1.outputs[93].hide = True
    if hasattr(group_input_015_1.outputs[93], 'hide_value'):
        group_input_015_1.outputs[93].hide_value = False
    if hasattr(group_input_015_1.outputs[93], 'name'):
        group_input_015_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_015_1.outputs[93], 'show_expanded'):
        group_input_015_1.outputs[93].show_expanded = False
    if hasattr(group_input_015_1.outputs[94], 'default_value'):
        group_input_015_1.outputs[94].default_value = 0.0
    if hasattr(group_input_015_1.outputs[94], 'display_shape'):
        group_input_015_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[94], 'enabled'):
        group_input_015_1.outputs[94].enabled = True
    if hasattr(group_input_015_1.outputs[94], 'hide'):
        group_input_015_1.outputs[94].hide = True
    if hasattr(group_input_015_1.outputs[94], 'hide_value'):
        group_input_015_1.outputs[94].hide_value = False
    if hasattr(group_input_015_1.outputs[94], 'name'):
        group_input_015_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_015_1.outputs[94], 'show_expanded'):
        group_input_015_1.outputs[94].show_expanded = False
    if hasattr(group_input_015_1.outputs[95], 'default_value'):
        group_input_015_1.outputs[95].default_value = 0.0
    if hasattr(group_input_015_1.outputs[95], 'display_shape'):
        group_input_015_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[95], 'enabled'):
        group_input_015_1.outputs[95].enabled = True
    if hasattr(group_input_015_1.outputs[95], 'hide'):
        group_input_015_1.outputs[95].hide = True
    if hasattr(group_input_015_1.outputs[95], 'hide_value'):
        group_input_015_1.outputs[95].hide_value = False
    if hasattr(group_input_015_1.outputs[95], 'name'):
        group_input_015_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_015_1.outputs[95], 'show_expanded'):
        group_input_015_1.outputs[95].show_expanded = False
    if hasattr(group_input_015_1.outputs[96], 'default_value'):
        group_input_015_1.outputs[96].default_value = 0.0
    if hasattr(group_input_015_1.outputs[96], 'display_shape'):
        group_input_015_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[96], 'enabled'):
        group_input_015_1.outputs[96].enabled = True
    if hasattr(group_input_015_1.outputs[96], 'hide'):
        group_input_015_1.outputs[96].hide = True
    if hasattr(group_input_015_1.outputs[96], 'hide_value'):
        group_input_015_1.outputs[96].hide_value = False
    if hasattr(group_input_015_1.outputs[96], 'name'):
        group_input_015_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_015_1.outputs[96], 'show_expanded'):
        group_input_015_1.outputs[96].show_expanded = False
    if hasattr(group_input_015_1.outputs[97], 'default_value'):
        group_input_015_1.outputs[97].default_value = 0.0
    if hasattr(group_input_015_1.outputs[97], 'display_shape'):
        group_input_015_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[97], 'enabled'):
        group_input_015_1.outputs[97].enabled = True
    if hasattr(group_input_015_1.outputs[97], 'hide'):
        group_input_015_1.outputs[97].hide = True
    if hasattr(group_input_015_1.outputs[97], 'hide_value'):
        group_input_015_1.outputs[97].hide_value = False
    if hasattr(group_input_015_1.outputs[97], 'name'):
        group_input_015_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_015_1.outputs[97], 'show_expanded'):
        group_input_015_1.outputs[97].show_expanded = False
    if hasattr(group_input_015_1.outputs[98], 'default_value'):
        group_input_015_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_015_1.outputs[98], 'display_shape'):
        group_input_015_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[98], 'enabled'):
        group_input_015_1.outputs[98].enabled = True
    if hasattr(group_input_015_1.outputs[98], 'hide'):
        group_input_015_1.outputs[98].hide = True
    if hasattr(group_input_015_1.outputs[98], 'hide_value'):
        group_input_015_1.outputs[98].hide_value = False
    if hasattr(group_input_015_1.outputs[98], 'name'):
        group_input_015_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_015_1.outputs[98], 'show_expanded'):
        group_input_015_1.outputs[98].show_expanded = False
    if hasattr(group_input_015_1.outputs[99], 'default_value'):
        group_input_015_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_015_1.outputs[99], 'display_shape'):
        group_input_015_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[99], 'enabled'):
        group_input_015_1.outputs[99].enabled = True
    if hasattr(group_input_015_1.outputs[99], 'hide'):
        group_input_015_1.outputs[99].hide = True
    if hasattr(group_input_015_1.outputs[99], 'hide_value'):
        group_input_015_1.outputs[99].hide_value = False
    if hasattr(group_input_015_1.outputs[99], 'name'):
        group_input_015_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_015_1.outputs[99], 'show_expanded'):
        group_input_015_1.outputs[99].show_expanded = False
    if hasattr(group_input_015_1.outputs[100], 'default_value'):
        group_input_015_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_015_1.outputs[100], 'display_shape'):
        group_input_015_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[100], 'enabled'):
        group_input_015_1.outputs[100].enabled = True
    if hasattr(group_input_015_1.outputs[100], 'hide'):
        group_input_015_1.outputs[100].hide = True
    if hasattr(group_input_015_1.outputs[100], 'hide_value'):
        group_input_015_1.outputs[100].hide_value = False
    if hasattr(group_input_015_1.outputs[100], 'name'):
        group_input_015_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_015_1.outputs[100], 'show_expanded'):
        group_input_015_1.outputs[100].show_expanded = False
    if hasattr(group_input_015_1.outputs[101], 'default_value'):
        group_input_015_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_015_1.outputs[101], 'display_shape'):
        group_input_015_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_015_1.outputs[101], 'enabled'):
        group_input_015_1.outputs[101].enabled = True
    if hasattr(group_input_015_1.outputs[101], 'hide'):
        group_input_015_1.outputs[101].hide = True
    if hasattr(group_input_015_1.outputs[101], 'hide_value'):
        group_input_015_1.outputs[101].hide_value = False
    if hasattr(group_input_015_1.outputs[101], 'name'):
        group_input_015_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_015_1.outputs[101], 'show_expanded'):
        group_input_015_1.outputs[101].show_expanded = False

    math_001_1 = node_tree1.nodes.new('ShaderNodeMath')
    if hasattr(math_001_1, 'color'):
        math_001_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(math_001_1, 'hide'):
        math_001_1.hide = False
    if hasattr(math_001_1, 'location'):
        math_001_1.location = (1704.235595703125, 524.1892700195312)
    if hasattr(math_001_1, 'mute'):
        math_001_1.mute = False
    if hasattr(math_001_1, 'name'):
        math_001_1.name = 'Math.001'
    if hasattr(math_001_1, 'operation'):
        math_001_1.operation = 'POWER'
    if hasattr(math_001_1, 'use_clamp'):
        math_001_1.use_clamp = False
    if hasattr(math_001_1, 'use_custom_color'):
        math_001_1.use_custom_color = False
    if hasattr(math_001_1, 'width'):
        math_001_1.width = 140.0
    input_ = next((input_ for input_ in math_001_1.inputs if input_.identifier=='Value'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_001_1.inputs if input_.identifier=='Value_001'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 2.200000047683716
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in math_001_1.inputs if input_.identifier=='Value_002'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Value'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in math_001_1.outputs if output.identifier=='Value'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Value'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    mix_shader_1 = node_tree1.nodes.new('ShaderNodeMixShader')
    if hasattr(mix_shader_1, 'color'):
        mix_shader_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_shader_1, 'hide'):
        mix_shader_1.hide = False
    if hasattr(mix_shader_1, 'location'):
        mix_shader_1.location = (2758.12548828125, 481.88323974609375)
    if hasattr(mix_shader_1, 'mute'):
        mix_shader_1.mute = False
    if hasattr(mix_shader_1, 'name'):
        mix_shader_1.name = 'Mix Shader'
    if hasattr(mix_shader_1, 'use_custom_color'):
        mix_shader_1.use_custom_color = False
    if hasattr(mix_shader_1, 'width'):
        mix_shader_1.width = 140.0
    input_ = next((input_ for input_ in mix_shader_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False

    principled_bsdf_1 = node_tree1.nodes.new('ShaderNodeBsdfPrincipled')
    if hasattr(principled_bsdf_1, 'color'):
        principled_bsdf_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(principled_bsdf_1, 'distribution'):
        principled_bsdf_1.distribution = 'GGX'
    if hasattr(principled_bsdf_1, 'hide'):
        principled_bsdf_1.hide = False
    if hasattr(principled_bsdf_1, 'location'):
        principled_bsdf_1.location = (2430.40234375, 333.40692138671875)
    if hasattr(principled_bsdf_1, 'mute'):
        principled_bsdf_1.mute = False
    if hasattr(principled_bsdf_1, 'name'):
        principled_bsdf_1.name = 'Principled BSDF'
    if hasattr(principled_bsdf_1, 'subsurface_method'):
        principled_bsdf_1.subsurface_method = 'BURLEY'
    if hasattr(principled_bsdf_1, 'use_custom_color'):
        principled_bsdf_1.use_custom_color = False
    if hasattr(principled_bsdf_1, 'width'):
        principled_bsdf_1.width = 240.0
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Base Color'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.24415694177150726, 0.24415694177150726, 0.24415694177150726, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Base Color'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Subsurface'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Subsurface'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Subsurface Radius'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (1.0, 0.20000000298023224, 0.10000000149011612)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Subsurface Radius'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Subsurface Color'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.800000011920929, 0.800000011920929, 0.800000011920929, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Subsurface Color'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Subsurface IOR'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.399999976158142
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Subsurface IOR'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Subsurface Anisotropy'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Subsurface Anisotropy'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Metallic'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Metallic'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Specular'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Specular'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Specular Tint'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Specular Tint'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Roughness'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Roughness'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Anisotropic'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Anisotropic'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Anisotropic Rotation'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Anisotropic Rotation'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Sheen'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Sheen'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Sheen Tint'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Sheen Tint'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Clearcoat'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Clearcoat'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Clearcoat Roughness'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Clearcoat Roughness'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='IOR'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.4500000476837158
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'IOR'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Transmission'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Transmission'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Transmission Roughness'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Transmission Roughness'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Emission'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Emission'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Emission Strength'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 5.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Emission Strength'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Alpha'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Alpha'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Normal'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = True
        if hasattr(input_, 'name'):
            input_.name = 'Normal'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Clearcoat Normal'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = True
        if hasattr(input_, 'name'):
            input_.name = 'Clearcoat Normal'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in principled_bsdf_1.inputs if input_.identifier=='Tangent'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = True
        if hasattr(input_, 'name'):
            input_.name = 'Tangent'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False

    colorramp_1 = node_tree1.nodes.new('ShaderNodeValToRGB')
    if hasattr(colorramp_1, 'color'):
        colorramp_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(colorramp_1, 'color_ramp'):
        if hasattr(colorramp_1.color_ramp, 'color_mode'):
            colorramp_1.color_ramp.color_mode = 'RGB'
        if hasattr(colorramp_1.color_ramp, 'elements'):
            if 0 >= len(colorramp_1.color_ramp.elements):
                colorramp_1.color_ramp.elements.new(0.13939400017261505)
            if hasattr(colorramp_1.color_ramp.elements[0], 'alpha'):
                colorramp_1.color_ramp.elements[0].alpha = 1.0
            if hasattr(colorramp_1.color_ramp.elements[0], 'color'):
                colorramp_1.color_ramp.elements[0].color = (0.0, 0.0, 0.0, 1.0)
            if hasattr(colorramp_1.color_ramp.elements[0], 'position'):
                colorramp_1.color_ramp.elements[0].position = 0.13939400017261505
            if 1 >= len(colorramp_1.color_ramp.elements):
                colorramp_1.color_ramp.elements.new(0.7379999756813049)
            if hasattr(colorramp_1.color_ramp.elements[1], 'alpha'):
                colorramp_1.color_ramp.elements[1].alpha = 1.0
            if hasattr(colorramp_1.color_ramp.elements[1], 'color'):
                colorramp_1.color_ramp.elements[1].color = (0.01228647492825985, 0.012286478653550148, 0.012286486104130745, 1.0)
            if hasattr(colorramp_1.color_ramp.elements[1], 'position'):
                colorramp_1.color_ramp.elements[1].position = 0.7379999756813049
            if 2 >= len(colorramp_1.color_ramp.elements):
                colorramp_1.color_ramp.elements.new(1.0)
            if hasattr(colorramp_1.color_ramp.elements[2], 'alpha'):
                colorramp_1.color_ramp.elements[2].alpha = 1.0
            if hasattr(colorramp_1.color_ramp.elements[2], 'color'):
                colorramp_1.color_ramp.elements[2].color = (0.015208501368761063, 0.015208503231406212, 0.015208515338599682, 1.0)
            if hasattr(colorramp_1.color_ramp.elements[2], 'position'):
                colorramp_1.color_ramp.elements[2].position = 1.0
        if hasattr(colorramp_1.color_ramp, 'hue_interpolation'):
            colorramp_1.color_ramp.hue_interpolation = 'NEAR'
        if hasattr(colorramp_1.color_ramp, 'interpolation'):
            colorramp_1.color_ramp.interpolation = 'LINEAR'
    if hasattr(colorramp_1, 'hide'):
        colorramp_1.hide = False
    if hasattr(colorramp_1, 'location'):
        colorramp_1.location = (1425.2840576171875, 165.3582763671875)
    if hasattr(colorramp_1, 'mute'):
        colorramp_1.mute = False
    if hasattr(colorramp_1, 'name'):
        colorramp_1.name = 'ColorRamp'
    if hasattr(colorramp_1, 'use_custom_color'):
        colorramp_1.use_custom_color = False
    if hasattr(colorramp_1, 'width'):
        colorramp_1.width = 240.0
    input_ = next((input_ for input_ in colorramp_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.5
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in colorramp_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False
    output = next((output for output in colorramp_1.outputs if output.identifier=='Alpha'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = 0.0
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Alpha'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    mix_002_1 = node_tree1.nodes.new('ShaderNodeMixRGB')
    if hasattr(mix_002_1, 'blend_type'):
        mix_002_1.blend_type = 'MULTIPLY'
    if hasattr(mix_002_1, 'color'):
        mix_002_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(mix_002_1, 'hide'):
        mix_002_1.hide = False
    if hasattr(mix_002_1, 'location'):
        mix_002_1.location = (2148.368896484375, 727.83935546875)
    if hasattr(mix_002_1, 'mute'):
        mix_002_1.mute = False
    if hasattr(mix_002_1, 'name'):
        mix_002_1.name = 'Mix.002'
    if hasattr(mix_002_1, 'use_alpha'):
        mix_002_1.use_alpha = False
    if hasattr(mix_002_1, 'use_clamp'):
        mix_002_1.use_clamp = False
    if hasattr(mix_002_1, 'use_custom_color'):
        mix_002_1.use_custom_color = False
    if hasattr(mix_002_1, 'width'):
        mix_002_1.width = 140.0
    input_ = next((input_ for input_ in mix_002_1.inputs if input_.identifier=='Fac'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Fac'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_002_1.inputs if input_.identifier=='Color1'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color1'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in mix_002_1.inputs if input_.identifier=='Color2'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 0.5, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color2'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in mix_002_1.outputs if output.identifier=='Color'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Color'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    bump_1 = node_tree1.nodes.new('ShaderNodeBump')
    if hasattr(bump_1, 'color'):
        bump_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(bump_1, 'hide'):
        bump_1.hide = False
    if hasattr(bump_1, 'invert'):
        bump_1.invert = True
    if hasattr(bump_1, 'location'):
        bump_1.location = (2038.4151611328125, -361.47760009765625)
    if hasattr(bump_1, 'mute'):
        bump_1.mute = False
    if hasattr(bump_1, 'name'):
        bump_1.name = 'Bump'
    if hasattr(bump_1, 'use_custom_color'):
        bump_1.use_custom_color = False
    if hasattr(bump_1, 'width'):
        bump_1.width = 140.0
    input_ = next((input_ for input_ in bump_1.inputs if input_.identifier=='Strength'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Strength'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in bump_1.inputs if input_.identifier=='Distance'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 0.0020000000949949026
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Distance'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in bump_1.inputs if input_.identifier=='Height'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = True
        if hasattr(input_, 'name'):
            input_.name = 'Height'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in bump_1.inputs if input_.identifier=='Height_dx'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Height_dx'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in bump_1.inputs if input_.identifier=='Height_dy'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = False
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Height_dy'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in bump_1.inputs if input_.identifier=='Normal'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.0, 0.0, 0.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = True
        if hasattr(input_, 'name'):
            input_.name = 'Normal'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in bump_1.outputs if output.identifier=='Normal'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Normal'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    normal_map_1 = node_tree1.nodes.new('ShaderNodeNormalMap')
    if hasattr(normal_map_1, 'color'):
        normal_map_1.color = (0.6079999804496765, 0.6079999804496765, 0.6079999804496765)
    if hasattr(normal_map_1, 'hide'):
        normal_map_1.hide = False
    if hasattr(normal_map_1, 'location'):
        normal_map_1.location = (1537.0076904296875, -527.4635009765625)
    if hasattr(normal_map_1, 'mute'):
        normal_map_1.mute = False
    if hasattr(normal_map_1, 'name'):
        normal_map_1.name = 'Normal Map'
    if hasattr(normal_map_1, 'space'):
        normal_map_1.space = 'TANGENT'
    if hasattr(normal_map_1, 'use_custom_color'):
        normal_map_1.use_custom_color = False
    if hasattr(normal_map_1, 'width'):
        normal_map_1.width = 150.0
    input_ = next((input_ for input_ in normal_map_1.inputs if input_.identifier=='Strength'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = 1.0
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Strength'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    input_ = next((input_ for input_ in normal_map_1.inputs if input_.identifier=='Color'), None)
    if input_:
        if hasattr(input_, 'default_value'):
            input_.default_value = (0.5, 0.5, 1.0, 1.0)
        if hasattr(input_, 'display_shape'):
            input_.display_shape = 'CIRCLE'
        if hasattr(input_, 'enabled'):
            input_.enabled = True
        if hasattr(input_, 'hide'):
            input_.hide = False
        if hasattr(input_, 'hide_value'):
            input_.hide_value = False
        if hasattr(input_, 'name'):
            input_.name = 'Color'
        if hasattr(input_, 'show_expanded'):
            input_.show_expanded = False
    output = next((output for output in normal_map_1.outputs if output.identifier=='Normal'), None)
    if output:
        if hasattr(output, 'default_value'):
            output.default_value = (0.0, 0.0, 0.0)
        if hasattr(output, 'display_shape'):
            output.display_shape = 'CIRCLE'
        if hasattr(output, 'enabled'):
            output.enabled = True
        if hasattr(output, 'hide'):
            output.hide = False
        if hasattr(output, 'hide_value'):
            output.hide_value = False
        if hasattr(output, 'name'):
            output.name = 'Normal'
        if hasattr(output, 'show_expanded'):
            output.show_expanded = False

    group_input_012_1 = node_tree1.nodes.new('NodeGroupInput')
    if hasattr(group_input_012_1, 'color'):
        group_input_012_1.color = (0.5, 0.5, 0.5)
    if hasattr(group_input_012_1, 'hide'):
        group_input_012_1.hide = False
    if hasattr(group_input_012_1, 'label'):
        group_input_012_1.label = 'Slot 6'
    if hasattr(group_input_012_1, 'location'):
        group_input_012_1.location = (-2060.0, 1360.0)
    if hasattr(group_input_012_1, 'mute'):
        group_input_012_1.mute = False
    if hasattr(group_input_012_1, 'name'):
        group_input_012_1.name = 'Group Input.012'
    if hasattr(group_input_012_1, 'use_custom_color'):
        group_input_012_1.use_custom_color = True
    if hasattr(group_input_012_1, 'width'):
        group_input_012_1.width = 179.714111328125
    if hasattr(group_input_012_1.outputs[0], 'default_value'):
        group_input_012_1.outputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[0], 'display_shape'):
        group_input_012_1.outputs[0].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[0], 'enabled'):
        group_input_012_1.outputs[0].enabled = True
    if hasattr(group_input_012_1.outputs[0], 'hide'):
        group_input_012_1.outputs[0].hide = True
    if hasattr(group_input_012_1.outputs[0], 'hide_value'):
        group_input_012_1.outputs[0].hide_value = False
    if hasattr(group_input_012_1.outputs[0], 'name'):
        group_input_012_1.outputs[0].name = 'ASG'
    if hasattr(group_input_012_1.outputs[0], 'show_expanded'):
        group_input_012_1.outputs[0].show_expanded = False
    if hasattr(group_input_012_1.outputs[1], 'default_value'):
        group_input_012_1.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[1], 'display_shape'):
        group_input_012_1.outputs[1].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[1], 'enabled'):
        group_input_012_1.outputs[1].enabled = True
    if hasattr(group_input_012_1.outputs[1], 'hide'):
        group_input_012_1.outputs[1].hide = True
    if hasattr(group_input_012_1.outputs[1], 'hide_value'):
        group_input_012_1.outputs[1].hide_value = False
    if hasattr(group_input_012_1.outputs[1], 'name'):
        group_input_012_1.outputs[1].name = 'Mask_0'
    if hasattr(group_input_012_1.outputs[1], 'show_expanded'):
        group_input_012_1.outputs[1].show_expanded = False
    if hasattr(group_input_012_1.outputs[2], 'default_value'):
        group_input_012_1.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[2], 'display_shape'):
        group_input_012_1.outputs[2].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[2], 'enabled'):
        group_input_012_1.outputs[2].enabled = True
    if hasattr(group_input_012_1.outputs[2], 'hide'):
        group_input_012_1.outputs[2].hide = True
    if hasattr(group_input_012_1.outputs[2], 'hide_value'):
        group_input_012_1.outputs[2].hide_value = False
    if hasattr(group_input_012_1.outputs[2], 'name'):
        group_input_012_1.outputs[2].name = 'Mask_1'
    if hasattr(group_input_012_1.outputs[2], 'show_expanded'):
        group_input_012_1.outputs[2].show_expanded = False
    if hasattr(group_input_012_1.outputs[3], 'default_value'):
        group_input_012_1.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[3], 'display_shape'):
        group_input_012_1.outputs[3].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[3], 'enabled'):
        group_input_012_1.outputs[3].enabled = True
    if hasattr(group_input_012_1.outputs[3], 'hide'):
        group_input_012_1.outputs[3].hide = True
    if hasattr(group_input_012_1.outputs[3], 'hide_value'):
        group_input_012_1.outputs[3].hide_value = False
    if hasattr(group_input_012_1.outputs[3], 'name'):
        group_input_012_1.outputs[3].name = 'Normal'
    if hasattr(group_input_012_1.outputs[3], 'show_expanded'):
        group_input_012_1.outputs[3].show_expanded = False
    if hasattr(group_input_012_1.outputs[4], 'default_value'):
        group_input_012_1.outputs[4].default_value = 0.0
    if hasattr(group_input_012_1.outputs[4], 'display_shape'):
        group_input_012_1.outputs[4].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[4], 'enabled'):
        group_input_012_1.outputs[4].enabled = True
    if hasattr(group_input_012_1.outputs[4], 'hide'):
        group_input_012_1.outputs[4].hide = True
    if hasattr(group_input_012_1.outputs[4], 'hide_value'):
        group_input_012_1.outputs[4].hide_value = False
    if hasattr(group_input_012_1.outputs[4], 'name'):
        group_input_012_1.outputs[4].name = 'Grime Amount'
    if hasattr(group_input_012_1.outputs[4], 'show_expanded'):
        group_input_012_1.outputs[4].show_expanded = False
    if hasattr(group_input_012_1.outputs[5], 'default_value'):
        group_input_012_1.outputs[5].default_value = 1.0
    if hasattr(group_input_012_1.outputs[5], 'display_shape'):
        group_input_012_1.outputs[5].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[5], 'enabled'):
        group_input_012_1.outputs[5].enabled = True
    if hasattr(group_input_012_1.outputs[5], 'hide'):
        group_input_012_1.outputs[5].hide = True
    if hasattr(group_input_012_1.outputs[5], 'hide_value'):
        group_input_012_1.outputs[5].hide_value = False
    if hasattr(group_input_012_1.outputs[5], 'name'):
        group_input_012_1.outputs[5].name = 'Dust Amount'
    if hasattr(group_input_012_1.outputs[5], 'show_expanded'):
        group_input_012_1.outputs[5].show_expanded = False
    if hasattr(group_input_012_1.outputs[6], 'default_value'):
        group_input_012_1.outputs[6].default_value = 0.0
    if hasattr(group_input_012_1.outputs[6], 'display_shape'):
        group_input_012_1.outputs[6].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[6], 'enabled'):
        group_input_012_1.outputs[6].enabled = True
    if hasattr(group_input_012_1.outputs[6], 'hide'):
        group_input_012_1.outputs[6].hide = True
    if hasattr(group_input_012_1.outputs[6], 'hide_value'):
        group_input_012_1.outputs[6].hide_value = False
    if hasattr(group_input_012_1.outputs[6], 'name'):
        group_input_012_1.outputs[6].name = 'Zone 1 Gradient Out'
    if hasattr(group_input_012_1.outputs[6], 'show_expanded'):
        group_input_012_1.outputs[6].show_expanded = False
    if hasattr(group_input_012_1.outputs[7], 'default_value'):
        group_input_012_1.outputs[7].default_value = 0.0
    if hasattr(group_input_012_1.outputs[7], 'display_shape'):
        group_input_012_1.outputs[7].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[7], 'enabled'):
        group_input_012_1.outputs[7].enabled = True
    if hasattr(group_input_012_1.outputs[7], 'hide'):
        group_input_012_1.outputs[7].hide = True
    if hasattr(group_input_012_1.outputs[7], 'hide_value'):
        group_input_012_1.outputs[7].hide_value = False
    if hasattr(group_input_012_1.outputs[7], 'name'):
        group_input_012_1.outputs[7].name = 'Zone 1 Rough Out'
    if hasattr(group_input_012_1.outputs[7], 'show_expanded'):
        group_input_012_1.outputs[7].show_expanded = False
    if hasattr(group_input_012_1.outputs[8], 'default_value'):
        group_input_012_1.outputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[8], 'display_shape'):
        group_input_012_1.outputs[8].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[8], 'enabled'):
        group_input_012_1.outputs[8].enabled = True
    if hasattr(group_input_012_1.outputs[8], 'hide'):
        group_input_012_1.outputs[8].hide = True
    if hasattr(group_input_012_1.outputs[8], 'hide_value'):
        group_input_012_1.outputs[8].hide_value = False
    if hasattr(group_input_012_1.outputs[8], 'name'):
        group_input_012_1.outputs[8].name = 'Zone 1 Norm Out'
    if hasattr(group_input_012_1.outputs[8], 'show_expanded'):
        group_input_012_1.outputs[8].show_expanded = False
    if hasattr(group_input_012_1.outputs[9], 'default_value'):
        group_input_012_1.outputs[9].default_value = 0.0
    if hasattr(group_input_012_1.outputs[9], 'display_shape'):
        group_input_012_1.outputs[9].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[9], 'enabled'):
        group_input_012_1.outputs[9].enabled = True
    if hasattr(group_input_012_1.outputs[9], 'hide'):
        group_input_012_1.outputs[9].hide = True
    if hasattr(group_input_012_1.outputs[9], 'hide_value'):
        group_input_012_1.outputs[9].hide_value = False
    if hasattr(group_input_012_1.outputs[9], 'name'):
        group_input_012_1.outputs[9].name = 'Zone 1 Scratch Amount'
    if hasattr(group_input_012_1.outputs[9], 'show_expanded'):
        group_input_012_1.outputs[9].show_expanded = False
    if hasattr(group_input_012_1.outputs[10], 'default_value'):
        group_input_012_1.outputs[10].default_value = 0.0
    if hasattr(group_input_012_1.outputs[10], 'display_shape'):
        group_input_012_1.outputs[10].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[10], 'enabled'):
        group_input_012_1.outputs[10].enabled = True
    if hasattr(group_input_012_1.outputs[10], 'hide'):
        group_input_012_1.outputs[10].hide = True
    if hasattr(group_input_012_1.outputs[10], 'hide_value'):
        group_input_012_1.outputs[10].hide_value = False
    if hasattr(group_input_012_1.outputs[10], 'name'):
        group_input_012_1.outputs[10].name = 'Zone 1 Scratch Metallic'
    if hasattr(group_input_012_1.outputs[10], 'show_expanded'):
        group_input_012_1.outputs[10].show_expanded = False
    if hasattr(group_input_012_1.outputs[11], 'default_value'):
        group_input_012_1.outputs[11].default_value = 0.0
    if hasattr(group_input_012_1.outputs[11], 'display_shape'):
        group_input_012_1.outputs[11].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[11], 'enabled'):
        group_input_012_1.outputs[11].enabled = True
    if hasattr(group_input_012_1.outputs[11], 'hide'):
        group_input_012_1.outputs[11].hide = True
    if hasattr(group_input_012_1.outputs[11], 'hide_value'):
        group_input_012_1.outputs[11].hide_value = False
    if hasattr(group_input_012_1.outputs[11], 'name'):
        group_input_012_1.outputs[11].name = 'Zone 1 Scratch Roughness'
    if hasattr(group_input_012_1.outputs[11], 'show_expanded'):
        group_input_012_1.outputs[11].show_expanded = False
    if hasattr(group_input_012_1.outputs[12], 'default_value'):
        group_input_012_1.outputs[12].default_value = 0.0
    if hasattr(group_input_012_1.outputs[12], 'display_shape'):
        group_input_012_1.outputs[12].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[12], 'enabled'):
        group_input_012_1.outputs[12].enabled = True
    if hasattr(group_input_012_1.outputs[12], 'hide'):
        group_input_012_1.outputs[12].hide = True
    if hasattr(group_input_012_1.outputs[12], 'hide_value'):
        group_input_012_1.outputs[12].hide_value = False
    if hasattr(group_input_012_1.outputs[12], 'name'):
        group_input_012_1.outputs[12].name = 'Zone 1 Metallic'
    if hasattr(group_input_012_1.outputs[12], 'show_expanded'):
        group_input_012_1.outputs[12].show_expanded = False
    if hasattr(group_input_012_1.outputs[13], 'default_value'):
        group_input_012_1.outputs[13].default_value = 0.0
    if hasattr(group_input_012_1.outputs[13], 'display_shape'):
        group_input_012_1.outputs[13].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[13], 'enabled'):
        group_input_012_1.outputs[13].enabled = True
    if hasattr(group_input_012_1.outputs[13], 'hide'):
        group_input_012_1.outputs[13].hide = True
    if hasattr(group_input_012_1.outputs[13], 'hide_value'):
        group_input_012_1.outputs[13].hide_value = False
    if hasattr(group_input_012_1.outputs[13], 'name'):
        group_input_012_1.outputs[13].name = 'Zone 1 Emmisive Amount'
    if hasattr(group_input_012_1.outputs[13], 'show_expanded'):
        group_input_012_1.outputs[13].show_expanded = False
    if hasattr(group_input_012_1.outputs[14], 'default_value'):
        group_input_012_1.outputs[14].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_012_1.outputs[14], 'display_shape'):
        group_input_012_1.outputs[14].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[14], 'enabled'):
        group_input_012_1.outputs[14].enabled = True
    if hasattr(group_input_012_1.outputs[14], 'hide'):
        group_input_012_1.outputs[14].hide = True
    if hasattr(group_input_012_1.outputs[14], 'hide_value'):
        group_input_012_1.outputs[14].hide_value = False
    if hasattr(group_input_012_1.outputs[14], 'name'):
        group_input_012_1.outputs[14].name = 'Zone 1 TopColor'
    if hasattr(group_input_012_1.outputs[14], 'show_expanded'):
        group_input_012_1.outputs[14].show_expanded = False
    if hasattr(group_input_012_1.outputs[15], 'default_value'):
        group_input_012_1.outputs[15].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_012_1.outputs[15], 'display_shape'):
        group_input_012_1.outputs[15].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[15], 'enabled'):
        group_input_012_1.outputs[15].enabled = True
    if hasattr(group_input_012_1.outputs[15], 'hide'):
        group_input_012_1.outputs[15].hide = True
    if hasattr(group_input_012_1.outputs[15], 'hide_value'):
        group_input_012_1.outputs[15].hide_value = False
    if hasattr(group_input_012_1.outputs[15], 'name'):
        group_input_012_1.outputs[15].name = 'Zone 1 MidColor'
    if hasattr(group_input_012_1.outputs[15], 'show_expanded'):
        group_input_012_1.outputs[15].show_expanded = False
    if hasattr(group_input_012_1.outputs[16], 'default_value'):
        group_input_012_1.outputs[16].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_012_1.outputs[16], 'display_shape'):
        group_input_012_1.outputs[16].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[16], 'enabled'):
        group_input_012_1.outputs[16].enabled = True
    if hasattr(group_input_012_1.outputs[16], 'hide'):
        group_input_012_1.outputs[16].hide = True
    if hasattr(group_input_012_1.outputs[16], 'hide_value'):
        group_input_012_1.outputs[16].hide_value = False
    if hasattr(group_input_012_1.outputs[16], 'name'):
        group_input_012_1.outputs[16].name = 'Zone 1 BotColor'
    if hasattr(group_input_012_1.outputs[16], 'show_expanded'):
        group_input_012_1.outputs[16].show_expanded = False
    if hasattr(group_input_012_1.outputs[17], 'default_value'):
        group_input_012_1.outputs[17].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_012_1.outputs[17], 'display_shape'):
        group_input_012_1.outputs[17].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[17], 'enabled'):
        group_input_012_1.outputs[17].enabled = True
    if hasattr(group_input_012_1.outputs[17], 'hide'):
        group_input_012_1.outputs[17].hide = True
    if hasattr(group_input_012_1.outputs[17], 'hide_value'):
        group_input_012_1.outputs[17].hide_value = False
    if hasattr(group_input_012_1.outputs[17], 'name'):
        group_input_012_1.outputs[17].name = 'Zone 1 ScratchColor'
    if hasattr(group_input_012_1.outputs[17], 'show_expanded'):
        group_input_012_1.outputs[17].show_expanded = False
    if hasattr(group_input_012_1.outputs[18], 'default_value'):
        group_input_012_1.outputs[18].default_value = 0.0
    if hasattr(group_input_012_1.outputs[18], 'display_shape'):
        group_input_012_1.outputs[18].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[18], 'enabled'):
        group_input_012_1.outputs[18].enabled = True
    if hasattr(group_input_012_1.outputs[18], 'hide'):
        group_input_012_1.outputs[18].hide = True
    if hasattr(group_input_012_1.outputs[18], 'hide_value'):
        group_input_012_1.outputs[18].hide_value = False
    if hasattr(group_input_012_1.outputs[18], 'name'):
        group_input_012_1.outputs[18].name = 'Zone 2 Gradient Out'
    if hasattr(group_input_012_1.outputs[18], 'show_expanded'):
        group_input_012_1.outputs[18].show_expanded = False
    if hasattr(group_input_012_1.outputs[19], 'default_value'):
        group_input_012_1.outputs[19].default_value = 0.0
    if hasattr(group_input_012_1.outputs[19], 'display_shape'):
        group_input_012_1.outputs[19].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[19], 'enabled'):
        group_input_012_1.outputs[19].enabled = True
    if hasattr(group_input_012_1.outputs[19], 'hide'):
        group_input_012_1.outputs[19].hide = True
    if hasattr(group_input_012_1.outputs[19], 'hide_value'):
        group_input_012_1.outputs[19].hide_value = False
    if hasattr(group_input_012_1.outputs[19], 'name'):
        group_input_012_1.outputs[19].name = 'Zone 2 Rough Out'
    if hasattr(group_input_012_1.outputs[19], 'show_expanded'):
        group_input_012_1.outputs[19].show_expanded = False
    if hasattr(group_input_012_1.outputs[20], 'default_value'):
        group_input_012_1.outputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[20], 'display_shape'):
        group_input_012_1.outputs[20].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[20], 'enabled'):
        group_input_012_1.outputs[20].enabled = True
    if hasattr(group_input_012_1.outputs[20], 'hide'):
        group_input_012_1.outputs[20].hide = True
    if hasattr(group_input_012_1.outputs[20], 'hide_value'):
        group_input_012_1.outputs[20].hide_value = False
    if hasattr(group_input_012_1.outputs[20], 'name'):
        group_input_012_1.outputs[20].name = 'Zone 2 Norm Out'
    if hasattr(group_input_012_1.outputs[20], 'show_expanded'):
        group_input_012_1.outputs[20].show_expanded = False
    if hasattr(group_input_012_1.outputs[21], 'default_value'):
        group_input_012_1.outputs[21].default_value = 0.0
    if hasattr(group_input_012_1.outputs[21], 'display_shape'):
        group_input_012_1.outputs[21].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[21], 'enabled'):
        group_input_012_1.outputs[21].enabled = True
    if hasattr(group_input_012_1.outputs[21], 'hide'):
        group_input_012_1.outputs[21].hide = True
    if hasattr(group_input_012_1.outputs[21], 'hide_value'):
        group_input_012_1.outputs[21].hide_value = False
    if hasattr(group_input_012_1.outputs[21], 'name'):
        group_input_012_1.outputs[21].name = 'Zone 2 Scratch Amount'
    if hasattr(group_input_012_1.outputs[21], 'show_expanded'):
        group_input_012_1.outputs[21].show_expanded = False
    if hasattr(group_input_012_1.outputs[22], 'default_value'):
        group_input_012_1.outputs[22].default_value = 0.0
    if hasattr(group_input_012_1.outputs[22], 'display_shape'):
        group_input_012_1.outputs[22].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[22], 'enabled'):
        group_input_012_1.outputs[22].enabled = True
    if hasattr(group_input_012_1.outputs[22], 'hide'):
        group_input_012_1.outputs[22].hide = True
    if hasattr(group_input_012_1.outputs[22], 'hide_value'):
        group_input_012_1.outputs[22].hide_value = False
    if hasattr(group_input_012_1.outputs[22], 'name'):
        group_input_012_1.outputs[22].name = 'Zone 2 Scratch Metallic'
    if hasattr(group_input_012_1.outputs[22], 'show_expanded'):
        group_input_012_1.outputs[22].show_expanded = False
    if hasattr(group_input_012_1.outputs[23], 'default_value'):
        group_input_012_1.outputs[23].default_value = 0.0
    if hasattr(group_input_012_1.outputs[23], 'display_shape'):
        group_input_012_1.outputs[23].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[23], 'enabled'):
        group_input_012_1.outputs[23].enabled = True
    if hasattr(group_input_012_1.outputs[23], 'hide'):
        group_input_012_1.outputs[23].hide = True
    if hasattr(group_input_012_1.outputs[23], 'hide_value'):
        group_input_012_1.outputs[23].hide_value = False
    if hasattr(group_input_012_1.outputs[23], 'name'):
        group_input_012_1.outputs[23].name = 'Zone 2 Scratch Roughness'
    if hasattr(group_input_012_1.outputs[23], 'show_expanded'):
        group_input_012_1.outputs[23].show_expanded = False
    if hasattr(group_input_012_1.outputs[24], 'default_value'):
        group_input_012_1.outputs[24].default_value = 0.0
    if hasattr(group_input_012_1.outputs[24], 'display_shape'):
        group_input_012_1.outputs[24].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[24], 'enabled'):
        group_input_012_1.outputs[24].enabled = True
    if hasattr(group_input_012_1.outputs[24], 'hide'):
        group_input_012_1.outputs[24].hide = True
    if hasattr(group_input_012_1.outputs[24], 'hide_value'):
        group_input_012_1.outputs[24].hide_value = False
    if hasattr(group_input_012_1.outputs[24], 'name'):
        group_input_012_1.outputs[24].name = 'Zone 2 Metallic'
    if hasattr(group_input_012_1.outputs[24], 'show_expanded'):
        group_input_012_1.outputs[24].show_expanded = False
    if hasattr(group_input_012_1.outputs[25], 'default_value'):
        group_input_012_1.outputs[25].default_value = 0.0
    if hasattr(group_input_012_1.outputs[25], 'display_shape'):
        group_input_012_1.outputs[25].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[25], 'enabled'):
        group_input_012_1.outputs[25].enabled = True
    if hasattr(group_input_012_1.outputs[25], 'hide'):
        group_input_012_1.outputs[25].hide = True
    if hasattr(group_input_012_1.outputs[25], 'hide_value'):
        group_input_012_1.outputs[25].hide_value = False
    if hasattr(group_input_012_1.outputs[25], 'name'):
        group_input_012_1.outputs[25].name = 'Zone 2 Emmisive Amount'
    if hasattr(group_input_012_1.outputs[25], 'show_expanded'):
        group_input_012_1.outputs[25].show_expanded = False
    if hasattr(group_input_012_1.outputs[26], 'default_value'):
        group_input_012_1.outputs[26].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_012_1.outputs[26], 'display_shape'):
        group_input_012_1.outputs[26].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[26], 'enabled'):
        group_input_012_1.outputs[26].enabled = True
    if hasattr(group_input_012_1.outputs[26], 'hide'):
        group_input_012_1.outputs[26].hide = True
    if hasattr(group_input_012_1.outputs[26], 'hide_value'):
        group_input_012_1.outputs[26].hide_value = False
    if hasattr(group_input_012_1.outputs[26], 'name'):
        group_input_012_1.outputs[26].name = 'Zone 2 Top'
    if hasattr(group_input_012_1.outputs[26], 'show_expanded'):
        group_input_012_1.outputs[26].show_expanded = False
    if hasattr(group_input_012_1.outputs[27], 'default_value'):
        group_input_012_1.outputs[27].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_012_1.outputs[27], 'display_shape'):
        group_input_012_1.outputs[27].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[27], 'enabled'):
        group_input_012_1.outputs[27].enabled = True
    if hasattr(group_input_012_1.outputs[27], 'hide'):
        group_input_012_1.outputs[27].hide = True
    if hasattr(group_input_012_1.outputs[27], 'hide_value'):
        group_input_012_1.outputs[27].hide_value = False
    if hasattr(group_input_012_1.outputs[27], 'name'):
        group_input_012_1.outputs[27].name = 'Zone 2 Mid'
    if hasattr(group_input_012_1.outputs[27], 'show_expanded'):
        group_input_012_1.outputs[27].show_expanded = False
    if hasattr(group_input_012_1.outputs[28], 'default_value'):
        group_input_012_1.outputs[28].default_value = (0.0, 0.15896089375019073, 0.2917707562446594, 1.0)
    if hasattr(group_input_012_1.outputs[28], 'display_shape'):
        group_input_012_1.outputs[28].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[28], 'enabled'):
        group_input_012_1.outputs[28].enabled = True
    if hasattr(group_input_012_1.outputs[28], 'hide'):
        group_input_012_1.outputs[28].hide = True
    if hasattr(group_input_012_1.outputs[28], 'hide_value'):
        group_input_012_1.outputs[28].hide_value = False
    if hasattr(group_input_012_1.outputs[28], 'name'):
        group_input_012_1.outputs[28].name = 'Zone 2 Bot'
    if hasattr(group_input_012_1.outputs[28], 'show_expanded'):
        group_input_012_1.outputs[28].show_expanded = False
    if hasattr(group_input_012_1.outputs[29], 'default_value'):
        group_input_012_1.outputs[29].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_012_1.outputs[29], 'display_shape'):
        group_input_012_1.outputs[29].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[29], 'enabled'):
        group_input_012_1.outputs[29].enabled = True
    if hasattr(group_input_012_1.outputs[29], 'hide'):
        group_input_012_1.outputs[29].hide = True
    if hasattr(group_input_012_1.outputs[29], 'hide_value'):
        group_input_012_1.outputs[29].hide_value = False
    if hasattr(group_input_012_1.outputs[29], 'name'):
        group_input_012_1.outputs[29].name = 'Zone 2 ScratchColor'
    if hasattr(group_input_012_1.outputs[29], 'show_expanded'):
        group_input_012_1.outputs[29].show_expanded = False
    if hasattr(group_input_012_1.outputs[30], 'default_value'):
        group_input_012_1.outputs[30].default_value = 0.0
    if hasattr(group_input_012_1.outputs[30], 'display_shape'):
        group_input_012_1.outputs[30].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[30], 'enabled'):
        group_input_012_1.outputs[30].enabled = True
    if hasattr(group_input_012_1.outputs[30], 'hide'):
        group_input_012_1.outputs[30].hide = True
    if hasattr(group_input_012_1.outputs[30], 'hide_value'):
        group_input_012_1.outputs[30].hide_value = False
    if hasattr(group_input_012_1.outputs[30], 'name'):
        group_input_012_1.outputs[30].name = 'Zone 3 Gradient Out'
    if hasattr(group_input_012_1.outputs[30], 'show_expanded'):
        group_input_012_1.outputs[30].show_expanded = False
    if hasattr(group_input_012_1.outputs[31], 'default_value'):
        group_input_012_1.outputs[31].default_value = 0.0
    if hasattr(group_input_012_1.outputs[31], 'display_shape'):
        group_input_012_1.outputs[31].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[31], 'enabled'):
        group_input_012_1.outputs[31].enabled = True
    if hasattr(group_input_012_1.outputs[31], 'hide'):
        group_input_012_1.outputs[31].hide = True
    if hasattr(group_input_012_1.outputs[31], 'hide_value'):
        group_input_012_1.outputs[31].hide_value = False
    if hasattr(group_input_012_1.outputs[31], 'name'):
        group_input_012_1.outputs[31].name = 'Zone 3 Rough Out'
    if hasattr(group_input_012_1.outputs[31], 'show_expanded'):
        group_input_012_1.outputs[31].show_expanded = False
    if hasattr(group_input_012_1.outputs[32], 'default_value'):
        group_input_012_1.outputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[32], 'display_shape'):
        group_input_012_1.outputs[32].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[32], 'enabled'):
        group_input_012_1.outputs[32].enabled = True
    if hasattr(group_input_012_1.outputs[32], 'hide'):
        group_input_012_1.outputs[32].hide = True
    if hasattr(group_input_012_1.outputs[32], 'hide_value'):
        group_input_012_1.outputs[32].hide_value = False
    if hasattr(group_input_012_1.outputs[32], 'name'):
        group_input_012_1.outputs[32].name = 'Zone 3 Norm Out'
    if hasattr(group_input_012_1.outputs[32], 'show_expanded'):
        group_input_012_1.outputs[32].show_expanded = False
    if hasattr(group_input_012_1.outputs[33], 'default_value'):
        group_input_012_1.outputs[33].default_value = 0.0
    if hasattr(group_input_012_1.outputs[33], 'display_shape'):
        group_input_012_1.outputs[33].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[33], 'enabled'):
        group_input_012_1.outputs[33].enabled = True
    if hasattr(group_input_012_1.outputs[33], 'hide'):
        group_input_012_1.outputs[33].hide = True
    if hasattr(group_input_012_1.outputs[33], 'hide_value'):
        group_input_012_1.outputs[33].hide_value = False
    if hasattr(group_input_012_1.outputs[33], 'name'):
        group_input_012_1.outputs[33].name = 'Zone 3 Scratch Amount'
    if hasattr(group_input_012_1.outputs[33], 'show_expanded'):
        group_input_012_1.outputs[33].show_expanded = False
    if hasattr(group_input_012_1.outputs[34], 'default_value'):
        group_input_012_1.outputs[34].default_value = 0.0
    if hasattr(group_input_012_1.outputs[34], 'display_shape'):
        group_input_012_1.outputs[34].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[34], 'enabled'):
        group_input_012_1.outputs[34].enabled = True
    if hasattr(group_input_012_1.outputs[34], 'hide'):
        group_input_012_1.outputs[34].hide = True
    if hasattr(group_input_012_1.outputs[34], 'hide_value'):
        group_input_012_1.outputs[34].hide_value = False
    if hasattr(group_input_012_1.outputs[34], 'name'):
        group_input_012_1.outputs[34].name = 'Zone 3 Scratch Metallic'
    if hasattr(group_input_012_1.outputs[34], 'show_expanded'):
        group_input_012_1.outputs[34].show_expanded = False
    if hasattr(group_input_012_1.outputs[35], 'default_value'):
        group_input_012_1.outputs[35].default_value = 0.0
    if hasattr(group_input_012_1.outputs[35], 'display_shape'):
        group_input_012_1.outputs[35].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[35], 'enabled'):
        group_input_012_1.outputs[35].enabled = True
    if hasattr(group_input_012_1.outputs[35], 'hide'):
        group_input_012_1.outputs[35].hide = True
    if hasattr(group_input_012_1.outputs[35], 'hide_value'):
        group_input_012_1.outputs[35].hide_value = False
    if hasattr(group_input_012_1.outputs[35], 'name'):
        group_input_012_1.outputs[35].name = 'Zone 3 Scratch Roughness'
    if hasattr(group_input_012_1.outputs[35], 'show_expanded'):
        group_input_012_1.outputs[35].show_expanded = False
    if hasattr(group_input_012_1.outputs[36], 'default_value'):
        group_input_012_1.outputs[36].default_value = 0.0
    if hasattr(group_input_012_1.outputs[36], 'display_shape'):
        group_input_012_1.outputs[36].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[36], 'enabled'):
        group_input_012_1.outputs[36].enabled = True
    if hasattr(group_input_012_1.outputs[36], 'hide'):
        group_input_012_1.outputs[36].hide = True
    if hasattr(group_input_012_1.outputs[36], 'hide_value'):
        group_input_012_1.outputs[36].hide_value = False
    if hasattr(group_input_012_1.outputs[36], 'name'):
        group_input_012_1.outputs[36].name = 'Zone 3 Metallic'
    if hasattr(group_input_012_1.outputs[36], 'show_expanded'):
        group_input_012_1.outputs[36].show_expanded = False
    if hasattr(group_input_012_1.outputs[37], 'default_value'):
        group_input_012_1.outputs[37].default_value = 0.0
    if hasattr(group_input_012_1.outputs[37], 'display_shape'):
        group_input_012_1.outputs[37].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[37], 'enabled'):
        group_input_012_1.outputs[37].enabled = True
    if hasattr(group_input_012_1.outputs[37], 'hide'):
        group_input_012_1.outputs[37].hide = True
    if hasattr(group_input_012_1.outputs[37], 'hide_value'):
        group_input_012_1.outputs[37].hide_value = False
    if hasattr(group_input_012_1.outputs[37], 'name'):
        group_input_012_1.outputs[37].name = 'Zone 3 Emmisive Amount'
    if hasattr(group_input_012_1.outputs[37], 'show_expanded'):
        group_input_012_1.outputs[37].show_expanded = False
    if hasattr(group_input_012_1.outputs[38], 'default_value'):
        group_input_012_1.outputs[38].default_value = (0.03837098181247711, 0.03837098181247711, 0.03837098181247711, 1.0)
    if hasattr(group_input_012_1.outputs[38], 'display_shape'):
        group_input_012_1.outputs[38].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[38], 'enabled'):
        group_input_012_1.outputs[38].enabled = True
    if hasattr(group_input_012_1.outputs[38], 'hide'):
        group_input_012_1.outputs[38].hide = True
    if hasattr(group_input_012_1.outputs[38], 'hide_value'):
        group_input_012_1.outputs[38].hide_value = False
    if hasattr(group_input_012_1.outputs[38], 'name'):
        group_input_012_1.outputs[38].name = 'Zone 3 Top'
    if hasattr(group_input_012_1.outputs[38], 'show_expanded'):
        group_input_012_1.outputs[38].show_expanded = False
    if hasattr(group_input_012_1.outputs[39], 'default_value'):
        group_input_012_1.outputs[39].default_value = (0.03343917429447174, 0.03343917429447174, 0.03343917429447174, 1.0)
    if hasattr(group_input_012_1.outputs[39], 'display_shape'):
        group_input_012_1.outputs[39].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[39], 'enabled'):
        group_input_012_1.outputs[39].enabled = True
    if hasattr(group_input_012_1.outputs[39], 'hide'):
        group_input_012_1.outputs[39].hide = True
    if hasattr(group_input_012_1.outputs[39], 'hide_value'):
        group_input_012_1.outputs[39].hide_value = False
    if hasattr(group_input_012_1.outputs[39], 'name'):
        group_input_012_1.outputs[39].name = 'Zone 3 Mid'
    if hasattr(group_input_012_1.outputs[39], 'show_expanded'):
        group_input_012_1.outputs[39].show_expanded = False
    if hasattr(group_input_012_1.outputs[40], 'default_value'):
        group_input_012_1.outputs[40].default_value = (0.028762705624103546, 0.028762705624103546, 0.028762705624103546, 1.0)
    if hasattr(group_input_012_1.outputs[40], 'display_shape'):
        group_input_012_1.outputs[40].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[40], 'enabled'):
        group_input_012_1.outputs[40].enabled = True
    if hasattr(group_input_012_1.outputs[40], 'hide'):
        group_input_012_1.outputs[40].hide = True
    if hasattr(group_input_012_1.outputs[40], 'hide_value'):
        group_input_012_1.outputs[40].hide_value = False
    if hasattr(group_input_012_1.outputs[40], 'name'):
        group_input_012_1.outputs[40].name = 'Zone 3 Bot'
    if hasattr(group_input_012_1.outputs[40], 'show_expanded'):
        group_input_012_1.outputs[40].show_expanded = False
    if hasattr(group_input_012_1.outputs[41], 'default_value'):
        group_input_012_1.outputs[41].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_012_1.outputs[41], 'display_shape'):
        group_input_012_1.outputs[41].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[41], 'enabled'):
        group_input_012_1.outputs[41].enabled = True
    if hasattr(group_input_012_1.outputs[41], 'hide'):
        group_input_012_1.outputs[41].hide = True
    if hasattr(group_input_012_1.outputs[41], 'hide_value'):
        group_input_012_1.outputs[41].hide_value = False
    if hasattr(group_input_012_1.outputs[41], 'name'):
        group_input_012_1.outputs[41].name = 'Zone 3 ScratchColor'
    if hasattr(group_input_012_1.outputs[41], 'show_expanded'):
        group_input_012_1.outputs[41].show_expanded = False
    if hasattr(group_input_012_1.outputs[42], 'default_value'):
        group_input_012_1.outputs[42].default_value = 0.0
    if hasattr(group_input_012_1.outputs[42], 'display_shape'):
        group_input_012_1.outputs[42].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[42], 'enabled'):
        group_input_012_1.outputs[42].enabled = True
    if hasattr(group_input_012_1.outputs[42], 'hide'):
        group_input_012_1.outputs[42].hide = True
    if hasattr(group_input_012_1.outputs[42], 'hide_value'):
        group_input_012_1.outputs[42].hide_value = False
    if hasattr(group_input_012_1.outputs[42], 'name'):
        group_input_012_1.outputs[42].name = 'Zone 4 Gradient Out'
    if hasattr(group_input_012_1.outputs[42], 'show_expanded'):
        group_input_012_1.outputs[42].show_expanded = False
    if hasattr(group_input_012_1.outputs[43], 'default_value'):
        group_input_012_1.outputs[43].default_value = 0.0
    if hasattr(group_input_012_1.outputs[43], 'display_shape'):
        group_input_012_1.outputs[43].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[43], 'enabled'):
        group_input_012_1.outputs[43].enabled = True
    if hasattr(group_input_012_1.outputs[43], 'hide'):
        group_input_012_1.outputs[43].hide = True
    if hasattr(group_input_012_1.outputs[43], 'hide_value'):
        group_input_012_1.outputs[43].hide_value = False
    if hasattr(group_input_012_1.outputs[43], 'name'):
        group_input_012_1.outputs[43].name = 'Zone 4 Rough Out'
    if hasattr(group_input_012_1.outputs[43], 'show_expanded'):
        group_input_012_1.outputs[43].show_expanded = False
    if hasattr(group_input_012_1.outputs[44], 'default_value'):
        group_input_012_1.outputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[44], 'display_shape'):
        group_input_012_1.outputs[44].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[44], 'enabled'):
        group_input_012_1.outputs[44].enabled = True
    if hasattr(group_input_012_1.outputs[44], 'hide'):
        group_input_012_1.outputs[44].hide = True
    if hasattr(group_input_012_1.outputs[44], 'hide_value'):
        group_input_012_1.outputs[44].hide_value = False
    if hasattr(group_input_012_1.outputs[44], 'name'):
        group_input_012_1.outputs[44].name = 'Zone 4 Norm Out'
    if hasattr(group_input_012_1.outputs[44], 'show_expanded'):
        group_input_012_1.outputs[44].show_expanded = False
    if hasattr(group_input_012_1.outputs[45], 'default_value'):
        group_input_012_1.outputs[45].default_value = 0.0
    if hasattr(group_input_012_1.outputs[45], 'display_shape'):
        group_input_012_1.outputs[45].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[45], 'enabled'):
        group_input_012_1.outputs[45].enabled = True
    if hasattr(group_input_012_1.outputs[45], 'hide'):
        group_input_012_1.outputs[45].hide = True
    if hasattr(group_input_012_1.outputs[45], 'hide_value'):
        group_input_012_1.outputs[45].hide_value = False
    if hasattr(group_input_012_1.outputs[45], 'name'):
        group_input_012_1.outputs[45].name = 'Zone 4 Scratch Amount'
    if hasattr(group_input_012_1.outputs[45], 'show_expanded'):
        group_input_012_1.outputs[45].show_expanded = False
    if hasattr(group_input_012_1.outputs[46], 'default_value'):
        group_input_012_1.outputs[46].default_value = 0.0
    if hasattr(group_input_012_1.outputs[46], 'display_shape'):
        group_input_012_1.outputs[46].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[46], 'enabled'):
        group_input_012_1.outputs[46].enabled = True
    if hasattr(group_input_012_1.outputs[46], 'hide'):
        group_input_012_1.outputs[46].hide = True
    if hasattr(group_input_012_1.outputs[46], 'hide_value'):
        group_input_012_1.outputs[46].hide_value = False
    if hasattr(group_input_012_1.outputs[46], 'name'):
        group_input_012_1.outputs[46].name = 'Zone 4 Scratch Metallic'
    if hasattr(group_input_012_1.outputs[46], 'show_expanded'):
        group_input_012_1.outputs[46].show_expanded = False
    if hasattr(group_input_012_1.outputs[47], 'default_value'):
        group_input_012_1.outputs[47].default_value = 0.0
    if hasattr(group_input_012_1.outputs[47], 'display_shape'):
        group_input_012_1.outputs[47].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[47], 'enabled'):
        group_input_012_1.outputs[47].enabled = True
    if hasattr(group_input_012_1.outputs[47], 'hide'):
        group_input_012_1.outputs[47].hide = True
    if hasattr(group_input_012_1.outputs[47], 'hide_value'):
        group_input_012_1.outputs[47].hide_value = False
    if hasattr(group_input_012_1.outputs[47], 'name'):
        group_input_012_1.outputs[47].name = 'Zone 4 Scratch Roughness'
    if hasattr(group_input_012_1.outputs[47], 'show_expanded'):
        group_input_012_1.outputs[47].show_expanded = False
    if hasattr(group_input_012_1.outputs[48], 'default_value'):
        group_input_012_1.outputs[48].default_value = 0.0
    if hasattr(group_input_012_1.outputs[48], 'display_shape'):
        group_input_012_1.outputs[48].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[48], 'enabled'):
        group_input_012_1.outputs[48].enabled = True
    if hasattr(group_input_012_1.outputs[48], 'hide'):
        group_input_012_1.outputs[48].hide = True
    if hasattr(group_input_012_1.outputs[48], 'hide_value'):
        group_input_012_1.outputs[48].hide_value = False
    if hasattr(group_input_012_1.outputs[48], 'name'):
        group_input_012_1.outputs[48].name = 'Zone 4 Metallic'
    if hasattr(group_input_012_1.outputs[48], 'show_expanded'):
        group_input_012_1.outputs[48].show_expanded = False
    if hasattr(group_input_012_1.outputs[49], 'default_value'):
        group_input_012_1.outputs[49].default_value = 0.0
    if hasattr(group_input_012_1.outputs[49], 'display_shape'):
        group_input_012_1.outputs[49].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[49], 'enabled'):
        group_input_012_1.outputs[49].enabled = True
    if hasattr(group_input_012_1.outputs[49], 'hide'):
        group_input_012_1.outputs[49].hide = True
    if hasattr(group_input_012_1.outputs[49], 'hide_value'):
        group_input_012_1.outputs[49].hide_value = False
    if hasattr(group_input_012_1.outputs[49], 'name'):
        group_input_012_1.outputs[49].name = 'Zone 4 Emmisive Amount'
    if hasattr(group_input_012_1.outputs[49], 'show_expanded'):
        group_input_012_1.outputs[49].show_expanded = False
    if hasattr(group_input_012_1.outputs[50], 'default_value'):
        group_input_012_1.outputs[50].default_value = (0.026085255667567253, 0.026085255667567253, 0.026085255667567253, 1.0)
    if hasattr(group_input_012_1.outputs[50], 'display_shape'):
        group_input_012_1.outputs[50].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[50], 'enabled'):
        group_input_012_1.outputs[50].enabled = True
    if hasattr(group_input_012_1.outputs[50], 'hide'):
        group_input_012_1.outputs[50].hide = True
    if hasattr(group_input_012_1.outputs[50], 'hide_value'):
        group_input_012_1.outputs[50].hide_value = False
    if hasattr(group_input_012_1.outputs[50], 'name'):
        group_input_012_1.outputs[50].name = 'Zone 4 Top'
    if hasattr(group_input_012_1.outputs[50], 'show_expanded'):
        group_input_012_1.outputs[50].show_expanded = False
    if hasattr(group_input_012_1.outputs[51], 'default_value'):
        group_input_012_1.outputs[51].default_value = (0.05755693465471268, 0.05755693465471268, 0.05755693465471268, 1.0)
    if hasattr(group_input_012_1.outputs[51], 'display_shape'):
        group_input_012_1.outputs[51].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[51], 'enabled'):
        group_input_012_1.outputs[51].enabled = True
    if hasattr(group_input_012_1.outputs[51], 'hide'):
        group_input_012_1.outputs[51].hide = True
    if hasattr(group_input_012_1.outputs[51], 'hide_value'):
        group_input_012_1.outputs[51].hide_value = False
    if hasattr(group_input_012_1.outputs[51], 'name'):
        group_input_012_1.outputs[51].name = 'Zone 4 Mid'
    if hasattr(group_input_012_1.outputs[51], 'show_expanded'):
        group_input_012_1.outputs[51].show_expanded = False
    if hasattr(group_input_012_1.outputs[52], 'default_value'):
        group_input_012_1.outputs[52].default_value = (0.05748932063579559, 0.05748932063579559, 0.05748932063579559, 1.0)
    if hasattr(group_input_012_1.outputs[52], 'display_shape'):
        group_input_012_1.outputs[52].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[52], 'enabled'):
        group_input_012_1.outputs[52].enabled = True
    if hasattr(group_input_012_1.outputs[52], 'hide'):
        group_input_012_1.outputs[52].hide = True
    if hasattr(group_input_012_1.outputs[52], 'hide_value'):
        group_input_012_1.outputs[52].hide_value = False
    if hasattr(group_input_012_1.outputs[52], 'name'):
        group_input_012_1.outputs[52].name = 'Zone 4 Bot'
    if hasattr(group_input_012_1.outputs[52], 'show_expanded'):
        group_input_012_1.outputs[52].show_expanded = False
    if hasattr(group_input_012_1.outputs[53], 'default_value'):
        group_input_012_1.outputs[53].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_012_1.outputs[53], 'display_shape'):
        group_input_012_1.outputs[53].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[53], 'enabled'):
        group_input_012_1.outputs[53].enabled = True
    if hasattr(group_input_012_1.outputs[53], 'hide'):
        group_input_012_1.outputs[53].hide = True
    if hasattr(group_input_012_1.outputs[53], 'hide_value'):
        group_input_012_1.outputs[53].hide_value = False
    if hasattr(group_input_012_1.outputs[53], 'name'):
        group_input_012_1.outputs[53].name = 'Zone 4 Scratch Color'
    if hasattr(group_input_012_1.outputs[53], 'show_expanded'):
        group_input_012_1.outputs[53].show_expanded = False
    if hasattr(group_input_012_1.outputs[54], 'default_value'):
        group_input_012_1.outputs[54].default_value = 0.0
    if hasattr(group_input_012_1.outputs[54], 'display_shape'):
        group_input_012_1.outputs[54].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[54], 'enabled'):
        group_input_012_1.outputs[54].enabled = True
    if hasattr(group_input_012_1.outputs[54], 'hide'):
        group_input_012_1.outputs[54].hide = True
    if hasattr(group_input_012_1.outputs[54], 'hide_value'):
        group_input_012_1.outputs[54].hide_value = False
    if hasattr(group_input_012_1.outputs[54], 'name'):
        group_input_012_1.outputs[54].name = 'Zone 5 Gradient Out'
    if hasattr(group_input_012_1.outputs[54], 'show_expanded'):
        group_input_012_1.outputs[54].show_expanded = False
    if hasattr(group_input_012_1.outputs[55], 'default_value'):
        group_input_012_1.outputs[55].default_value = 0.0
    if hasattr(group_input_012_1.outputs[55], 'display_shape'):
        group_input_012_1.outputs[55].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[55], 'enabled'):
        group_input_012_1.outputs[55].enabled = True
    if hasattr(group_input_012_1.outputs[55], 'hide'):
        group_input_012_1.outputs[55].hide = True
    if hasattr(group_input_012_1.outputs[55], 'hide_value'):
        group_input_012_1.outputs[55].hide_value = False
    if hasattr(group_input_012_1.outputs[55], 'name'):
        group_input_012_1.outputs[55].name = 'Zone 5 Rough Out'
    if hasattr(group_input_012_1.outputs[55], 'show_expanded'):
        group_input_012_1.outputs[55].show_expanded = False
    if hasattr(group_input_012_1.outputs[56], 'default_value'):
        group_input_012_1.outputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[56], 'display_shape'):
        group_input_012_1.outputs[56].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[56], 'enabled'):
        group_input_012_1.outputs[56].enabled = True
    if hasattr(group_input_012_1.outputs[56], 'hide'):
        group_input_012_1.outputs[56].hide = True
    if hasattr(group_input_012_1.outputs[56], 'hide_value'):
        group_input_012_1.outputs[56].hide_value = False
    if hasattr(group_input_012_1.outputs[56], 'name'):
        group_input_012_1.outputs[56].name = 'Zone 5 Norm Out'
    if hasattr(group_input_012_1.outputs[56], 'show_expanded'):
        group_input_012_1.outputs[56].show_expanded = False
    if hasattr(group_input_012_1.outputs[57], 'default_value'):
        group_input_012_1.outputs[57].default_value = 0.0
    if hasattr(group_input_012_1.outputs[57], 'display_shape'):
        group_input_012_1.outputs[57].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[57], 'enabled'):
        group_input_012_1.outputs[57].enabled = True
    if hasattr(group_input_012_1.outputs[57], 'hide'):
        group_input_012_1.outputs[57].hide = True
    if hasattr(group_input_012_1.outputs[57], 'hide_value'):
        group_input_012_1.outputs[57].hide_value = False
    if hasattr(group_input_012_1.outputs[57], 'name'):
        group_input_012_1.outputs[57].name = 'Zone 5 Scratch Amount'
    if hasattr(group_input_012_1.outputs[57], 'show_expanded'):
        group_input_012_1.outputs[57].show_expanded = False
    if hasattr(group_input_012_1.outputs[58], 'default_value'):
        group_input_012_1.outputs[58].default_value = 0.0
    if hasattr(group_input_012_1.outputs[58], 'display_shape'):
        group_input_012_1.outputs[58].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[58], 'enabled'):
        group_input_012_1.outputs[58].enabled = True
    if hasattr(group_input_012_1.outputs[58], 'hide'):
        group_input_012_1.outputs[58].hide = True
    if hasattr(group_input_012_1.outputs[58], 'hide_value'):
        group_input_012_1.outputs[58].hide_value = False
    if hasattr(group_input_012_1.outputs[58], 'name'):
        group_input_012_1.outputs[58].name = 'Zone 5 Scratch Metallic'
    if hasattr(group_input_012_1.outputs[58], 'show_expanded'):
        group_input_012_1.outputs[58].show_expanded = False
    if hasattr(group_input_012_1.outputs[59], 'default_value'):
        group_input_012_1.outputs[59].default_value = 0.0
    if hasattr(group_input_012_1.outputs[59], 'display_shape'):
        group_input_012_1.outputs[59].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[59], 'enabled'):
        group_input_012_1.outputs[59].enabled = True
    if hasattr(group_input_012_1.outputs[59], 'hide'):
        group_input_012_1.outputs[59].hide = True
    if hasattr(group_input_012_1.outputs[59], 'hide_value'):
        group_input_012_1.outputs[59].hide_value = False
    if hasattr(group_input_012_1.outputs[59], 'name'):
        group_input_012_1.outputs[59].name = 'Zone 5 Scratch Roughness'
    if hasattr(group_input_012_1.outputs[59], 'show_expanded'):
        group_input_012_1.outputs[59].show_expanded = False
    if hasattr(group_input_012_1.outputs[60], 'default_value'):
        group_input_012_1.outputs[60].default_value = 0.0
    if hasattr(group_input_012_1.outputs[60], 'display_shape'):
        group_input_012_1.outputs[60].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[60], 'enabled'):
        group_input_012_1.outputs[60].enabled = True
    if hasattr(group_input_012_1.outputs[60], 'hide'):
        group_input_012_1.outputs[60].hide = True
    if hasattr(group_input_012_1.outputs[60], 'hide_value'):
        group_input_012_1.outputs[60].hide_value = False
    if hasattr(group_input_012_1.outputs[60], 'name'):
        group_input_012_1.outputs[60].name = 'Zone 5 Metallic'
    if hasattr(group_input_012_1.outputs[60], 'show_expanded'):
        group_input_012_1.outputs[60].show_expanded = False
    if hasattr(group_input_012_1.outputs[61], 'default_value'):
        group_input_012_1.outputs[61].default_value = 0.0
    if hasattr(group_input_012_1.outputs[61], 'display_shape'):
        group_input_012_1.outputs[61].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[61], 'enabled'):
        group_input_012_1.outputs[61].enabled = True
    if hasattr(group_input_012_1.outputs[61], 'hide'):
        group_input_012_1.outputs[61].hide = True
    if hasattr(group_input_012_1.outputs[61], 'hide_value'):
        group_input_012_1.outputs[61].hide_value = False
    if hasattr(group_input_012_1.outputs[61], 'name'):
        group_input_012_1.outputs[61].name = 'Zone 5 Emmisive Amount'
    if hasattr(group_input_012_1.outputs[61], 'show_expanded'):
        group_input_012_1.outputs[61].show_expanded = False
    if hasattr(group_input_012_1.outputs[62], 'default_value'):
        group_input_012_1.outputs[62].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_012_1.outputs[62], 'display_shape'):
        group_input_012_1.outputs[62].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[62], 'enabled'):
        group_input_012_1.outputs[62].enabled = True
    if hasattr(group_input_012_1.outputs[62], 'hide'):
        group_input_012_1.outputs[62].hide = True
    if hasattr(group_input_012_1.outputs[62], 'hide_value'):
        group_input_012_1.outputs[62].hide_value = False
    if hasattr(group_input_012_1.outputs[62], 'name'):
        group_input_012_1.outputs[62].name = 'Zone 5 Top'
    if hasattr(group_input_012_1.outputs[62], 'show_expanded'):
        group_input_012_1.outputs[62].show_expanded = False
    if hasattr(group_input_012_1.outputs[63], 'default_value'):
        group_input_012_1.outputs[63].default_value = (0.09312808513641357, 0.09312804043292999, 0.09312806278467178, 1.0)
    if hasattr(group_input_012_1.outputs[63], 'display_shape'):
        group_input_012_1.outputs[63].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[63], 'enabled'):
        group_input_012_1.outputs[63].enabled = True
    if hasattr(group_input_012_1.outputs[63], 'hide'):
        group_input_012_1.outputs[63].hide = True
    if hasattr(group_input_012_1.outputs[63], 'hide_value'):
        group_input_012_1.outputs[63].hide_value = False
    if hasattr(group_input_012_1.outputs[63], 'name'):
        group_input_012_1.outputs[63].name = 'Zone 5 Mid'
    if hasattr(group_input_012_1.outputs[63], 'show_expanded'):
        group_input_012_1.outputs[63].show_expanded = False
    if hasattr(group_input_012_1.outputs[64], 'default_value'):
        group_input_012_1.outputs[64].default_value = (0.13843169808387756, 0.1384316086769104, 0.13843165338039398, 1.0)
    if hasattr(group_input_012_1.outputs[64], 'display_shape'):
        group_input_012_1.outputs[64].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[64], 'enabled'):
        group_input_012_1.outputs[64].enabled = True
    if hasattr(group_input_012_1.outputs[64], 'hide'):
        group_input_012_1.outputs[64].hide = True
    if hasattr(group_input_012_1.outputs[64], 'hide_value'):
        group_input_012_1.outputs[64].hide_value = False
    if hasattr(group_input_012_1.outputs[64], 'name'):
        group_input_012_1.outputs[64].name = 'Zone 5 Bot'
    if hasattr(group_input_012_1.outputs[64], 'show_expanded'):
        group_input_012_1.outputs[64].show_expanded = False
    if hasattr(group_input_012_1.outputs[65], 'default_value'):
        group_input_012_1.outputs[65].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_012_1.outputs[65], 'display_shape'):
        group_input_012_1.outputs[65].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[65], 'enabled'):
        group_input_012_1.outputs[65].enabled = True
    if hasattr(group_input_012_1.outputs[65], 'hide'):
        group_input_012_1.outputs[65].hide = True
    if hasattr(group_input_012_1.outputs[65], 'hide_value'):
        group_input_012_1.outputs[65].hide_value = False
    if hasattr(group_input_012_1.outputs[65], 'name'):
        group_input_012_1.outputs[65].name = 'Zone 5 Scratch Color'
    if hasattr(group_input_012_1.outputs[65], 'show_expanded'):
        group_input_012_1.outputs[65].show_expanded = False
    if hasattr(group_input_012_1.outputs[66], 'default_value'):
        group_input_012_1.outputs[66].default_value = 0.0
    if hasattr(group_input_012_1.outputs[66], 'display_shape'):
        group_input_012_1.outputs[66].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[66], 'enabled'):
        group_input_012_1.outputs[66].enabled = True
    if hasattr(group_input_012_1.outputs[66], 'hide'):
        group_input_012_1.outputs[66].hide = False
    if hasattr(group_input_012_1.outputs[66], 'hide_value'):
        group_input_012_1.outputs[66].hide_value = False
    if hasattr(group_input_012_1.outputs[66], 'name'):
        group_input_012_1.outputs[66].name = 'Zone 6 Gradient Out'
    if hasattr(group_input_012_1.outputs[66], 'show_expanded'):
        group_input_012_1.outputs[66].show_expanded = False
    if hasattr(group_input_012_1.outputs[67], 'default_value'):
        group_input_012_1.outputs[67].default_value = 0.0
    if hasattr(group_input_012_1.outputs[67], 'display_shape'):
        group_input_012_1.outputs[67].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[67], 'enabled'):
        group_input_012_1.outputs[67].enabled = True
    if hasattr(group_input_012_1.outputs[67], 'hide'):
        group_input_012_1.outputs[67].hide = True
    if hasattr(group_input_012_1.outputs[67], 'hide_value'):
        group_input_012_1.outputs[67].hide_value = False
    if hasattr(group_input_012_1.outputs[67], 'name'):
        group_input_012_1.outputs[67].name = 'Zone 6 Rough Out'
    if hasattr(group_input_012_1.outputs[67], 'show_expanded'):
        group_input_012_1.outputs[67].show_expanded = False
    if hasattr(group_input_012_1.outputs[68], 'default_value'):
        group_input_012_1.outputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[68], 'display_shape'):
        group_input_012_1.outputs[68].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[68], 'enabled'):
        group_input_012_1.outputs[68].enabled = True
    if hasattr(group_input_012_1.outputs[68], 'hide'):
        group_input_012_1.outputs[68].hide = True
    if hasattr(group_input_012_1.outputs[68], 'hide_value'):
        group_input_012_1.outputs[68].hide_value = False
    if hasattr(group_input_012_1.outputs[68], 'name'):
        group_input_012_1.outputs[68].name = 'Zone 6 Norm Out'
    if hasattr(group_input_012_1.outputs[68], 'show_expanded'):
        group_input_012_1.outputs[68].show_expanded = False
    if hasattr(group_input_012_1.outputs[69], 'default_value'):
        group_input_012_1.outputs[69].default_value = 0.0
    if hasattr(group_input_012_1.outputs[69], 'display_shape'):
        group_input_012_1.outputs[69].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[69], 'enabled'):
        group_input_012_1.outputs[69].enabled = True
    if hasattr(group_input_012_1.outputs[69], 'hide'):
        group_input_012_1.outputs[69].hide = True
    if hasattr(group_input_012_1.outputs[69], 'hide_value'):
        group_input_012_1.outputs[69].hide_value = False
    if hasattr(group_input_012_1.outputs[69], 'name'):
        group_input_012_1.outputs[69].name = 'Zone 6 Scratch Amount'
    if hasattr(group_input_012_1.outputs[69], 'show_expanded'):
        group_input_012_1.outputs[69].show_expanded = False
    if hasattr(group_input_012_1.outputs[70], 'default_value'):
        group_input_012_1.outputs[70].default_value = 0.0
    if hasattr(group_input_012_1.outputs[70], 'display_shape'):
        group_input_012_1.outputs[70].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[70], 'enabled'):
        group_input_012_1.outputs[70].enabled = True
    if hasattr(group_input_012_1.outputs[70], 'hide'):
        group_input_012_1.outputs[70].hide = True
    if hasattr(group_input_012_1.outputs[70], 'hide_value'):
        group_input_012_1.outputs[70].hide_value = False
    if hasattr(group_input_012_1.outputs[70], 'name'):
        group_input_012_1.outputs[70].name = 'Zone 6 Scratch Metallic'
    if hasattr(group_input_012_1.outputs[70], 'show_expanded'):
        group_input_012_1.outputs[70].show_expanded = False
    if hasattr(group_input_012_1.outputs[71], 'default_value'):
        group_input_012_1.outputs[71].default_value = 0.0
    if hasattr(group_input_012_1.outputs[71], 'display_shape'):
        group_input_012_1.outputs[71].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[71], 'enabled'):
        group_input_012_1.outputs[71].enabled = True
    if hasattr(group_input_012_1.outputs[71], 'hide'):
        group_input_012_1.outputs[71].hide = True
    if hasattr(group_input_012_1.outputs[71], 'hide_value'):
        group_input_012_1.outputs[71].hide_value = False
    if hasattr(group_input_012_1.outputs[71], 'name'):
        group_input_012_1.outputs[71].name = 'Zone 6 Scratch Roughness'
    if hasattr(group_input_012_1.outputs[71], 'show_expanded'):
        group_input_012_1.outputs[71].show_expanded = False
    if hasattr(group_input_012_1.outputs[72], 'default_value'):
        group_input_012_1.outputs[72].default_value = 0.0
    if hasattr(group_input_012_1.outputs[72], 'display_shape'):
        group_input_012_1.outputs[72].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[72], 'enabled'):
        group_input_012_1.outputs[72].enabled = True
    if hasattr(group_input_012_1.outputs[72], 'hide'):
        group_input_012_1.outputs[72].hide = True
    if hasattr(group_input_012_1.outputs[72], 'hide_value'):
        group_input_012_1.outputs[72].hide_value = False
    if hasattr(group_input_012_1.outputs[72], 'name'):
        group_input_012_1.outputs[72].name = 'Zone 6 Metallic'
    if hasattr(group_input_012_1.outputs[72], 'show_expanded'):
        group_input_012_1.outputs[72].show_expanded = False
    if hasattr(group_input_012_1.outputs[73], 'default_value'):
        group_input_012_1.outputs[73].default_value = 0.0
    if hasattr(group_input_012_1.outputs[73], 'display_shape'):
        group_input_012_1.outputs[73].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[73], 'enabled'):
        group_input_012_1.outputs[73].enabled = True
    if hasattr(group_input_012_1.outputs[73], 'hide'):
        group_input_012_1.outputs[73].hide = True
    if hasattr(group_input_012_1.outputs[73], 'hide_value'):
        group_input_012_1.outputs[73].hide_value = False
    if hasattr(group_input_012_1.outputs[73], 'name'):
        group_input_012_1.outputs[73].name = 'Zone 6 Emmisive Amount'
    if hasattr(group_input_012_1.outputs[73], 'show_expanded'):
        group_input_012_1.outputs[73].show_expanded = False
    if hasattr(group_input_012_1.outputs[74], 'default_value'):
        group_input_012_1.outputs[74].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_012_1.outputs[74], 'display_shape'):
        group_input_012_1.outputs[74].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[74], 'enabled'):
        group_input_012_1.outputs[74].enabled = True
    if hasattr(group_input_012_1.outputs[74], 'hide'):
        group_input_012_1.outputs[74].hide = False
    if hasattr(group_input_012_1.outputs[74], 'hide_value'):
        group_input_012_1.outputs[74].hide_value = False
    if hasattr(group_input_012_1.outputs[74], 'name'):
        group_input_012_1.outputs[74].name = 'Zone 6 Top'
    if hasattr(group_input_012_1.outputs[74], 'show_expanded'):
        group_input_012_1.outputs[74].show_expanded = False
    if hasattr(group_input_012_1.outputs[75], 'default_value'):
        group_input_012_1.outputs[75].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_012_1.outputs[75], 'display_shape'):
        group_input_012_1.outputs[75].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[75], 'enabled'):
        group_input_012_1.outputs[75].enabled = True
    if hasattr(group_input_012_1.outputs[75], 'hide'):
        group_input_012_1.outputs[75].hide = False
    if hasattr(group_input_012_1.outputs[75], 'hide_value'):
        group_input_012_1.outputs[75].hide_value = False
    if hasattr(group_input_012_1.outputs[75], 'name'):
        group_input_012_1.outputs[75].name = 'Zone 6 Mid'
    if hasattr(group_input_012_1.outputs[75], 'show_expanded'):
        group_input_012_1.outputs[75].show_expanded = False
    if hasattr(group_input_012_1.outputs[76], 'default_value'):
        group_input_012_1.outputs[76].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_012_1.outputs[76], 'display_shape'):
        group_input_012_1.outputs[76].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[76], 'enabled'):
        group_input_012_1.outputs[76].enabled = True
    if hasattr(group_input_012_1.outputs[76], 'hide'):
        group_input_012_1.outputs[76].hide = False
    if hasattr(group_input_012_1.outputs[76], 'hide_value'):
        group_input_012_1.outputs[76].hide_value = False
    if hasattr(group_input_012_1.outputs[76], 'name'):
        group_input_012_1.outputs[76].name = 'Zone 6 Bot'
    if hasattr(group_input_012_1.outputs[76], 'show_expanded'):
        group_input_012_1.outputs[76].show_expanded = False
    if hasattr(group_input_012_1.outputs[77], 'default_value'):
        group_input_012_1.outputs[77].default_value = (1.0, 1.0, 1.0, 1.0)
    if hasattr(group_input_012_1.outputs[77], 'display_shape'):
        group_input_012_1.outputs[77].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[77], 'enabled'):
        group_input_012_1.outputs[77].enabled = True
    if hasattr(group_input_012_1.outputs[77], 'hide'):
        group_input_012_1.outputs[77].hide = True
    if hasattr(group_input_012_1.outputs[77], 'hide_value'):
        group_input_012_1.outputs[77].hide_value = False
    if hasattr(group_input_012_1.outputs[77], 'name'):
        group_input_012_1.outputs[77].name = 'Zone 6 Scratch Color'
    if hasattr(group_input_012_1.outputs[77], 'show_expanded'):
        group_input_012_1.outputs[77].show_expanded = False
    if hasattr(group_input_012_1.outputs[78], 'default_value'):
        group_input_012_1.outputs[78].default_value = 0.0
    if hasattr(group_input_012_1.outputs[78], 'display_shape'):
        group_input_012_1.outputs[78].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[78], 'enabled'):
        group_input_012_1.outputs[78].enabled = True
    if hasattr(group_input_012_1.outputs[78], 'hide'):
        group_input_012_1.outputs[78].hide = True
    if hasattr(group_input_012_1.outputs[78], 'hide_value'):
        group_input_012_1.outputs[78].hide_value = False
    if hasattr(group_input_012_1.outputs[78], 'name'):
        group_input_012_1.outputs[78].name = 'Grime Gradient Out'
    if hasattr(group_input_012_1.outputs[78], 'show_expanded'):
        group_input_012_1.outputs[78].show_expanded = False
    if hasattr(group_input_012_1.outputs[79], 'default_value'):
        group_input_012_1.outputs[79].default_value = 0.0
    if hasattr(group_input_012_1.outputs[79], 'display_shape'):
        group_input_012_1.outputs[79].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[79], 'enabled'):
        group_input_012_1.outputs[79].enabled = True
    if hasattr(group_input_012_1.outputs[79], 'hide'):
        group_input_012_1.outputs[79].hide = True
    if hasattr(group_input_012_1.outputs[79], 'hide_value'):
        group_input_012_1.outputs[79].hide_value = False
    if hasattr(group_input_012_1.outputs[79], 'name'):
        group_input_012_1.outputs[79].name = 'Grime Rough Out'
    if hasattr(group_input_012_1.outputs[79], 'show_expanded'):
        group_input_012_1.outputs[79].show_expanded = False
    if hasattr(group_input_012_1.outputs[80], 'default_value'):
        group_input_012_1.outputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[80], 'display_shape'):
        group_input_012_1.outputs[80].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[80], 'enabled'):
        group_input_012_1.outputs[80].enabled = True
    if hasattr(group_input_012_1.outputs[80], 'hide'):
        group_input_012_1.outputs[80].hide = True
    if hasattr(group_input_012_1.outputs[80], 'hide_value'):
        group_input_012_1.outputs[80].hide_value = False
    if hasattr(group_input_012_1.outputs[80], 'name'):
        group_input_012_1.outputs[80].name = 'Grime Norm Out'
    if hasattr(group_input_012_1.outputs[80], 'show_expanded'):
        group_input_012_1.outputs[80].show_expanded = False
    if hasattr(group_input_012_1.outputs[81], 'default_value'):
        group_input_012_1.outputs[81].default_value = 0.0
    if hasattr(group_input_012_1.outputs[81], 'display_shape'):
        group_input_012_1.outputs[81].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[81], 'enabled'):
        group_input_012_1.outputs[81].enabled = True
    if hasattr(group_input_012_1.outputs[81], 'hide'):
        group_input_012_1.outputs[81].hide = True
    if hasattr(group_input_012_1.outputs[81], 'hide_value'):
        group_input_012_1.outputs[81].hide_value = False
    if hasattr(group_input_012_1.outputs[81], 'name'):
        group_input_012_1.outputs[81].name = 'Grime Scratch Amount'
    if hasattr(group_input_012_1.outputs[81], 'show_expanded'):
        group_input_012_1.outputs[81].show_expanded = False
    if hasattr(group_input_012_1.outputs[82], 'default_value'):
        group_input_012_1.outputs[82].default_value = 0.0
    if hasattr(group_input_012_1.outputs[82], 'display_shape'):
        group_input_012_1.outputs[82].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[82], 'enabled'):
        group_input_012_1.outputs[82].enabled = True
    if hasattr(group_input_012_1.outputs[82], 'hide'):
        group_input_012_1.outputs[82].hide = True
    if hasattr(group_input_012_1.outputs[82], 'hide_value'):
        group_input_012_1.outputs[82].hide_value = False
    if hasattr(group_input_012_1.outputs[82], 'name'):
        group_input_012_1.outputs[82].name = 'Grime Scratch Metallic'
    if hasattr(group_input_012_1.outputs[82], 'show_expanded'):
        group_input_012_1.outputs[82].show_expanded = False
    if hasattr(group_input_012_1.outputs[83], 'default_value'):
        group_input_012_1.outputs[83].default_value = 0.0
    if hasattr(group_input_012_1.outputs[83], 'display_shape'):
        group_input_012_1.outputs[83].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[83], 'enabled'):
        group_input_012_1.outputs[83].enabled = True
    if hasattr(group_input_012_1.outputs[83], 'hide'):
        group_input_012_1.outputs[83].hide = True
    if hasattr(group_input_012_1.outputs[83], 'hide_value'):
        group_input_012_1.outputs[83].hide_value = False
    if hasattr(group_input_012_1.outputs[83], 'name'):
        group_input_012_1.outputs[83].name = 'Grime Scratch Roughness'
    if hasattr(group_input_012_1.outputs[83], 'show_expanded'):
        group_input_012_1.outputs[83].show_expanded = False
    if hasattr(group_input_012_1.outputs[84], 'default_value'):
        group_input_012_1.outputs[84].default_value = 0.0
    if hasattr(group_input_012_1.outputs[84], 'display_shape'):
        group_input_012_1.outputs[84].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[84], 'enabled'):
        group_input_012_1.outputs[84].enabled = True
    if hasattr(group_input_012_1.outputs[84], 'hide'):
        group_input_012_1.outputs[84].hide = True
    if hasattr(group_input_012_1.outputs[84], 'hide_value'):
        group_input_012_1.outputs[84].hide_value = False
    if hasattr(group_input_012_1.outputs[84], 'name'):
        group_input_012_1.outputs[84].name = 'Grime Metallic'
    if hasattr(group_input_012_1.outputs[84], 'show_expanded'):
        group_input_012_1.outputs[84].show_expanded = False
    if hasattr(group_input_012_1.outputs[85], 'default_value'):
        group_input_012_1.outputs[85].default_value = 0.0
    if hasattr(group_input_012_1.outputs[85], 'display_shape'):
        group_input_012_1.outputs[85].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[85], 'enabled'):
        group_input_012_1.outputs[85].enabled = True
    if hasattr(group_input_012_1.outputs[85], 'hide'):
        group_input_012_1.outputs[85].hide = True
    if hasattr(group_input_012_1.outputs[85], 'hide_value'):
        group_input_012_1.outputs[85].hide_value = False
    if hasattr(group_input_012_1.outputs[85], 'name'):
        group_input_012_1.outputs[85].name = 'Grime Emissive Amount'
    if hasattr(group_input_012_1.outputs[85], 'show_expanded'):
        group_input_012_1.outputs[85].show_expanded = False
    if hasattr(group_input_012_1.outputs[86], 'default_value'):
        group_input_012_1.outputs[86].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_012_1.outputs[86], 'display_shape'):
        group_input_012_1.outputs[86].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[86], 'enabled'):
        group_input_012_1.outputs[86].enabled = True
    if hasattr(group_input_012_1.outputs[86], 'hide'):
        group_input_012_1.outputs[86].hide = True
    if hasattr(group_input_012_1.outputs[86], 'hide_value'):
        group_input_012_1.outputs[86].hide_value = False
    if hasattr(group_input_012_1.outputs[86], 'name'):
        group_input_012_1.outputs[86].name = 'Grime TopColor'
    if hasattr(group_input_012_1.outputs[86], 'show_expanded'):
        group_input_012_1.outputs[86].show_expanded = False
    if hasattr(group_input_012_1.outputs[87], 'default_value'):
        group_input_012_1.outputs[87].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_012_1.outputs[87], 'display_shape'):
        group_input_012_1.outputs[87].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[87], 'enabled'):
        group_input_012_1.outputs[87].enabled = True
    if hasattr(group_input_012_1.outputs[87], 'hide'):
        group_input_012_1.outputs[87].hide = True
    if hasattr(group_input_012_1.outputs[87], 'hide_value'):
        group_input_012_1.outputs[87].hide_value = False
    if hasattr(group_input_012_1.outputs[87], 'name'):
        group_input_012_1.outputs[87].name = 'Grime MidColor'
    if hasattr(group_input_012_1.outputs[87], 'show_expanded'):
        group_input_012_1.outputs[87].show_expanded = False
    if hasattr(group_input_012_1.outputs[88], 'default_value'):
        group_input_012_1.outputs[88].default_value = (0.08865560591220856, 0.06124606728553772, 0.034339822828769684, 1.0)
    if hasattr(group_input_012_1.outputs[88], 'display_shape'):
        group_input_012_1.outputs[88].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[88], 'enabled'):
        group_input_012_1.outputs[88].enabled = True
    if hasattr(group_input_012_1.outputs[88], 'hide'):
        group_input_012_1.outputs[88].hide = True
    if hasattr(group_input_012_1.outputs[88], 'hide_value'):
        group_input_012_1.outputs[88].hide_value = False
    if hasattr(group_input_012_1.outputs[88], 'name'):
        group_input_012_1.outputs[88].name = 'Grime BotColor'
    if hasattr(group_input_012_1.outputs[88], 'show_expanded'):
        group_input_012_1.outputs[88].show_expanded = False
    if hasattr(group_input_012_1.outputs[89], 'default_value'):
        group_input_012_1.outputs[89].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_012_1.outputs[89], 'display_shape'):
        group_input_012_1.outputs[89].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[89], 'enabled'):
        group_input_012_1.outputs[89].enabled = True
    if hasattr(group_input_012_1.outputs[89], 'hide'):
        group_input_012_1.outputs[89].hide = True
    if hasattr(group_input_012_1.outputs[89], 'hide_value'):
        group_input_012_1.outputs[89].hide_value = False
    if hasattr(group_input_012_1.outputs[89], 'name'):
        group_input_012_1.outputs[89].name = 'Grime Scratch Color'
    if hasattr(group_input_012_1.outputs[89], 'show_expanded'):
        group_input_012_1.outputs[89].show_expanded = False
    if hasattr(group_input_012_1.outputs[90], 'default_value'):
        group_input_012_1.outputs[90].default_value = 0.0
    if hasattr(group_input_012_1.outputs[90], 'display_shape'):
        group_input_012_1.outputs[90].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[90], 'enabled'):
        group_input_012_1.outputs[90].enabled = True
    if hasattr(group_input_012_1.outputs[90], 'hide'):
        group_input_012_1.outputs[90].hide = True
    if hasattr(group_input_012_1.outputs[90], 'hide_value'):
        group_input_012_1.outputs[90].hide_value = False
    if hasattr(group_input_012_1.outputs[90], 'name'):
        group_input_012_1.outputs[90].name = 'Dust Gradient Out'
    if hasattr(group_input_012_1.outputs[90], 'show_expanded'):
        group_input_012_1.outputs[90].show_expanded = False
    if hasattr(group_input_012_1.outputs[91], 'default_value'):
        group_input_012_1.outputs[91].default_value = 0.0
    if hasattr(group_input_012_1.outputs[91], 'display_shape'):
        group_input_012_1.outputs[91].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[91], 'enabled'):
        group_input_012_1.outputs[91].enabled = True
    if hasattr(group_input_012_1.outputs[91], 'hide'):
        group_input_012_1.outputs[91].hide = True
    if hasattr(group_input_012_1.outputs[91], 'hide_value'):
        group_input_012_1.outputs[91].hide_value = False
    if hasattr(group_input_012_1.outputs[91], 'name'):
        group_input_012_1.outputs[91].name = 'Dust Rough Out'
    if hasattr(group_input_012_1.outputs[91], 'show_expanded'):
        group_input_012_1.outputs[91].show_expanded = False
    if hasattr(group_input_012_1.outputs[92], 'default_value'):
        group_input_012_1.outputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
    if hasattr(group_input_012_1.outputs[92], 'display_shape'):
        group_input_012_1.outputs[92].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[92], 'enabled'):
        group_input_012_1.outputs[92].enabled = True
    if hasattr(group_input_012_1.outputs[92], 'hide'):
        group_input_012_1.outputs[92].hide = True
    if hasattr(group_input_012_1.outputs[92], 'hide_value'):
        group_input_012_1.outputs[92].hide_value = False
    if hasattr(group_input_012_1.outputs[92], 'name'):
        group_input_012_1.outputs[92].name = 'Dust Norm Out'
    if hasattr(group_input_012_1.outputs[92], 'show_expanded'):
        group_input_012_1.outputs[92].show_expanded = False
    if hasattr(group_input_012_1.outputs[93], 'default_value'):
        group_input_012_1.outputs[93].default_value = 0.0
    if hasattr(group_input_012_1.outputs[93], 'display_shape'):
        group_input_012_1.outputs[93].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[93], 'enabled'):
        group_input_012_1.outputs[93].enabled = True
    if hasattr(group_input_012_1.outputs[93], 'hide'):
        group_input_012_1.outputs[93].hide = True
    if hasattr(group_input_012_1.outputs[93], 'hide_value'):
        group_input_012_1.outputs[93].hide_value = False
    if hasattr(group_input_012_1.outputs[93], 'name'):
        group_input_012_1.outputs[93].name = 'Dust Scratch Amount'
    if hasattr(group_input_012_1.outputs[93], 'show_expanded'):
        group_input_012_1.outputs[93].show_expanded = False
    if hasattr(group_input_012_1.outputs[94], 'default_value'):
        group_input_012_1.outputs[94].default_value = 0.0
    if hasattr(group_input_012_1.outputs[94], 'display_shape'):
        group_input_012_1.outputs[94].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[94], 'enabled'):
        group_input_012_1.outputs[94].enabled = True
    if hasattr(group_input_012_1.outputs[94], 'hide'):
        group_input_012_1.outputs[94].hide = True
    if hasattr(group_input_012_1.outputs[94], 'hide_value'):
        group_input_012_1.outputs[94].hide_value = False
    if hasattr(group_input_012_1.outputs[94], 'name'):
        group_input_012_1.outputs[94].name = 'Dust Scratch Metallic'
    if hasattr(group_input_012_1.outputs[94], 'show_expanded'):
        group_input_012_1.outputs[94].show_expanded = False
    if hasattr(group_input_012_1.outputs[95], 'default_value'):
        group_input_012_1.outputs[95].default_value = 0.0
    if hasattr(group_input_012_1.outputs[95], 'display_shape'):
        group_input_012_1.outputs[95].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[95], 'enabled'):
        group_input_012_1.outputs[95].enabled = True
    if hasattr(group_input_012_1.outputs[95], 'hide'):
        group_input_012_1.outputs[95].hide = True
    if hasattr(group_input_012_1.outputs[95], 'hide_value'):
        group_input_012_1.outputs[95].hide_value = False
    if hasattr(group_input_012_1.outputs[95], 'name'):
        group_input_012_1.outputs[95].name = 'Dust Scratch Roughness'
    if hasattr(group_input_012_1.outputs[95], 'show_expanded'):
        group_input_012_1.outputs[95].show_expanded = False
    if hasattr(group_input_012_1.outputs[96], 'default_value'):
        group_input_012_1.outputs[96].default_value = 0.0
    if hasattr(group_input_012_1.outputs[96], 'display_shape'):
        group_input_012_1.outputs[96].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[96], 'enabled'):
        group_input_012_1.outputs[96].enabled = True
    if hasattr(group_input_012_1.outputs[96], 'hide'):
        group_input_012_1.outputs[96].hide = True
    if hasattr(group_input_012_1.outputs[96], 'hide_value'):
        group_input_012_1.outputs[96].hide_value = False
    if hasattr(group_input_012_1.outputs[96], 'name'):
        group_input_012_1.outputs[96].name = 'Dust Metallic'
    if hasattr(group_input_012_1.outputs[96], 'show_expanded'):
        group_input_012_1.outputs[96].show_expanded = False
    if hasattr(group_input_012_1.outputs[97], 'default_value'):
        group_input_012_1.outputs[97].default_value = 0.0
    if hasattr(group_input_012_1.outputs[97], 'display_shape'):
        group_input_012_1.outputs[97].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[97], 'enabled'):
        group_input_012_1.outputs[97].enabled = True
    if hasattr(group_input_012_1.outputs[97], 'hide'):
        group_input_012_1.outputs[97].hide = True
    if hasattr(group_input_012_1.outputs[97], 'hide_value'):
        group_input_012_1.outputs[97].hide_value = False
    if hasattr(group_input_012_1.outputs[97], 'name'):
        group_input_012_1.outputs[97].name = 'Dust Emissive Amount'
    if hasattr(group_input_012_1.outputs[97], 'show_expanded'):
        group_input_012_1.outputs[97].show_expanded = False
    if hasattr(group_input_012_1.outputs[98], 'default_value'):
        group_input_012_1.outputs[98].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_012_1.outputs[98], 'display_shape'):
        group_input_012_1.outputs[98].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[98], 'enabled'):
        group_input_012_1.outputs[98].enabled = True
    if hasattr(group_input_012_1.outputs[98], 'hide'):
        group_input_012_1.outputs[98].hide = True
    if hasattr(group_input_012_1.outputs[98], 'hide_value'):
        group_input_012_1.outputs[98].hide_value = False
    if hasattr(group_input_012_1.outputs[98], 'name'):
        group_input_012_1.outputs[98].name = 'Dust Top'
    if hasattr(group_input_012_1.outputs[98], 'show_expanded'):
        group_input_012_1.outputs[98].show_expanded = False
    if hasattr(group_input_012_1.outputs[99], 'default_value'):
        group_input_012_1.outputs[99].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_012_1.outputs[99], 'display_shape'):
        group_input_012_1.outputs[99].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[99], 'enabled'):
        group_input_012_1.outputs[99].enabled = True
    if hasattr(group_input_012_1.outputs[99], 'hide'):
        group_input_012_1.outputs[99].hide = True
    if hasattr(group_input_012_1.outputs[99], 'hide_value'):
        group_input_012_1.outputs[99].hide_value = False
    if hasattr(group_input_012_1.outputs[99], 'name'):
        group_input_012_1.outputs[99].name = 'Dust Mid'
    if hasattr(group_input_012_1.outputs[99], 'show_expanded'):
        group_input_012_1.outputs[99].show_expanded = False
    if hasattr(group_input_012_1.outputs[100], 'default_value'):
        group_input_012_1.outputs[100].default_value = (0.014443843625485897, 0.014443840831518173, 0.014443840831518173, 1.0)
    if hasattr(group_input_012_1.outputs[100], 'display_shape'):
        group_input_012_1.outputs[100].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[100], 'enabled'):
        group_input_012_1.outputs[100].enabled = True
    if hasattr(group_input_012_1.outputs[100], 'hide'):
        group_input_012_1.outputs[100].hide = True
    if hasattr(group_input_012_1.outputs[100], 'hide_value'):
        group_input_012_1.outputs[100].hide_value = False
    if hasattr(group_input_012_1.outputs[100], 'name'):
        group_input_012_1.outputs[100].name = 'Dust Bot'
    if hasattr(group_input_012_1.outputs[100], 'show_expanded'):
        group_input_012_1.outputs[100].show_expanded = False
    if hasattr(group_input_012_1.outputs[101], 'default_value'):
        group_input_012_1.outputs[101].default_value = (0.5, 0.5, 0.5, 1.0)
    if hasattr(group_input_012_1.outputs[101], 'display_shape'):
        group_input_012_1.outputs[101].display_shape = 'CIRCLE'
    if hasattr(group_input_012_1.outputs[101], 'enabled'):
        group_input_012_1.outputs[101].enabled = True
    if hasattr(group_input_012_1.outputs[101], 'hide'):
        group_input_012_1.outputs[101].hide = True
    if hasattr(group_input_012_1.outputs[101], 'hide_value'):
        group_input_012_1.outputs[101].hide_value = False
    if hasattr(group_input_012_1.outputs[101], 'name'):
        group_input_012_1.outputs[101].name = 'Dust Scratch Color'
    if hasattr(group_input_012_1.outputs[101], 'show_expanded'):
        group_input_012_1.outputs[101].show_expanded = False

    # LINKS
    node_tree1.links.new(mix_shader_1.outputs[0], group_output_1.inputs[0])
    node_tree1.links.new(group_009_1.outputs[0], principled_bsdf_1.inputs[9])
    node_tree1.links.new(normal_map_1.outputs[0], bump_1.inputs[5])
    node_tree1.links.new(group_001_1.outputs[0], principled_bsdf_1.inputs[6])
    node_tree1.links.new(group_002_1.outputs[0], group_1.inputs[3])
    node_tree1.links.new(group_004_1.outputs[0], group_1.inputs[4])
    node_tree1.links.new(group_008_1.outputs[0], group_1.inputs[5])
    node_tree1.links.new(group_010_1.outputs[0], group_1.inputs[6])
    node_tree1.links.new(group_011_1.outputs[0], group_1.inputs[7])
    node_tree1.links.new(group_012_1.outputs[0], group_1.inputs[8])
    node_tree1.links.new(group_015_1.outputs[0], group_1.inputs[10])
    node_tree1.links.new(group_016_1.outputs[0], group_1.inputs[9])
    node_tree1.links.new(group_input_1.outputs[2], group_013_1.inputs[2])
    node_tree1.links.new(group_input_1.outputs[13], group_013_1.inputs[3])
    node_tree1.links.new(group_input_1.outputs[25], group_013_1.inputs[4])
    node_tree1.links.new(group_input_1.outputs[37], group_013_1.inputs[5])
    node_tree1.links.new(group_input_1.outputs[49], group_013_1.inputs[6])
    node_tree1.links.new(group_input_1.outputs[61], group_013_1.inputs[7])
    node_tree1.links.new(group_input_1.outputs[73], group_013_1.inputs[8])
    node_tree1.links.new(group_014_1.outputs[0], group_1.inputs[11])
    node_tree1.links.new(group_017_1.outputs[0], group_001_1.inputs[11])
    node_tree1.links.new(group_018_1.outputs[0], group_009_1.inputs[11])
    node_tree1.links.new(bump_1.outputs[0], principled_bsdf_1.inputs[22])
    node_tree1.links.new(group_001_1.outputs[0], group_output_1.inputs[2])
    node_tree1.links.new(group_009_1.outputs[0], group_output_1.inputs[3])
    node_tree1.links.new(principled_bsdf_1.outputs[0], mix_shader_1.inputs[2])
    node_tree1.links.new(math_001_1.outputs[0], mix_shader_1.inputs[0])
    node_tree1.links.new(separate_rgb_1.outputs[0], math_001_1.inputs[0])
    node_tree1.links.new(group_input_004_1.outputs[1], group_017_1.inputs[1])
    node_tree1.links.new(group_input_004_1.outputs[2], group_017_1.inputs[2])
    node_tree1.links.new(group_input_004_1.outputs[10], group_017_1.inputs[3])
    node_tree1.links.new(group_input_004_1.outputs[22], group_017_1.inputs[4])
    node_tree1.links.new(group_input_004_1.outputs[34], group_017_1.inputs[5])
    node_tree1.links.new(group_input_004_1.outputs[46], group_017_1.inputs[6])
    node_tree1.links.new(group_input_004_1.outputs[58], group_017_1.inputs[7])
    node_tree1.links.new(group_input_004_1.outputs[70], group_017_1.inputs[8])
    node_tree1.links.new(group_input_005_1.outputs[1], group_014_1.inputs[1])
    node_tree1.links.new(group_input_005_1.outputs[2], group_014_1.inputs[2])
    node_tree1.links.new(group_input_005_1.outputs[17], group_014_1.inputs[3])
    node_tree1.links.new(group_input_005_1.outputs[29], group_014_1.inputs[4])
    node_tree1.links.new(group_input_005_1.outputs[41], group_014_1.inputs[5])
    node_tree1.links.new(group_input_005_1.outputs[53], group_014_1.inputs[6])
    node_tree1.links.new(group_input_005_1.outputs[65], group_014_1.inputs[7])
    node_tree1.links.new(group_input_005_1.outputs[77], group_014_1.inputs[8])
    node_tree1.links.new(group_input_006_1.outputs[1], group_018_1.inputs[1])
    node_tree1.links.new(group_input_006_1.outputs[2], group_018_1.inputs[2])
    node_tree1.links.new(group_input_006_1.outputs[11], group_018_1.inputs[3])
    node_tree1.links.new(group_input_006_1.outputs[23], group_018_1.inputs[4])
    node_tree1.links.new(group_input_006_1.outputs[35], group_018_1.inputs[5])
    node_tree1.links.new(group_input_006_1.outputs[47], group_018_1.inputs[6])
    node_tree1.links.new(group_input_006_1.outputs[59], group_018_1.inputs[7])
    node_tree1.links.new(group_input_006_1.outputs[71], group_018_1.inputs[8])
    node_tree1.links.new(group_input_007_1.outputs[6], group_002_1.inputs[0])
    node_tree1.links.new(group_input_007_1.outputs[14], group_002_1.inputs[1])
    node_tree1.links.new(group_input_007_1.outputs[15], group_002_1.inputs[2])
    node_tree1.links.new(group_input_007_1.outputs[16], group_002_1.inputs[3])
    node_tree1.links.new(group_input_008_1.outputs[18], group_004_1.inputs[0])
    node_tree1.links.new(group_input_008_1.outputs[26], group_004_1.inputs[1])
    node_tree1.links.new(group_input_008_1.outputs[27], group_004_1.inputs[2])
    node_tree1.links.new(group_input_008_1.outputs[28], group_004_1.inputs[3])
    node_tree1.links.new(group_input_009_1.outputs[30], group_008_1.inputs[0])
    node_tree1.links.new(group_input_009_1.outputs[38], group_008_1.inputs[1])
    node_tree1.links.new(group_input_009_1.outputs[39], group_008_1.inputs[2])
    node_tree1.links.new(group_input_009_1.outputs[40], group_008_1.inputs[3])
    node_tree1.links.new(group_input_010_1.outputs[42], group_010_1.inputs[0])
    node_tree1.links.new(group_input_010_1.outputs[50], group_010_1.inputs[1])
    node_tree1.links.new(group_input_010_1.outputs[51], group_010_1.inputs[2])
    node_tree1.links.new(group_input_010_1.outputs[52], group_010_1.inputs[3])
    node_tree1.links.new(group_input_011_1.outputs[54], group_011_1.inputs[0])
    node_tree1.links.new(group_input_011_1.outputs[62], group_011_1.inputs[1])
    node_tree1.links.new(group_input_011_1.outputs[63], group_011_1.inputs[2])
    node_tree1.links.new(group_input_011_1.outputs[64], group_011_1.inputs[3])
    node_tree1.links.new(group_input_012_1.outputs[66], group_012_1.inputs[0])
    node_tree1.links.new(group_input_012_1.outputs[74], group_012_1.inputs[1])
    node_tree1.links.new(group_input_012_1.outputs[75], group_012_1.inputs[2])
    node_tree1.links.new(group_input_012_1.outputs[76], group_012_1.inputs[3])
    node_tree1.links.new(group_input_013_1.outputs[90], group_015_1.inputs[0])
    node_tree1.links.new(group_input_013_1.outputs[98], group_015_1.inputs[1])
    node_tree1.links.new(group_input_013_1.outputs[99], group_015_1.inputs[2])
    node_tree1.links.new(group_input_013_1.outputs[100], group_015_1.inputs[3])
    node_tree1.links.new(group_input_014_1.outputs[78], group_016_1.inputs[0])
    node_tree1.links.new(group_input_014_1.outputs[86], group_016_1.inputs[1])
    node_tree1.links.new(group_input_014_1.outputs[87], group_016_1.inputs[2])
    node_tree1.links.new(group_input_014_1.outputs[88], group_016_1.inputs[3])
    node_tree1.links.new(group_input_015_1.outputs[0], group_009_1.inputs[0])
    node_tree1.links.new(group_input_015_1.outputs[1], group_009_1.inputs[1])
    node_tree1.links.new(group_input_015_1.outputs[2], group_009_1.inputs[2])
    node_tree1.links.new(group_input_015_1.outputs[7], group_009_1.inputs[3])
    node_tree1.links.new(group_input_015_1.outputs[19], group_009_1.inputs[4])
    node_tree1.links.new(group_input_015_1.outputs[31], group_009_1.inputs[5])
    node_tree1.links.new(group_input_015_1.outputs[43], group_009_1.inputs[6])
    node_tree1.links.new(group_input_015_1.outputs[55], group_009_1.inputs[7])
    node_tree1.links.new(group_input_015_1.outputs[67], group_009_1.inputs[8])
    node_tree1.links.new(group_input_015_1.outputs[79], group_009_1.inputs[9])
    node_tree1.links.new(group_input_015_1.outputs[91], group_009_1.inputs[10])
    node_tree1.links.new(group_input_016_1.outputs[0], group_001_1.inputs[0])
    node_tree1.links.new(group_input_016_1.outputs[1], group_001_1.inputs[1])
    node_tree1.links.new(group_input_016_1.outputs[2], group_001_1.inputs[2])
    node_tree1.links.new(group_input_016_1.outputs[12], group_001_1.inputs[3])
    node_tree1.links.new(group_input_016_1.outputs[24], group_001_1.inputs[4])
    node_tree1.links.new(group_input_016_1.outputs[36], group_001_1.inputs[5])
    node_tree1.links.new(group_input_016_1.outputs[48], group_001_1.inputs[6])
    node_tree1.links.new(group_input_016_1.outputs[60], group_001_1.inputs[7])
    node_tree1.links.new(group_input_016_1.outputs[72], group_001_1.inputs[8])
    node_tree1.links.new(group_input_016_1.outputs[96], group_001_1.inputs[10])
    node_tree1.links.new(group_input_016_1.outputs[84], group_001_1.inputs[9])
    node_tree1.links.new(group_input_017_1.outputs[0], group_1.inputs[0])
    node_tree1.links.new(group_input_017_1.outputs[1], group_1.inputs[1])
    node_tree1.links.new(group_input_017_1.outputs[2], group_1.inputs[2])
    node_tree1.links.new(group_input_018_1.outputs[0], group_003_1.inputs[0])
    node_tree1.links.new(group_input_018_1.outputs[1], group_003_1.inputs[1])
    node_tree1.links.new(group_input_018_1.outputs[2], group_003_1.inputs[2])
    node_tree1.links.new(group_input_018_1.outputs[8], group_003_1.inputs[4])
    node_tree1.links.new(group_input_018_1.outputs[20], group_003_1.inputs[5])
    node_tree1.links.new(group_input_018_1.outputs[32], group_003_1.inputs[6])
    node_tree1.links.new(group_input_018_1.outputs[44], group_003_1.inputs[7])
    node_tree1.links.new(group_input_018_1.outputs[56], group_003_1.inputs[8])
    node_tree1.links.new(group_input_018_1.outputs[68], group_003_1.inputs[9])
    node_tree1.links.new(group_input_018_1.outputs[92], group_003_1.inputs[11])
    node_tree1.links.new(group_input_018_1.outputs[80], group_003_1.inputs[10])
    node_tree1.links.new(group_003_1.outputs[0], normal_map_1.inputs[1])
    node_tree1.links.new(group_1.outputs[0], mix_002_1.inputs[1])
    node_tree1.links.new(math_001_1.outputs[0], mix_002_1.inputs[2])
    node_tree1.links.new(mix_002_1.outputs[0], group_output_1.inputs[1])
    node_tree1.links.new(group_1.outputs[1], principled_bsdf_1.inputs[19])
    node_tree1.links.new(group_013_1.outputs[0], principled_bsdf_1.inputs[20])
    node_tree1.links.new(group_1.outputs[1], mix_003_1.inputs[1])
    node_tree1.links.new(group_013_1.outputs[0], mix_003_1.inputs[2])
    node_tree1.links.new(mix_003_1.outputs[0], group_output_1.inputs[4])
    node_tree1.links.new(group_1.outputs[0], principled_bsdf_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[1], group_013_1.inputs[1])
    node_tree1.links.new(group_input_1.outputs[0], group_013_1.inputs[0])
    node_tree1.links.new(group_input_1.outputs[85], group_013_1.inputs[9])
    node_tree1.links.new(group_input_1.outputs[97], group_013_1.inputs[10])
    node_tree1.links.new(group_input_005_1.outputs[0], group_014_1.inputs[0])
    node_tree1.links.new(group_input_005_1.outputs[89], group_014_1.inputs[9])
    node_tree1.links.new(group_input_005_1.outputs[101], group_014_1.inputs[10])
    node_tree1.links.new(group_input_004_1.outputs[82], group_017_1.inputs[9])
    node_tree1.links.new(group_input_004_1.outputs[94], group_017_1.inputs[10])
    node_tree1.links.new(group_input_004_1.outputs[0], group_017_1.inputs[0])
    node_tree1.links.new(group_input_006_1.outputs[0], group_018_1.inputs[0])
    node_tree1.links.new(group_input_006_1.outputs[83], group_018_1.inputs[9])
    node_tree1.links.new(group_input_006_1.outputs[95], group_018_1.inputs[10])
    node_tree1.links.new(separate_rgb_1.outputs[1], colorramp_1.inputs[0])
    node_tree1.links.new(group_input_018_1.outputs[3], group_003_1.inputs[3])
    node_tree1.links.new(group_input_019_1.outputs[1], group_020_1.inputs[1])
    node_tree1.links.new(group_input_019_1.outputs[2], group_020_1.inputs[2])
    node_tree1.links.new(group_input_019_1.outputs[0], group_020_1.inputs[0])
    node_tree1.links.new(group_input_019_1.outputs[9], group_020_1.inputs[3])
    node_tree1.links.new(group_input_019_1.outputs[21], group_020_1.inputs[4])
    node_tree1.links.new(group_input_019_1.outputs[33], group_020_1.inputs[5])
    node_tree1.links.new(group_input_019_1.outputs[45], group_020_1.inputs[6])
    node_tree1.links.new(group_input_019_1.outputs[57], group_020_1.inputs[7])
    node_tree1.links.new(group_input_019_1.outputs[69], group_020_1.inputs[8])
    node_tree1.links.new(group_input_019_1.outputs[81], group_020_1.inputs[9])
    node_tree1.links.new(group_input_019_1.outputs[93], group_020_1.inputs[10])
    node_tree1.links.new(group_020_1.outputs[0], group_009_1.inputs[12])
    node_tree1.links.new(group_020_1.outputs[0], group_001_1.inputs[12])
    node_tree1.links.new(colorramp_1.outputs[0], bump_1.inputs[2])
    node_tree1.links.new(group_020_1.outputs[0], bump_1.inputs[0])
    node_tree1.links.new(group_020_1.outputs[0], group_1.inputs[14])
    node_tree1.links.new(group_input_017_1.outputs[4], group_1.inputs[12])
    node_tree1.links.new(group_input_017_1.outputs[5], group_1.inputs[13])
    node_tree1.links.new(group_input_016_1.outputs[4], group_001_1.inputs[13])
    node_tree1.links.new(group_input_016_1.outputs[5], group_001_1.inputs[14])
    node_tree1.links.new(group_input_015_1.outputs[4], group_009_1.inputs[13])
    node_tree1.links.new(group_input_015_1.outputs[5], group_009_1.inputs[14])
    node_tree1.links.new(group_input_018_1.outputs[4], group_003_1.inputs[12])
    node_tree1.links.new(group_input_018_1.outputs[5], group_003_1.inputs[13])
    node_tree1.links.new(group_input_1.outputs[4], group_013_1.inputs[11])
    node_tree1.links.new(group_input_1.outputs[5], group_013_1.inputs[12])
    node_tree1.links.new(group_input_015_1.outputs[0], separate_rgb_1.inputs[0])

group_0 = node_tree0.nodes.new('ShaderNodeGroup')
if hasattr(group_0, 'node_tree'):
    group_0.node_tree = bpy.data.node_groups.get('Halo Infinite Shader 2.2 by Average Trap Enthusiast')
if hasattr(group_0, 'color'):
    group_0.color = (0.07409276813268661, 0.11927720159292221, 0.04804673045873642)
if hasattr(group_0, 'hide'):
    group_0.hide = False
if hasattr(group_0, 'location'):
    group_0.location = (-108.94000244140625, 135.6884765625)
if hasattr(group_0, 'mute'):
    group_0.mute = False
if hasattr(group_0, 'name'):
    group_0.name = 'Group'
if hasattr(group_0, 'use_custom_color'):
    group_0.use_custom_color = True
if hasattr(group_0, 'width'):
    group_0.width = 342.14739990234375
if hasattr(group_0.inputs[0], 'default_value'):
    group_0.inputs[0].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[0], 'display_shape'):
    group_0.inputs[0].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[0], 'enabled'):
    group_0.inputs[0].enabled = True
if hasattr(group_0.inputs[0], 'hide'):
    group_0.inputs[0].hide = False
if hasattr(group_0.inputs[0], 'hide_value'):
    group_0.inputs[0].hide_value = False
if hasattr(group_0.inputs[0], 'name'):
    group_0.inputs[0].name = 'ASG'
if hasattr(group_0.inputs[0], 'show_expanded'):
    group_0.inputs[0].show_expanded = False
if hasattr(group_0.inputs[1], 'default_value'):
    group_0.inputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[1], 'display_shape'):
    group_0.inputs[1].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[1], 'enabled'):
    group_0.inputs[1].enabled = True
if hasattr(group_0.inputs[1], 'hide'):
    group_0.inputs[1].hide = False
if hasattr(group_0.inputs[1], 'hide_value'):
    group_0.inputs[1].hide_value = False
if hasattr(group_0.inputs[1], 'name'):
    group_0.inputs[1].name = 'Mask_0'
if hasattr(group_0.inputs[1], 'show_expanded'):
    group_0.inputs[1].show_expanded = False
if hasattr(group_0.inputs[2], 'default_value'):
    group_0.inputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[2], 'display_shape'):
    group_0.inputs[2].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[2], 'enabled'):
    group_0.inputs[2].enabled = True
if hasattr(group_0.inputs[2], 'hide'):
    group_0.inputs[2].hide = False
if hasattr(group_0.inputs[2], 'hide_value'):
    group_0.inputs[2].hide_value = False
if hasattr(group_0.inputs[2], 'name'):
    group_0.inputs[2].name = 'Mask_1'
if hasattr(group_0.inputs[2], 'show_expanded'):
    group_0.inputs[2].show_expanded = False
if hasattr(group_0.inputs[3], 'default_value'):
    group_0.inputs[3].default_value = (1.0, 1.0, 1.0, 1.0)
if hasattr(group_0.inputs[3], 'display_shape'):
    group_0.inputs[3].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[3], 'enabled'):
    group_0.inputs[3].enabled = True
if hasattr(group_0.inputs[3], 'hide'):
    group_0.inputs[3].hide = False
if hasattr(group_0.inputs[3], 'hide_value'):
    group_0.inputs[3].hide_value = False
if hasattr(group_0.inputs[3], 'name'):
    group_0.inputs[3].name = 'Normal'
if hasattr(group_0.inputs[3], 'show_expanded'):
    group_0.inputs[3].show_expanded = False
if hasattr(group_0.inputs[4], 'default_value'):
    group_0.inputs[4].default_value = GrimeAmount
if hasattr(group_0.inputs[4], 'display_shape'):
    group_0.inputs[4].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[4], 'enabled'):
    group_0.inputs[4].enabled = True
if hasattr(group_0.inputs[4], 'hide'):
    group_0.inputs[4].hide = False
if hasattr(group_0.inputs[4], 'hide_value'):
    group_0.inputs[4].hide_value = False
if hasattr(group_0.inputs[4], 'name'):
    group_0.inputs[4].name = 'Grime Amount'
if hasattr(group_0.inputs[4], 'show_expanded'):
    group_0.inputs[4].show_expanded = False
if hasattr(group_0.inputs[5], 'default_value'):
    group_0.inputs[5].default_value = DustAmount
if hasattr(group_0.inputs[5], 'display_shape'):
    group_0.inputs[5].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[5], 'enabled'):
    group_0.inputs[5].enabled = True
if hasattr(group_0.inputs[5], 'hide'):
    group_0.inputs[5].hide = False
if hasattr(group_0.inputs[5], 'hide_value'):
    group_0.inputs[5].hide_value = False
if hasattr(group_0.inputs[5], 'name'):
    group_0.inputs[5].name = 'Dust Amount'
if hasattr(group_0.inputs[5], 'show_expanded'):
    group_0.inputs[5].show_expanded = False
if hasattr(group_0.inputs[6], 'default_value'):
    group_0.inputs[6].default_value = 0.0
if hasattr(group_0.inputs[6], 'display_shape'):
    group_0.inputs[6].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[6], 'enabled'):
    group_0.inputs[6].enabled = True
if hasattr(group_0.inputs[6], 'hide'):
    group_0.inputs[6].hide = False
if hasattr(group_0.inputs[6], 'hide_value'):
    group_0.inputs[6].hide_value = False
if hasattr(group_0.inputs[6], 'name'):
    group_0.inputs[6].name = 'Zone 1 Gradient Out'
if hasattr(group_0.inputs[6], 'show_expanded'):
    group_0.inputs[6].show_expanded = False
if hasattr(group_0.inputs[7], 'default_value'):
    group_0.inputs[7].default_value = 0.0
if hasattr(group_0.inputs[7], 'display_shape'):
    group_0.inputs[7].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[7], 'enabled'):
    group_0.inputs[7].enabled = True
if hasattr(group_0.inputs[7], 'hide'):
    group_0.inputs[7].hide = False
if hasattr(group_0.inputs[7], 'hide_value'):
    group_0.inputs[7].hide_value = False
if hasattr(group_0.inputs[7], 'name'):
    group_0.inputs[7].name = 'Zone 1 Rough Out'
if hasattr(group_0.inputs[7], 'show_expanded'):
    group_0.inputs[7].show_expanded = False
if hasattr(group_0.inputs[8], 'default_value'):
    group_0.inputs[8].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[8], 'display_shape'):
    group_0.inputs[8].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[8], 'enabled'):
    group_0.inputs[8].enabled = True
if hasattr(group_0.inputs[8], 'hide'):
    group_0.inputs[8].hide = False
if hasattr(group_0.inputs[8], 'hide_value'):
    group_0.inputs[8].hide_value = False
if hasattr(group_0.inputs[8], 'name'):
    group_0.inputs[8].name = 'Zone 1 Norm Out'
if hasattr(group_0.inputs[8], 'show_expanded'):
    group_0.inputs[8].show_expanded = False
if hasattr(group_0.inputs[9], 'default_value'):
    group_0.inputs[9].default_value = Zone1_ScratchAmount
if hasattr(group_0.inputs[9], 'display_shape'):
    group_0.inputs[9].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[9], 'enabled'):
    group_0.inputs[9].enabled = True
if hasattr(group_0.inputs[9], 'hide'):
    group_0.inputs[9].hide = False
if hasattr(group_0.inputs[9], 'hide_value'):
    group_0.inputs[9].hide_value = False
if hasattr(group_0.inputs[9], 'name'):
    group_0.inputs[9].name = 'Zone 1 Scratch Amount'
if hasattr(group_0.inputs[9], 'show_expanded'):
    group_0.inputs[9].show_expanded = False
if hasattr(group_0.inputs[10], 'default_value'):
    group_0.inputs[10].default_value = Zone1_ScratchMetallic
if hasattr(group_0.inputs[10], 'display_shape'):
    group_0.inputs[10].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[10], 'enabled'):
    group_0.inputs[10].enabled = True
if hasattr(group_0.inputs[10], 'hide'):
    group_0.inputs[10].hide = False
if hasattr(group_0.inputs[10], 'hide_value'):
    group_0.inputs[10].hide_value = False
if hasattr(group_0.inputs[10], 'name'):
    group_0.inputs[10].name = 'Zone 1 Scratch Metallic'
if hasattr(group_0.inputs[10], 'show_expanded'):
    group_0.inputs[10].show_expanded = False
if hasattr(group_0.inputs[11], 'default_value'):
    group_0.inputs[11].default_value = Zone1_ScratchRoughness
if hasattr(group_0.inputs[11], 'display_shape'):
    group_0.inputs[11].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[11], 'enabled'):
    group_0.inputs[11].enabled = True
if hasattr(group_0.inputs[11], 'hide'):
    group_0.inputs[11].hide = False
if hasattr(group_0.inputs[11], 'hide_value'):
    group_0.inputs[11].hide_value = False
if hasattr(group_0.inputs[11], 'name'):
    group_0.inputs[11].name = 'Zone 1 Scratch Roughness'
if hasattr(group_0.inputs[11], 'show_expanded'):
    group_0.inputs[11].show_expanded = False
if hasattr(group_0.inputs[12], 'default_value'):
    group_0.inputs[12].default_value = Zone1_Metallic
if hasattr(group_0.inputs[12], 'display_shape'):
    group_0.inputs[12].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[12], 'enabled'):
    group_0.inputs[12].enabled = True
if hasattr(group_0.inputs[12], 'hide'):
    group_0.inputs[12].hide = False
if hasattr(group_0.inputs[12], 'hide_value'):
    group_0.inputs[12].hide_value = False
if hasattr(group_0.inputs[12], 'name'):
    group_0.inputs[12].name = 'Zone 1 Metallic'
if hasattr(group_0.inputs[12], 'show_expanded'):
    group_0.inputs[12].show_expanded = False
if hasattr(group_0.inputs[13], 'default_value'):
    group_0.inputs[13].default_value = Zone1_EmissiveAmount
if hasattr(group_0.inputs[13], 'display_shape'):
    group_0.inputs[13].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[13], 'enabled'):
    group_0.inputs[13].enabled = True
if hasattr(group_0.inputs[13], 'hide'):
    group_0.inputs[13].hide = False
if hasattr(group_0.inputs[13], 'hide_value'):
    group_0.inputs[13].hide_value = False
if hasattr(group_0.inputs[13], 'name'):
    group_0.inputs[13].name = 'Zone 1 Emmisive Amount'
if hasattr(group_0.inputs[13], 'show_expanded'):
    group_0.inputs[13].show_expanded = False
if hasattr(group_0.inputs[14], 'default_value'):
    group_0.inputs[14].default_value = Zone1_TopColor
if hasattr(group_0.inputs[14], 'display_shape'):
    group_0.inputs[14].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[14], 'enabled'):
    group_0.inputs[14].enabled = True
if hasattr(group_0.inputs[14], 'hide'):
    group_0.inputs[14].hide = False
if hasattr(group_0.inputs[14], 'hide_value'):
    group_0.inputs[14].hide_value = False
if hasattr(group_0.inputs[14], 'name'):
    group_0.inputs[14].name = 'Zone 1 TopColor'
if hasattr(group_0.inputs[14], 'show_expanded'):
    group_0.inputs[14].show_expanded = False
if hasattr(group_0.inputs[15], 'default_value'):
    group_0.inputs[15].default_value = Zone1_MidColor
if hasattr(group_0.inputs[15], 'display_shape'):
    group_0.inputs[15].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[15], 'enabled'):
    group_0.inputs[15].enabled = True
if hasattr(group_0.inputs[15], 'hide'):
    group_0.inputs[15].hide = False
if hasattr(group_0.inputs[15], 'hide_value'):
    group_0.inputs[15].hide_value = False
if hasattr(group_0.inputs[15], 'name'):
    group_0.inputs[15].name = 'Zone 1 MidColor'
if hasattr(group_0.inputs[15], 'show_expanded'):
    group_0.inputs[15].show_expanded = False
if hasattr(group_0.inputs[16], 'default_value'):
    group_0.inputs[16].default_value = Zone1_BotColor
if hasattr(group_0.inputs[16], 'display_shape'):
    group_0.inputs[16].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[16], 'enabled'):
    group_0.inputs[16].enabled = True
if hasattr(group_0.inputs[16], 'hide'):
    group_0.inputs[16].hide = False
if hasattr(group_0.inputs[16], 'hide_value'):
    group_0.inputs[16].hide_value = False
if hasattr(group_0.inputs[16], 'name'):
    group_0.inputs[16].name = 'Zone 1 BotColor'
if hasattr(group_0.inputs[16], 'show_expanded'):
    group_0.inputs[16].show_expanded = False
if hasattr(group_0.inputs[17], 'default_value'):
    group_0.inputs[17].default_value = Zone1_ScratchColor
if hasattr(group_0.inputs[17], 'display_shape'):
    group_0.inputs[17].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[17], 'enabled'):
    group_0.inputs[17].enabled = True
if hasattr(group_0.inputs[17], 'hide'):
    group_0.inputs[17].hide = False
if hasattr(group_0.inputs[17], 'hide_value'):
    group_0.inputs[17].hide_value = False
if hasattr(group_0.inputs[17], 'name'):
    group_0.inputs[17].name = 'Zone 1 ScratchColor'
if hasattr(group_0.inputs[17], 'show_expanded'):
    group_0.inputs[17].show_expanded = False
if hasattr(group_0.inputs[18], 'default_value'):
    group_0.inputs[18].default_value = 0.0
if hasattr(group_0.inputs[18], 'display_shape'):
    group_0.inputs[18].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[18], 'enabled'):
    group_0.inputs[18].enabled = True
if hasattr(group_0.inputs[18], 'hide'):
    group_0.inputs[18].hide = False
if hasattr(group_0.inputs[18], 'hide_value'):
    group_0.inputs[18].hide_value = False
if hasattr(group_0.inputs[18], 'name'):
    group_0.inputs[18].name = 'Zone 2 Gradient Out'
if hasattr(group_0.inputs[18], 'show_expanded'):
    group_0.inputs[18].show_expanded = False
if hasattr(group_0.inputs[19], 'default_value'):
    group_0.inputs[19].default_value = 0.0
if hasattr(group_0.inputs[19], 'display_shape'):
    group_0.inputs[19].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[19], 'enabled'):
    group_0.inputs[19].enabled = True
if hasattr(group_0.inputs[19], 'hide'):
    group_0.inputs[19].hide = False
if hasattr(group_0.inputs[19], 'hide_value'):
    group_0.inputs[19].hide_value = False
if hasattr(group_0.inputs[19], 'name'):
    group_0.inputs[19].name = 'Zone 2 Rough Out'
if hasattr(group_0.inputs[19], 'show_expanded'):
    group_0.inputs[19].show_expanded = False
if hasattr(group_0.inputs[20], 'default_value'):
    group_0.inputs[20].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[20], 'display_shape'):
    group_0.inputs[20].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[20], 'enabled'):
    group_0.inputs[20].enabled = True
if hasattr(group_0.inputs[20], 'hide'):
    group_0.inputs[20].hide = False
if hasattr(group_0.inputs[20], 'hide_value'):
    group_0.inputs[20].hide_value = False
if hasattr(group_0.inputs[20], 'name'):
    group_0.inputs[20].name = 'Zone 2 Norm Out'
if hasattr(group_0.inputs[20], 'show_expanded'):
    group_0.inputs[20].show_expanded = False
if hasattr(group_0.inputs[21], 'default_value'):
    group_0.inputs[21].default_value = Zone2_ScratchAmount
if hasattr(group_0.inputs[21], 'display_shape'):
    group_0.inputs[21].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[21], 'enabled'):
    group_0.inputs[21].enabled = True
if hasattr(group_0.inputs[21], 'hide'):
    group_0.inputs[21].hide = False
if hasattr(group_0.inputs[21], 'hide_value'):
    group_0.inputs[21].hide_value = False
if hasattr(group_0.inputs[21], 'name'):
    group_0.inputs[21].name = 'Zone 2 Scratch Amount'
if hasattr(group_0.inputs[21], 'show_expanded'):
    group_0.inputs[21].show_expanded = False
if hasattr(group_0.inputs[22], 'default_value'):
    group_0.inputs[22].default_value = Zone2_ScratchMetallic
if hasattr(group_0.inputs[22], 'display_shape'):
    group_0.inputs[22].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[22], 'enabled'):
    group_0.inputs[22].enabled = True
if hasattr(group_0.inputs[22], 'hide'):
    group_0.inputs[22].hide = False
if hasattr(group_0.inputs[22], 'hide_value'):
    group_0.inputs[22].hide_value = False
if hasattr(group_0.inputs[22], 'name'):
    group_0.inputs[22].name = 'Zone 2 Scratch Metallic'
if hasattr(group_0.inputs[22], 'show_expanded'):
    group_0.inputs[22].show_expanded = False
if hasattr(group_0.inputs[23], 'default_value'):
    group_0.inputs[23].default_value = Zone2_ScratchRoughness
if hasattr(group_0.inputs[23], 'display_shape'):
    group_0.inputs[23].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[23], 'enabled'):
    group_0.inputs[23].enabled = True
if hasattr(group_0.inputs[23], 'hide'):
    group_0.inputs[23].hide = False
if hasattr(group_0.inputs[23], 'hide_value'):
    group_0.inputs[23].hide_value = False
if hasattr(group_0.inputs[23], 'name'):
    group_0.inputs[23].name = 'Zone 2 Scratch Roughness'
if hasattr(group_0.inputs[23], 'show_expanded'):
    group_0.inputs[23].show_expanded = False
if hasattr(group_0.inputs[24], 'default_value'):
    group_0.inputs[24].default_value = Zone2_Metallic
if hasattr(group_0.inputs[24], 'display_shape'):
    group_0.inputs[24].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[24], 'enabled'):
    group_0.inputs[24].enabled = True
if hasattr(group_0.inputs[24], 'hide'):
    group_0.inputs[24].hide = False
if hasattr(group_0.inputs[24], 'hide_value'):
    group_0.inputs[24].hide_value = False
if hasattr(group_0.inputs[24], 'name'):
    group_0.inputs[24].name = 'Zone 2 Metallic'
if hasattr(group_0.inputs[24], 'show_expanded'):
    group_0.inputs[24].show_expanded = False
if hasattr(group_0.inputs[25], 'default_value'):
    group_0.inputs[25].default_value = Zone2_EmissiveAmount
if hasattr(group_0.inputs[25], 'display_shape'):
    group_0.inputs[25].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[25], 'enabled'):
    group_0.inputs[25].enabled = True
if hasattr(group_0.inputs[25], 'hide'):
    group_0.inputs[25].hide = False
if hasattr(group_0.inputs[25], 'hide_value'):
    group_0.inputs[25].hide_value = False
if hasattr(group_0.inputs[25], 'name'):
    group_0.inputs[25].name = 'Zone 2 Emmisive Amount'
if hasattr(group_0.inputs[25], 'show_expanded'):
    group_0.inputs[25].show_expanded = False
if hasattr(group_0.inputs[26], 'default_value'):
    group_0.inputs[26].default_value = Zone2_TopColor
if hasattr(group_0.inputs[26], 'display_shape'):
    group_0.inputs[26].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[26], 'enabled'):
    group_0.inputs[26].enabled = True
if hasattr(group_0.inputs[26], 'hide'):
    group_0.inputs[26].hide = False
if hasattr(group_0.inputs[26], 'hide_value'):
    group_0.inputs[26].hide_value = False
if hasattr(group_0.inputs[26], 'name'):
    group_0.inputs[26].name = 'Zone 2 Top'
if hasattr(group_0.inputs[26], 'show_expanded'):
    group_0.inputs[26].show_expanded = False
if hasattr(group_0.inputs[27], 'default_value'):
    group_0.inputs[27].default_value = Zone2_MidColor
if hasattr(group_0.inputs[27], 'display_shape'):
    group_0.inputs[27].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[27], 'enabled'):
    group_0.inputs[27].enabled = True
if hasattr(group_0.inputs[27], 'hide'):
    group_0.inputs[27].hide = False
if hasattr(group_0.inputs[27], 'hide_value'):
    group_0.inputs[27].hide_value = False
if hasattr(group_0.inputs[27], 'name'):
    group_0.inputs[27].name = 'Zone 2 Mid'
if hasattr(group_0.inputs[27], 'show_expanded'):
    group_0.inputs[27].show_expanded = False
if hasattr(group_0.inputs[28], 'default_value'):
    group_0.inputs[28].default_value = Zone2_BotColor
if hasattr(group_0.inputs[28], 'display_shape'):
    group_0.inputs[28].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[28], 'enabled'):
    group_0.inputs[28].enabled = True
if hasattr(group_0.inputs[28], 'hide'):
    group_0.inputs[28].hide = False
if hasattr(group_0.inputs[28], 'hide_value'):
    group_0.inputs[28].hide_value = False
if hasattr(group_0.inputs[28], 'name'):
    group_0.inputs[28].name = 'Zone 2 Bot'
if hasattr(group_0.inputs[28], 'show_expanded'):
    group_0.inputs[28].show_expanded = False
if hasattr(group_0.inputs[29], 'default_value'):
    group_0.inputs[29].default_value = Zone2_ScratchColor
if hasattr(group_0.inputs[29], 'display_shape'):
    group_0.inputs[29].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[29], 'enabled'):
    group_0.inputs[29].enabled = True
if hasattr(group_0.inputs[29], 'hide'):
    group_0.inputs[29].hide = False
if hasattr(group_0.inputs[29], 'hide_value'):
    group_0.inputs[29].hide_value = False
if hasattr(group_0.inputs[29], 'name'):
    group_0.inputs[29].name = 'Zone 2 ScratchColor'
if hasattr(group_0.inputs[29], 'show_expanded'):
    group_0.inputs[29].show_expanded = False
if hasattr(group_0.inputs[30], 'default_value'):
    group_0.inputs[30].default_value = 0.0
if hasattr(group_0.inputs[30], 'display_shape'):
    group_0.inputs[30].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[30], 'enabled'):
    group_0.inputs[30].enabled = True
if hasattr(group_0.inputs[30], 'hide'):
    group_0.inputs[30].hide = False
if hasattr(group_0.inputs[30], 'hide_value'):
    group_0.inputs[30].hide_value = False
if hasattr(group_0.inputs[30], 'name'):
    group_0.inputs[30].name = 'Zone 3 Gradient Out'
if hasattr(group_0.inputs[30], 'show_expanded'):
    group_0.inputs[30].show_expanded = False
if hasattr(group_0.inputs[31], 'default_value'):
    group_0.inputs[31].default_value = 0.0
if hasattr(group_0.inputs[31], 'display_shape'):
    group_0.inputs[31].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[31], 'enabled'):
    group_0.inputs[31].enabled = True
if hasattr(group_0.inputs[31], 'hide'):
    group_0.inputs[31].hide = False
if hasattr(group_0.inputs[31], 'hide_value'):
    group_0.inputs[31].hide_value = False
if hasattr(group_0.inputs[31], 'name'):
    group_0.inputs[31].name = 'Zone 3 Rough Out'
if hasattr(group_0.inputs[31], 'show_expanded'):
    group_0.inputs[31].show_expanded = False
if hasattr(group_0.inputs[32], 'default_value'):
    group_0.inputs[32].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[32], 'display_shape'):
    group_0.inputs[32].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[32], 'enabled'):
    group_0.inputs[32].enabled = True
if hasattr(group_0.inputs[32], 'hide'):
    group_0.inputs[32].hide = False
if hasattr(group_0.inputs[32], 'hide_value'):
    group_0.inputs[32].hide_value = False
if hasattr(group_0.inputs[32], 'name'):
    group_0.inputs[32].name = 'Zone 3 Norm Out'
if hasattr(group_0.inputs[32], 'show_expanded'):
    group_0.inputs[32].show_expanded = False
if hasattr(group_0.inputs[33], 'default_value'):
    group_0.inputs[33].default_value = Zone3_ScratchAmount
if hasattr(group_0.inputs[33], 'display_shape'):
    group_0.inputs[33].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[33], 'enabled'):
    group_0.inputs[33].enabled = True
if hasattr(group_0.inputs[33], 'hide'):
    group_0.inputs[33].hide = False
if hasattr(group_0.inputs[33], 'hide_value'):
    group_0.inputs[33].hide_value = False
if hasattr(group_0.inputs[33], 'name'):
    group_0.inputs[33].name = 'Zone 3 Scratch Amount'
if hasattr(group_0.inputs[33], 'show_expanded'):
    group_0.inputs[33].show_expanded = False
if hasattr(group_0.inputs[34], 'default_value'):
    group_0.inputs[34].default_value = Zone3_ScratchMetallic
if hasattr(group_0.inputs[34], 'display_shape'):
    group_0.inputs[34].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[34], 'enabled'):
    group_0.inputs[34].enabled = True
if hasattr(group_0.inputs[34], 'hide'):
    group_0.inputs[34].hide = False
if hasattr(group_0.inputs[34], 'hide_value'):
    group_0.inputs[34].hide_value = False
if hasattr(group_0.inputs[34], 'name'):
    group_0.inputs[34].name = 'Zone 3 Scratch Metallic'
if hasattr(group_0.inputs[34], 'show_expanded'):
    group_0.inputs[34].show_expanded = False
if hasattr(group_0.inputs[35], 'default_value'):
    group_0.inputs[35].default_value = Zone3_ScratchRoughness
if hasattr(group_0.inputs[35], 'display_shape'):
    group_0.inputs[35].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[35], 'enabled'):
    group_0.inputs[35].enabled = True
if hasattr(group_0.inputs[35], 'hide'):
    group_0.inputs[35].hide = False
if hasattr(group_0.inputs[35], 'hide_value'):
    group_0.inputs[35].hide_value = False
if hasattr(group_0.inputs[35], 'name'):
    group_0.inputs[35].name = 'Zone 3 Scratch Roughness'
if hasattr(group_0.inputs[35], 'show_expanded'):
    group_0.inputs[35].show_expanded = False
if hasattr(group_0.inputs[36], 'default_value'):
    group_0.inputs[36].default_value = Zone3_Metallic
if hasattr(group_0.inputs[36], 'display_shape'):
    group_0.inputs[36].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[36], 'enabled'):
    group_0.inputs[36].enabled = True
if hasattr(group_0.inputs[36], 'hide'):
    group_0.inputs[36].hide = False
if hasattr(group_0.inputs[36], 'hide_value'):
    group_0.inputs[36].hide_value = False
if hasattr(group_0.inputs[36], 'name'):
    group_0.inputs[36].name = 'Zone 3 Metallic'
if hasattr(group_0.inputs[36], 'show_expanded'):
    group_0.inputs[36].show_expanded = False
if hasattr(group_0.inputs[37], 'default_value'):
    group_0.inputs[37].default_value = Zone3_EmissiveAmount
if hasattr(group_0.inputs[37], 'display_shape'):
    group_0.inputs[37].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[37], 'enabled'):
    group_0.inputs[37].enabled = True
if hasattr(group_0.inputs[37], 'hide'):
    group_0.inputs[37].hide = False
if hasattr(group_0.inputs[37], 'hide_value'):
    group_0.inputs[37].hide_value = False
if hasattr(group_0.inputs[37], 'name'):
    group_0.inputs[37].name = 'Zone 3 Emmisive Amount'
if hasattr(group_0.inputs[37], 'show_expanded'):
    group_0.inputs[37].show_expanded = False
if hasattr(group_0.inputs[38], 'default_value'):
    group_0.inputs[38].default_value = Zone3_TopColor
if hasattr(group_0.inputs[38], 'display_shape'):
    group_0.inputs[38].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[38], 'enabled'):
    group_0.inputs[38].enabled = True
if hasattr(group_0.inputs[38], 'hide'):
    group_0.inputs[38].hide = False
if hasattr(group_0.inputs[38], 'hide_value'):
    group_0.inputs[38].hide_value = False
if hasattr(group_0.inputs[38], 'name'):
    group_0.inputs[38].name = 'Zone 3 Top'
if hasattr(group_0.inputs[38], 'show_expanded'):
    group_0.inputs[38].show_expanded = False
if hasattr(group_0.inputs[39], 'default_value'):
    group_0.inputs[39].default_value = Zone3_MidColor
if hasattr(group_0.inputs[39], 'display_shape'):
    group_0.inputs[39].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[39], 'enabled'):
    group_0.inputs[39].enabled = True
if hasattr(group_0.inputs[39], 'hide'):
    group_0.inputs[39].hide = False
if hasattr(group_0.inputs[39], 'hide_value'):
    group_0.inputs[39].hide_value = False
if hasattr(group_0.inputs[39], 'name'):
    group_0.inputs[39].name = 'Zone 3 Mid'
if hasattr(group_0.inputs[39], 'show_expanded'):
    group_0.inputs[39].show_expanded = False
if hasattr(group_0.inputs[40], 'default_value'):
    group_0.inputs[40].default_value = Zone3_BotColor
if hasattr(group_0.inputs[40], 'display_shape'):
    group_0.inputs[40].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[40], 'enabled'):
    group_0.inputs[40].enabled = True
if hasattr(group_0.inputs[40], 'hide'):
    group_0.inputs[40].hide = False
if hasattr(group_0.inputs[40], 'hide_value'):
    group_0.inputs[40].hide_value = False
if hasattr(group_0.inputs[40], 'name'):
    group_0.inputs[40].name = 'Zone 3 Bot'
if hasattr(group_0.inputs[40], 'show_expanded'):
    group_0.inputs[40].show_expanded = False
if hasattr(group_0.inputs[41], 'default_value'):
    group_0.inputs[41].default_value = Zone3_ScratchColor
if hasattr(group_0.inputs[41], 'display_shape'):
    group_0.inputs[41].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[41], 'enabled'):
    group_0.inputs[41].enabled = True
if hasattr(group_0.inputs[41], 'hide'):
    group_0.inputs[41].hide = False
if hasattr(group_0.inputs[41], 'hide_value'):
    group_0.inputs[41].hide_value = False
if hasattr(group_0.inputs[41], 'name'):
    group_0.inputs[41].name = 'Zone 3 ScratchColor'
if hasattr(group_0.inputs[41], 'show_expanded'):
    group_0.inputs[41].show_expanded = False
if hasattr(group_0.inputs[42], 'default_value'):
    group_0.inputs[42].default_value = 0.0
if hasattr(group_0.inputs[42], 'display_shape'):
    group_0.inputs[42].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[42], 'enabled'):
    group_0.inputs[42].enabled = True
if hasattr(group_0.inputs[42], 'hide'):
    group_0.inputs[42].hide = False
if hasattr(group_0.inputs[42], 'hide_value'):
    group_0.inputs[42].hide_value = False
if hasattr(group_0.inputs[42], 'name'):
    group_0.inputs[42].name = 'Zone 4 Gradient Out'
if hasattr(group_0.inputs[42], 'show_expanded'):
    group_0.inputs[42].show_expanded = False
if hasattr(group_0.inputs[43], 'default_value'):
    group_0.inputs[43].default_value = 0.0
if hasattr(group_0.inputs[43], 'display_shape'):
    group_0.inputs[43].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[43], 'enabled'):
    group_0.inputs[43].enabled = True
if hasattr(group_0.inputs[43], 'hide'):
    group_0.inputs[43].hide = False
if hasattr(group_0.inputs[43], 'hide_value'):
    group_0.inputs[43].hide_value = False
if hasattr(group_0.inputs[43], 'name'):
    group_0.inputs[43].name = 'Zone 4 Rough Out'
if hasattr(group_0.inputs[43], 'show_expanded'):
    group_0.inputs[43].show_expanded = False
if hasattr(group_0.inputs[44], 'default_value'):
    group_0.inputs[44].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[44], 'display_shape'):
    group_0.inputs[44].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[44], 'enabled'):
    group_0.inputs[44].enabled = True
if hasattr(group_0.inputs[44], 'hide'):
    group_0.inputs[44].hide = False
if hasattr(group_0.inputs[44], 'hide_value'):
    group_0.inputs[44].hide_value = False
if hasattr(group_0.inputs[44], 'name'):
    group_0.inputs[44].name = 'Zone 4 Norm Out'
if hasattr(group_0.inputs[44], 'show_expanded'):
    group_0.inputs[44].show_expanded = False
if hasattr(group_0.inputs[45], 'default_value'):
    group_0.inputs[45].default_value = Zone4_ScratchAmount
if hasattr(group_0.inputs[45], 'display_shape'):
    group_0.inputs[45].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[45], 'enabled'):
    group_0.inputs[45].enabled = True
if hasattr(group_0.inputs[45], 'hide'):
    group_0.inputs[45].hide = False
if hasattr(group_0.inputs[45], 'hide_value'):
    group_0.inputs[45].hide_value = False
if hasattr(group_0.inputs[45], 'name'):
    group_0.inputs[45].name = 'Zone 4 Scratch Amount'
if hasattr(group_0.inputs[45], 'show_expanded'):
    group_0.inputs[45].show_expanded = False
if hasattr(group_0.inputs[46], 'default_value'):
    group_0.inputs[46].default_value = Zone4_ScratchMetallic
if hasattr(group_0.inputs[46], 'display_shape'):
    group_0.inputs[46].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[46], 'enabled'):
    group_0.inputs[46].enabled = True
if hasattr(group_0.inputs[46], 'hide'):
    group_0.inputs[46].hide = False
if hasattr(group_0.inputs[46], 'hide_value'):
    group_0.inputs[46].hide_value = False
if hasattr(group_0.inputs[46], 'name'):
    group_0.inputs[46].name = 'Zone 4 Scratch Metallic'
if hasattr(group_0.inputs[46], 'show_expanded'):
    group_0.inputs[46].show_expanded = False
if hasattr(group_0.inputs[47], 'default_value'):
    group_0.inputs[47].default_value = Zone4_ScratchRoughness
if hasattr(group_0.inputs[47], 'display_shape'):
    group_0.inputs[47].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[47], 'enabled'):
    group_0.inputs[47].enabled = True
if hasattr(group_0.inputs[47], 'hide'):
    group_0.inputs[47].hide = False
if hasattr(group_0.inputs[47], 'hide_value'):
    group_0.inputs[47].hide_value = False
if hasattr(group_0.inputs[47], 'name'):
    group_0.inputs[47].name = 'Zone 4 Scratch Roughness'
if hasattr(group_0.inputs[47], 'show_expanded'):
    group_0.inputs[47].show_expanded = False
if hasattr(group_0.inputs[48], 'default_value'):
    group_0.inputs[48].default_value = Zone4_Metallic
if hasattr(group_0.inputs[48], 'display_shape'):
    group_0.inputs[48].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[48], 'enabled'):
    group_0.inputs[48].enabled = True
if hasattr(group_0.inputs[48], 'hide'):
    group_0.inputs[48].hide = False
if hasattr(group_0.inputs[48], 'hide_value'):
    group_0.inputs[48].hide_value = False
if hasattr(group_0.inputs[48], 'name'):
    group_0.inputs[48].name = 'Zone 4 Metallic'
if hasattr(group_0.inputs[48], 'show_expanded'):
    group_0.inputs[48].show_expanded = False
if hasattr(group_0.inputs[49], 'default_value'):
    group_0.inputs[49].default_value = Zone4_EmissiveAmount
if hasattr(group_0.inputs[49], 'display_shape'):
    group_0.inputs[49].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[49], 'enabled'):
    group_0.inputs[49].enabled = True
if hasattr(group_0.inputs[49], 'hide'):
    group_0.inputs[49].hide = False
if hasattr(group_0.inputs[49], 'hide_value'):
    group_0.inputs[49].hide_value = False
if hasattr(group_0.inputs[49], 'name'):
    group_0.inputs[49].name = 'Zone 4 Emmisive Amount'
if hasattr(group_0.inputs[49], 'show_expanded'):
    group_0.inputs[49].show_expanded = False
if hasattr(group_0.inputs[50], 'default_value'):
    group_0.inputs[50].default_value = Zone4_TopColor
if hasattr(group_0.inputs[50], 'display_shape'):
    group_0.inputs[50].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[50], 'enabled'):
    group_0.inputs[50].enabled = True
if hasattr(group_0.inputs[50], 'hide'):
    group_0.inputs[50].hide = False
if hasattr(group_0.inputs[50], 'hide_value'):
    group_0.inputs[50].hide_value = False
if hasattr(group_0.inputs[50], 'name'):
    group_0.inputs[50].name = 'Zone 4 Top'
if hasattr(group_0.inputs[50], 'show_expanded'):
    group_0.inputs[50].show_expanded = False
if hasattr(group_0.inputs[51], 'default_value'):
    group_0.inputs[51].default_value = Zone4_MidColor
if hasattr(group_0.inputs[51], 'display_shape'):
    group_0.inputs[51].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[51], 'enabled'):
    group_0.inputs[51].enabled = True
if hasattr(group_0.inputs[51], 'hide'):
    group_0.inputs[51].hide = False
if hasattr(group_0.inputs[51], 'hide_value'):
    group_0.inputs[51].hide_value = False
if hasattr(group_0.inputs[51], 'name'):
    group_0.inputs[51].name = 'Zone 4 Mid'
if hasattr(group_0.inputs[51], 'show_expanded'):
    group_0.inputs[51].show_expanded = False
if hasattr(group_0.inputs[52], 'default_value'):
    group_0.inputs[52].default_value = Zone4_BotColor
if hasattr(group_0.inputs[52], 'display_shape'):
    group_0.inputs[52].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[52], 'enabled'):
    group_0.inputs[52].enabled = True
if hasattr(group_0.inputs[52], 'hide'):
    group_0.inputs[52].hide = False
if hasattr(group_0.inputs[52], 'hide_value'):
    group_0.inputs[52].hide_value = False
if hasattr(group_0.inputs[52], 'name'):
    group_0.inputs[52].name = 'Zone 4 Bot'
if hasattr(group_0.inputs[52], 'show_expanded'):
    group_0.inputs[52].show_expanded = False
if hasattr(group_0.inputs[53], 'default_value'):
    group_0.inputs[53].default_value = Zone4_ScratchColor
if hasattr(group_0.inputs[53], 'display_shape'):
    group_0.inputs[53].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[53], 'enabled'):
    group_0.inputs[53].enabled = True
if hasattr(group_0.inputs[53], 'hide'):
    group_0.inputs[53].hide = False
if hasattr(group_0.inputs[53], 'hide_value'):
    group_0.inputs[53].hide_value = False
if hasattr(group_0.inputs[53], 'name'):
    group_0.inputs[53].name = 'Zone 4 Scratch Color'
if hasattr(group_0.inputs[53], 'show_expanded'):
    group_0.inputs[53].show_expanded = False
if hasattr(group_0.inputs[54], 'default_value'):
    group_0.inputs[54].default_value = 0.0
if hasattr(group_0.inputs[54], 'display_shape'):
    group_0.inputs[54].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[54], 'enabled'):
    group_0.inputs[54].enabled = True
if hasattr(group_0.inputs[54], 'hide'):
    group_0.inputs[54].hide = False
if hasattr(group_0.inputs[54], 'hide_value'):
    group_0.inputs[54].hide_value = False
if hasattr(group_0.inputs[54], 'name'):
    group_0.inputs[54].name = 'Zone 5 Gradient Out'
if hasattr(group_0.inputs[54], 'show_expanded'):
    group_0.inputs[54].show_expanded = False
if hasattr(group_0.inputs[55], 'default_value'):
    group_0.inputs[55].default_value = 0.0
if hasattr(group_0.inputs[55], 'display_shape'):
    group_0.inputs[55].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[55], 'enabled'):
    group_0.inputs[55].enabled = True
if hasattr(group_0.inputs[55], 'hide'):
    group_0.inputs[55].hide = False
if hasattr(group_0.inputs[55], 'hide_value'):
    group_0.inputs[55].hide_value = False
if hasattr(group_0.inputs[55], 'name'):
    group_0.inputs[55].name = 'Zone 5 Rough Out'
if hasattr(group_0.inputs[55], 'show_expanded'):
    group_0.inputs[55].show_expanded = False
if hasattr(group_0.inputs[56], 'default_value'):
    group_0.inputs[56].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[56], 'display_shape'):
    group_0.inputs[56].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[56], 'enabled'):
    group_0.inputs[56].enabled = True
if hasattr(group_0.inputs[56], 'hide'):
    group_0.inputs[56].hide = False
if hasattr(group_0.inputs[56], 'hide_value'):
    group_0.inputs[56].hide_value = False
if hasattr(group_0.inputs[56], 'name'):
    group_0.inputs[56].name = 'Zone 5 Norm Out'
if hasattr(group_0.inputs[56], 'show_expanded'):
    group_0.inputs[56].show_expanded = False
if hasattr(group_0.inputs[57], 'default_value'):
    group_0.inputs[57].default_value = Zone5_ScratchAmount
if hasattr(group_0.inputs[57], 'display_shape'):
    group_0.inputs[57].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[57], 'enabled'):
    group_0.inputs[57].enabled = True
if hasattr(group_0.inputs[57], 'hide'):
    group_0.inputs[57].hide = False
if hasattr(group_0.inputs[57], 'hide_value'):
    group_0.inputs[57].hide_value = False
if hasattr(group_0.inputs[57], 'name'):
    group_0.inputs[57].name = 'Zone 5 Scratch Amount'
if hasattr(group_0.inputs[57], 'show_expanded'):
    group_0.inputs[57].show_expanded = False
if hasattr(group_0.inputs[58], 'default_value'):
    group_0.inputs[58].default_value = Zone5_ScratchMetallic
if hasattr(group_0.inputs[58], 'display_shape'):
    group_0.inputs[58].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[58], 'enabled'):
    group_0.inputs[58].enabled = True
if hasattr(group_0.inputs[58], 'hide'):
    group_0.inputs[58].hide = False
if hasattr(group_0.inputs[58], 'hide_value'):
    group_0.inputs[58].hide_value = False
if hasattr(group_0.inputs[58], 'name'):
    group_0.inputs[58].name = 'Zone 5 Scratch Metallic'
if hasattr(group_0.inputs[58], 'show_expanded'):
    group_0.inputs[58].show_expanded = False
if hasattr(group_0.inputs[59], 'default_value'):
    group_0.inputs[59].default_value = Zone5_ScratchRoughness
if hasattr(group_0.inputs[59], 'display_shape'):
    group_0.inputs[59].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[59], 'enabled'):
    group_0.inputs[59].enabled = True
if hasattr(group_0.inputs[59], 'hide'):
    group_0.inputs[59].hide = False
if hasattr(group_0.inputs[59], 'hide_value'):
    group_0.inputs[59].hide_value = False
if hasattr(group_0.inputs[59], 'name'):
    group_0.inputs[59].name = 'Zone 5 Scratch Roughness'
if hasattr(group_0.inputs[59], 'show_expanded'):
    group_0.inputs[59].show_expanded = False
if hasattr(group_0.inputs[60], 'default_value'):
    group_0.inputs[60].default_value = Zone5_Metallic
if hasattr(group_0.inputs[60], 'display_shape'):
    group_0.inputs[60].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[60], 'enabled'):
    group_0.inputs[60].enabled = True
if hasattr(group_0.inputs[60], 'hide'):
    group_0.inputs[60].hide = False
if hasattr(group_0.inputs[60], 'hide_value'):
    group_0.inputs[60].hide_value = False
if hasattr(group_0.inputs[60], 'name'):
    group_0.inputs[60].name = 'Zone 5 Metallic'
if hasattr(group_0.inputs[60], 'show_expanded'):
    group_0.inputs[60].show_expanded = False
if hasattr(group_0.inputs[61], 'default_value'):
    group_0.inputs[61].default_value = Zone5_EmissiveAmount
if hasattr(group_0.inputs[61], 'display_shape'):
    group_0.inputs[61].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[61], 'enabled'):
    group_0.inputs[61].enabled = True
if hasattr(group_0.inputs[61], 'hide'):
    group_0.inputs[61].hide = False
if hasattr(group_0.inputs[61], 'hide_value'):
    group_0.inputs[61].hide_value = False
if hasattr(group_0.inputs[61], 'name'):
    group_0.inputs[61].name = 'Zone 5 Emmisive Amount'
if hasattr(group_0.inputs[61], 'show_expanded'):
    group_0.inputs[61].show_expanded = False
if hasattr(group_0.inputs[62], 'default_value'):
    group_0.inputs[62].default_value = Zone5_TopColor
if hasattr(group_0.inputs[62], 'display_shape'):
    group_0.inputs[62].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[62], 'enabled'):
    group_0.inputs[62].enabled = True
if hasattr(group_0.inputs[62], 'hide'):
    group_0.inputs[62].hide = False
if hasattr(group_0.inputs[62], 'hide_value'):
    group_0.inputs[62].hide_value = False
if hasattr(group_0.inputs[62], 'name'):
    group_0.inputs[62].name = 'Zone 5 Top'
if hasattr(group_0.inputs[62], 'show_expanded'):
    group_0.inputs[62].show_expanded = False
if hasattr(group_0.inputs[63], 'default_value'):
    group_0.inputs[63].default_value = Zone5_MidColor
if hasattr(group_0.inputs[63], 'display_shape'):
    group_0.inputs[63].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[63], 'enabled'):
    group_0.inputs[63].enabled = True
if hasattr(group_0.inputs[63], 'hide'):
    group_0.inputs[63].hide = False
if hasattr(group_0.inputs[63], 'hide_value'):
    group_0.inputs[63].hide_value = False
if hasattr(group_0.inputs[63], 'name'):
    group_0.inputs[63].name = 'Zone 5 Mid'
if hasattr(group_0.inputs[63], 'show_expanded'):
    group_0.inputs[63].show_expanded = False
if hasattr(group_0.inputs[64], 'default_value'):
    group_0.inputs[64].default_value = Zone5_BotColor
if hasattr(group_0.inputs[64], 'display_shape'):
    group_0.inputs[64].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[64], 'enabled'):
    group_0.inputs[64].enabled = True
if hasattr(group_0.inputs[64], 'hide'):
    group_0.inputs[64].hide = False
if hasattr(group_0.inputs[64], 'hide_value'):
    group_0.inputs[64].hide_value = False
if hasattr(group_0.inputs[64], 'name'):
    group_0.inputs[64].name = 'Zone 5 Bot'
if hasattr(group_0.inputs[64], 'show_expanded'):
    group_0.inputs[64].show_expanded = False
if hasattr(group_0.inputs[65], 'default_value'):
    group_0.inputs[65].default_value = Zone5_ScratchColor
if hasattr(group_0.inputs[65], 'display_shape'):
    group_0.inputs[65].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[65], 'enabled'):
    group_0.inputs[65].enabled = True
if hasattr(group_0.inputs[65], 'hide'):
    group_0.inputs[65].hide = False
if hasattr(group_0.inputs[65], 'hide_value'):
    group_0.inputs[65].hide_value = False
if hasattr(group_0.inputs[65], 'name'):
    group_0.inputs[65].name = 'Zone 5 Scratch Color'
if hasattr(group_0.inputs[65], 'show_expanded'):
    group_0.inputs[65].show_expanded = False
if hasattr(group_0.inputs[66], 'default_value'):
    group_0.inputs[66].default_value = 0.0
if hasattr(group_0.inputs[66], 'display_shape'):
    group_0.inputs[66].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[66], 'enabled'):
    group_0.inputs[66].enabled = True
if hasattr(group_0.inputs[66], 'hide'):
    group_0.inputs[66].hide = False
if hasattr(group_0.inputs[66], 'hide_value'):
    group_0.inputs[66].hide_value = False
if hasattr(group_0.inputs[66], 'name'):
    group_0.inputs[66].name = 'Zone 6 Gradient Out'
if hasattr(group_0.inputs[66], 'show_expanded'):
    group_0.inputs[66].show_expanded = False
if hasattr(group_0.inputs[67], 'default_value'):
    group_0.inputs[67].default_value = 0.0
if hasattr(group_0.inputs[67], 'display_shape'):
    group_0.inputs[67].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[67], 'enabled'):
    group_0.inputs[67].enabled = True
if hasattr(group_0.inputs[67], 'hide'):
    group_0.inputs[67].hide = False
if hasattr(group_0.inputs[67], 'hide_value'):
    group_0.inputs[67].hide_value = False
if hasattr(group_0.inputs[67], 'name'):
    group_0.inputs[67].name = 'Zone 6 Rough Out'
if hasattr(group_0.inputs[67], 'show_expanded'):
    group_0.inputs[67].show_expanded = False
if hasattr(group_0.inputs[68], 'default_value'):
    group_0.inputs[68].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[68], 'display_shape'):
    group_0.inputs[68].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[68], 'enabled'):
    group_0.inputs[68].enabled = True
if hasattr(group_0.inputs[68], 'hide'):
    group_0.inputs[68].hide = False
if hasattr(group_0.inputs[68], 'hide_value'):
    group_0.inputs[68].hide_value = False
if hasattr(group_0.inputs[68], 'name'):
    group_0.inputs[68].name = 'Zone 6 Norm Out'
if hasattr(group_0.inputs[68], 'show_expanded'):
    group_0.inputs[68].show_expanded = False
if hasattr(group_0.inputs[69], 'default_value'):
    group_0.inputs[69].default_value = Zone6_ScratchAmount
if hasattr(group_0.inputs[69], 'display_shape'):
    group_0.inputs[69].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[69], 'enabled'):
    group_0.inputs[69].enabled = True
if hasattr(group_0.inputs[69], 'hide'):
    group_0.inputs[69].hide = False
if hasattr(group_0.inputs[69], 'hide_value'):
    group_0.inputs[69].hide_value = False
if hasattr(group_0.inputs[69], 'name'):
    group_0.inputs[69].name = 'Zone 6 Scratch Amount'
if hasattr(group_0.inputs[69], 'show_expanded'):
    group_0.inputs[69].show_expanded = False
if hasattr(group_0.inputs[70], 'default_value'):
    group_0.inputs[70].default_value = Zone6_ScratchMetallic
if hasattr(group_0.inputs[70], 'display_shape'):
    group_0.inputs[70].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[70], 'enabled'):
    group_0.inputs[70].enabled = True
if hasattr(group_0.inputs[70], 'hide'):
    group_0.inputs[70].hide = False
if hasattr(group_0.inputs[70], 'hide_value'):
    group_0.inputs[70].hide_value = False
if hasattr(group_0.inputs[70], 'name'):
    group_0.inputs[70].name = 'Zone 6 Scratch Metallic'
if hasattr(group_0.inputs[70], 'show_expanded'):
    group_0.inputs[70].show_expanded = False
if hasattr(group_0.inputs[71], 'default_value'):
    group_0.inputs[71].default_value = Zone6_ScratchRoughness
if hasattr(group_0.inputs[71], 'display_shape'):
    group_0.inputs[71].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[71], 'enabled'):
    group_0.inputs[71].enabled = True
if hasattr(group_0.inputs[71], 'hide'):
    group_0.inputs[71].hide = False
if hasattr(group_0.inputs[71], 'hide_value'):
    group_0.inputs[71].hide_value = False
if hasattr(group_0.inputs[71], 'name'):
    group_0.inputs[71].name = 'Zone 6 Scratch Roughness'
if hasattr(group_0.inputs[71], 'show_expanded'):
    group_0.inputs[71].show_expanded = False
if hasattr(group_0.inputs[72], 'default_value'):
    group_0.inputs[72].default_value = Zone6_Metallic
if hasattr(group_0.inputs[72], 'display_shape'):
    group_0.inputs[72].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[72], 'enabled'):
    group_0.inputs[72].enabled = True
if hasattr(group_0.inputs[72], 'hide'):
    group_0.inputs[72].hide = False
if hasattr(group_0.inputs[72], 'hide_value'):
    group_0.inputs[72].hide_value = False
if hasattr(group_0.inputs[72], 'name'):
    group_0.inputs[72].name = 'Zone 6 Metallic'
if hasattr(group_0.inputs[72], 'show_expanded'):
    group_0.inputs[72].show_expanded = False
if hasattr(group_0.inputs[73], 'default_value'):
    group_0.inputs[73].default_value = Zone6_EmissiveAmount
if hasattr(group_0.inputs[73], 'display_shape'):
    group_0.inputs[73].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[73], 'enabled'):
    group_0.inputs[73].enabled = True
if hasattr(group_0.inputs[73], 'hide'):
    group_0.inputs[73].hide = False
if hasattr(group_0.inputs[73], 'hide_value'):
    group_0.inputs[73].hide_value = False
if hasattr(group_0.inputs[73], 'name'):
    group_0.inputs[73].name = 'Zone 6 Emmisive Amount'
if hasattr(group_0.inputs[73], 'show_expanded'):
    group_0.inputs[73].show_expanded = False
if hasattr(group_0.inputs[74], 'default_value'):
    group_0.inputs[74].default_value = Zone6_TopColor
if hasattr(group_0.inputs[74], 'display_shape'):
    group_0.inputs[74].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[74], 'enabled'):
    group_0.inputs[74].enabled = True
if hasattr(group_0.inputs[74], 'hide'):
    group_0.inputs[74].hide = False
if hasattr(group_0.inputs[74], 'hide_value'):
    group_0.inputs[74].hide_value = False
if hasattr(group_0.inputs[74], 'name'):
    group_0.inputs[74].name = 'Zone 6 Top'
if hasattr(group_0.inputs[74], 'show_expanded'):
    group_0.inputs[74].show_expanded = False
if hasattr(group_0.inputs[75], 'default_value'):
    group_0.inputs[75].default_value = Zone6_MidColor
if hasattr(group_0.inputs[75], 'display_shape'):
    group_0.inputs[75].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[75], 'enabled'):
    group_0.inputs[75].enabled = True
if hasattr(group_0.inputs[75], 'hide'):
    group_0.inputs[75].hide = False
if hasattr(group_0.inputs[75], 'hide_value'):
    group_0.inputs[75].hide_value = False
if hasattr(group_0.inputs[75], 'name'):
    group_0.inputs[75].name = 'Zone 6 Mid'
if hasattr(group_0.inputs[75], 'show_expanded'):
    group_0.inputs[75].show_expanded = False
if hasattr(group_0.inputs[76], 'default_value'):
    group_0.inputs[76].default_value = Zone6_BotColor
if hasattr(group_0.inputs[76], 'display_shape'):
    group_0.inputs[76].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[76], 'enabled'):
    group_0.inputs[76].enabled = True
if hasattr(group_0.inputs[76], 'hide'):
    group_0.inputs[76].hide = False
if hasattr(group_0.inputs[76], 'hide_value'):
    group_0.inputs[76].hide_value = False
if hasattr(group_0.inputs[76], 'name'):
    group_0.inputs[76].name = 'Zone 6 Bot'
if hasattr(group_0.inputs[76], 'show_expanded'):
    group_0.inputs[76].show_expanded = False
if hasattr(group_0.inputs[77], 'default_value'):
    group_0.inputs[77].default_value = Zone6_ScratchColor
if hasattr(group_0.inputs[77], 'display_shape'):
    group_0.inputs[77].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[77], 'enabled'):
    group_0.inputs[77].enabled = True
if hasattr(group_0.inputs[77], 'hide'):
    group_0.inputs[77].hide = False
if hasattr(group_0.inputs[77], 'hide_value'):
    group_0.inputs[77].hide_value = False
if hasattr(group_0.inputs[77], 'name'):
    group_0.inputs[77].name = 'Zone 6 Scratch Color'
if hasattr(group_0.inputs[77], 'show_expanded'):
    group_0.inputs[77].show_expanded = False
if hasattr(group_0.inputs[78], 'default_value'):
    group_0.inputs[78].default_value = 0.0
if hasattr(group_0.inputs[78], 'display_shape'):
    group_0.inputs[78].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[78], 'enabled'):
    group_0.inputs[78].enabled = True
if hasattr(group_0.inputs[78], 'hide'):
    group_0.inputs[78].hide = False
if hasattr(group_0.inputs[78], 'hide_value'):
    group_0.inputs[78].hide_value = False
if hasattr(group_0.inputs[78], 'name'):
    group_0.inputs[78].name = 'Grime Gradient Out'
if hasattr(group_0.inputs[78], 'show_expanded'):
    group_0.inputs[78].show_expanded = False
if hasattr(group_0.inputs[79], 'default_value'):
    group_0.inputs[79].default_value = 0.0
if hasattr(group_0.inputs[79], 'display_shape'):
    group_0.inputs[79].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[79], 'enabled'):
    group_0.inputs[79].enabled = True
if hasattr(group_0.inputs[79], 'hide'):
    group_0.inputs[79].hide = False
if hasattr(group_0.inputs[79], 'hide_value'):
    group_0.inputs[79].hide_value = False
if hasattr(group_0.inputs[79], 'name'):
    group_0.inputs[79].name = 'Grime Rough Out'
if hasattr(group_0.inputs[79], 'show_expanded'):
    group_0.inputs[79].show_expanded = False
if hasattr(group_0.inputs[80], 'default_value'):
    group_0.inputs[80].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[80], 'display_shape'):
    group_0.inputs[80].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[80], 'enabled'):
    group_0.inputs[80].enabled = True
if hasattr(group_0.inputs[80], 'hide'):
    group_0.inputs[80].hide = False
if hasattr(group_0.inputs[80], 'hide_value'):
    group_0.inputs[80].hide_value = False
if hasattr(group_0.inputs[80], 'name'):
    group_0.inputs[80].name = 'Grime Norm Out'
if hasattr(group_0.inputs[80], 'show_expanded'):
    group_0.inputs[80].show_expanded = False
if hasattr(group_0.inputs[81], 'default_value'):
    group_0.inputs[81].default_value = Grime_ScratchAmount
if hasattr(group_0.inputs[81], 'display_shape'):
    group_0.inputs[81].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[81], 'enabled'):
    group_0.inputs[81].enabled = True
if hasattr(group_0.inputs[81], 'hide'):
    group_0.inputs[81].hide = False
if hasattr(group_0.inputs[81], 'hide_value'):
    group_0.inputs[81].hide_value = False
if hasattr(group_0.inputs[81], 'name'):
    group_0.inputs[81].name = 'Grime Scratch Amount'
if hasattr(group_0.inputs[81], 'show_expanded'):
    group_0.inputs[81].show_expanded = False
if hasattr(group_0.inputs[82], 'default_value'):
    group_0.inputs[82].default_value = Grime_ScratchMetallic
if hasattr(group_0.inputs[82], 'display_shape'):
    group_0.inputs[82].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[82], 'enabled'):
    group_0.inputs[82].enabled = True
if hasattr(group_0.inputs[82], 'hide'):
    group_0.inputs[82].hide = False
if hasattr(group_0.inputs[82], 'hide_value'):
    group_0.inputs[82].hide_value = False
if hasattr(group_0.inputs[82], 'name'):
    group_0.inputs[82].name = 'Grime Scratch Metallic'
if hasattr(group_0.inputs[82], 'show_expanded'):
    group_0.inputs[82].show_expanded = False
if hasattr(group_0.inputs[83], 'default_value'):
    group_0.inputs[83].default_value = Grime_ScratchRoughness
if hasattr(group_0.inputs[83], 'display_shape'):
    group_0.inputs[83].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[83], 'enabled'):
    group_0.inputs[83].enabled = True
if hasattr(group_0.inputs[83], 'hide'):
    group_0.inputs[83].hide = False
if hasattr(group_0.inputs[83], 'hide_value'):
    group_0.inputs[83].hide_value = False
if hasattr(group_0.inputs[83], 'name'):
    group_0.inputs[83].name = 'Grime Scratch Roughness'
if hasattr(group_0.inputs[83], 'show_expanded'):
    group_0.inputs[83].show_expanded = False
if hasattr(group_0.inputs[84], 'default_value'):
    group_0.inputs[84].default_value = Grime_Metallic
if hasattr(group_0.inputs[84], 'display_shape'):
    group_0.inputs[84].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[84], 'enabled'):
    group_0.inputs[84].enabled = True
if hasattr(group_0.inputs[84], 'hide'):
    group_0.inputs[84].hide = False
if hasattr(group_0.inputs[84], 'hide_value'):
    group_0.inputs[84].hide_value = False
if hasattr(group_0.inputs[84], 'name'):
    group_0.inputs[84].name = 'Grime Metallic'
if hasattr(group_0.inputs[84], 'show_expanded'):
    group_0.inputs[84].show_expanded = False
if hasattr(group_0.inputs[85], 'default_value'):
    group_0.inputs[85].default_value = Grime_EmissiveAmount
if hasattr(group_0.inputs[85], 'display_shape'):
    group_0.inputs[85].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[85], 'enabled'):
    group_0.inputs[85].enabled = True
if hasattr(group_0.inputs[85], 'hide'):
    group_0.inputs[85].hide = False
if hasattr(group_0.inputs[85], 'hide_value'):
    group_0.inputs[85].hide_value = False
if hasattr(group_0.inputs[85], 'name'):
    group_0.inputs[85].name = 'Grime Emissive Amount'
if hasattr(group_0.inputs[85], 'show_expanded'):
    group_0.inputs[85].show_expanded = False
if hasattr(group_0.inputs[86], 'default_value'):
    group_0.inputs[86].default_value = Grime_TopColor
if hasattr(group_0.inputs[86], 'display_shape'):
    group_0.inputs[86].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[86], 'enabled'):
    group_0.inputs[86].enabled = True
if hasattr(group_0.inputs[86], 'hide'):
    group_0.inputs[86].hide = False
if hasattr(group_0.inputs[86], 'hide_value'):
    group_0.inputs[86].hide_value = False
if hasattr(group_0.inputs[86], 'name'):
    group_0.inputs[86].name = 'Grime TopColor'
if hasattr(group_0.inputs[86], 'show_expanded'):
    group_0.inputs[86].show_expanded = False
if hasattr(group_0.inputs[87], 'default_value'):
    group_0.inputs[87].default_value = Grime_MidColor
if hasattr(group_0.inputs[87], 'display_shape'):
    group_0.inputs[87].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[87], 'enabled'):
    group_0.inputs[87].enabled = True
if hasattr(group_0.inputs[87], 'hide'):
    group_0.inputs[87].hide = False
if hasattr(group_0.inputs[87], 'hide_value'):
    group_0.inputs[87].hide_value = False
if hasattr(group_0.inputs[87], 'name'):
    group_0.inputs[87].name = 'Grime MidColor'
if hasattr(group_0.inputs[87], 'show_expanded'):
    group_0.inputs[87].show_expanded = False
if hasattr(group_0.inputs[88], 'default_value'):
    group_0.inputs[88].default_value = Grime_BotColor
if hasattr(group_0.inputs[88], 'display_shape'):
    group_0.inputs[88].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[88], 'enabled'):
    group_0.inputs[88].enabled = True
if hasattr(group_0.inputs[88], 'hide'):
    group_0.inputs[88].hide = False
if hasattr(group_0.inputs[88], 'hide_value'):
    group_0.inputs[88].hide_value = False
if hasattr(group_0.inputs[88], 'name'):
    group_0.inputs[88].name = 'Grime BotColor'
if hasattr(group_0.inputs[88], 'show_expanded'):
    group_0.inputs[88].show_expanded = False
if hasattr(group_0.inputs[89], 'default_value'):
    group_0.inputs[89].default_value = Grime_ScratchColor
if hasattr(group_0.inputs[89], 'display_shape'):
    group_0.inputs[89].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[89], 'enabled'):
    group_0.inputs[89].enabled = True
if hasattr(group_0.inputs[89], 'hide'):
    group_0.inputs[89].hide = False
if hasattr(group_0.inputs[89], 'hide_value'):
    group_0.inputs[89].hide_value = False
if hasattr(group_0.inputs[89], 'name'):
    group_0.inputs[89].name = 'Grime Scratch Color'
if hasattr(group_0.inputs[89], 'show_expanded'):
    group_0.inputs[89].show_expanded = False
if hasattr(group_0.inputs[90], 'default_value'):
    group_0.inputs[90].default_value = 0.0
if hasattr(group_0.inputs[90], 'display_shape'):
    group_0.inputs[90].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[90], 'enabled'):
    group_0.inputs[90].enabled = True
if hasattr(group_0.inputs[90], 'hide'):
    group_0.inputs[90].hide = False
if hasattr(group_0.inputs[90], 'hide_value'):
    group_0.inputs[90].hide_value = False
if hasattr(group_0.inputs[90], 'name'):
    group_0.inputs[90].name = 'Dust Gradient Out'
if hasattr(group_0.inputs[90], 'show_expanded'):
    group_0.inputs[90].show_expanded = False
if hasattr(group_0.inputs[91], 'default_value'):
    group_0.inputs[91].default_value = 0.0
if hasattr(group_0.inputs[91], 'display_shape'):
    group_0.inputs[91].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[91], 'enabled'):
    group_0.inputs[91].enabled = True
if hasattr(group_0.inputs[91], 'hide'):
    group_0.inputs[91].hide = False
if hasattr(group_0.inputs[91], 'hide_value'):
    group_0.inputs[91].hide_value = False
if hasattr(group_0.inputs[91], 'name'):
    group_0.inputs[91].name = 'Dust Rough Out'
if hasattr(group_0.inputs[91], 'show_expanded'):
    group_0.inputs[91].show_expanded = False
if hasattr(group_0.inputs[92], 'default_value'):
    group_0.inputs[92].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.inputs[92], 'display_shape'):
    group_0.inputs[92].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[92], 'enabled'):
    group_0.inputs[92].enabled = True
if hasattr(group_0.inputs[92], 'hide'):
    group_0.inputs[92].hide = False
if hasattr(group_0.inputs[92], 'hide_value'):
    group_0.inputs[92].hide_value = False
if hasattr(group_0.inputs[92], 'name'):
    group_0.inputs[92].name = 'Dust Norm Out'
if hasattr(group_0.inputs[92], 'show_expanded'):
    group_0.inputs[92].show_expanded = False
if hasattr(group_0.inputs[93], 'default_value'):
    group_0.inputs[93].default_value = Dust_ScratchAmount
if hasattr(group_0.inputs[93], 'display_shape'):
    group_0.inputs[93].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[93], 'enabled'):
    group_0.inputs[93].enabled = True
if hasattr(group_0.inputs[93], 'hide'):
    group_0.inputs[93].hide = False
if hasattr(group_0.inputs[93], 'hide_value'):
    group_0.inputs[93].hide_value = False
if hasattr(group_0.inputs[93], 'name'):
    group_0.inputs[93].name = 'Dust Scratch Amount'
if hasattr(group_0.inputs[93], 'show_expanded'):
    group_0.inputs[93].show_expanded = False
if hasattr(group_0.inputs[94], 'default_value'):
    group_0.inputs[94].default_value = Dust_ScratchMetallic
if hasattr(group_0.inputs[94], 'display_shape'):
    group_0.inputs[94].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[94], 'enabled'):
    group_0.inputs[94].enabled = True
if hasattr(group_0.inputs[94], 'hide'):
    group_0.inputs[94].hide = False
if hasattr(group_0.inputs[94], 'hide_value'):
    group_0.inputs[94].hide_value = False
if hasattr(group_0.inputs[94], 'name'):
    group_0.inputs[94].name = 'Dust Scratch Metallic'
if hasattr(group_0.inputs[94], 'show_expanded'):
    group_0.inputs[94].show_expanded = False
if hasattr(group_0.inputs[95], 'default_value'):
    group_0.inputs[95].default_value = Dust_ScratchRoughness
if hasattr(group_0.inputs[95], 'display_shape'):
    group_0.inputs[95].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[95], 'enabled'):
    group_0.inputs[95].enabled = True
if hasattr(group_0.inputs[95], 'hide'):
    group_0.inputs[95].hide = False
if hasattr(group_0.inputs[95], 'hide_value'):
    group_0.inputs[95].hide_value = False
if hasattr(group_0.inputs[95], 'name'):
    group_0.inputs[95].name = 'Dust Scratch Roughness'
if hasattr(group_0.inputs[95], 'show_expanded'):
    group_0.inputs[95].show_expanded = False
if hasattr(group_0.inputs[96], 'default_value'):
    group_0.inputs[96].default_value = Dust_Metallic
if hasattr(group_0.inputs[96], 'display_shape'):
    group_0.inputs[96].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[96], 'enabled'):
    group_0.inputs[96].enabled = True
if hasattr(group_0.inputs[96], 'hide'):
    group_0.inputs[96].hide = False
if hasattr(group_0.inputs[96], 'hide_value'):
    group_0.inputs[96].hide_value = False
if hasattr(group_0.inputs[96], 'name'):
    group_0.inputs[96].name = 'Dust Metallic'
if hasattr(group_0.inputs[96], 'show_expanded'):
    group_0.inputs[96].show_expanded = False
if hasattr(group_0.inputs[97], 'default_value'):
    group_0.inputs[97].default_value = Dust_EmissiveAmount
if hasattr(group_0.inputs[97], 'display_shape'):
    group_0.inputs[97].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[97], 'enabled'):
    group_0.inputs[97].enabled = True
if hasattr(group_0.inputs[97], 'hide'):
    group_0.inputs[97].hide = False
if hasattr(group_0.inputs[97], 'hide_value'):
    group_0.inputs[97].hide_value = False
if hasattr(group_0.inputs[97], 'name'):
    group_0.inputs[97].name = 'Dust Emissive Amount'
if hasattr(group_0.inputs[97], 'show_expanded'):
    group_0.inputs[97].show_expanded = False
if hasattr(group_0.inputs[98], 'default_value'):
    group_0.inputs[98].default_value = Dust_TopColor
if hasattr(group_0.inputs[98], 'display_shape'):
    group_0.inputs[98].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[98], 'enabled'):
    group_0.inputs[98].enabled = True
if hasattr(group_0.inputs[98], 'hide'):
    group_0.inputs[98].hide = False
if hasattr(group_0.inputs[98], 'hide_value'):
    group_0.inputs[98].hide_value = False
if hasattr(group_0.inputs[98], 'name'):
    group_0.inputs[98].name = 'Dust Top'
if hasattr(group_0.inputs[98], 'show_expanded'):
    group_0.inputs[98].show_expanded = False
if hasattr(group_0.inputs[99], 'default_value'):
    group_0.inputs[99].default_value = Dust_MidColor
if hasattr(group_0.inputs[99], 'display_shape'):
    group_0.inputs[99].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[99], 'enabled'):
    group_0.inputs[99].enabled = True
if hasattr(group_0.inputs[99], 'hide'):
    group_0.inputs[99].hide = False
if hasattr(group_0.inputs[99], 'hide_value'):
    group_0.inputs[99].hide_value = False
if hasattr(group_0.inputs[99], 'name'):
    group_0.inputs[99].name = 'Dust Mid'
if hasattr(group_0.inputs[99], 'show_expanded'):
    group_0.inputs[99].show_expanded = False
if hasattr(group_0.inputs[100], 'default_value'):
    group_0.inputs[100].default_value = Dust_BotColor
if hasattr(group_0.inputs[100], 'display_shape'):
    group_0.inputs[100].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[100], 'enabled'):
    group_0.inputs[100].enabled = True
if hasattr(group_0.inputs[100], 'hide'):
    group_0.inputs[100].hide = False
if hasattr(group_0.inputs[100], 'hide_value'):
    group_0.inputs[100].hide_value = False
if hasattr(group_0.inputs[100], 'name'):
    group_0.inputs[100].name = 'Dust Bot'
if hasattr(group_0.inputs[100], 'show_expanded'):
    group_0.inputs[100].show_expanded = False
if hasattr(group_0.inputs[101], 'default_value'):
    group_0.inputs[101].default_value = Dust_ScratchColor
if hasattr(group_0.inputs[101], 'display_shape'):
    group_0.inputs[101].display_shape = 'CIRCLE'
if hasattr(group_0.inputs[101], 'enabled'):
    group_0.inputs[101].enabled = True
if hasattr(group_0.inputs[101], 'hide'):
    group_0.inputs[101].hide = False
if hasattr(group_0.inputs[101], 'hide_value'):
    group_0.inputs[101].hide_value = False
if hasattr(group_0.inputs[101], 'name'):
    group_0.inputs[101].name = 'Dust Scratch Color'
if hasattr(group_0.inputs[101], 'show_expanded'):
    group_0.inputs[101].show_expanded = False
if hasattr(group_0.outputs[1], 'default_value'):
    group_0.outputs[1].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.outputs[1], 'display_shape'):
    group_0.outputs[1].display_shape = 'CIRCLE'
if hasattr(group_0.outputs[1], 'enabled'):
    group_0.outputs[1].enabled = True
if hasattr(group_0.outputs[1], 'hide'):
    group_0.outputs[1].hide = False
if hasattr(group_0.outputs[1], 'hide_value'):
    group_0.outputs[1].hide_value = False
if hasattr(group_0.outputs[1], 'name'):
    group_0.outputs[1].name = 'Bake_Color'
if hasattr(group_0.outputs[1], 'show_expanded'):
    group_0.outputs[1].show_expanded = False
if hasattr(group_0.outputs[2], 'default_value'):
    group_0.outputs[2].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.outputs[2], 'display_shape'):
    group_0.outputs[2].display_shape = 'CIRCLE'
if hasattr(group_0.outputs[2], 'enabled'):
    group_0.outputs[2].enabled = True
if hasattr(group_0.outputs[2], 'hide'):
    group_0.outputs[2].hide = False
if hasattr(group_0.outputs[2], 'hide_value'):
    group_0.outputs[2].hide_value = False
if hasattr(group_0.outputs[2], 'name'):
    group_0.outputs[2].name = 'Bake_Metallic'
if hasattr(group_0.outputs[2], 'show_expanded'):
    group_0.outputs[2].show_expanded = False
if hasattr(group_0.outputs[3], 'default_value'):
    group_0.outputs[3].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.outputs[3], 'display_shape'):
    group_0.outputs[3].display_shape = 'CIRCLE'
if hasattr(group_0.outputs[3], 'enabled'):
    group_0.outputs[3].enabled = True
if hasattr(group_0.outputs[3], 'hide'):
    group_0.outputs[3].hide = False
if hasattr(group_0.outputs[3], 'hide_value'):
    group_0.outputs[3].hide_value = False
if hasattr(group_0.outputs[3], 'name'):
    group_0.outputs[3].name = 'Bake_Roughness'
if hasattr(group_0.outputs[3], 'show_expanded'):
    group_0.outputs[3].show_expanded = False
if hasattr(group_0.outputs[4], 'default_value'):
    group_0.outputs[4].default_value = (0.0, 0.0, 0.0, 1.0)
if hasattr(group_0.outputs[4], 'display_shape'):
    group_0.outputs[4].display_shape = 'CIRCLE'
if hasattr(group_0.outputs[4], 'enabled'):
    group_0.outputs[4].enabled = True
if hasattr(group_0.outputs[4], 'hide'):
    group_0.outputs[4].hide = False
if hasattr(group_0.outputs[4], 'hide_value'):
    group_0.outputs[4].hide_value = False
if hasattr(group_0.outputs[4], 'name'):
    group_0.outputs[4].name = 'Bake_Emissive'
if hasattr(group_0.outputs[4], 'show_expanded'):
    group_0.outputs[4].show_expanded = False

# LINKS
node_tree0.links.new(group_002_0.outputs[1], group_0.inputs[19])
node_tree0.links.new(asg_texture_0.outputs[0], reroute_0.inputs[0])
node_tree0.links.new(mask_0_texture_0.outputs[0], reroute_001_0.inputs[0])
node_tree0.links.new(reroute_001_0.outputs[0], reroute_008_0.inputs[0])
node_tree0.links.new(reroute_008_0.outputs[0], group_0.inputs[1])
node_tree0.links.new(reroute_0.outputs[0], reroute_009_0.inputs[0])
node_tree0.links.new(reroute_009_0.outputs[0], group_0.inputs[0])
node_tree0.links.new(group_002_0.outputs[0], group_0.inputs[18])
node_tree0.links.new(group_002_0.outputs[2], group_0.inputs[20])
node_tree0.links.new(reroute_011_0.outputs[0], group_0.inputs[3])
node_tree0.links.new(reroute_010_0.outputs[0], group_0.inputs[2])
node_tree0.links.new(group_001_0.outputs[2], group_0.inputs[8])
node_tree0.links.new(group_001_0.outputs[1], group_0.inputs[7])
node_tree0.links.new(group_001_0.outputs[0], group_0.inputs[6])
node_tree0.links.new(group_003_0.outputs[0], group_0.inputs[30])
node_tree0.links.new(group_003_0.outputs[1], group_0.inputs[31])
node_tree0.links.new(group_003_0.outputs[2], group_0.inputs[32])
node_tree0.links.new(group_004_0.outputs[0], group_0.inputs[42])
node_tree0.links.new(group_004_0.outputs[1], group_0.inputs[43])
node_tree0.links.new(group_004_0.outputs[2], group_0.inputs[44])
node_tree0.links.new(group_005_0.outputs[0], group_0.inputs[54])
node_tree0.links.new(group_005_0.outputs[1], group_0.inputs[55])
node_tree0.links.new(group_005_0.outputs[2], group_0.inputs[56])
node_tree0.links.new(group_006_0.outputs[0], group_0.inputs[66])
node_tree0.links.new(group_006_0.outputs[1], group_0.inputs[67])
node_tree0.links.new(group_006_0.outputs[2], group_0.inputs[68])
node_tree0.links.new(group_008_0.outputs[0], group_0.inputs[90])
node_tree0.links.new(group_008_0.outputs[1], group_0.inputs[91])
node_tree0.links.new(group_008_0.outputs[2], group_0.inputs[92])
node_tree0.links.new(mask_1_texture_0.outputs[0], reroute_002_0.inputs[0])
node_tree0.links.new(normal_map_texture_0.outputs[0], reroute_003_0.inputs[0])
node_tree0.links.new(reroute_002_0.outputs[0], reroute_010_0.inputs[0])
node_tree0.links.new(reroute_003_0.outputs[0], reroute_011_0.inputs[0])
node_tree0.links.new(group_009_0.outputs[0], group_0.inputs[78])
node_tree0.links.new(group_009_0.outputs[1], group_0.inputs[79])
node_tree0.links.new(group_009_0.outputs[2], group_0.inputs[80])
node_tree0.links.new(group_0.outputs[0], material_output_001_0.inputs[0])

# TO ACTIVE
selected_objects = (obj for obj in bpy.data.objects if obj.select_get())
for obj in selected_objects:
    obj.active_material = sam_mil_desert_suede_001
